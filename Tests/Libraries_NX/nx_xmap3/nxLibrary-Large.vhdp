library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package nxPackage is

-- IOM

constant IOM_LINK_DES_CHAIN_IN          : integer := 0;
constant IOM_LINK_SER_FCK_FABRIC        : integer := 1;
constant IOM_LINK_CTCK_FABRIC           : integer := 2;
constant IOM_LINK_SPW_TX_SO             : integer := 3;
constant IOM_LINK_DES_FCK_FABRIC        : integer := 4;
constant IOM_LINK_SPW_TX_OUT_CONFIG     : integer := 5;
constant IOM_LINK_SER_WPTR              : integer := 6;
constant IOM_LINK_SER_SCK_IOM           : integer := 7;
constant IOM_LINK_FZ                    : integer := 8;
constant IOM_LINK_SPW_RX_RCK            : integer := 9;
constant IOM_LINK_SER_CHAIN_IN          : integer := 10;
constant IOM_LINK_SER_RPTR              : integer := 11;
constant IOM_LINK_DES_SCK_IOM           : integer := 12;
constant IOM_LINK_DELAY_VALUE_IN_LAST   : integer := 13;
constant IOM_LINK_DELAY_VALUE_IN_FIRST  : integer := 18;
constant IOM_LINK_SPW_RX_DI             : integer := 19;
constant IOM_LINK_DCK                   : integer := 20;
constant IOM_LINK_DWR                   : integer := 21;
constant IOM_LINK_DES_RPTR              : integer := 22;
constant IOM_LINK_SER_SCK_FABRIC        : integer := 23;
constant IOM_LINK_DELAY_SELECT_LAST     : integer := 24;
constant IOM_LINK_DELAY_SELECT_FIRST    : integer := 25;
constant IOM_LINK_SPW_RX_IN_CONFIG      : integer := 26;
constant IOM_LINK_DES_WPTR              : integer := 27;
constant IOM_LINK_DES_SCK_FABRIC        : integer := 28;
constant IOM_LINK_SPW_TX_DO             : integer := 29;
constant IOM_LINK_SPW_RX_DATA           : integer := 30;
constant IOM_LINK_DES_CHAIN_OUT         : integer := 31;
constant IOM_LINK_DELAY_VALUE_OUT_LAST  : integer := 32;
constant IOM_LINK_DELAY_VALUE_OUT_FIRST : integer := 37;
constant IOM_LINK_FLD                   : integer := 38;
constant IOM_LINK_SER_CHAIN_OUT         : integer := 39;
constant IOM_LINK_FLG                   : integer := 40;
constant IOM_LINK_SIZE                  : integer := 41;
constant IOM_LINK_OUTPUT_MAX            : integer := 29;

-- HSSL

constant CRX_LINK_SIZE                  : integer := 10;

constant CTX_LINK_SIZE                  : integer := 20;

component NX_IOB_I is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayOn         : string := "";
    inputDelayLine       : string := "";
    outputDelayOn        : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    IO	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_IOB_I;

component NX_IOB_O is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayOn         : string := "";
    inputDelayLine       : string := "";
    outputDelayOn        : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    O	: out std_logic := '0';
    IO	: out std_logic := '0'
);
end component NX_IOB_O;

component NX_IOB is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayOn         : string := "";
    inputDelayLine       : string := "";
    outputDelayOn        : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    O	: out std_logic := '0';
    IO	: inout std_logic := '0'
);
end component NX_IOB;

component NX_IOM_L is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk1 : bit := '0';
--  latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk2 : bit := '0';
--  latency2     : bit := '0';
--  sel_clk_out2 : bit_vector(1 downto 0) := "00";
--  sel_clk_out3 : bit_vector(1 downto 0) := "00";
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_io_cal  : bit := '0';
    pads_dict    : string := "";
    pads_path    : string := ""
);
port (
    RTCK1	: in std_logic := '0';
    RRCK1	: in std_logic := '0';
    WTCK1	: in std_logic := '0';
    WRCK1	: in std_logic := '0';
    RTCK2	: in std_logic := '0';
    RRCK2	: in std_logic := '0';
    WTCK2	: in std_logic := '0';
    WRCK2	: in std_logic := '0';
    CTCK	: in std_logic := '0';
    CCK	: in std_logic := '0';
    DCK	: in std_logic := '0';

    C1TW	: in std_logic := '0';
    C1TS	: in std_logic := '0';
    C1RW1	: in std_logic := '0';
    C1RW2	: in std_logic := '0';
    C1RW3	: in std_logic := '0';
    C1RNE	: in std_logic := '0';
    C1RS	: in std_logic := '0';
    C2TW	: in std_logic := '0';
    C2TS	: in std_logic := '0';
    C2RW1	: in std_logic := '0';
    C2RW2	: in std_logic := '0';
    C2RW3	: in std_logic := '0';
    C2RNE	: in std_logic := '0';
    C2RS	: in std_logic := '0';
    FA1	: in std_logic := '0';
    FA2	: in std_logic := '0';
    FA3	: in std_logic := '0';
    FA4	: in std_logic := '0';
    FA5	: in std_logic := '0';
    FA6	: in std_logic := '0';
    FZ	: in std_logic := '0';
    DC	: in std_logic := '0';
    DRI1	: in std_logic := '0';
    DRI2	: in std_logic := '0';
    DRI3	: in std_logic := '0';
    DRI4	: in std_logic := '0';
    DRI5	: in std_logic := '0';
    DRI6	: in std_logic := '0';
    DRA1	: in std_logic := '0';
    DRA2	: in std_logic := '0';
    DRA3	: in std_logic := '0';
    DRA4	: in std_logic := '0';
    DRA5	: in std_logic := '0';
    DRA6	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DOS	: in std_logic := '0';
    DOG	: in std_logic := '0';
    DIS	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DPAS	: in std_logic := '0';
    DPAG	: in std_logic := '0';
    DQSS	: in std_logic := '0';
    DQSG	: in std_logic := '0';
    DS1	: in std_logic := '0';
    DS2	: in std_logic := '0';
    CAD1	: in std_logic := '0';
    CAD2	: in std_logic := '0';
    CAD3	: in std_logic := '0';
    CAD4	: in std_logic := '0';
    CAD5	: in std_logic := '0';
    CAD6	: in std_logic := '0';
    CAP1	: in std_logic := '0';
    CAP2	: in std_logic := '0';
    CAP3	: in std_logic := '0';
    CAP4	: in std_logic := '0';
    CAN1	: in std_logic := '0';
    CAN2	: in std_logic := '0';
    CAN3	: in std_logic := '0';
    CAN4	: in std_logic := '0';
    CAT1	: in std_logic := '0';
    CAT2	: in std_logic := '0';
    CAT3	: in std_logic := '0';
    CAT4	: in std_logic := '0';

    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    C1RED	: out std_logic := '0';
    C2RED	: out std_logic := '0';
    DRO1	: out std_logic := '0';
    DRO2	: out std_logic := '0';
    DRO3	: out std_logic := '0';
    DRO4	: out std_logic := '0';
    DRO5	: out std_logic := '0';
    DRO6	: out std_logic := '0';
    CAL	: out std_logic := '0';

    P1CI1	: in std_logic := '0';
    P1CL	: in std_logic := '0';
    P1CR	: in std_logic := '0';
    P1CO	: out std_logic := '0';
    P1CTI	: in std_logic := '0';
    P1CTO	: out std_logic := '0';
    P1EI1	: in std_logic := '0';
    P1EI2	: in std_logic := '0';
    P1EI3	: in std_logic := '0';
    P1EI4	: in std_logic := '0';
    P1EI5	: in std_logic := '0';
    P1EL	: in std_logic := '0';
    P1ER	: in std_logic := '0';
    P1EO	: out std_logic := '0';
    P1RI	: in std_logic := '0';
    P1RL	: in std_logic := '0';
    P1RR	: in std_logic := '0';
    P1RO1	: out std_logic := '0';
    P1RO2	: out std_logic := '0';
    P1RO3	: out std_logic := '0';
    P1RO4	: out std_logic := '0';
    P1RO5	: out std_logic := '0';

    P2CI1	: in std_logic := '0';
    P2CL	: in std_logic := '0';
    P2CR	: in std_logic := '0';
    P2CO	: out std_logic := '0';
    P2CTI	: in std_logic := '0';
    P2CTO	: out std_logic := '0';
    P2EI1	: in std_logic := '0';
    P2EI2	: in std_logic := '0';
    P2EI3	: in std_logic := '0';
    P2EI4	: in std_logic := '0';
    P2EI5	: in std_logic := '0';
    P2EL	: in std_logic := '0';
    P2ER	: in std_logic := '0';
    P2EO	: out std_logic := '0';
    P2RI	: in std_logic := '0';
    P2RL	: in std_logic := '0';
    P2RR	: in std_logic := '0';
    P2RO1	: out std_logic := '0';
    P2RO2	: out std_logic := '0';
    P2RO3	: out std_logic := '0';
    P2RO4	: out std_logic := '0';
    P2RO5	: out std_logic := '0';

    P3CI1	: in std_logic := '0';
    P3CL	: in std_logic := '0';
    P3CR	: in std_logic := '0';
    P3CO	: out std_logic := '0';
    P3CTI	: in std_logic := '0';
    P3CTO	: out std_logic := '0';
    P3EI1	: in std_logic := '0';
    P3EI2	: in std_logic := '0';
    P3EI3	: in std_logic := '0';
    P3EI4	: in std_logic := '0';
    P3EI5	: in std_logic := '0';
    P3EL	: in std_logic := '0';
    P3ER	: in std_logic := '0';
    P3EO	: out std_logic := '0';
    P3RI	: in std_logic := '0';
    P3RL	: in std_logic := '0';
    P3RR	: in std_logic := '0';
    P3RO1	: out std_logic := '0';
    P3RO2	: out std_logic := '0';
    P3RO3	: out std_logic := '0';
    P3RO4	: out std_logic := '0';
    P3RO5	: out std_logic := '0';

    P4CI1	: in std_logic := '0';
    P4CL	: in std_logic := '0';
    P4CR	: in std_logic := '0';
    P4CO	: out std_logic := '0';
    P4CTI	: in std_logic := '0';
    P4CTO	: out std_logic := '0';
    P4EI1	: in std_logic := '0';
    P4EI2	: in std_logic := '0';
    P4EI3	: in std_logic := '0';
    P4EI4	: in std_logic := '0';
    P4EI5	: in std_logic := '0';
    P4EL	: in std_logic := '0';
    P4ER	: in std_logic := '0';
    P4EO	: out std_logic := '0';
    P4RI	: in std_logic := '0';
    P4RL	: in std_logic := '0';
    P4RR	: in std_logic := '0';
    P4RO1	: out std_logic := '0';
    P4RO2	: out std_logic := '0';
    P4RO3	: out std_logic := '0';
    P4RO4	: out std_logic := '0';
    P4RO5	: out std_logic := '0';

    P5CI1	: in std_logic := '0';
    P5CI2	: in std_logic := '0';
    P5CI3	: in std_logic := '0';
    P5CI4	: in std_logic := '0';
    P5CI5	: in std_logic := '0';
    P5CL	: in std_logic := '0';
    P5CR	: in std_logic := '0';
    P5CO	: out std_logic := '0';
    P5CTI	: in std_logic := '0';
    P5CTO	: out std_logic := '0';
    P5EI1	: in std_logic := '0';
    P5EI2	: in std_logic := '0';
    P5EI3	: in std_logic := '0';
    P5EI4	: in std_logic := '0';
    P5EI5	: in std_logic := '0';
    P5EL	: in std_logic := '0';
    P5ER	: in std_logic := '0';
    P5EO	: out std_logic := '0';
    P5RI	: in std_logic := '0';
    P5RL	: in std_logic := '0';
    P5RR	: in std_logic := '0';
    P5RO1	: out std_logic := '0';
    P5RO2	: out std_logic := '0';
    P5RO3	: out std_logic := '0';
    P5RO4	: out std_logic := '0';
    P5RO5	: out std_logic := '0';

    P6CI1	: in std_logic := '0';
    P6CL	: in std_logic := '0';
    P6CR	: in std_logic := '0';
    P6CO	: out std_logic := '0';
    P6CTI	: in std_logic := '0';
    P6CTO	: out std_logic := '0';
    P6EI1	: in std_logic := '0';
    P6EI2	: in std_logic := '0';
    P6EI3	: in std_logic := '0';
    P6EI4	: in std_logic := '0';
    P6EI5	: in std_logic := '0';
    P6EL	: in std_logic := '0';
    P6ER	: in std_logic := '0';
    P6EO	: out std_logic := '0';
    P6RI	: in std_logic := '0';
    P6RL	: in std_logic := '0';
    P6RR	: in std_logic := '0';
    P6RO1	: out std_logic := '0';
    P6RO2	: out std_logic := '0';
    P6RO3	: out std_logic := '0';
    P6RO4	: out std_logic := '0';
    P6RO5	: out std_logic := '0';

    P7CI1	: in std_logic := '0';
    P7CL	: in std_logic := '0';
    P7CR	: in std_logic := '0';
    P7CO	: out std_logic := '0';
    P7CTI	: in std_logic := '0';
    P7CTO	: out std_logic := '0';
    P7EI1	: in std_logic := '0';
    P7EI2	: in std_logic := '0';
    P7EI3	: in std_logic := '0';
    P7EI4	: in std_logic := '0';
    P7EI5	: in std_logic := '0';
    P7EL	: in std_logic := '0';
    P7ER	: in std_logic := '0';
    P7EO	: out std_logic := '0';
    P7RI	: in std_logic := '0';
    P7RL	: in std_logic := '0';
    P7RR	: in std_logic := '0';
    P7RO1	: out std_logic := '0';
    P7RO2	: out std_logic := '0';
    P7RO3	: out std_logic := '0';
    P7RO4	: out std_logic := '0';
    P7RO5	: out std_logic := '0';

    P8CI1	: in std_logic := '0';
    P8CL	: in std_logic := '0';
    P8CR	: in std_logic := '0';
    P8CO	: out std_logic := '0';
    P8CTI	: in std_logic := '0';
    P8CTO	: out std_logic := '0';
    P8EI1	: in std_logic := '0';
    P8EI2	: in std_logic := '0';
    P8EI3	: in std_logic := '0';
    P8EI4	: in std_logic := '0';
    P8EI5	: in std_logic := '0';
    P8EL	: in std_logic := '0';
    P8ER	: in std_logic := '0';
    P8EO	: out std_logic := '0';
    P8RI	: in std_logic := '0';
    P8RL	: in std_logic := '0';
    P8RR	: in std_logic := '0';
    P8RO1	: out std_logic := '0';
    P8RO2	: out std_logic := '0';
    P8RO3	: out std_logic := '0';
    P8RO4	: out std_logic := '0';
    P8RO5	: out std_logic := '0';

    P9CI1	: in std_logic := '0';
    P9CL	: in std_logic := '0';
    P9CR	: in std_logic := '0';
    P9CO	: out std_logic := '0';
    P9CTI	: in std_logic := '0';
    P9CTO	: out std_logic := '0';
    P9EI1	: in std_logic := '0';
    P9EI2	: in std_logic := '0';
    P9EI3	: in std_logic := '0';
    P9EI4	: in std_logic := '0';
    P9EI5	: in std_logic := '0';
    P9EL	: in std_logic := '0';
    P9ER	: in std_logic := '0';
    P9EO	: out std_logic := '0';
    P9RI	: in std_logic := '0';
    P9RL	: in std_logic := '0';
    P9RR	: in std_logic := '0';
    P9RO1	: out std_logic := '0';
    P9RO2	: out std_logic := '0';
    P9RO3	: out std_logic := '0';
    P9RO4	: out std_logic := '0';
    P9RO5	: out std_logic := '0';

    P10CI1	: in std_logic := '0';
    P10CL	: in std_logic := '0';
    P10CR	: in std_logic := '0';
    P10CO	: out std_logic := '0';
    P10CTI	: in std_logic := '0';
    P10CTO	: out std_logic := '0';
    P10EI1	: in std_logic := '0';
    P10EI2	: in std_logic := '0';
    P10EI3	: in std_logic := '0';
    P10EI4	: in std_logic := '0';
    P10EI5	: in std_logic := '0';
    P10EL	: in std_logic := '0';
    P10ER	: in std_logic := '0';
    P10EO	: out std_logic := '0';
    P10RI	: in std_logic := '0';
    P10RL	: in std_logic := '0';
    P10RR	: in std_logic := '0';
    P10RO1	: out std_logic := '0';
    P10RO2	: out std_logic := '0';
    P10RO3	: out std_logic := '0';
    P10RO4	: out std_logic := '0';
    P10RO5	: out std_logic := '0';

    P11CI1	: in std_logic := '0';
    P11CL	: in std_logic := '0';
    P11CR	: in std_logic := '0';
    P11CO	: out std_logic := '0';
    P11CTI	: in std_logic := '0';
    P11CTO	: out std_logic := '0';
    P11EI1	: in std_logic := '0';
    P11EI2	: in std_logic := '0';
    P11EI3	: in std_logic := '0';
    P11EI4	: in std_logic := '0';
    P11EI5	: in std_logic := '0';
    P11EL	: in std_logic := '0';
    P11ER	: in std_logic := '0';
    P11EO	: out std_logic := '0';
    P11RI	: in std_logic := '0';
    P11RL	: in std_logic := '0';
    P11RR	: in std_logic := '0';
    P11RO1	: out std_logic := '0';
    P11RO2	: out std_logic := '0';
    P11RO3	: out std_logic := '0';
    P11RO4	: out std_logic := '0';
    P11RO5	: out std_logic := '0';

    P12CI1	: in std_logic := '0';
    P12CL	: in std_logic := '0';
    P12CR	: in std_logic := '0';
    P12CO	: out std_logic := '0';
    P12CTI	: in std_logic := '0';
    P12CTO	: out std_logic := '0';
    P12EI1	: in std_logic := '0';
    P12EI2	: in std_logic := '0';
    P12EI3	: in std_logic := '0';
    P12EI4	: in std_logic := '0';
    P12EI5	: in std_logic := '0';
    P12EL	: in std_logic := '0';
    P12ER	: in std_logic := '0';
    P12EO	: out std_logic := '0';
    P12RI	: in std_logic := '0';
    P12RL	: in std_logic := '0';
    P12RR	: in std_logic := '0';
    P12RO1	: out std_logic := '0';
    P12RO2	: out std_logic := '0';
    P12RO3	: out std_logic := '0';
    P12RO4	: out std_logic := '0';
    P12RO5	: out std_logic := '0';

    P13CI1	: in std_logic := '0';
    P13CL	: in std_logic := '0';
    P13CR	: in std_logic := '0';
    P13CO	: out std_logic := '0';
    P13CTI	: in std_logic := '0';
    P13CTO	: out std_logic := '0';
    P13EI1	: in std_logic := '0';
    P13EI2	: in std_logic := '0';
    P13EI3	: in std_logic := '0';
    P13EI4	: in std_logic := '0';
    P13EI5	: in std_logic := '0';
    P13EL	: in std_logic := '0';
    P13ER	: in std_logic := '0';
    P13EO	: out std_logic := '0';
    P13RI	: in std_logic := '0';
    P13RL	: in std_logic := '0';
    P13RR	: in std_logic := '0';
    P13RO1	: out std_logic := '0';
    P13RO2	: out std_logic := '0';
    P13RO3	: out std_logic := '0';
    P13RO4	: out std_logic := '0';
    P13RO5	: out std_logic := '0';

    P14CI1	: in std_logic := '0';
    P14CL	: in std_logic := '0';
    P14CR	: in std_logic := '0';
    P14CO	: out std_logic := '0';
    P14CTI	: in std_logic := '0';
    P14CTO	: out std_logic := '0';
    P14EI1	: in std_logic := '0';
    P14EI2	: in std_logic := '0';
    P14EI3	: in std_logic := '0';
    P14EI4	: in std_logic := '0';
    P14EI5	: in std_logic := '0';
    P14EL	: in std_logic := '0';
    P14ER	: in std_logic := '0';
    P14EO	: out std_logic := '0';
    P14RI	: in std_logic := '0';
    P14RL	: in std_logic := '0';
    P14RR	: in std_logic := '0';
    P14RO1	: out std_logic := '0';
    P14RO2	: out std_logic := '0';
    P14RO3	: out std_logic := '0';
    P14RO4	: out std_logic := '0';
    P14RO5	: out std_logic := '0';

    P15CI1	: in std_logic := '0';
    P15CL	: in std_logic := '0';
    P15CR	: in std_logic := '0';
    P15CO	: out std_logic := '0';
    P15CTI	: in std_logic := '0';
    P15CTO	: out std_logic := '0';
    P15EI1	: in std_logic := '0';
    P15EI2	: in std_logic := '0';
    P15EI3	: in std_logic := '0';
    P15EI4	: in std_logic := '0';
    P15EI5	: in std_logic := '0';
    P15EL	: in std_logic := '0';
    P15ER	: in std_logic := '0';
    P15EO	: out std_logic := '0';
    P15RI	: in std_logic := '0';
    P15RL	: in std_logic := '0';
    P15RR	: in std_logic := '0';
    P15RO1	: out std_logic := '0';
    P15RO2	: out std_logic := '0';
    P15RO3	: out std_logic := '0';
    P15RO4	: out std_logic := '0';
    P15RO5	: out std_logic := '0';

    P16CI1	: in std_logic := '0';
    P16CL	: in std_logic := '0';
    P16CR	: in std_logic := '0';
    P16CO	: out std_logic := '0';
    P16CTI	: in std_logic := '0';
    P16CTO	: out std_logic := '0';
    P16EI1	: in std_logic := '0';
    P16EI2	: in std_logic := '0';
    P16EI3	: in std_logic := '0';
    P16EI4	: in std_logic := '0';
    P16EI5	: in std_logic := '0';
    P16EL	: in std_logic := '0';
    P16ER	: in std_logic := '0';
    P16EO	: out std_logic := '0';
    P16RI	: in std_logic := '0';
    P16RL	: in std_logic := '0';
    P16RR	: in std_logic := '0';
    P16RO1	: out std_logic := '0';
    P16RO2	: out std_logic := '0';
    P16RO3	: out std_logic := '0';
    P16RO4	: out std_logic := '0';
    P16RO5	: out std_logic := '0';

    P17CI1	: in std_logic := '0';
    P17CL	: in std_logic := '0';
    P17CR	: in std_logic := '0';
    P17CO	: out std_logic := '0';
    P17CTI	: in std_logic := '0';
    P17CTO	: out std_logic := '0';
    P17EI1	: in std_logic := '0';
    P17EI2	: in std_logic := '0';
    P17EI3	: in std_logic := '0';
    P17EI4	: in std_logic := '0';
    P17EI5	: in std_logic := '0';
    P17EL	: in std_logic := '0';
    P17ER	: in std_logic := '0';
    P17EO	: out std_logic := '0';
    P17RI	: in std_logic := '0';
    P17RL	: in std_logic := '0';
    P17RR	: in std_logic := '0';
    P17RO1	: out std_logic := '0';
    P17RO2	: out std_logic := '0';
    P17RO3	: out std_logic := '0';
    P17RO4	: out std_logic := '0';
    P17RO5	: out std_logic := '0';

    P18CI1	: in std_logic := '0';
    P18CL	: in std_logic := '0';
    P18CR	: in std_logic := '0';
    P18CO	: out std_logic := '0';
    P18CTI	: in std_logic := '0';
    P18CTO	: out std_logic := '0';
    P18EI1	: in std_logic := '0';
    P18EI2	: in std_logic := '0';
    P18EI3	: in std_logic := '0';
    P18EI4	: in std_logic := '0';
    P18EI5	: in std_logic := '0';
    P18EL	: in std_logic := '0';
    P18ER	: in std_logic := '0';
    P18EO	: out std_logic := '0';
    P18RI	: in std_logic := '0';
    P18RL	: in std_logic := '0';
    P18RR	: in std_logic := '0';
    P18RO1	: out std_logic := '0';
    P18RO2	: out std_logic := '0';
    P18RO3	: out std_logic := '0';
    P18RO4	: out std_logic := '0';
    P18RO5	: out std_logic := '0';

    P19CI1	: in std_logic := '0';
    P19CL	: in std_logic := '0';
    P19CR	: in std_logic := '0';
    P19CO	: out std_logic := '0';
    P19CTI	: in std_logic := '0';
    P19CTO	: out std_logic := '0';
    P19EI1	: in std_logic := '0';
    P19EI2	: in std_logic := '0';
    P19EI3	: in std_logic := '0';
    P19EI4	: in std_logic := '0';
    P19EI5	: in std_logic := '0';
    P19EL	: in std_logic := '0';
    P19ER	: in std_logic := '0';
    P19EO	: out std_logic := '0';
    P19RI	: in std_logic := '0';
    P19RL	: in std_logic := '0';
    P19RR	: in std_logic := '0';
    P19RO1	: out std_logic := '0';
    P19RO2	: out std_logic := '0';
    P19RO3	: out std_logic := '0';
    P19RO4	: out std_logic := '0';
    P19RO5	: out std_logic := '0';

    P20CI1	: in std_logic := '0';
    P20CL	: in std_logic := '0';
    P20CR	: in std_logic := '0';
    P20CO	: out std_logic := '0';
    P20CTI	: in std_logic := '0';
    P20CTO	: out std_logic := '0';
    P20EI1	: in std_logic := '0';
    P20EI2	: in std_logic := '0';
    P20EI3	: in std_logic := '0';
    P20EI4	: in std_logic := '0';
    P20EI5	: in std_logic := '0';
    P20EL	: in std_logic := '0';
    P20ER	: in std_logic := '0';
    P20EO	: out std_logic := '0';
    P20RI	: in std_logic := '0';
    P20RL	: in std_logic := '0';
    P20RR	: in std_logic := '0';
    P20RO1	: out std_logic := '0';
    P20RO2	: out std_logic := '0';
    P20RO3	: out std_logic := '0';
    P20RO4	: out std_logic := '0';
    P20RO5	: out std_logic := '0';

    P21CI1	: in std_logic := '0';
    P21CL	: in std_logic := '0';
    P21CR	: in std_logic := '0';
    P21CO	: out std_logic := '0';
    P21CTI	: in std_logic := '0';
    P21CTO	: out std_logic := '0';
    P21EI1	: in std_logic := '0';
    P21EI2	: in std_logic := '0';
    P21EI3	: in std_logic := '0';
    P21EI4	: in std_logic := '0';
    P21EI5	: in std_logic := '0';
    P21EL	: in std_logic := '0';
    P21ER	: in std_logic := '0';
    P21EO	: out std_logic := '0';
    P21RI	: in std_logic := '0';
    P21RL	: in std_logic := '0';
    P21RR	: in std_logic := '0';
    P21RO1	: out std_logic := '0';
    P21RO2	: out std_logic := '0';
    P21RO3	: out std_logic := '0';
    P21RO4	: out std_logic := '0';
    P21RO5	: out std_logic := '0';

    P22CI1	: in std_logic := '0';
    P22CL	: in std_logic := '0';
    P22CR	: in std_logic := '0';
    P22CO	: out std_logic := '0';
    P22CTI	: in std_logic := '0';
    P22CTO	: out std_logic := '0';
    P22EI1	: in std_logic := '0';
    P22EI2	: in std_logic := '0';
    P22EI3	: in std_logic := '0';
    P22EI4	: in std_logic := '0';
    P22EI5	: in std_logic := '0';
    P22EL	: in std_logic := '0';
    P22ER	: in std_logic := '0';
    P22EO	: out std_logic := '0';
    P22RI	: in std_logic := '0';
    P22RL	: in std_logic := '0';
    P22RR	: in std_logic := '0';
    P22RO1	: out std_logic := '0';
    P22RO2	: out std_logic := '0';
    P22RO3	: out std_logic := '0';
    P22RO4	: out std_logic := '0';
    P22RO5	: out std_logic := '0';

    P23CI1	: in std_logic := '0';
    P23CL	: in std_logic := '0';
    P23CR	: in std_logic := '0';
    P23CO	: out std_logic := '0';
    P23CTI	: in std_logic := '0';
    P23CTO	: out std_logic := '0';
    P23EI1	: in std_logic := '0';
    P23EI2	: in std_logic := '0';
    P23EI3	: in std_logic := '0';
    P23EI4	: in std_logic := '0';
    P23EI5	: in std_logic := '0';
    P23EL	: in std_logic := '0';
    P23ER	: in std_logic := '0';
    P23EO	: out std_logic := '0';
    P23RI	: in std_logic := '0';
    P23RL	: in std_logic := '0';
    P23RR	: in std_logic := '0';
    P23RO1	: out std_logic := '0';
    P23RO2	: out std_logic := '0';
    P23RO3	: out std_logic := '0';
    P23RO4	: out std_logic := '0';
    P23RO5	: out std_logic := '0';

    P24CI1	: in std_logic := '0';
    P24CL	: in std_logic := '0';
    P24CR	: in std_logic := '0';
    P24CO	: out std_logic := '0';
    P24CTI	: in std_logic := '0';
    P24CTO	: out std_logic := '0';
    P24EI1	: in std_logic := '0';
    P24EI2	: in std_logic := '0';
    P24EI3	: in std_logic := '0';
    P24EI4	: in std_logic := '0';
    P24EI5	: in std_logic := '0';
    P24EL	: in std_logic := '0';
    P24ER	: in std_logic := '0';
    P24EO	: out std_logic := '0';
    P24RI	: in std_logic := '0';
    P24RL	: in std_logic := '0';
    P24RR	: in std_logic := '0';
    P24RO1	: out std_logic := '0';
    P24RO2	: out std_logic := '0';
    P24RO3	: out std_logic := '0';
    P24RO4	: out std_logic := '0';
    P24RO5	: out std_logic := '0';

    P25CI1	: in std_logic := '0';
    P25CL	: in std_logic := '0';
    P25CR	: in std_logic := '0';
    P25CO	: out std_logic := '0';
    P25CTI	: in std_logic := '0';
    P25CTO	: out std_logic := '0';
    P25EI1	: in std_logic := '0';
    P25EI2	: in std_logic := '0';
    P25EI3	: in std_logic := '0';
    P25EI4	: in std_logic := '0';
    P25EI5	: in std_logic := '0';
    P25EL	: in std_logic := '0';
    P25ER	: in std_logic := '0';
    P25EO	: out std_logic := '0';
    P25RI	: in std_logic := '0';
    P25RL	: in std_logic := '0';
    P25RR	: in std_logic := '0';
    P25RO1	: out std_logic := '0';
    P25RO2	: out std_logic := '0';
    P25RO3	: out std_logic := '0';
    P25RO4	: out std_logic := '0';
    P25RO5	: out std_logic := '0';

    P26CI1	: in std_logic := '0';
    P26CL	: in std_logic := '0';
    P26CR	: in std_logic := '0';
    P26CO	: out std_logic := '0';
    P26CTI	: in std_logic := '0';
    P26CTO	: out std_logic := '0';
    P26EI1	: in std_logic := '0';
    P26EI2	: in std_logic := '0';
    P26EI3	: in std_logic := '0';
    P26EI4	: in std_logic := '0';
    P26EI5	: in std_logic := '0';
    P26EL	: in std_logic := '0';
    P26ER	: in std_logic := '0';
    P26EO	: out std_logic := '0';
    P26RI	: in std_logic := '0';
    P26RL	: in std_logic := '0';
    P26RR	: in std_logic := '0';
    P26RO1	: out std_logic := '0';
    P26RO2	: out std_logic := '0';
    P26RO3	: out std_logic := '0';
    P26RO4	: out std_logic := '0';
    P26RO5	: out std_logic := '0';

    P27CI1	: in std_logic := '0';
    P27CL	: in std_logic := '0';
    P27CR	: in std_logic := '0';
    P27CO	: out std_logic := '0';
    P27CTI	: in std_logic := '0';
    P27CTO	: out std_logic := '0';
    P27EI1	: in std_logic := '0';
    P27EI2	: in std_logic := '0';
    P27EI3	: in std_logic := '0';
    P27EI4	: in std_logic := '0';
    P27EI5	: in std_logic := '0';
    P27EL	: in std_logic := '0';
    P27ER	: in std_logic := '0';
    P27EO	: out std_logic := '0';
    P27RI	: in std_logic := '0';
    P27RL	: in std_logic := '0';
    P27RR	: in std_logic := '0';
    P27RO1	: out std_logic := '0';
    P27RO2	: out std_logic := '0';
    P27RO3	: out std_logic := '0';
    P27RO4	: out std_logic := '0';
    P27RO5	: out std_logic := '0';

    P28CI1	: in std_logic := '0';
    P28CL	: in std_logic := '0';
    P28CR	: in std_logic := '0';
    P28CO	: out std_logic := '0';
    P28CTI	: in std_logic := '0';
    P28CTO	: out std_logic := '0';
    P28EI1	: in std_logic := '0';
    P28EI2	: in std_logic := '0';
    P28EI3	: in std_logic := '0';
    P28EI4	: in std_logic := '0';
    P28EI5	: in std_logic := '0';
    P28EL	: in std_logic := '0';
    P28ER	: in std_logic := '0';
    P28EO	: out std_logic := '0';
    P28RI	: in std_logic := '0';
    P28RL	: in std_logic := '0';
    P28RR	: in std_logic := '0';
    P28RO1	: out std_logic := '0';
    P28RO2	: out std_logic := '0';
    P28RO3	: out std_logic := '0';
    P28RO4	: out std_logic := '0';
    P28RO5	: out std_logic := '0';

    P29CI1	: in std_logic := '0';
    P29CI2	: in std_logic := '0';
    P29CI3	: in std_logic := '0';
    P29CI4	: in std_logic := '0';
    P29CI5	: in std_logic := '0';
    P29CL	: in std_logic := '0';
    P29CR	: in std_logic := '0';
    P29CO	: out std_logic := '0';
    P29CTI	: in std_logic := '0';
    P29CTO	: out std_logic := '0';
    P29EI1	: in std_logic := '0';
    P29EI2	: in std_logic := '0';
    P29EI3	: in std_logic := '0';
    P29EI4	: in std_logic := '0';
    P29EI5	: in std_logic := '0';
    P29EL	: in std_logic := '0';
    P29ER	: in std_logic := '0';
    P29EO	: out std_logic := '0';
    P29RI	: in std_logic := '0';
    P29RL	: in std_logic := '0';
    P29RR	: in std_logic := '0';
    P29RO1	: out std_logic := '0';
    P29RO2	: out std_logic := '0';
    P29RO3	: out std_logic := '0';
    P29RO4	: out std_logic := '0';
    P29RO5	: out std_logic := '0';

    P30CI1	: in std_logic := '0';
    P30CL	: in std_logic := '0';
    P30CR	: in std_logic := '0';
    P30CO	: out std_logic := '0';
    P30CTI	: in std_logic := '0';
    P30CTO	: out std_logic := '0';
    P30EI1	: in std_logic := '0';
    P30EI2	: in std_logic := '0';
    P30EI3	: in std_logic := '0';
    P30EI4	: in std_logic := '0';
    P30EI5	: in std_logic := '0';
    P30EL	: in std_logic := '0';
    P30ER	: in std_logic := '0';
    P30EO	: out std_logic := '0';
    P30RI	: in std_logic := '0';
    P30RL	: in std_logic := '0';
    P30RR	: in std_logic := '0';
    P30RO1	: out std_logic := '0';
    P30RO2	: out std_logic := '0';
    P30RO3	: out std_logic := '0';
    P30RO4	: out std_logic := '0';
    P30RO5	: out std_logic := '0';

    P31CI1	: in std_logic := '0';
    P31CL	: in std_logic := '0';
    P31CR	: in std_logic := '0';
    P31CO	: out std_logic := '0';
    P31CTI	: in std_logic := '0';
    P31CTO	: out std_logic := '0';
    P31EI1	: in std_logic := '0';
    P31EI2	: in std_logic := '0';
    P31EI3	: in std_logic := '0';
    P31EI4	: in std_logic := '0';
    P31EI5	: in std_logic := '0';
    P31EL	: in std_logic := '0';
    P31ER	: in std_logic := '0';
    P31EO	: out std_logic := '0';
    P31RI	: in std_logic := '0';
    P31RL	: in std_logic := '0';
    P31RR	: in std_logic := '0';
    P31RO1	: out std_logic := '0';
    P31RO2	: out std_logic := '0';
    P31RO3	: out std_logic := '0';
    P31RO4	: out std_logic := '0';
    P31RO5	: out std_logic := '0';

    P32CI1	: in std_logic := '0';
    P32CL	: in std_logic := '0';
    P32CR	: in std_logic := '0';
    P32CO	: out std_logic := '0';
    P32CTI	: in std_logic := '0';
    P32CTO	: out std_logic := '0';
    P32EI1	: in std_logic := '0';
    P32EI2	: in std_logic := '0';
    P32EI3	: in std_logic := '0';
    P32EI4	: in std_logic := '0';
    P32EI5	: in std_logic := '0';
    P32EL	: in std_logic := '0';
    P32ER	: in std_logic := '0';
    P32EO	: out std_logic := '0';
    P32RI	: in std_logic := '0';
    P32RL	: in std_logic := '0';
    P32RR	: in std_logic := '0';
    P32RO1	: out std_logic := '0';
    P32RO2	: out std_logic := '0';
    P32RO3	: out std_logic := '0';
    P32RO4	: out std_logic := '0';
    P32RO5	: out std_logic := '0';

    P33CI1	: in std_logic := '0';
    P33CL	: in std_logic := '0';
    P33CR	: in std_logic := '0';
    P33CO	: out std_logic := '0';
    P33CTI	: in std_logic := '0';
    P33CTO	: out std_logic := '0';
    P33EI1	: in std_logic := '0';
    P33EI2	: in std_logic := '0';
    P33EI3	: in std_logic := '0';
    P33EI4	: in std_logic := '0';
    P33EI5	: in std_logic := '0';
    P33EL	: in std_logic := '0';
    P33ER	: in std_logic := '0';
    P33EO	: out std_logic := '0';
    P33RI	: in std_logic := '0';
    P33RL	: in std_logic := '0';
    P33RR	: in std_logic := '0';
    P33RO1	: out std_logic := '0';
    P33RO2	: out std_logic := '0';
    P33RO3	: out std_logic := '0';
    P33RO4	: out std_logic := '0';
    P33RO5	: out std_logic := '0';

    P34CI1	: in std_logic := '0';
    P34CL	: in std_logic := '0';
    P34CR	: in std_logic := '0';
    P34CO	: out std_logic := '0';
    P34CTI	: in std_logic := '0';
    P34CTO	: out std_logic := '0';
    P34EI1	: in std_logic := '0';
    P34EI2	: in std_logic := '0';
    P34EI3	: in std_logic := '0';
    P34EI4	: in std_logic := '0';
    P34EI5	: in std_logic := '0';
    P34EL	: in std_logic := '0';
    P34ER	: in std_logic := '0';
    P34EO	: out std_logic := '0';
    P34RI	: in std_logic := '0';
    P34RL	: in std_logic := '0';
    P34RR	: in std_logic := '0';
    P34RO1	: out std_logic := '0';
    P34RO2	: out std_logic := '0';
    P34RO3	: out std_logic := '0';
    P34RO4	: out std_logic := '0';
    P34RO5	: out std_logic := '0'
);
end component NX_IOM_L;

component NX_IOM_CONTROL is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk1 : bit := '0';
    latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk2 : bit := '0';
    latency2     : bit := '0';
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_rpath   : string := "";
    mode_epath   : string := "";
    mode_cpath   : string := "";
    mode_tpath   : string := "";
    mode_io_cal  : bit    := '0';
    location  : string    := ""
);
port (
    RTCK1	: in std_logic := '0';
    RRCK1	: in std_logic := '0';
    WTCK1	: in std_logic := '0';
    WRCK1	: in std_logic := '0';
    RTCK2	: in std_logic := '0';
    RRCK2	: in std_logic := '0';
    WTCK2	: in std_logic := '0';
    WRCK2	: in std_logic := '0';
    CTCK	: in std_logic := '0';

    C1TW	: in std_logic := '0';
    C1TS	: in std_logic := '0';
    C1RW1	: in std_logic := '0';
    C1RW2	: in std_logic := '0';
    C1RW3	: in std_logic := '0';
    C1RNE	: in std_logic := '0';
    C1RS	: in std_logic := '0';
    C2TW	: in std_logic := '0';
    C2TS	: in std_logic := '0';
    C2RW1	: in std_logic := '0';
    C2RW2	: in std_logic := '0';
    C2RW3	: in std_logic := '0';
    C2RNE	: in std_logic := '0';
    C2RS	: in std_logic := '0';
    FA1	: in std_logic := '0';
    FA2	: in std_logic := '0';
    FA3	: in std_logic := '0';
    FA4	: in std_logic := '0';
    FA5	: in std_logic := '0';
    FA6	: in std_logic := '0';
    FZ	: in std_logic := '0';
    DC	: in std_logic := '0';
    CCK	: in std_logic := '0';
    DCK	: in std_logic := '0';
    DRI1	: in std_logic := '0';
    DRI2	: in std_logic := '0';
    DRI3	: in std_logic := '0';
    DRI4	: in std_logic := '0';
    DRI5	: in std_logic := '0';
    DRI6	: in std_logic := '0';
    DRA1	: in std_logic := '0';
    DRA2	: in std_logic := '0';
    DRA3	: in std_logic := '0';
    DRA4	: in std_logic := '0';
    DRA5	: in std_logic := '0';
    DRA6	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DOS	: in std_logic := '0';
    DOG	: in std_logic := '0';
    DIS	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DPAS	: in std_logic := '0';
    DPAG	: in std_logic := '0';
    DQSS	: in std_logic := '0';
    DQSG	: in std_logic := '0';
    DS1	: in std_logic := '0';
    DS2	: in std_logic := '0';
    CAD1	: in std_logic := '0';
    CAD2	: in std_logic := '0';
    CAD3	: in std_logic := '0';
    CAD4	: in std_logic := '0';
    CAD5	: in std_logic := '0';
    CAD6	: in std_logic := '0';
    CAP1	: in std_logic := '0';
    CAP2	: in std_logic := '0';
    CAP3	: in std_logic := '0';
    CAP4	: in std_logic := '0';
    CAN1	: in std_logic := '0';
    CAN2	: in std_logic := '0';
    CAN3	: in std_logic := '0';
    CAN4	: in std_logic := '0';
    CAT1	: in std_logic := '0';
    CAT2	: in std_logic := '0';
    CAT3	: in std_logic := '0';
    CAT4	: in std_logic := '0';

    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    C1RED	: out std_logic := '0';
    C2RED	: out std_logic := '0';
    DRO1	: out std_logic := '0';
    DRO2	: out std_logic := '0';
    DRO3	: out std_logic := '0';
    DRO4	: out std_logic := '0';
    DRO5	: out std_logic := '0';
    DRO6	: out std_logic := '0';
    CAL	: out std_logic := '0';

    LINK1	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK2	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK3	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK4	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK5	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK6	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK7	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK8	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK9	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK10	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK11	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK12	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK13	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK14	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK15	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK16	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK17	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK18	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK19	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK20	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK21	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK22	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK23	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK24	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK25	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK26	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK27	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK28	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK29	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK30	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK31	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK32	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK33	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK34	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0')
);
end component NX_IOM_CONTROL;

component NX_IOM_DRIVER is
generic (
    epath_edge      : bit := '0';
    epath_init      : bit := '0';
    epath_load      : bit := '0';
    epath_mode      : bit_vector(3 downto 0) := "0000";
    epath_sync      : bit := '0';
    epath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    rpath_edge      : bit := '0';
    rpath_init      : bit := '0';
    rpath_load      : bit := '0';
    rpath_mode      : bit_vector(3 downto 0) := "0000";
    rpath_sync      : bit := '0';
    rpath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    cpath_edge      : bit := '0';
    cpath_init      : bit := '0';
    cpath_load      : bit := '0';
    cpath_mode      : bit_vector(3 downto 0) := "0000";
    cpath_sync      : bit := '0';
    cpath_inv       : bit := '0';

    tpath_mode      : bit_vector(1 downto 0) := "00";

    location        : string := "";
    chained         : bit    := '0';
    symbol          : string := ""
);
port (
    EI1	: in std_logic := '0';
    EI2	: in std_logic := '0';
    EI3	: in std_logic := '0';
    EI4	: in std_logic := '0';
    EI5	: in std_logic := '0';
    EL	: in std_logic := '0';
    ER	: in std_logic := '0';
    CI1	: in std_logic := '0';
    CI2	: in std_logic := '0';
    CI3	: in std_logic := '0';
    CI4	: in std_logic := '0';
    CI5	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    CTI	: in std_logic := '0';
    RI	: in std_logic := '0';
    RL	: in std_logic := '0';
    RR	: in std_logic := '0';
    CO	: out std_logic := '0';
    EO	: out std_logic := '0';
    RO1	: out std_logic := '0';
    RO2	: out std_logic := '0';
    RO3	: out std_logic := '0';
    RO4	: out std_logic := '0';
    RO5	: out std_logic := '0';
    CTO	: out std_logic := '0';
    LINK	: inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0) := (others => '0')
);
end component NX_IOM_DRIVER;

component NX_IOM_SERDES is
generic (
    data_size : integer range 2 to 10 := 5;
    location  : string := ""
);
port (
    RTCK	: in std_logic := '0';
    WRCK	: in std_logic := '0';
    WTCK	: in std_logic := '0';
    RRCK	: in std_logic := '0';
    TRST	: in std_logic := '0';
    RRST	: in std_logic := '0';
    CTCK	: in std_logic := '0';
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    LINKN	: inout std_logic_vector(IOM_LINK_SIZE-1 downto 0) := (others => '0');
    LINKP	: inout std_logic_vector(IOM_LINK_SIZE-1 downto 0) := (others => '0')
);
end component NX_IOM_SERDES;

component NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_LUT;

component NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFF;

component NX_BFF is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFF;

component NX_DFR is
generic (
    location   : string := "";
    iobname    : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    ring       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFR;

component NX_BFR is
generic (
    location   : string := "";
    iobname    : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    ring       : integer := 0
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFR;

component NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    CI	: in std_logic := '0';
    CO	: out std_logic := '0';
    S1	: out std_logic := '0';
    S2	: out std_logic := '0';
    S3	: out std_logic := '0';
    S4	: out std_logic := '0'
);
end component NX_CY;

component NX_RFB is
generic (
    rck_edge  : bit := '0';   -- 0: read  clock rising edge - 1: read  clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RA6	: in std_logic := '0';
    RE	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WA6	: in std_logic := '0';
    WE	: in std_logic := '0'
);
end component NX_RFB;

component NX_RFB_L is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RA6	: in std_logic := '0';
    RE	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WA6	: in std_logic := '0';
    WE	: in std_logic := '0';
    XRCK	: out std_logic := '0';
    XRO1	: out std_logic := '0';
    XRO2	: out std_logic := '0';
    XRO3	: out std_logic := '0';
    XRO4	: out std_logic := '0';
    XRO5	: out std_logic := '0';
    XRO6	: out std_logic := '0';
    XWCK	: out std_logic := '0';
    XWO1	: out std_logic := '0';
    XWO2	: out std_logic := '0';
    XWO3	: out std_logic := '0';
    XWO4	: out std_logic := '0';
    XWO5	: out std_logic := '0';
    XWO6	: out std_logic := '0'
);
end component NX_RFB_L;

component NX_RFB_L_WRAP is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(15 downto 0) := (others => '0');
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O	: out std_logic_vector(15 downto 0) := (others => '0');
    RA	: in std_logic_vector(5 downto 0) := (others => '0');
    RE	: in std_logic := '0';
    WA	: in std_logic_vector(5 downto 0) := (others => '0');
    WE	: in std_logic := '0';
    XRCK	: out std_logic := '0';
    XRO	: out std_logic_vector(5 downto 0) := (others => '0');
    XWCK	: out std_logic := '0';
    XWO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_RFB_L_WRAP;

component NX_CKS is
port (
    CKI	: in std_logic := '0';
    CMD	: in std_logic := '0';
    CKO	: out std_logic := '0'
);
end component NX_CKS;

component NX_DSP_L is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";   -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";    -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";          -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                 -- ALU
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    A5	: in std_logic := '0';
    A6	: in std_logic := '0';
    A7	: in std_logic := '0';
    A8	: in std_logic := '0';
    A9	: in std_logic := '0';
    A10	: in std_logic := '0';
    A11	: in std_logic := '0';
    A12	: in std_logic := '0';
    A13	: in std_logic := '0';
    A14	: in std_logic := '0';
    A15	: in std_logic := '0';
    A16	: in std_logic := '0';
    A17	: in std_logic := '0';
    A18	: in std_logic := '0';
    A19	: in std_logic := '0';
    A20	: in std_logic := '0';
    A21	: in std_logic := '0';
    A22	: in std_logic := '0';
    A23	: in std_logic := '0';
    A24	: in std_logic := '0';

    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    B5	: in std_logic := '0';
    B6	: in std_logic := '0';
    B7	: in std_logic := '0';
    B8	: in std_logic := '0';
    B9	: in std_logic := '0';
    B10	: in std_logic := '0';
    B11	: in std_logic := '0';
    B12	: in std_logic := '0';
    B13	: in std_logic := '0';
    B14	: in std_logic := '0';
    B15	: in std_logic := '0';
    B16	: in std_logic := '0';
    B17	: in std_logic := '0';
    B18	: in std_logic := '0';

    C1	: in std_logic := '0';
    C2	: in std_logic := '0';
    C3	: in std_logic := '0';
    C4	: in std_logic := '0';
    C5	: in std_logic := '0';
    C6	: in std_logic := '0';
    C7	: in std_logic := '0';
    C8	: in std_logic := '0';
    C9	: in std_logic := '0';
    C10	: in std_logic := '0';
    C11	: in std_logic := '0';
    C12	: in std_logic := '0';
    C13	: in std_logic := '0';
    C14	: in std_logic := '0';
    C15	: in std_logic := '0';
    C16	: in std_logic := '0';
    C17	: in std_logic := '0';
    C18	: in std_logic := '0';
    C19	: in std_logic := '0';
    C20	: in std_logic := '0';
    C21	: in std_logic := '0';
    C22	: in std_logic := '0';
    C23	: in std_logic := '0';
    C24	: in std_logic := '0';
    C25	: in std_logic := '0';
    C26	: in std_logic := '0';
    C27	: in std_logic := '0';
    C28	: in std_logic := '0';
    C29	: in std_logic := '0';
    C30	: in std_logic := '0';
    C31	: in std_logic := '0';
    C32	: in std_logic := '0';
    C33	: in std_logic := '0';
    C34	: in std_logic := '0';
    C35	: in std_logic := '0';
    C36	: in std_logic := '0';

    CAI1	: in std_logic := '0';
    CAI2	: in std_logic := '0';
    CAI3	: in std_logic := '0';
    CAI4	: in std_logic := '0';
    CAI5	: in std_logic := '0';
    CAI6	: in std_logic := '0';
    CAI7	: in std_logic := '0';
    CAI8	: in std_logic := '0';
    CAI9	: in std_logic := '0';
    CAI10	: in std_logic := '0';
    CAI11	: in std_logic := '0';
    CAI12	: in std_logic := '0';
    CAI13	: in std_logic := '0';
    CAI14	: in std_logic := '0';
    CAI15	: in std_logic := '0';
    CAI16	: in std_logic := '0';
    CAI17	: in std_logic := '0';
    CAI18	: in std_logic := '0';
    CAI19	: in std_logic := '0';
    CAI20	: in std_logic := '0';
    CAI21	: in std_logic := '0';
    CAI22	: in std_logic := '0';
    CAI23	: in std_logic := '0';
    CAI24	: in std_logic := '0';

    CAO1	: out std_logic := '0';
    CAO2	: out std_logic := '0';
    CAO3	: out std_logic := '0';
    CAO4	: out std_logic := '0';
    CAO5	: out std_logic := '0';
    CAO6	: out std_logic := '0';
    CAO7	: out std_logic := '0';
    CAO8	: out std_logic := '0';
    CAO9	: out std_logic := '0';
    CAO10	: out std_logic := '0';
    CAO11	: out std_logic := '0';
    CAO12	: out std_logic := '0';
    CAO13	: out std_logic := '0';
    CAO14	: out std_logic := '0';
    CAO15	: out std_logic := '0';
    CAO16	: out std_logic := '0';
    CAO17	: out std_logic := '0';
    CAO18	: out std_logic := '0';
    CAO19	: out std_logic := '0';
    CAO20	: out std_logic := '0';
    CAO21	: out std_logic := '0';
    CAO22	: out std_logic := '0';
    CAO23	: out std_logic := '0';
    CAO24	: out std_logic := '0';

    CBI1	: in std_logic := '0';
    CBI2	: in std_logic := '0';
    CBI3	: in std_logic := '0';
    CBI4	: in std_logic := '0';
    CBI5	: in std_logic := '0';
    CBI6	: in std_logic := '0';
    CBI7	: in std_logic := '0';
    CBI8	: in std_logic := '0';
    CBI9	: in std_logic := '0';
    CBI10	: in std_logic := '0';
    CBI11	: in std_logic := '0';
    CBI12	: in std_logic := '0';
    CBI13	: in std_logic := '0';
    CBI14	: in std_logic := '0';
    CBI15	: in std_logic := '0';
    CBI16	: in std_logic := '0';
    CBI17	: in std_logic := '0';
    CBI18	: in std_logic := '0';

    CBO1	: out std_logic := '0';
    CBO2	: out std_logic := '0';
    CBO3	: out std_logic := '0';
    CBO4	: out std_logic := '0';
    CBO5	: out std_logic := '0';
    CBO6	: out std_logic := '0';
    CBO7	: out std_logic := '0';
    CBO8	: out std_logic := '0';
    CBO9	: out std_logic := '0';
    CBO10	: out std_logic := '0';
    CBO11	: out std_logic := '0';
    CBO12	: out std_logic := '0';
    CBO13	: out std_logic := '0';
    CBO14	: out std_logic := '0';
    CBO15	: out std_logic := '0';
    CBO16	: out std_logic := '0';
    CBO17	: out std_logic := '0';
    CBO18	: out std_logic := '0';

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI1	: in std_logic := '0';
    CZI2	: in std_logic := '0';
    CZI3	: in std_logic := '0';
    CZI4	: in std_logic := '0';
    CZI5	: in std_logic := '0';
    CZI6	: in std_logic := '0';
    CZI7	: in std_logic := '0';
    CZI8	: in std_logic := '0';
    CZI9	: in std_logic := '0';
    CZI10	: in std_logic := '0';
    CZI11	: in std_logic := '0';
    CZI12	: in std_logic := '0';
    CZI13	: in std_logic := '0';
    CZI14	: in std_logic := '0';
    CZI15	: in std_logic := '0';
    CZI16	: in std_logic := '0';
    CZI17	: in std_logic := '0';
    CZI18	: in std_logic := '0';
    CZI19	: in std_logic := '0';
    CZI20	: in std_logic := '0';
    CZI21	: in std_logic := '0';
    CZI22	: in std_logic := '0';
    CZI23	: in std_logic := '0';
    CZI24	: in std_logic := '0';
    CZI25	: in std_logic := '0';
    CZI26	: in std_logic := '0';
    CZI27	: in std_logic := '0';
    CZI28	: in std_logic := '0';
    CZI29	: in std_logic := '0';
    CZI30	: in std_logic := '0';
    CZI31	: in std_logic := '0';
    CZI32	: in std_logic := '0';
    CZI33	: in std_logic := '0';
    CZI34	: in std_logic := '0';
    CZI35	: in std_logic := '0';
    CZI36	: in std_logic := '0';
    CZI37	: in std_logic := '0';
    CZI38	: in std_logic := '0';
    CZI39	: in std_logic := '0';
    CZI40	: in std_logic := '0';
    CZI41	: in std_logic := '0';
    CZI42	: in std_logic := '0';
    CZI43	: in std_logic := '0';
    CZI44	: in std_logic := '0';
    CZI45	: in std_logic := '0';
    CZI46	: in std_logic := '0';
    CZI47	: in std_logic := '0';
    CZI48	: in std_logic := '0';
    CZI49	: in std_logic := '0';
    CZI50	: in std_logic := '0';
    CZI51	: in std_logic := '0';
    CZI52	: in std_logic := '0';
    CZI53	: in std_logic := '0';
    CZI54	: in std_logic := '0';
    CZI55	: in std_logic := '0';
    CZI56	: in std_logic := '0';

    CZO1	: out std_logic := '0';
    CZO2	: out std_logic := '0';
    CZO3	: out std_logic := '0';
    CZO4	: out std_logic := '0';
    CZO5	: out std_logic := '0';
    CZO6	: out std_logic := '0';
    CZO7	: out std_logic := '0';
    CZO8	: out std_logic := '0';
    CZO9	: out std_logic := '0';
    CZO10	: out std_logic := '0';
    CZO11	: out std_logic := '0';
    CZO12	: out std_logic := '0';
    CZO13	: out std_logic := '0';
    CZO14	: out std_logic := '0';
    CZO15	: out std_logic := '0';
    CZO16	: out std_logic := '0';
    CZO17	: out std_logic := '0';
    CZO18	: out std_logic := '0';
    CZO19	: out std_logic := '0';
    CZO20	: out std_logic := '0';
    CZO21	: out std_logic := '0';
    CZO22	: out std_logic := '0';
    CZO23	: out std_logic := '0';
    CZO24	: out std_logic := '0';
    CZO25	: out std_logic := '0';
    CZO26	: out std_logic := '0';
    CZO27	: out std_logic := '0';
    CZO28	: out std_logic := '0';
    CZO29	: out std_logic := '0';
    CZO30	: out std_logic := '0';
    CZO31	: out std_logic := '0';
    CZO32	: out std_logic := '0';
    CZO33	: out std_logic := '0';
    CZO34	: out std_logic := '0';
    CZO35	: out std_logic := '0';
    CZO36	: out std_logic := '0';
    CZO37	: out std_logic := '0';
    CZO38	: out std_logic := '0';
    CZO39	: out std_logic := '0';
    CZO40	: out std_logic := '0';
    CZO41	: out std_logic := '0';
    CZO42	: out std_logic := '0';
    CZO43	: out std_logic := '0';
    CZO44	: out std_logic := '0';
    CZO45	: out std_logic := '0';
    CZO46	: out std_logic := '0';
    CZO47	: out std_logic := '0';
    CZO48	: out std_logic := '0';
    CZO49	: out std_logic := '0';
    CZO50	: out std_logic := '0';
    CZO51	: out std_logic := '0';
    CZO52	: out std_logic := '0';
    CZO53	: out std_logic := '0';
    CZO54	: out std_logic := '0';
    CZO55	: out std_logic := '0';
    CZO56	: out std_logic := '0';

    D1	: in std_logic := '0';
    D2	: in std_logic := '0';
    D3	: in std_logic := '0';
    D4	: in std_logic := '0';
    D5	: in std_logic := '0';
    D6	: in std_logic := '0';
    D7	: in std_logic := '0';
    D8	: in std_logic := '0';
    D9	: in std_logic := '0';
    D10	: in std_logic := '0';
    D11	: in std_logic := '0';
    D12	: in std_logic := '0';
    D13	: in std_logic := '0';
    D14	: in std_logic := '0';
    D15	: in std_logic := '0';
    D16	: in std_logic := '0';
    D17	: in std_logic := '0';
    D18	: in std_logic := '0';

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z1	: out std_logic := '0';
    Z2	: out std_logic := '0';
    Z3	: out std_logic := '0';
    Z4	: out std_logic := '0';
    Z5	: out std_logic := '0';
    Z6	: out std_logic := '0';
    Z7	: out std_logic := '0';
    Z8	: out std_logic := '0';
    Z9	: out std_logic := '0';
    Z10	: out std_logic := '0';
    Z11	: out std_logic := '0';
    Z12	: out std_logic := '0';
    Z13	: out std_logic := '0';
    Z14	: out std_logic := '0';
    Z15	: out std_logic := '0';
    Z16	: out std_logic := '0';
    Z17	: out std_logic := '0';
    Z18	: out std_logic := '0';
    Z19	: out std_logic := '0';
    Z20	: out std_logic := '0';
    Z21	: out std_logic := '0';
    Z22	: out std_logic := '0';
    Z23	: out std_logic := '0';
    Z24	: out std_logic := '0';
    Z25	: out std_logic := '0';
    Z26	: out std_logic := '0';
    Z27	: out std_logic := '0';
    Z28	: out std_logic := '0';
    Z29	: out std_logic := '0';
    Z30	: out std_logic := '0';
    Z31	: out std_logic := '0';
    Z32	: out std_logic := '0';
    Z33	: out std_logic := '0';
    Z34	: out std_logic := '0';
    Z35	: out std_logic := '0';
    Z36	: out std_logic := '0';
    Z37	: out std_logic := '0';
    Z38	: out std_logic := '0';
    Z39	: out std_logic := '0';
    Z40	: out std_logic := '0';
    Z41	: out std_logic := '0';
    Z42	: out std_logic := '0';
    Z43	: out std_logic := '0';
    Z44	: out std_logic := '0';
    Z45	: out std_logic := '0';
    Z46	: out std_logic := '0';
    Z47	: out std_logic := '0';
    Z48	: out std_logic := '0';
    Z49	: out std_logic := '0';
    Z50	: out std_logic := '0';
    Z51	: out std_logic := '0';
    Z52	: out std_logic := '0';
    Z53	: out std_logic := '0';
    Z54	: out std_logic := '0';
    Z55	: out std_logic := '0';
    Z56	: out std_logic := '0'
);
end component NX_DSP_L;

component NX_DSP_L_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A	: in std_logic_vector(23 downto 0) := (others => '0');
    B	: in std_logic_vector(17 downto 0) := (others => '0');
    C	: in std_logic_vector(35 downto 0) := (others => '0');

    CAI	: in std_logic_vector(23 downto 0) := (others => '0');
    CAO	: out std_logic_vector(23 downto 0) := (others => '0');
    CBI	: in std_logic_vector(17 downto 0) := (others => '0');
    CBO	: out std_logic_vector(17 downto 0) := (others => '0');

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI	: in std_logic_vector(55 downto 0) := (others => '0');
    CZO	: out std_logic_vector(55 downto 0) := (others => '0');

    D	: in std_logic_vector(17 downto 0) := (others => '0');

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0')
);
end component NX_DSP_L_WRAP;

component NX_DSP_L_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port (
    CK	: IN std_logic := '0';
    R	: IN std_logic := '0';
    RZ	: IN std_logic := '0';
    WE	: IN std_logic := '0';

    CI	: IN std_logic := '0';
    A	: IN std_logic_vector(23 downto 0) := (others => '0');
    B	: IN std_logic_vector(17 downto 0) := (others => '0');
    C	: IN std_logic_vector(35 downto 0) := (others => '0');
    D	: IN std_logic_vector(17 downto 0) := (others => '0');
    CAI	: IN std_logic_vector(23 downto 0) := (others => '0');
    CBI	: IN std_logic_vector(17 downto 0) := (others => '0');
    CZI	: IN std_logic_vector(55 downto 0) := (others => '0');
    CCI	: IN std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0');
    CO	: OUT std_logic := '0';
    CO36	: OUT std_logic := '0';
    CO56	: OUT std_logic := '0';
    OVF	: OUT std_logic := '0';
    CAO	: OUT std_logic_vector(23 downto 0) := (others => '0');
    CBO	: OUT std_logic_vector(17 downto 0) := (others => '0');
    CZO	: OUT std_logic_vector(55 downto 0) := (others => '0');
    CCO	: OUT std_logic := '0'
  );
end component NX_DSP_L_SPLIT;

-- beware following components are only intended for internal use. Do not try to instantiate them.
component NX_BUFFER is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BUFFER;

component NX_CSC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_CSC;

component NX_SCC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_SCC;

component NX_syn_tp is
port (
    I	: in std_logic := '0'
);
end component NX_syn_tp;

component NX_BD is
generic (
    system: bit := '1'
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BD;

component NX_SER is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Number of serialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    outputDelayLine      : string := "";		-- "0_to_63_delay_value"
    outputCapacity       : string := "";		-- 0 to 40 (value in pF)
    -- Delay Control
    spath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    R	: in std_logic := '0';
    I	: in std_logic_vector(data_size - 1 downto 0) := (others => '0');
    IO	: out std_logic := '0';
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_SER;

component NX_DES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- -- Pad locationNumber of deserialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    termination          : string := "";		-- Input impedance adaptatio    terminationReference : string := "";
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- Input impedance adaptation
    weakTermination      : string := "";		-- "floating" or "VTT"
    inputDelayLine       : string := "";		-- "0_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    -- Delay Control
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    R	: in std_logic := '0';
    IO	: in std_logic := '0';
    O	: out std_logic_vector(data_size - 1 downto 0) := (others => '0');
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0'
);
end component NX_DES;

component NX_SERDES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Serialiser/deserializer factor 
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0" or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    termination          : string := "";		-- Input impedance adaptation
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- "true" or "false"
    weakTermination      : string := "";		-- "PullUp" or "None"
    inputDelayLine       : string := "";		-- "O_to_63_delay_value"
    outputDelayLine      : string := "";		-- "O_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    outputCapacity       : string := "";		-- "0" to "40" (value in pF)
    cpath_registered     : bit := '0';			-- Use Register in Enable Path ('1')
    -- Delay Control
    spath_dynamic        : bit := '0';			-- 0: off/fixed delay, 1: dynamic delay
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay
);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    RTX	: in std_logic := '0';
    RRX	: in std_logic := '0';
    CI	: in std_logic := '0';
    CCK	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    I	: in std_logic_vector(data_size - 1 downto 0) := (others => '0');
    IO	: inout std_logic := '0';
    O	: out std_logic_vector(data_size - 1 downto 0) := (others => '0');
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(5 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(5 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0'
);
end component NX_SERDES;

component NX_RAM is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
   );
port (
    ACK	: in std_logic := '0';
    ACKC	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKC	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI1	: in std_logic := '0';
    AI2	: in std_logic := '0';
    AI3	: in std_logic := '0';
    AI4	: in std_logic := '0';
    AI5	: in std_logic := '0';
    AI6	: in std_logic := '0';
    AI7	: in std_logic := '0';
    AI8	: in std_logic := '0';
    AI9	: in std_logic := '0';
    AI10	: in std_logic := '0';
    AI11	: in std_logic := '0';
    AI12	: in std_logic := '0';
    AI13	: in std_logic := '0';
    AI14	: in std_logic := '0';
    AI15	: in std_logic := '0';
    AI16	: in std_logic := '0';

    AI17	: in std_logic := '0';
    AI18	: in std_logic := '0';
    AI19	: in std_logic := '0';
    AI20	: in std_logic := '0';
    AI21	: in std_logic := '0';
    AI22	: in std_logic := '0';
    AI23	: in std_logic := '0';
    AI24	: in std_logic := '0';

    BI1	: in std_logic := '0';
    BI2	: in std_logic := '0';
    BI3	: in std_logic := '0';
    BI4	: in std_logic := '0';
    BI5	: in std_logic := '0';
    BI6	: in std_logic := '0';
    BI7	: in std_logic := '0';
    BI8	: in std_logic := '0';
    BI9	: in std_logic := '0';
    BI10	: in std_logic := '0';
    BI11	: in std_logic := '0';
    BI12	: in std_logic := '0';
    BI13	: in std_logic := '0';
    BI14	: in std_logic := '0';
    BI15	: in std_logic := '0';
    BI16	: in std_logic := '0';

    BI17	: in std_logic := '0';
    BI18	: in std_logic := '0';
    BI19	: in std_logic := '0';
    BI20	: in std_logic := '0';
    BI21	: in std_logic := '0';
    BI22	: in std_logic := '0';
    BI23	: in std_logic := '0';
    BI24	: in std_logic := '0';

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO1	: out std_logic := '0';
    AO2	: out std_logic := '0';
    AO3	: out std_logic := '0';
    AO4	: out std_logic := '0';
    AO5	: out std_logic := '0';
    AO6	: out std_logic := '0';
    AO7	: out std_logic := '0';
    AO8	: out std_logic := '0';
    AO9	: out std_logic := '0';
    AO10	: out std_logic := '0';
    AO11	: out std_logic := '0';
    AO12	: out std_logic := '0';
    AO13	: out std_logic := '0';
    AO14	: out std_logic := '0';
    AO15	: out std_logic := '0';
    AO16	: out std_logic := '0';

    AO17	: out std_logic := '0';
    AO18	: out std_logic := '0';
    AO19	: out std_logic := '0';
    AO20	: out std_logic := '0';
    AO21	: out std_logic := '0';
    AO22	: out std_logic := '0';
    AO23	: out std_logic := '0';
    AO24	: out std_logic := '0';

    BO1	: out std_logic := '0';
    BO2	: out std_logic := '0';
    BO3	: out std_logic := '0';
    BO4	: out std_logic := '0';
    BO5	: out std_logic := '0';
    BO6	: out std_logic := '0';
    BO7	: out std_logic := '0';
    BO8	: out std_logic := '0';
    BO9	: out std_logic := '0';
    BO10	: out std_logic := '0';
    BO11	: out std_logic := '0';
    BO12	: out std_logic := '0';
    BO13	: out std_logic := '0';
    BO14	: out std_logic := '0';
    BO15	: out std_logic := '0';
    BO16	: out std_logic := '0';

    BO17	: out std_logic := '0';
    BO18	: out std_logic := '0';
    BO19	: out std_logic := '0';
    BO20	: out std_logic := '0';
    BO21	: out std_logic := '0';
    BO22	: out std_logic := '0';
    BO23	: out std_logic := '0';
    BO24	: out std_logic := '0';

    AA1	: in std_logic := '0';
    AA2	: in std_logic := '0';
    AA3	: in std_logic := '0';
    AA4	: in std_logic := '0';
    AA5	: in std_logic := '0';
    AA6	: in std_logic := '0';

    AA7	: in std_logic := '0';
    AA8	: in std_logic := '0';
    AA9	: in std_logic := '0';
    AA10	: in std_logic := '0';
    AA11	: in std_logic := '0';
    AA12	: in std_logic := '0';
    AA13	: in std_logic := '0';
    AA14	: in std_logic := '0';
    AA15	: in std_logic := '0';
    AA16	: in std_logic := '0';

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA1	: in std_logic := '0';
    BA2	: in std_logic := '0';
    BA3	: in std_logic := '0';
    BA4	: in std_logic := '0';
    BA5	: in std_logic := '0';
    BA6	: in std_logic := '0';

    BA7	: in std_logic := '0';
    BA8	: in std_logic := '0';
    BA9	: in std_logic := '0';
    BA10	: in std_logic := '0';
    BA11	: in std_logic := '0';
    BA12	: in std_logic := '0';
    BA13	: in std_logic := '0';
    BA14	: in std_logic := '0';
    BA15	: in std_logic := '0';
    BA16	: in std_logic := '0';

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM;

component NX_RAM_WRAP is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                          -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000";  -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                         -- context initialization
);
port (
    ACK	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI	: in std_logic_vector(23 downto 0) := (others => '0');
    BI	: in std_logic_vector(23 downto 0) := (others => '0');

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO	: out std_logic_vector(23 downto 0) := (others => '0');
    BO	: out std_logic_vector(23 downto 0) := (others => '0');
    AA	: in std_logic_vector(15 downto 0) := (others => '0');

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA	: in std_logic_vector(15 downto 0) := (others => '0');

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM_WRAP;

component NX_ECC is
port (
    CKD	: in std_logic := '0';
    CHK	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0'
    );
end component NX_ECC;

component NX_PLL_L is
generic (
    location	      : string := "";
                      
    ref_intdiv        : integer   range 0 to 31 := 0;  -- 0 to 31  (%1 to %32)
    ref_osc_on        : bit := '0';                    -- 0: disabled - 1: enabled
                      
    cfg_use_pll       : std_logic:='1';                -- use or bypass PLL
                      
    ext_fbk_on        : bit := '0';                    -- 0: disabled - 1: enabled
                      
    fbk_intdiv        : integer   range 0 to 31 := 2;  -- 0 to 31  (%4 to %66 by step 2)
                      
    fbk_delay_on      : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay         : integer   range 0 to 63 := 0;  -- 0 to 63

    wfg_sync_pll_lock : bit := '0';                    -- 0: disabled - 1: enabled
    wfg_sync_cal_lock : bit := '0';                    -- 0: disabled - 1: enabled

    clk_outdivp1      : integer   range 0 to 7 := 0;   -- 0 to 7  P1 (2^n    : %1 to %128)
    clk_outdivp2      : integer   range 0 to 7 := 0;   -- 0 to 7  P2 (2^(n+1): %2 to %256)
    clk_outdivo1      : integer   range 0 to 7 := 0;   -- 0 to 7  O1 ((2n)+3 : %3 to  %17)
    clk_outdivp3o2    : integer   range 0 to 7 := 0    -- 0 to 7  P3 (2^(n+2): %4 to %512)
                                                       --         O2 ((2n)+5 : %5 to  %19)
);
port (
    REF	: in std_logic := '0';
    FBK	: in std_logic := '0';

    R	: in std_logic := '0';

    VCO	: out std_logic := '0';
    LDFO	: out std_logic := '0';
    REFO	: out std_logic := '0';

    DIVO1	: out std_logic := '0';
    DIVO2	: out std_logic := '0';

    DIVP1	: out std_logic := '0';
    DIVP2	: out std_logic := '0';
    DIVP3	: out std_logic := '0';
    OSC	: out std_logic := '0';

    PLL_LOCKED	: out std_logic := '0';
    CAL_LOCKED	: out std_logic := '0'
);
end component NX_PLL_L;

component NX_WFG_L is
generic (
    location    : string := "";
    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
                                                           -- 1:    invert / Falling

    mode        : bit := '0';                              -- 0: no pattern - 1: pattern
    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    R	: in std_logic := '0';
    SI	: in std_logic := '0';
    ZI	: in std_logic := '0';
    RDY	: in std_logic := '1';
    SO	: out std_logic := '0';
    ZO	: out std_logic := '0'
);
end component NX_WFG_L;

component NX_R5_L is
port (
    -- Inputs
    A_CKEM_I	: in std_logic := '0';
    A_CKEP_I	: in std_logic := '0';
    A_CKES_I	: in std_logic := '0';

    AR_A_I32	: in std_logic := '0';
    AR_A_I31	: in std_logic := '0';
    AR_A_I30	: in std_logic := '0';
    AR_A_I29	: in std_logic := '0';
    AR_A_I28	: in std_logic := '0';
    AR_A_I27	: in std_logic := '0';
    AR_A_I26	: in std_logic := '0';
    AR_A_I25	: in std_logic := '0';
    AR_A_I24	: in std_logic := '0';
    AR_A_I23	: in std_logic := '0';
    AR_A_I22	: in std_logic := '0';
    AR_A_I21	: in std_logic := '0';
    AR_A_I20	: in std_logic := '0';
    AR_A_I19	: in std_logic := '0';
    AR_A_I18	: in std_logic := '0';
    AR_A_I17	: in std_logic := '0';
    AR_A_I16	: in std_logic := '0';
    AR_A_I15	: in std_logic := '0';
    AR_A_I14	: in std_logic := '0';
    AR_A_I13	: in std_logic := '0';
    AR_A_I12	: in std_logic := '0';
    AR_A_I11	: in std_logic := '0';
    AR_A_I10	: in std_logic := '0';
    AR_A_I9	: in std_logic := '0';
    AR_A_I8	: in std_logic := '0';
    AR_A_I7	: in std_logic := '0';
    AR_A_I6	: in std_logic := '0';
    AR_A_I5	: in std_logic := '0';
    AR_A_I4	: in std_logic := '0';
    AR_A_I3	: in std_logic := '0';
    AR_A_I2	: in std_logic := '0';
    AR_A_I1	: in std_logic := '0';

    AR_BU_I2	: in std_logic := '0';
    AR_BU_I1	: in std_logic := '0';

    AR_CH_I4	: in std_logic := '0';
    AR_CH_I3	: in std_logic := '0';
    AR_CH_I2	: in std_logic := '0';
    AR_CH_I1	: in std_logic := '0';

    AR_IDS_I8	: in std_logic := '0';
    AR_IDS_I7	: in std_logic := '0';
    AR_IDS_I6	: in std_logic := '0';
    AR_IDS_I5	: in std_logic := '0';
    AR_IDS_I4	: in std_logic := '0';
    AR_IDS_I3	: in std_logic := '0';
    AR_IDS_I2	: in std_logic := '0';
    AR_IDS_I1	: in std_logic := '0';

    AR_LE_I4	: in std_logic := '0';
    AR_LE_I3	: in std_logic := '0';
    AR_LE_I2	: in std_logic := '0';
    AR_LE_I1	: in std_logic := '0';

    AR_LK_I2	: in std_logic := '0';
    AR_LK_I1	: in std_logic := '0';

    AR_PR_I3	: in std_logic := '0';
    AR_PR_I2	: in std_logic := '0';
    AR_PR_I1	: in std_logic := '0';

    AR_RYM_I	: in std_logic := '0';
    AR_RYP_I	: in std_logic := '0';

    AR_SZ_I3	: in std_logic := '0';
    AR_SZ_I2	: in std_logic := '0';
    AR_SZ_I1	: in std_logic := '0';

    AR_VD_I	: in std_logic := '0';
    AT_RS_I	: in std_logic := '0';

    AW_A_I32	: in std_logic := '0';
    AW_A_I31	: in std_logic := '0';
    AW_A_I30	: in std_logic := '0';
    AW_A_I29	: in std_logic := '0';
    AW_A_I28	: in std_logic := '0';
    AW_A_I27	: in std_logic := '0';
    AW_A_I26	: in std_logic := '0';
    AW_A_I25	: in std_logic := '0';
    AW_A_I24	: in std_logic := '0';
    AW_A_I23	: in std_logic := '0';
    AW_A_I22	: in std_logic := '0';
    AW_A_I21	: in std_logic := '0';
    AW_A_I20	: in std_logic := '0';
    AW_A_I19	: in std_logic := '0';
    AW_A_I18	: in std_logic := '0';
    AW_A_I17	: in std_logic := '0';
    AW_A_I16	: in std_logic := '0';
    AW_A_I15	: in std_logic := '0';
    AW_A_I14	: in std_logic := '0';
    AW_A_I13	: in std_logic := '0';
    AW_A_I12	: in std_logic := '0';
    AW_A_I11	: in std_logic := '0';
    AW_A_I10	: in std_logic := '0';
    AW_A_I9	: in std_logic := '0';
    AW_A_I8	: in std_logic := '0';
    AW_A_I7	: in std_logic := '0';
    AW_A_I6	: in std_logic := '0';
    AW_A_I5	: in std_logic := '0';
    AW_A_I4	: in std_logic := '0';
    AW_A_I3	: in std_logic := '0';
    AW_A_I2	: in std_logic := '0';
    AW_A_I1	: in std_logic := '0';

    AW_BU_I2	: in std_logic := '0';
    AW_BU_I1	: in std_logic := '0';

    AW_CH_I4	: in std_logic := '0';
    AW_CH_I3	: in std_logic := '0';
    AW_CH_I2	: in std_logic := '0';
    AW_CH_I1	: in std_logic := '0';

    AW_IDS_I8	: in std_logic := '0';
    AW_IDS_I7	: in std_logic := '0';
    AW_IDS_I6	: in std_logic := '0';
    AW_IDS_I5	: in std_logic := '0';
    AW_IDS_I4	: in std_logic := '0';
    AW_IDS_I3	: in std_logic := '0';
    AW_IDS_I2	: in std_logic := '0';
    AW_IDS_I1	: in std_logic := '0';

    AW_LE_I4	: in std_logic := '0';
    AW_LE_I3	: in std_logic := '0';
    AW_LE_I2	: in std_logic := '0';
    AW_LE_I1	: in std_logic := '0';

    AW_LK_I2	: in std_logic := '0';
    AW_LK_I1	: in std_logic := '0';

    AW_PR_I3	: in std_logic := '0';
    AW_PR_I2	: in std_logic := '0';
    AW_PR_I1	: in std_logic := '0';

    AW_RYM_I	: in std_logic := '0';
    AW_RYP_I	: in std_logic := '0';

    AW_SZ_I3	: in std_logic := '0';
    AW_SZ_I2	: in std_logic := '0';
    AW_SZ_I1	: in std_logic := '0';

    AW_VD_I	: in std_logic := '0';

    B_IDM_I4	: in std_logic := '0';
    B_IDM_I3	: in std_logic := '0';
    B_IDM_I2	: in std_logic := '0';
    B_IDM_I1	: in std_logic := '0';

    B_IDP_I4	: in std_logic := '0';
    B_IDP_I3	: in std_logic := '0';
    B_IDP_I2	: in std_logic := '0';
    B_IDP_I1	: in std_logic := '0';

    B_RDY_I	: in std_logic := '0';

    B_RSPM_I2	: in std_logic := '0';
    B_RSPM_I1	: in std_logic := '0';

    B_RSPP_I2	: in std_logic := '0';
    B_RSPP_I1	: in std_logic := '0';

    B_VDM_I	: in std_logic := '0';
    B_VDP_I	: in std_logic := '0';

--    CAL_I5        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I4        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I3        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I2        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I1        : in  std_logic; --  calibration   5   [0:4]

    CDB_PW_I	: in std_logic := '0';
    CDB_RS_I	: in std_logic := '0';
    CFG_EE_I	: in std_logic := '0';
    CFG_IE_I	: in std_logic := '0';
    CFG_NM_I	: in std_logic := '0';
    CK_I	: in std_logic := '0';
--    CK_DR_I       : in  std_logic; --  clock_dr      1
    CS_PW_I	: in std_logic := '0';
    DB_E_I	: in std_logic := '0';
    DB_NCK_I	: in std_logic := '0';

    DB_RA_I20	: in std_logic := '0';
    DB_RA_I19	: in std_logic := '0';
    DB_RA_I18	: in std_logic := '0';
    DB_RA_I17	: in std_logic := '0';
    DB_RA_I16	: in std_logic := '0';
    DB_RA_I15	: in std_logic := '0';
    DB_RA_I14	: in std_logic := '0';
    DB_RA_I13	: in std_logic := '0';
    DB_RA_I12	: in std_logic := '0';
    DB_RA_I11	: in std_logic := '0';
    DB_RA_I10	: in std_logic := '0';
    DB_RA_I9	: in std_logic := '0';
    DB_RA_I8	: in std_logic := '0';
    DB_RA_I7	: in std_logic := '0';
    DB_RA_I6	: in std_logic := '0';
    DB_RA_I5	: in std_logic := '0';
    DB_RA_I4	: in std_logic := '0';
    DB_RA_I3	: in std_logic := '0';
    DB_RA_I2	: in std_logic := '0';
    DB_RA_I1	: in std_logic := '0';

    DB_RAV_I	: in std_logic := '0';

    DB_SA_I20	: in std_logic := '0';
    DB_SA_I19	: in std_logic := '0';
    DB_SA_I18	: in std_logic := '0';
    DB_SA_I17	: in std_logic := '0';
    DB_SA_I16	: in std_logic := '0';
    DB_SA_I15	: in std_logic := '0';
    DB_SA_I14	: in std_logic := '0';
    DB_SA_I13	: in std_logic := '0';
    DB_SA_I12	: in std_logic := '0';
    DB_SA_I11	: in std_logic := '0';
    DB_SA_I10	: in std_logic := '0';
    DB_SA_I9	: in std_logic := '0';
    DB_SA_I8	: in std_logic := '0';
    DB_SA_I7	: in std_logic := '0';
    DB_SA_I6	: in std_logic := '0';
    DB_SA_I5	: in std_logic := '0';
    DB_SA_I4	: in std_logic := '0';
    DB_SA_I3	: in std_logic := '0';
    DB_SA_I2	: in std_logic := '0';
    DB_SA_I1	: in std_logic := '0';

    DB_SAV_I	: in std_logic := '0';
    DEV_E_I	: in std_logic := '0';

    DFTS_I8	: in std_logic := '0';
    DFTS_I7	: in std_logic := '0';
    DFTS_I6	: in std_logic := '0';
    DFTS_I5	: in std_logic := '0';
    DFTS_I4	: in std_logic := '0';
    DFTS_I3	: in std_logic := '0';
    DFTS_I2	: in std_logic := '0';
    DFTS_I1	: in std_logic := '0';

    E_DB_I	: in std_logic := '0';
    ERR_R_I	: in std_logic := '0';
    EVENT_I	: in std_logic := '0';

    GID_I4	: in std_logic := '0';
    GID_I3	: in std_logic := '0';
    GID_I2	: in std_logic := '0';
    GID_I1	: in std_logic := '0';

    INIT_P_I	: in std_logic := '0';
    INIT_R_I	: in std_logic := '0';
    LOC_R_I	: in std_logic := '0';
--    LBK_E_I       : in  std_logic; --  loopback_en   1
--    LBK_MX_I      : in  std_logic; --  loopback_mux  1

--    MODE1_I3      : in  std_logic; --  mode1         3   [0:2]
--    MODE1_I2      : in  std_logic; --  mode1         3   [0:2]
--    MODE1_I1      : in  std_logic; --  mode1         3   [0:2]

--    MODE2_I3      : in  std_logic; --  mode2         3   [0:2]
--    MODE2_I2      : in  std_logic; --  mode2         3   [0:2]
--    MODE2_I1      : in  std_logic; --  mode2         3   [0:2]

--    MODE3_I3      : in  std_logic; --  mode3         3   [0:2]
--    MODE3_I2      : in  std_logic; --  mode3         3   [0:2]
--    MODE3_I1      : in  std_logic; --  mode3         3   [0:2]

    NCPUH_I	: in std_logic := '0';
    NET_RS_I	: in std_logic := '0';
    N_FIQ_I	: in std_logic := '0';
    N_IDE_I	: in std_logic := '0';
    N_IRQ_I	: in std_logic := '0';
    N_PRS_I	: in std_logic := '0';
    N_RS_I	: in std_logic := '0';
    N_SPRS_I	: in std_logic := '0';
    N_TRS_I	: in std_logic := '0';

    P_A_I29	: in std_logic := '0';
    P_A_I28	: in std_logic := '0';
    P_A_I27	: in std_logic := '0';
    P_A_I26	: in std_logic := '0';
    P_A_I25	: in std_logic := '0';
    P_A_I24	: in std_logic := '0';
    P_A_I23	: in std_logic := '0';
    P_A_I22	: in std_logic := '0';
    P_A_I21	: in std_logic := '0';
    P_A_I20	: in std_logic := '0';
    P_A_I19	: in std_logic := '0';
    P_A_I18	: in std_logic := '0';
    P_A_I17	: in std_logic := '0';
    P_A_I16	: in std_logic := '0';
    P_A_I15	: in std_logic := '0';
    P_A_I14	: in std_logic := '0';
    P_A_I13	: in std_logic := '0';
    P_A_I12	: in std_logic := '0';
    P_A_I11	: in std_logic := '0';
    P_A_I10	: in std_logic := '0';
    P_A_I9	: in std_logic := '0';
    P_A_I8	: in std_logic := '0';
    P_A_I7	: in std_logic := '0';
    P_A_I6	: in std_logic := '0';
    P_A_I5	: in std_logic := '0';
    P_A_I4	: in std_logic := '0';
    P_A_I3	: in std_logic := '0';
    P_A_I2	: in std_logic := '0';
    P_A_I1	: in std_logic := '0';

    P_ECC_I	: in std_logic := '0';
    PLVL_I	: in std_logic := '0';
    P_CK_E_I	: in std_logic := '0';
    P_CK_I	: in std_logic := '0';
    P_E_I	: in std_logic := '0';

    PPV_BS_I20	: in std_logic := '0';
    PPV_BS_I19	: in std_logic := '0';
    PPV_BS_I18	: in std_logic := '0';
    PPV_BS_I17	: in std_logic := '0';
    PPV_BS_I16	: in std_logic := '0';
    PPV_BS_I15	: in std_logic := '0';
    PPV_BS_I14	: in std_logic := '0';
    PPV_BS_I13	: in std_logic := '0';
    PPV_BS_I12	: in std_logic := '0';
    PPV_BS_I11	: in std_logic := '0';
    PPV_BS_I10	: in std_logic := '0';
    PPV_BS_I9	: in std_logic := '0';
    PPV_BS_I8	: in std_logic := '0';
    PPV_BS_I7	: in std_logic := '0';
    PPV_BS_I6	: in std_logic := '0';
    PPV_BS_I5	: in std_logic := '0';
    PPV_BS_I4	: in std_logic := '0';
    PPV_BS_I3	: in std_logic := '0';
    PPV_BS_I2	: in std_logic := '0';
    PPV_BS_I1	: in std_logic := '0';

    PPV_SZ_I5	: in std_logic := '0';
    PPV_SZ_I4	: in std_logic := '0';
    PPV_SZ_I3	: in std_logic := '0';
    PPV_SZ_I2	: in std_logic := '0';
    PPV_SZ_I1	: in std_logic := '0';

    PPX_BS_I20	: in std_logic := '0';
    PPX_BS_I19	: in std_logic := '0';
    PPX_BS_I18	: in std_logic := '0';
    PPX_BS_I17	: in std_logic := '0';
    PPX_BS_I16	: in std_logic := '0';
    PPX_BS_I15	: in std_logic := '0';
    PPX_BS_I14	: in std_logic := '0';
    PPX_BS_I13	: in std_logic := '0';
    PPX_BS_I12	: in std_logic := '0';
    PPX_BS_I11	: in std_logic := '0';
    PPX_BS_I10	: in std_logic := '0';
    PPX_BS_I9	: in std_logic := '0';
    PPX_BS_I8	: in std_logic := '0';
    PPX_BS_I7	: in std_logic := '0';
    PPX_BS_I6	: in std_logic := '0';
    PPX_BS_I5	: in std_logic := '0';
    PPX_BS_I4	: in std_logic := '0';
    PPX_BS_I3	: in std_logic := '0';
    PPX_BS_I2	: in std_logic := '0';
    PPX_BS_I1	: in std_logic := '0';

    PPX_SZ_I5	: in std_logic := '0';
    PPX_SZ_I4	: in std_logic := '0';
    PPX_SZ_I3	: in std_logic := '0';
    PPX_SZ_I2	: in std_logic := '0';
    PPX_SZ_I1	: in std_logic := '0';

    P_RS_I	: in std_logic := '0';
    P_SEL_I	: in std_logic := '0';

    PW_D_I32	: in std_logic := '0';
    PW_D_I31	: in std_logic := '0';
    PW_D_I30	: in std_logic := '0';
    PW_D_I29	: in std_logic := '0';
    PW_D_I28	: in std_logic := '0';
    PW_D_I27	: in std_logic := '0';
    PW_D_I26	: in std_logic := '0';
    PW_D_I25	: in std_logic := '0';
    PW_D_I24	: in std_logic := '0';
    PW_D_I23	: in std_logic := '0';
    PW_D_I22	: in std_logic := '0';
    PW_D_I21	: in std_logic := '0';
    PW_D_I20	: in std_logic := '0';
    PW_D_I19	: in std_logic := '0';
    PW_D_I18	: in std_logic := '0';
    PW_D_I17	: in std_logic := '0';
    PW_D_I16	: in std_logic := '0';
    PW_D_I15	: in std_logic := '0';
    PW_D_I14	: in std_logic := '0';
    PW_D_I13	: in std_logic := '0';
    PW_D_I12	: in std_logic := '0';
    PW_D_I11	: in std_logic := '0';
    PW_D_I10	: in std_logic := '0';
    PW_D_I9	: in std_logic := '0';
    PW_D_I8	: in std_logic := '0';
    PW_D_I7	: in std_logic := '0';
    PW_D_I6	: in std_logic := '0';
    PW_D_I5	: in std_logic := '0';
    PW_D_I4	: in std_logic := '0';
    PW_D_I3	: in std_logic := '0';
    PW_D_I2	: in std_logic := '0';
    PW_D_I1	: in std_logic := '0';

    PW_I	: in std_logic := '0';

    RAMCTL_I8	: in std_logic := '0';
    RAMCTL_I7	: in std_logic := '0';
    RAMCTL_I6	: in std_logic := '0';
    RAMCTL_I5	: in std_logic := '0';
    RAMCTL_I4	: in std_logic := '0';
    RAMCTL_I3	: in std_logic := '0';
    RAMCTL_I2	: in std_logic := '0';
    RAMCTL_I1	: in std_logic := '0';

    R_DM_I64	: in std_logic := '0';
    R_DM_I63	: in std_logic := '0';
    R_DM_I62	: in std_logic := '0';
    R_DM_I61	: in std_logic := '0';
    R_DM_I60	: in std_logic := '0';
    R_DM_I59	: in std_logic := '0';
    R_DM_I58	: in std_logic := '0';
    R_DM_I57	: in std_logic := '0';
    R_DM_I56	: in std_logic := '0';
    R_DM_I55	: in std_logic := '0';
    R_DM_I54	: in std_logic := '0';
    R_DM_I53	: in std_logic := '0';
    R_DM_I52	: in std_logic := '0';
    R_DM_I51	: in std_logic := '0';
    R_DM_I50	: in std_logic := '0';
    R_DM_I49	: in std_logic := '0';
    R_DM_I48	: in std_logic := '0';
    R_DM_I47	: in std_logic := '0';
    R_DM_I46	: in std_logic := '0';
    R_DM_I45	: in std_logic := '0';
    R_DM_I44	: in std_logic := '0';
    R_DM_I43	: in std_logic := '0';
    R_DM_I42	: in std_logic := '0';
    R_DM_I41	: in std_logic := '0';
    R_DM_I40	: in std_logic := '0';
    R_DM_I39	: in std_logic := '0';
    R_DM_I38	: in std_logic := '0';
    R_DM_I37	: in std_logic := '0';
    R_DM_I36	: in std_logic := '0';
    R_DM_I35	: in std_logic := '0';
    R_DM_I34	: in std_logic := '0';
    R_DM_I33	: in std_logic := '0';
    R_DM_I32	: in std_logic := '0';
    R_DM_I31	: in std_logic := '0';
    R_DM_I30	: in std_logic := '0';
    R_DM_I29	: in std_logic := '0';
    R_DM_I28	: in std_logic := '0';
    R_DM_I27	: in std_logic := '0';
    R_DM_I26	: in std_logic := '0';
    R_DM_I25	: in std_logic := '0';
    R_DM_I24	: in std_logic := '0';
    R_DM_I23	: in std_logic := '0';
    R_DM_I22	: in std_logic := '0';
    R_DM_I21	: in std_logic := '0';
    R_DM_I20	: in std_logic := '0';
    R_DM_I19	: in std_logic := '0';
    R_DM_I18	: in std_logic := '0';
    R_DM_I17	: in std_logic := '0';
    R_DM_I16	: in std_logic := '0';
    R_DM_I15	: in std_logic := '0';
    R_DM_I14	: in std_logic := '0';
    R_DM_I13	: in std_logic := '0';
    R_DM_I12	: in std_logic := '0';
    R_DM_I11	: in std_logic := '0';
    R_DM_I10	: in std_logic := '0';
    R_DM_I9	: in std_logic := '0';
    R_DM_I8	: in std_logic := '0';
    R_DM_I7	: in std_logic := '0';
    R_DM_I6	: in std_logic := '0';
    R_DM_I5	: in std_logic := '0';
    R_DM_I4	: in std_logic := '0';
    R_DM_I3	: in std_logic := '0';
    R_DM_I2	: in std_logic := '0';
    R_DM_I1	: in std_logic := '0';

    R_DP_I32	: in std_logic := '0';
    R_DP_I31	: in std_logic := '0';
    R_DP_I30	: in std_logic := '0';
    R_DP_I29	: in std_logic := '0';
    R_DP_I28	: in std_logic := '0';
    R_DP_I27	: in std_logic := '0';
    R_DP_I26	: in std_logic := '0';
    R_DP_I25	: in std_logic := '0';
    R_DP_I24	: in std_logic := '0';
    R_DP_I23	: in std_logic := '0';
    R_DP_I22	: in std_logic := '0';
    R_DP_I21	: in std_logic := '0';
    R_DP_I20	: in std_logic := '0';
    R_DP_I19	: in std_logic := '0';
    R_DP_I18	: in std_logic := '0';
    R_DP_I17	: in std_logic := '0';
    R_DP_I16	: in std_logic := '0';
    R_DP_I15	: in std_logic := '0';
    R_DP_I14	: in std_logic := '0';
    R_DP_I13	: in std_logic := '0';
    R_DP_I12	: in std_logic := '0';
    R_DP_I11	: in std_logic := '0';
    R_DP_I10	: in std_logic := '0';
    R_DP_I9	: in std_logic := '0';
    R_DP_I8	: in std_logic := '0';
    R_DP_I7	: in std_logic := '0';
    R_DP_I6	: in std_logic := '0';
    R_DP_I5	: in std_logic := '0';
    R_DP_I4	: in std_logic := '0';
    R_DP_I3	: in std_logic := '0';
    R_DP_I2	: in std_logic := '0';
    R_DP_I1	: in std_logic := '0';

--    RDY_I3        : in  std_logic; --  ready         3   [0:2]
--    RDY_I2        : in  std_logic; --  ready         3   [0:2]
--    RDY_I1        : in  std_logic; --  ready         3   [0:2]

    R_IDM_I4	: in std_logic := '0';
    R_IDM_I3	: in std_logic := '0';
    R_IDM_I2	: in std_logic := '0';
    R_IDM_I1	: in std_logic := '0';

    R_IDP_I4	: in std_logic := '0';
    R_IDP_I3	: in std_logic := '0';
    R_IDP_I2	: in std_logic := '0';
    R_IDP_I1	: in std_logic := '0';

    R_LSTM_I	: in std_logic := '0';
    R_LSTP_I	: in std_logic := '0';
    R_RDY_I	: in std_logic := '0';

    R_RSPM_I2	: in std_logic := '0';
    R_RSPM_I1	: in std_logic := '0';

    R_RSPP_I2	: in std_logic := '0';
    R_RSPP_I1	: in std_logic := '0';

    RS_BYP_I	: in std_logic := '0';
    R_VDM_I	: in std_logic := '0';
    R_VDP_I	: in std_logic := '0';
--    SCAN_E_I      : in  std_logic; --  scan_en       1
    SE_I	: in std_logic := '0';
--    SHF_DR_I      : in  std_logic; --  shift_dr      1
--    SH_I          : in  std_logic; --  shin          1
    SW_CK_I	: in std_logic := '0';
    SW_DI_I	: in std_logic := '0';
    T_DI_I	: in std_logic := '0';
    TE_INI_I	: in std_logic := '0';
--    TEST_E_I      : in  std_logic; --  test_en       1
--    UPD_DR_I      : in  std_logic; --  update_dr     1
    VINI_I	: in std_logic := '0';

    W_D_I64	: in std_logic := '0';
    W_D_I63	: in std_logic := '0';
    W_D_I62	: in std_logic := '0';
    W_D_I61	: in std_logic := '0';
    W_D_I60	: in std_logic := '0';
    W_D_I59	: in std_logic := '0';
    W_D_I58	: in std_logic := '0';
    W_D_I57	: in std_logic := '0';
    W_D_I56	: in std_logic := '0';
    W_D_I55	: in std_logic := '0';
    W_D_I54	: in std_logic := '0';
    W_D_I53	: in std_logic := '0';
    W_D_I52	: in std_logic := '0';
    W_D_I51	: in std_logic := '0';
    W_D_I50	: in std_logic := '0';
    W_D_I49	: in std_logic := '0';
    W_D_I48	: in std_logic := '0';
    W_D_I47	: in std_logic := '0';
    W_D_I46	: in std_logic := '0';
    W_D_I45	: in std_logic := '0';
    W_D_I44	: in std_logic := '0';
    W_D_I43	: in std_logic := '0';
    W_D_I42	: in std_logic := '0';
    W_D_I41	: in std_logic := '0';
    W_D_I40	: in std_logic := '0';
    W_D_I39	: in std_logic := '0';
    W_D_I38	: in std_logic := '0';
    W_D_I37	: in std_logic := '0';
    W_D_I36	: in std_logic := '0';
    W_D_I35	: in std_logic := '0';
    W_D_I34	: in std_logic := '0';
    W_D_I33	: in std_logic := '0';
    W_D_I32	: in std_logic := '0';
    W_D_I31	: in std_logic := '0';
    W_D_I30	: in std_logic := '0';
    W_D_I29	: in std_logic := '0';
    W_D_I28	: in std_logic := '0';
    W_D_I27	: in std_logic := '0';
    W_D_I26	: in std_logic := '0';
    W_D_I25	: in std_logic := '0';
    W_D_I24	: in std_logic := '0';
    W_D_I23	: in std_logic := '0';
    W_D_I22	: in std_logic := '0';
    W_D_I21	: in std_logic := '0';
    W_D_I20	: in std_logic := '0';
    W_D_I19	: in std_logic := '0';
    W_D_I18	: in std_logic := '0';
    W_D_I17	: in std_logic := '0';
    W_D_I16	: in std_logic := '0';
    W_D_I15	: in std_logic := '0';
    W_D_I14	: in std_logic := '0';
    W_D_I13	: in std_logic := '0';
    W_D_I12	: in std_logic := '0';
    W_D_I11	: in std_logic := '0';
    W_D_I10	: in std_logic := '0';
    W_D_I9	: in std_logic := '0';
    W_D_I8	: in std_logic := '0';
    W_D_I7	: in std_logic := '0';
    W_D_I6	: in std_logic := '0';
    W_D_I5	: in std_logic := '0';
    W_D_I4	: in std_logic := '0';
    W_D_I3	: in std_logic := '0';
    W_D_I2	: in std_logic := '0';
    W_D_I1	: in std_logic := '0';

    W_IDS_I8	: in std_logic := '0';
    W_IDS_I7	: in std_logic := '0';
    W_IDS_I6	: in std_logic := '0';
    W_IDS_I5	: in std_logic := '0';
    W_IDS_I4	: in std_logic := '0';
    W_IDS_I3	: in std_logic := '0';
    W_IDS_I2	: in std_logic := '0';
    W_IDS_I1	: in std_logic := '0';

    W_LST_I	: in std_logic := '0';
    W_RYM_I	: in std_logic := '0';
    W_RYP_I	: in std_logic := '0';

    W_SBS_I8	: in std_logic := '0';
    W_SBS_I7	: in std_logic := '0';
    W_SBS_I6	: in std_logic := '0';
    W_SBS_I5	: in std_logic := '0';
    W_SBS_I4	: in std_logic := '0';
    W_SBS_I3	: in std_logic := '0';
    W_SBS_I2	: in std_logic := '0';
    W_SBS_I1	: in std_logic := '0';

    W_VD_I	: in std_logic := '0';

    -- Outputs
    AR_AM_O32	: out std_logic := '0';
    AR_AM_O31	: out std_logic := '0';
    AR_AM_O30	: out std_logic := '0';
    AR_AM_O29	: out std_logic := '0';
    AR_AM_O28	: out std_logic := '0';
    AR_AM_O27	: out std_logic := '0';
    AR_AM_O26	: out std_logic := '0';
    AR_AM_O25	: out std_logic := '0';
    AR_AM_O24	: out std_logic := '0';
    AR_AM_O23	: out std_logic := '0';
    AR_AM_O22	: out std_logic := '0';
    AR_AM_O21	: out std_logic := '0';
    AR_AM_O20	: out std_logic := '0';
    AR_AM_O19	: out std_logic := '0';
    AR_AM_O18	: out std_logic := '0';
    AR_AM_O17	: out std_logic := '0';
    AR_AM_O16	: out std_logic := '0';
    AR_AM_O15	: out std_logic := '0';
    AR_AM_O14	: out std_logic := '0';
    AR_AM_O13	: out std_logic := '0';
    AR_AM_O12	: out std_logic := '0';
    AR_AM_O11	: out std_logic := '0';
    AR_AM_O10	: out std_logic := '0';
    AR_AM_O9	: out std_logic := '0';
    AR_AM_O8	: out std_logic := '0';
    AR_AM_O7	: out std_logic := '0';
    AR_AM_O6	: out std_logic := '0';
    AR_AM_O5	: out std_logic := '0';
    AR_AM_O4	: out std_logic := '0';
    AR_AM_O3	: out std_logic := '0';
    AR_AM_O2	: out std_logic := '0';
    AR_AM_O1	: out std_logic := '0';

    AR_AP_O32	: out std_logic := '0';
    AR_AP_O31	: out std_logic := '0';
    AR_AP_O30	: out std_logic := '0';
    AR_AP_O29	: out std_logic := '0';
    AR_AP_O28	: out std_logic := '0';
    AR_AP_O27	: out std_logic := '0';
    AR_AP_O26	: out std_logic := '0';
    AR_AP_O25	: out std_logic := '0';
    AR_AP_O24	: out std_logic := '0';
    AR_AP_O23	: out std_logic := '0';
    AR_AP_O22	: out std_logic := '0';
    AR_AP_O21	: out std_logic := '0';
    AR_AP_O20	: out std_logic := '0';
    AR_AP_O19	: out std_logic := '0';
    AR_AP_O18	: out std_logic := '0';
    AR_AP_O17	: out std_logic := '0';
    AR_AP_O16	: out std_logic := '0';
    AR_AP_O15	: out std_logic := '0';
    AR_AP_O14	: out std_logic := '0';
    AR_AP_O13	: out std_logic := '0';
    AR_AP_O12	: out std_logic := '0';
    AR_AP_O11	: out std_logic := '0';
    AR_AP_O10	: out std_logic := '0';
    AR_AP_O9	: out std_logic := '0';
    AR_AP_O8	: out std_logic := '0';
    AR_AP_O7	: out std_logic := '0';
    AR_AP_O6	: out std_logic := '0';
    AR_AP_O5	: out std_logic := '0';
    AR_AP_O4	: out std_logic := '0';
    AR_AP_O3	: out std_logic := '0';
    AR_AP_O2	: out std_logic := '0';
    AR_AP_O1	: out std_logic := '0';

    AR_BUM_O2	: out std_logic := '0';
    AR_BUM_O1	: out std_logic := '0';

    AR_BUP_O2	: out std_logic := '0';
    AR_BUP_O1	: out std_logic := '0';

    AR_CHM_O4	: out std_logic := '0';
    AR_CHM_O3	: out std_logic := '0';
    AR_CHM_O2	: out std_logic := '0';
    AR_CHM_O1	: out std_logic := '0';

    AR_CHP_O4	: out std_logic := '0';
    AR_CHP_O3	: out std_logic := '0';
    AR_CHP_O2	: out std_logic := '0';
    AR_CHP_O1	: out std_logic := '0';

    AR_IDM_O4	: out std_logic := '0';
    AR_IDM_O3	: out std_logic := '0';
    AR_IDM_O2	: out std_logic := '0';
    AR_IDM_O1	: out std_logic := '0';

    AR_IDP_O4	: out std_logic := '0';
    AR_IDP_O3	: out std_logic := '0';
    AR_IDP_O2	: out std_logic := '0';
    AR_IDP_O1	: out std_logic := '0';

    AR_INM_O4	: out std_logic := '0';
    AR_INM_O3	: out std_logic := '0';
    AR_INM_O2	: out std_logic := '0';
    AR_INM_O1	: out std_logic := '0';

    AR_LEM_O4	: out std_logic := '0';
    AR_LEM_O3	: out std_logic := '0';
    AR_LEM_O2	: out std_logic := '0';
    AR_LEM_O1	: out std_logic := '0';

    AR_LEP_O4	: out std_logic := '0';
    AR_LEP_O3	: out std_logic := '0';
    AR_LEP_O2	: out std_logic := '0';
    AR_LEP_O1	: out std_logic := '0';

    AR_LKM_O2	: out std_logic := '0';
    AR_LKM_O1	: out std_logic := '0';

    AR_LKP_O2	: out std_logic := '0';
    AR_LKP_O1	: out std_logic := '0';

    AR_PRM_O3	: out std_logic := '0';
    AR_PRM_O2	: out std_logic := '0';
    AR_PRM_O1	: out std_logic := '0';

    AR_PRP_O3	: out std_logic := '0';
    AR_PRP_O2	: out std_logic := '0';
    AR_PRP_O1	: out std_logic := '0';

    AR_RDY_O	: out std_logic := '0';
    AR_SHM_O	: out std_logic := '0';

    AR_SZM_O3	: out std_logic := '0';
    AR_SZM_O2	: out std_logic := '0';
    AR_SZM_O1	: out std_logic := '0';

    AR_SZP_O3	: out std_logic := '0';
    AR_SZP_O2	: out std_logic := '0';
    AR_SZP_O1	: out std_logic := '0';

    AR_VDM_O	: out std_logic := '0';
    AR_VDP_O	: out std_logic := '0';

    AW_AM_O32	: out std_logic := '0';
    AW_AM_O31	: out std_logic := '0';
    AW_AM_O30	: out std_logic := '0';
    AW_AM_O29	: out std_logic := '0';
    AW_AM_O28	: out std_logic := '0';
    AW_AM_O27	: out std_logic := '0';
    AW_AM_O26	: out std_logic := '0';
    AW_AM_O25	: out std_logic := '0';
    AW_AM_O24	: out std_logic := '0';
    AW_AM_O23	: out std_logic := '0';
    AW_AM_O22	: out std_logic := '0';
    AW_AM_O21	: out std_logic := '0';
    AW_AM_O20	: out std_logic := '0';
    AW_AM_O19	: out std_logic := '0';
    AW_AM_O18	: out std_logic := '0';
    AW_AM_O17	: out std_logic := '0';
    AW_AM_O16	: out std_logic := '0';
    AW_AM_O15	: out std_logic := '0';
    AW_AM_O14	: out std_logic := '0';
    AW_AM_O13	: out std_logic := '0';
    AW_AM_O12	: out std_logic := '0';
    AW_AM_O11	: out std_logic := '0';
    AW_AM_O10	: out std_logic := '0';
    AW_AM_O9	: out std_logic := '0';
    AW_AM_O8	: out std_logic := '0';
    AW_AM_O7	: out std_logic := '0';
    AW_AM_O6	: out std_logic := '0';
    AW_AM_O5	: out std_logic := '0';
    AW_AM_O4	: out std_logic := '0';
    AW_AM_O3	: out std_logic := '0';
    AW_AM_O2	: out std_logic := '0';
    AW_AM_O1	: out std_logic := '0';

    AW_AP_O32	: out std_logic := '0';
    AW_AP_O31	: out std_logic := '0';
    AW_AP_O30	: out std_logic := '0';
    AW_AP_O29	: out std_logic := '0';
    AW_AP_O28	: out std_logic := '0';
    AW_AP_O27	: out std_logic := '0';
    AW_AP_O26	: out std_logic := '0';
    AW_AP_O25	: out std_logic := '0';
    AW_AP_O24	: out std_logic := '0';
    AW_AP_O23	: out std_logic := '0';
    AW_AP_O22	: out std_logic := '0';
    AW_AP_O21	: out std_logic := '0';
    AW_AP_O20	: out std_logic := '0';
    AW_AP_O19	: out std_logic := '0';
    AW_AP_O18	: out std_logic := '0';
    AW_AP_O17	: out std_logic := '0';
    AW_AP_O16	: out std_logic := '0';
    AW_AP_O15	: out std_logic := '0';
    AW_AP_O14	: out std_logic := '0';
    AW_AP_O13	: out std_logic := '0';
    AW_AP_O12	: out std_logic := '0';
    AW_AP_O11	: out std_logic := '0';
    AW_AP_O10	: out std_logic := '0';
    AW_AP_O9	: out std_logic := '0';
    AW_AP_O8	: out std_logic := '0';
    AW_AP_O7	: out std_logic := '0';
    AW_AP_O6	: out std_logic := '0';
    AW_AP_O5	: out std_logic := '0';
    AW_AP_O4	: out std_logic := '0';
    AW_AP_O3	: out std_logic := '0';
    AW_AP_O2	: out std_logic := '0';
    AW_AP_O1	: out std_logic := '0';

    AW_BUM_O2	: out std_logic := '0';
    AW_BUM_O1	: out std_logic := '0';

    AW_BUP_O2	: out std_logic := '0';
    AW_BUP_O1	: out std_logic := '0';

    AW_CHM_O4	: out std_logic := '0';
    AW_CHM_O3	: out std_logic := '0';
    AW_CHM_O2	: out std_logic := '0';
    AW_CHM_O1	: out std_logic := '0';

    AW_CHP_O4	: out std_logic := '0';
    AW_CHP_O3	: out std_logic := '0';
    AW_CHP_O2	: out std_logic := '0';
    AW_CHP_O1	: out std_logic := '0';

    AW_IDM_O4	: out std_logic := '0';
    AW_IDM_O3	: out std_logic := '0';
    AW_IDM_O2	: out std_logic := '0';
    AW_IDM_O1	: out std_logic := '0';

    AW_IDP_O4	: out std_logic := '0';
    AW_IDP_O3	: out std_logic := '0';
    AW_IDP_O2	: out std_logic := '0';
    AW_IDP_O1	: out std_logic := '0';

    AW_INM_O4	: out std_logic := '0';
    AW_INM_O3	: out std_logic := '0';
    AW_INM_O2	: out std_logic := '0';
    AW_INM_O1	: out std_logic := '0';

    AW_LEM_O4	: out std_logic := '0';
    AW_LEM_O3	: out std_logic := '0';
    AW_LEM_O2	: out std_logic := '0';
    AW_LEM_O1	: out std_logic := '0';

    AW_LEP_O4	: out std_logic := '0';
    AW_LEP_O3	: out std_logic := '0';
    AW_LEP_O2	: out std_logic := '0';
    AW_LEP_O1	: out std_logic := '0';

    AW_LKM_O2	: out std_logic := '0';
    AW_LKM_O1	: out std_logic := '0';

    AW_LKP_O2	: out std_logic := '0';
    AW_LKP_O1	: out std_logic := '0';

    AW_PRM_O3	: out std_logic := '0';
    AW_PRM_O2	: out std_logic := '0';
    AW_PRM_O1	: out std_logic := '0';

    AW_PRP_O3	: out std_logic := '0';
    AW_PRP_O2	: out std_logic := '0';
    AW_PRP_O1	: out std_logic := '0';

    AW_RDY_O	: out std_logic := '0';
    AW_SHM_O	: out std_logic := '0';

    AW_SZM_O3	: out std_logic := '0';
    AW_SZM_O2	: out std_logic := '0';
    AW_SZM_O1	: out std_logic := '0';

    AW_SZP_O3	: out std_logic := '0';
    AW_SZP_O2	: out std_logic := '0';
    AW_SZP_O1	: out std_logic := '0';

    AW_VDM_O	: out std_logic := '0';
    AW_VDP_O	: out std_logic := '0';

    B_IDS_O8	: out std_logic := '0';
    B_IDS_O7	: out std_logic := '0';
    B_IDS_O6	: out std_logic := '0';
    B_IDS_O5	: out std_logic := '0';
    B_IDS_O4	: out std_logic := '0';
    B_IDS_O3	: out std_logic := '0';
    B_IDS_O2	: out std_logic := '0';
    B_IDS_O1	: out std_logic := '0';

    B_RDYM_O	: out std_logic := '0';
    B_RDYP_O	: out std_logic := '0';

    B_RSP_O2	: out std_logic := '0';
    B_RSP_O1	: out std_logic := '0';

    B_VD_O	: out std_logic := '0';

--    CAL_O5        : out std_logic; --  calibration         5   [0:4]
--    CAL_O4        : out std_logic; --  calibration         5   [0:4]
--    CAL_O3        : out std_logic; --  calibration         5   [0:4]
--    CAL_O2        : out std_logic; --  calibration         5   [0:4]
--    CAL_O1        : out std_logic; --  calibration         5   [0:4]

    CDB_PW_O	: out std_logic := '0';
    CDB_RS_O	: out std_logic := '0';
--    CK_DR_O       : out std_logic; --  clock_dr            1
    COM_RX_O	: out std_logic := '0';
    COM_TX_O	: out std_logic := '0';
    CS_PW_O	: out std_logic := '0';
    DB_ACK_O	: out std_logic := '0';
    DB_NPD_O	: out std_logic := '0';
    DB_RS_O	: out std_logic := '0';

    DFTS_O8	: out std_logic := '0';
    DFTS_O7	: out std_logic := '0';
    DFTS_O6	: out std_logic := '0';
    DFTS_O5	: out std_logic := '0';
    DFTS_O4	: out std_logic := '0';
    DFTS_O3	: out std_logic := '0';
    DFTS_O2	: out std_logic := '0';
    DFTS_O1	: out std_logic := '0';

    ET_ASC_O8	: out std_logic := '0';
    ET_ASC_O7	: out std_logic := '0';
    ET_ASC_O6	: out std_logic := '0';
    ET_ASC_O5	: out std_logic := '0';
    ET_ASC_O4	: out std_logic := '0';
    ET_ASC_O3	: out std_logic := '0';
    ET_ASC_O2	: out std_logic := '0';
    ET_ASC_O1	: out std_logic := '0';

    ET_E_O	: out std_logic := '0';

    ET_EXT_O2	: out std_logic := '0';
    ET_EXT_O1	: out std_logic := '0';

    EVENT_O	: out std_logic := '0';
    FP_DZC_O	: out std_logic := '0';
    FP_IDC_O	: out std_logic := '0';
    FP_IOC_O	: out std_logic := '0';
    FP_IXC_O	: out std_logic := '0';
    FP_OFC_O	: out std_logic := '0';
    FP_UFC_O	: out std_logic := '0';
    JTAG_O	: out std_logic := '0';
--    LBK_E_O       : out std_logic; --  loopback_en         1
--    LBK_MX_O      : out std_logic; --  loopback_mux        1

--    MODE1_O2      : out std_logic; --  mode1               3   [0:2]
--    MODE1_O1      : out std_logic; --  mode1               3   [0:2]

--    MODE2_O2      : out std_logic; --  mode2               3   [0:2]
--    MODE2_O1      : out std_logic; --  mode2               3   [0:2]

--    MODE3_O2      : out std_logic; --  mode3               3   [0:2]
--    MODE3_O1      : out std_logic; --  mode3               3   [0:2]

    N_CKST_O	: out std_logic := '0';
    N_PMU_O	: out std_logic := '0';
    N_TDO_O	: out std_logic := '0';
    N_VFIQ_O	: out std_logic := '0';
    N_VIRQ_O	: out std_logic := '0';
    N_VRST_O	: out std_logic := '0';
    N_EPST_O	: out std_logic := '0';
    N_IPST_O	: out std_logic := '0';

    P_RD_O32	: out std_logic := '0';
    P_RD_O31	: out std_logic := '0';
    P_RD_O30	: out std_logic := '0';
    P_RD_O29	: out std_logic := '0';
    P_RD_O28	: out std_logic := '0';
    P_RD_O27	: out std_logic := '0';
    P_RD_O26	: out std_logic := '0';
    P_RD_O25	: out std_logic := '0';
    P_RD_O24	: out std_logic := '0';
    P_RD_O23	: out std_logic := '0';
    P_RD_O22	: out std_logic := '0';
    P_RD_O21	: out std_logic := '0';
    P_RD_O20	: out std_logic := '0';
    P_RD_O19	: out std_logic := '0';
    P_RD_O18	: out std_logic := '0';
    P_RD_O17	: out std_logic := '0';
    P_RD_O16	: out std_logic := '0';
    P_RD_O15	: out std_logic := '0';
    P_RD_O14	: out std_logic := '0';
    P_RD_O13	: out std_logic := '0';
    P_RD_O12	: out std_logic := '0';
    P_RD_O11	: out std_logic := '0';
    P_RD_O10	: out std_logic := '0';
    P_RD_O9	: out std_logic := '0';
    P_RD_O8	: out std_logic := '0';
    P_RD_O7	: out std_logic := '0';
    P_RD_O6	: out std_logic := '0';
    P_RD_O5	: out std_logic := '0';
    P_RD_O4	: out std_logic := '0';
    P_RD_O3	: out std_logic := '0';
    P_RD_O2	: out std_logic := '0';
    P_RD_O1	: out std_logic := '0';

    P_RDY_O	: out std_logic := '0';
    P_VER_O	: out std_logic := '0';

    RD_O64	: out std_logic := '0';
    RD_O63	: out std_logic := '0';
    RD_O62	: out std_logic := '0';
    RD_O61	: out std_logic := '0';
    RD_O60	: out std_logic := '0';
    RD_O59	: out std_logic := '0';
    RD_O58	: out std_logic := '0';
    RD_O57	: out std_logic := '0';
    RD_O56	: out std_logic := '0';
    RD_O55	: out std_logic := '0';
    RD_O54	: out std_logic := '0';
    RD_O53	: out std_logic := '0';
    RD_O52	: out std_logic := '0';
    RD_O51	: out std_logic := '0';
    RD_O50	: out std_logic := '0';
    RD_O49	: out std_logic := '0';
    RD_O48	: out std_logic := '0';
    RD_O47	: out std_logic := '0';
    RD_O46	: out std_logic := '0';
    RD_O45	: out std_logic := '0';
    RD_O44	: out std_logic := '0';
    RD_O43	: out std_logic := '0';
    RD_O42	: out std_logic := '0';
    RD_O41	: out std_logic := '0';
    RD_O40	: out std_logic := '0';
    RD_O39	: out std_logic := '0';
    RD_O38	: out std_logic := '0';
    RD_O37	: out std_logic := '0';
    RD_O36	: out std_logic := '0';
    RD_O35	: out std_logic := '0';
    RD_O34	: out std_logic := '0';
    RD_O33	: out std_logic := '0';
    RD_O32	: out std_logic := '0';
    RD_O31	: out std_logic := '0';
    RD_O30	: out std_logic := '0';
    RD_O29	: out std_logic := '0';
    RD_O28	: out std_logic := '0';
    RD_O27	: out std_logic := '0';
    RD_O26	: out std_logic := '0';
    RD_O25	: out std_logic := '0';
    RD_O24	: out std_logic := '0';
    RD_O23	: out std_logic := '0';
    RD_O22	: out std_logic := '0';
    RD_O21	: out std_logic := '0';
    RD_O20	: out std_logic := '0';
    RD_O19	: out std_logic := '0';
    RD_O18	: out std_logic := '0';
    RD_O17	: out std_logic := '0';
    RD_O16	: out std_logic := '0';
    RD_O15	: out std_logic := '0';
    RD_O14	: out std_logic := '0';
    RD_O13	: out std_logic := '0';
    RD_O12	: out std_logic := '0';
    RD_O11	: out std_logic := '0';
    RD_O10	: out std_logic := '0';
    RD_O9	: out std_logic := '0';
    RD_O8	: out std_logic := '0';
    RD_O7	: out std_logic := '0';
    RD_O6	: out std_logic := '0';
    RD_O5	: out std_logic := '0';
    RD_O4	: out std_logic := '0';
    RD_O3	: out std_logic := '0';
    RD_O2	: out std_logic := '0';
    RD_O1	: out std_logic := '0';

--    RDY_O3        : out std_logic; --  ready               3   [0:2]
--    RDY_O2        : out std_logic; --  ready               3   [0:2]
--    RDY_O1        : out std_logic; --  ready               3   [0:2]

    R_IDS_O8	: out std_logic := '0';
    R_IDS_O7	: out std_logic := '0';
    R_IDS_O6	: out std_logic := '0';
    R_IDS_O5	: out std_logic := '0';
    R_IDS_O4	: out std_logic := '0';
    R_IDS_O3	: out std_logic := '0';
    R_IDS_O2	: out std_logic := '0';
    R_IDS_O1	: out std_logic := '0';

    R_LST_O	: out std_logic := '0';
    R_RDYM_O	: out std_logic := '0';
    R_RDYP_O	: out std_logic := '0';

    R_RSP_O2	: out std_logic := '0';
    R_RSP_O1	: out std_logic := '0';

    R_VD_O	: out std_logic := '0';
--    SCAN_E_O      : out std_logic; --  scan_en             1
--    SHF_DR_O      : out std_logic; --  shift_dr            1
--    SHOUT_O       : out std_logic; --  shout               1
    SWDO_O	: out std_logic := '0';
    SWDO_E_O	: out std_logic := '0';
    TDO_O	: out std_logic := '0';
--    TEST_E_O      : out std_logic; --  test_en             1
    T_CK_O	: out std_logic := '0';
    T_CTL_O	: out std_logic := '0';

    T_DATA_O32	: out std_logic := '0';
    T_DATA_O31	: out std_logic := '0';
    T_DATA_O30	: out std_logic := '0';
    T_DATA_O29	: out std_logic := '0';
    T_DATA_O28	: out std_logic := '0';
    T_DATA_O27	: out std_logic := '0';
    T_DATA_O26	: out std_logic := '0';
    T_DATA_O25	: out std_logic := '0';
    T_DATA_O24	: out std_logic := '0';
    T_DATA_O23	: out std_logic := '0';
    T_DATA_O22	: out std_logic := '0';
    T_DATA_O21	: out std_logic := '0';
    T_DATA_O20	: out std_logic := '0';
    T_DATA_O19	: out std_logic := '0';
    T_DATA_O18	: out std_logic := '0';
    T_DATA_O17	: out std_logic := '0';
    T_DATA_O16	: out std_logic := '0';
    T_DATA_O15	: out std_logic := '0';
    T_DATA_O14	: out std_logic := '0';
    T_DATA_O13	: out std_logic := '0';
    T_DATA_O12	: out std_logic := '0';
    T_DATA_O11	: out std_logic := '0';
    T_DATA_O10	: out std_logic := '0';
    T_DATA_O9	: out std_logic := '0';
    T_DATA_O8	: out std_logic := '0';
    T_DATA_O7	: out std_logic := '0';
    T_DATA_O6	: out std_logic := '0';
    T_DATA_O5	: out std_logic := '0';
    T_DATA_O4	: out std_logic := '0';
    T_DATA_O3	: out std_logic := '0';
    T_DATA_O2	: out std_logic := '0';
    T_DATA_O1	: out std_logic := '0';

--    UPD_DR_O      : out std_logic; --  update_dr           1

    W_DM_O64	: out std_logic := '0';
    W_DM_O63	: out std_logic := '0';
    W_DM_O62	: out std_logic := '0';
    W_DM_O61	: out std_logic := '0';
    W_DM_O60	: out std_logic := '0';
    W_DM_O59	: out std_logic := '0';
    W_DM_O58	: out std_logic := '0';
    W_DM_O57	: out std_logic := '0';
    W_DM_O56	: out std_logic := '0';
    W_DM_O55	: out std_logic := '0';
    W_DM_O54	: out std_logic := '0';
    W_DM_O53	: out std_logic := '0';
    W_DM_O52	: out std_logic := '0';
    W_DM_O51	: out std_logic := '0';
    W_DM_O50	: out std_logic := '0';
    W_DM_O49	: out std_logic := '0';
    W_DM_O48	: out std_logic := '0';
    W_DM_O47	: out std_logic := '0';
    W_DM_O46	: out std_logic := '0';
    W_DM_O45	: out std_logic := '0';
    W_DM_O44	: out std_logic := '0';
    W_DM_O43	: out std_logic := '0';
    W_DM_O42	: out std_logic := '0';
    W_DM_O41	: out std_logic := '0';
    W_DM_O40	: out std_logic := '0';
    W_DM_O39	: out std_logic := '0';
    W_DM_O38	: out std_logic := '0';
    W_DM_O37	: out std_logic := '0';
    W_DM_O36	: out std_logic := '0';
    W_DM_O35	: out std_logic := '0';
    W_DM_O34	: out std_logic := '0';
    W_DM_O33	: out std_logic := '0';
    W_DM_O32	: out std_logic := '0';
    W_DM_O31	: out std_logic := '0';
    W_DM_O30	: out std_logic := '0';
    W_DM_O29	: out std_logic := '0';
    W_DM_O28	: out std_logic := '0';
    W_DM_O27	: out std_logic := '0';
    W_DM_O26	: out std_logic := '0';
    W_DM_O25	: out std_logic := '0';
    W_DM_O24	: out std_logic := '0';
    W_DM_O23	: out std_logic := '0';
    W_DM_O22	: out std_logic := '0';
    W_DM_O21	: out std_logic := '0';
    W_DM_O20	: out std_logic := '0';
    W_DM_O19	: out std_logic := '0';
    W_DM_O18	: out std_logic := '0';
    W_DM_O17	: out std_logic := '0';
    W_DM_O16	: out std_logic := '0';
    W_DM_O15	: out std_logic := '0';
    W_DM_O14	: out std_logic := '0';
    W_DM_O13	: out std_logic := '0';
    W_DM_O12	: out std_logic := '0';
    W_DM_O11	: out std_logic := '0';
    W_DM_O10	: out std_logic := '0';
    W_DM_O9	: out std_logic := '0';
    W_DM_O8	: out std_logic := '0';
    W_DM_O7	: out std_logic := '0';
    W_DM_O6	: out std_logic := '0';
    W_DM_O5	: out std_logic := '0';
    W_DM_O4	: out std_logic := '0';
    W_DM_O3	: out std_logic := '0';
    W_DM_O2	: out std_logic := '0';
    W_DM_O1	: out std_logic := '0';

    W_DP_O32	: out std_logic := '0';
    W_DP_O31	: out std_logic := '0';
    W_DP_O30	: out std_logic := '0';
    W_DP_O29	: out std_logic := '0';
    W_DP_O28	: out std_logic := '0';
    W_DP_O27	: out std_logic := '0';
    W_DP_O26	: out std_logic := '0';
    W_DP_O25	: out std_logic := '0';
    W_DP_O24	: out std_logic := '0';
    W_DP_O23	: out std_logic := '0';
    W_DP_O22	: out std_logic := '0';
    W_DP_O21	: out std_logic := '0';
    W_DP_O20	: out std_logic := '0';
    W_DP_O19	: out std_logic := '0';
    W_DP_O18	: out std_logic := '0';
    W_DP_O17	: out std_logic := '0';
    W_DP_O16	: out std_logic := '0';
    W_DP_O15	: out std_logic := '0';
    W_DP_O14	: out std_logic := '0';
    W_DP_O13	: out std_logic := '0';
    W_DP_O12	: out std_logic := '0';
    W_DP_O11	: out std_logic := '0';
    W_DP_O10	: out std_logic := '0';
    W_DP_O9	: out std_logic := '0';
    W_DP_O8	: out std_logic := '0';
    W_DP_O7	: out std_logic := '0';
    W_DP_O6	: out std_logic := '0';
    W_DP_O5	: out std_logic := '0';
    W_DP_O4	: out std_logic := '0';
    W_DP_O3	: out std_logic := '0';
    W_DP_O2	: out std_logic := '0';
    W_DP_O1	: out std_logic := '0';

    W_IDM_O4	: out std_logic := '0';
    W_IDM_O3	: out std_logic := '0';
    W_IDM_O2	: out std_logic := '0';
    W_IDM_O1	: out std_logic := '0';

    W_IDP_O4	: out std_logic := '0';
    W_IDP_O3	: out std_logic := '0';
    W_IDP_O2	: out std_logic := '0';
    W_IDP_O1	: out std_logic := '0';

    W_LSTM_O	: out std_logic := '0';
    W_LSTP_O	: out std_logic := '0';
    W_RDY_O	: out std_logic := '0';

    W_SBM_O8	: out std_logic := '0';
    W_SBM_O7	: out std_logic := '0';
    W_SBM_O6	: out std_logic := '0';
    W_SBM_O5	: out std_logic := '0';
    W_SBM_O4	: out std_logic := '0';
    W_SBM_O3	: out std_logic := '0';
    W_SBM_O2	: out std_logic := '0';
    W_SBM_O1	: out std_logic := '0';

    W_SBP_O4	: out std_logic := '0';
    W_SBP_O3	: out std_logic := '0';
    W_SBP_O2	: out std_logic := '0';
    W_SBP_O1	: out std_logic := '0';

    W_VDM_O	: out std_logic := '0';
    W_VDP_O	: out std_logic := '0'
);
end component NX_R5_L;

component NX_R5_L_WRAP is
port (
            ------------------------------------------------------------------------
            -- CORTEXR5 PRIMARY INPUTS AND OUTPUTS
            ------------------------------------------------------------------------  
            ------------------------------------------------------------------------
            -- Global
            ------------------------------------------------------------------------
    CLKIN	: in std_logic := '0';
    nRESET0	: in std_logic := '0';
    nSYSPORESET	: in std_logic := '0';
    nCPUHALT0	: in std_logic := '0';
    DBGNOCLKSTOP	: in std_logic := '0';
    nCLKSTOPPED0	: out std_logic := '0';
    nWFEPIPESTOPPED0	: out std_logic := '0';
    nWFIPIPESTOPPED0	: out std_logic := '0';
    EVENTI0	: in std_logic := '0';
    EVENTO0	: out std_logic := '0';
            ------------------------------------------------------------------------
            -- Configuration signals
            ------------------------------------------------------------------------
    VINITHI0	: in std_logic := '0';
    CFGEE	: in std_logic := '0';
    CFGIE	: in std_logic := '0';
    INITRAMA0	: in std_logic := '0';
    LOCZRAMA0	: in std_logic := '0';
    TEINIT	: in std_logic := '0';
    CFGNMFI0	: in std_logic := '0';
    PARECCENRAM0	: in std_logic := '0';
    PARITYLEVEL	: in std_logic := '0';
    ERRENRAM0	: in std_logic := '0';
    GROUPID	: in std_logic_vector(3 downto 0) := (others => '0');
    INITPPX0	: in std_logic := '0';
    PPXBASE0	: in std_logic_vector(19 downto 0) := (others => '0');
    PPXSIZE0	: in std_logic_vector(4 downto 0) := (others => '0');
    PPVBASE0	: in std_logic_vector(19 downto 0) := (others => '0');
    PPVSIZE0	: in std_logic_vector(4 downto 0) := (others => '0');
            ------------------------------------------------------------------------
            -- Interrupt signals
            ------------------------------------------------------------------------
    nFIQ0	: in std_logic := '0';
    nIRQ0	: in std_logic := '0';
    nPMUIRQ0	: out std_logic := '0';
            ------------------------------------------------------------------------
            -- L2 interface signals - AXI Master Port
            ------------------------------------------------------------------------
    ACLKENM0	: in std_logic := '0';
            -- Write Address Channel
    AWADDRM0	: out std_logic_vector(31 downto 0) := (others => '0');
    AWBURSTM0	: out std_logic_vector(1 downto 0) := (others => '0');
    AWCACHEM0	: out std_logic_vector(3 downto 0) := (others => '0');
    AWIDM0	: out std_logic_vector(3 downto 0) := (others => '0');
    AWLENM0	: out std_logic_vector(3 downto 0) := (others => '0');
    AWLOCKM0	: out std_logic_vector(1 downto 0) := (others => '0');
    AWPROTM0	: out std_logic_vector(2 downto 0) := (others => '0');
    AWREADYM0	: in std_logic := '0';
    AWSIZEM0	: out std_logic_vector(2 downto 0) := (others => '0');
    AWINNERM0	: out std_logic_vector(3 downto 0) := (others => '0');
    AWSHAREM0	: out std_logic := '0';
    AWVALIDM0	: out std_logic := '0';
            -- Write Data Channel
    WDATAM0	: out std_logic_vector(63 downto 0) := (others => '0');
    WIDM0	: out std_logic_vector(3 downto 0) := (others => '0');
    WLASTM0	: out std_logic := '0';
    WREADYM0	: in std_logic := '0';
    WSTRBM0	: out std_logic_vector(7 downto 0) := (others => '0');
    WVALIDM0	: out std_logic := '0';
            -- Write response channel
    BIDM0	: in std_logic_vector(3 downto 0) := (others => '0');
    BREADYM0	: out std_logic := '0';
    BRESPM0	: in std_logic_vector(1 downto 0) := (others => '0');
    BVALIDM0	: in std_logic := '0';
            -- Read Address Channel
    ARADDRM0	: out std_logic_vector(31 downto 0) := (others => '0');
    ARBURSTM0	: out std_logic_vector(1 downto 0) := (others => '0');
    ARCACHEM0	: out std_logic_vector(3 downto 0) := (others => '0');
    ARIDM0	: out std_logic_vector(3 downto 0) := (others => '0');
    ARLENM0	: out std_logic_vector(3 downto 0) := (others => '0');
    ARLOCKM0	: out std_logic_vector(1 downto 0) := (others => '0');
    ARPROTM0	: out std_logic_vector(2 downto 0) := (others => '0');
    ARREADYM0	: in std_logic := '0';
    ARSIZEM0	: out std_logic_vector(2 downto 0) := (others => '0');
    ARINNERM0	: out std_logic_vector(3 downto 0) := (others => '0');
    ARSHAREM0	: out std_logic := '0';
    ARVALIDM0	: out std_logic := '0';
            -- Read Data Channel
    RDATAM0	: in std_logic_vector(63 downto 0) := (others => '0');
    RIDM0	: in std_logic_vector(3 downto 0) := (others => '0');
    RLASTM0	: in std_logic := '0';
    RREADYM0	: out std_logic := '0';
    RRESPM0	: in std_logic_vector(1 downto 0) := (others => '0');
    RVALIDM0	: in std_logic := '0';
            ------------------------------------------------------------------------
            -- L2 interface signals - AXI Slave Port
            ------------------------------------------------------------------------
    ACLKENS0	: in std_logic := '0';
            -- Write Address Channel
    AWADDRS0	: in std_logic_vector(31 downto 0) := (others => '0');
    AWBURSTS0	: in std_logic_vector(1 downto 0) := (others => '0');
    AWCACHES0	: in std_logic_vector(3 downto 0) := (others => '0');

    AWIDS0	: in std_logic_vector(7 downto 0) := (others => '0');
    AWLENS0	: in std_logic_vector(3 downto 0) := (others => '0');
    AWLOCKS0	: in std_logic_vector(1 downto 0) := (others => '0');
    AWPROTS0	: in std_logic_vector(2 downto 0) := (others => '0');
    AWREADYS0	: out std_logic := '0';
    AWSIZES0	: in std_logic_vector(2 downto 0) := (others => '0');
    AWVALIDS0	: in std_logic := '0';
            -- Write Data Channel
    WDATAS0	: in std_logic_vector(63 downto 0) := (others => '0');
    WIDS0	: in std_logic_vector(7 downto 0) := (others => '0');
    WLASTS0	: in std_logic := '0';
    WREADYS0	: out std_logic := '0';
    WSTRBS0	: in std_logic_vector(7 downto 0) := (others => '0');
    WVALIDS0	: in std_logic := '0';
            -- Write response channel
    BIDS0	: out std_logic_vector(7 downto 0) := (others => '0');
    BREADYS0	: in std_logic := '0';
    BRESPS0	: out std_logic_vector(1 downto 0) := (others => '0');
    BVALIDS0	: out std_logic := '0';
            -- Read Address Channel
    ARADDRS0	: in std_logic_vector(31 downto 0) := (others => '0');
    ARBURSTS0	: in std_logic_vector(1 downto 0) := (others => '0');
    ARCACHES0	: in std_logic_vector(3 downto 0) := (others => '0');
    ARIDS0	: in std_logic_vector(7 downto 0) := (others => '0');
    ARLENS0	: in std_logic_vector(3 downto 0) := (others => '0');
    ARLOCKS0	: in std_logic_vector(1 downto 0) := (others => '0');
    ARPROTS0	: in std_logic_vector(2 downto 0) := (others => '0');
    ARREADYS0	: out std_logic := '0';
    ARSIZES0	: in std_logic_vector(2 downto 0) := (others => '0');

    ARVALIDS0	: in std_logic := '0';
            -- Read Data Channel
    RDATAS0	: out std_logic_vector(63 downto 0) := (others => '0');
    RIDS0	: out std_logic_vector(7 downto 0) := (others => '0');
    RLASTS0	: out std_logic := '0';
    RREADYS0	: in std_logic := '0';
    RRESPS0	: out std_logic_vector(1 downto 0) := (others => '0');
    RVALIDS0	: out std_logic := '0';
            ------------------------------------------------------------------------
            -- L2 interface signals - AXI Peripheral Port
            ------------------------------------------------------------------------
    ACLKENP0	: in std_logic := '0';
            -- Write Address Channel
    AWIDP0	: out std_logic_vector(3 downto 0) := (others => '0');
    AWADDRP0	: out std_logic_vector(31 downto 0) := (others => '0');
    AWLENP0	: out std_logic_vector(3 downto 0) := (others => '0');
    AWSIZEP0	: out std_logic_vector(2 downto 0) := (others => '0');
    AWBURSTP0	: out std_logic_vector(1 downto 0) := (others => '0');
    AWLOCKP0	: out std_logic_vector(1 downto 0) := (others => '0');
    AWCACHEP0	: out std_logic_vector(3 downto 0) := (others => '0');
    AWPROTP0	: out std_logic_vector(2 downto 0) := (others => '0');
    AWVALIDP0	: out std_logic := '0';
    AWREADYP0	: in std_logic := '0';
            -- Write Data Channel
    WIDP0	: out std_logic_vector(3 downto 0) := (others => '0');
    WDATAP0	: out std_logic_vector(31 downto 0) := (others => '0');
    WSTRBP0	: out std_logic_vector(3 downto 0) := (others => '0');
    WLASTP0	: out std_logic := '0';
    WVALIDP0	: out std_logic := '0';
    WREADYP0	: in std_logic := '0';
            -- Write response channel
    BIDP0	: in std_logic_vector(3 downto 0) := (others => '0');
    BRESPP0	: in std_logic_vector(1 downto 0) := (others => '0');
    BVALIDP0	: in std_logic := '0';
    BREADYP0	: out std_logic := '0';
            -- Read Address Channel
            ARIDP0       : out std_logic_vector (3 downto 0);          
            ARADDRP0     : out std_logic_vector (31 downto 0);          
            ARLENP0      : out std_logic_vector (3 downto 0);          
            ARSIZEP0     : out std_logic_vector (2 downto 0);          
            ARBURSTP0    : out std_logic_vector (1 downto 0);          
            ARLOCKP0     : out std_logic_vector (1 downto 0);          
            ARCACHEP0    : out std_logic_vector (3 downto 0);          
            ARPROTP0     : out std_logic_vector (2 downto 0);          
    ARVALIDP0	: out std_logic := '0';
    ARREADYP0	: in std_logic := '0';
            -- Reainata Channel
    RIDP0	: in std_logic_vector(3 downto 0) := (others => '0');
    RDATAP0	: in std_logic_vector(31 downto 0) := (others => '0');
    RRESPP0	: in std_logic_vector(1 downto 0) := (others => '0');
    RLASTP0	: in std_logic := '0';
    RVALIDP0	: in std_logic := '0';
    RREADYP0	: out std_logic := '0';
       
            -- Debug Miscellaneous
    DBGEN0	: in std_logic := '0';
    NIDEN0	: in std_logic := '0';
    EDBGRQ0	: in std_logic := '0';
    DBGACK0	: out std_logic := '0';
    DBGRSTREQ0	: out std_logic := '0';

    COMMRX0	: out std_logic := '0';
    COMMTX0	: out std_logic := '0';

    DBGNOPWRDWN	: out std_logic := '0';
    DBGROMADDR	: in std_logic_vector(19 downto 0) := (others => '0');
    DBGROMADDRV	: in std_logic := '0';
    DBGSELFADDR0	: in std_logic_vector(19 downto 0) := (others => '0');
    DBGSELFADDRV0	: in std_logic := '0';
            ------------------------------------------------------------------------
            -- ETM Interface
            ------------------------------------------------------------------------
    nETMPORESET	: in std_logic := '0';
    ETMASICCTL0	: out std_logic_vector(7 downto 0) := (others => '0');
    ETMEN0	: out std_logic := '0';
    ETMEXTOUT0	: out std_logic_vector(1 downto 0) := (others => '0');
            ------------------------------------------------------------------------
            -- Validation
            ------------------------------------------------------------------------
    nVALIRQ0	: out std_logic := '0';
    nVALFIQ0	: out std_logic := '0';
    nVALRESET0	: out std_logic := '0';
       
            ------------------------------------------------------------------------
            -- FPU
            ------------------------------------------------------------------------
    FPIXC0	: out std_logic := '0';
    FPOFC0	: out std_logic := '0';
    FPUFC0	: out std_logic := '0';
    FPIOC0	: out std_logic := '0';
    FPDZC0	: out std_logic := '0';
    FPIDC0	: out std_logic := '0';
            ------------------------------------------------------------------------
            -- Coresight TPIU-Lite
            ------------------------------------------------------------------------
            ------------------------------------------------------------------------
            -- ATB Port
            ------------------------------------------------------------------------
    ATRESETn	: in std_logic := '0';
            ------------------------------------------------------------------------
            -- Trace Out Port
            ------------------------------------------------------------------------
    TRACECLK	: out std_logic := '0';
    TRACEDATA	: out std_logic_vector(31 downto 0) := (others => '0');
    TRACECTL	: out std_logic := '0';
            ------------------------------------------------------------------------
            -- Coresight DAP-Lite
            ------------------------------------------------------------------------
            ------------------------------------------------------------------------
            -- CoreSight DAP Ports
            ------------------------------------------------------------------------    
    PCLKSYS	: in std_logic := '0';
    PCLKENSYS	: in std_logic := '0';
    PRESETSYSn	: in std_logic := '0';
    PADDRSYS	: in std_logic_vector(28 downto 0) := (others => '0');
    PENABLESYS	: in std_logic := '0';
    PRDATASYS	: out std_logic_vector(31 downto 0) := (others => '0');
    PREADYSYS	: out std_logic := '0';
    PSELSYS	: in std_logic := '0';
    PSLVERRSYS	: out std_logic := '0';
    PWDATASYS	: in std_logic_vector(31 downto 0) := (others => '0');
    PWRITESYS	: in std_logic := '0';
       
    CDBGPWRUPACK	: in std_logic := '0';
    CDBGPWRUPREQ	: out std_logic := '0';
    CDBGRSTACK	: in std_logic := '0';
    CDBGRSTREQ	: out std_logic := '0';
    CSYSPWRUPACK	: in std_logic := '0';
    CSYSPWRUPREQ	: out std_logic := '0';
    DEVICEEN	: in std_logic := '0';
    JTAGNSW	: out std_logic := '0';
    nPOTRST	: in std_logic := '0';
    nTDOEN	: out std_logic := '0';
    nTRST	: in std_logic := '0';
    SWCLKTCK	: in std_logic := '0';
    SWDITMS	: in std_logic := '0';
    SWDO	: out std_logic := '0';
    SWDOEN	: out std_logic := '0';
    TDI	: in std_logic := '0';
    TDO	: out std_logic := '0'

);
end component NX_R5_L_WRAP;

component NX_HSSL_FULL_L is
generic (
   cfg_main_i : bit_vector( 33 downto 0) := (others => '0');
   cfg_tx0_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx0_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx1_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx1_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx2_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx2_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx3_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx3_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx4_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx4_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx5_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx5_i  : bit_vector(159 downto 0) := (others => '0');
   location   : string := ""
 );
port (
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ MAIN ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- Fabric Interface
    hssl_clk_user_i	: in std_logic := '0';
    hssl_clk_ref_i	: in std_logic := '0';
    hssl_clock_o	: out std_logic := '0';
    usr_com_tx_pma_pre_sign_i	: in std_logic := '0';
    usr_com_tx_pma_pre_en_i	: in std_logic := '0';
    usr_com_tx_pma_pre_input_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_tx_pma_main_sign_i	: in std_logic := '0';
    usr_com_rx_pma_m_eye_i	: in std_logic := '0';
    usr_com_tx_pma_main_en_i	: in std_logic_vector(5 downto 0) := (others => '0');
    usr_com_tx_pma_margin_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_tx_pma_margin_input_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_tx_pma_margin_sel_var_i	: in std_logic_vector(4 downto 0) := (others => '0');
    usr_com_tx_pma_margin_input_sel_var_i	: in std_logic_vector(4 downto 0) := (others => '0');
    usr_com_tx_pma_post_en_i	: in std_logic_vector(4 downto 0) := (others => '0');
    usr_com_tx_pma_post_sign_i	: in std_logic := '0';
    usr_com_tx_pma_post_input_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_tx_pma_post_input_sel_var_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_rx_pma_ctle_cap_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_rx_pma_ctle_resp_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_rx_pma_ctle_resn_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_ctrl_tx_sel_i	: in std_logic_vector(5 downto 0) := (others => '0');
    usr_com_ctrl_rx_sel_i	: in std_logic_vector(5 downto 0) := (others => '0');
    usr_pll_pma_rst_n_i	: in std_logic := '0';
    usr_main_rst_n_i	: in std_logic := '0';
    usr_calibrate_pma_res_p1_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_calibrate_pma_res_n2_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_calibrate_pma_res_n3_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_calibrate_pma_res_p4_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_calibrate_pma_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_calibrate_pma_en_i	: in std_logic := '0';
    usr_pcs_ctrl_pll_lock_en_i	: in std_logic := '0';
    usr_pcs_ctrl_ovs_en_i	: in std_logic := '0';
    usr_main_test_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_pll_lock_o	: out std_logic := '0';
    usr_calibrate_pma_out_o	: out std_logic := '0';
    usr_main_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    pma_clk_ext_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 0 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx0_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx0_rst_n_i	: in std_logic := '0';
    usr_tx0_pma_clk_en_i	: in std_logic := '0';
    usr_tx0_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx0_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx0_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx0_busy_o	: out std_logic := '0';
    pma_tx0_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx0_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx0_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx0_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx0_ctrl_align_en_i	: in std_logic := '0';
    usr_rx0_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx0_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx0_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx0_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx0_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx0_rst_n_i	: in std_logic := '0';
    usr_rx0_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx0_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx0_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx0_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx0_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx0_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx0_busy_o	: out std_logic := '0';
    usr_rx0_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_pll_lock_o	: out std_logic := '0';
    pma_rx0_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 1 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx1_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx1_rst_n_i	: in std_logic := '0';
    usr_tx1_pma_clk_en_i	: in std_logic := '0';
    usr_tx1_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx1_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx1_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx1_busy_o	: out std_logic := '0';
    pma_tx1_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx1_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx1_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx1_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx1_ctrl_align_en_i	: in std_logic := '0';
    usr_rx1_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx1_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx1_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx1_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx1_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx1_rst_n_i	: in std_logic := '0';
    usr_rx1_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx1_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx1_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx1_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx1_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx1_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx1_busy_o	: out std_logic := '0';
    usr_rx1_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_pll_lock_o	: out std_logic := '0';
    pma_rx1_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 2 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx2_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx2_rst_n_i	: in std_logic := '0';
    usr_tx2_pma_clk_en_i	: in std_logic := '0';
    usr_tx2_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx2_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx2_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx2_busy_o	: out std_logic := '0';
    pma_tx2_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx2_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx2_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx2_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx2_ctrl_align_en_i	: in std_logic := '0';
    usr_rx2_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx2_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx2_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx2_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx2_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx2_rst_n_i	: in std_logic := '0';
    usr_rx2_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx2_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx2_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx2_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx2_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx2_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx2_busy_o	: out std_logic := '0';
    usr_rx2_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_pll_lock_o	: out std_logic := '0';
    pma_rx2_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 3 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx3_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx3_rst_n_i	: in std_logic := '0';
    usr_tx3_pma_clk_en_i	: in std_logic := '0';
    usr_tx3_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx3_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx3_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx3_busy_o	: out std_logic := '0';
    pma_tx3_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx3_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx3_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx3_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx3_ctrl_align_en_i	: in std_logic := '0';
    usr_rx3_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx3_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx3_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx3_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx3_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx3_rst_n_i	: in std_logic := '0';
    usr_rx3_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx3_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx3_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx3_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx3_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx3_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx3_busy_o	: out std_logic := '0';
    usr_rx3_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_pll_lock_o	: out std_logic := '0';
    pma_rx3_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 4 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx4_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx4_rst_n_i	: in std_logic := '0';
    usr_tx4_pma_clk_en_i	: in std_logic := '0';
    usr_tx4_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx4_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx4_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx4_busy_o	: out std_logic := '0';
    pma_tx4_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx4_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx4_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx4_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx4_ctrl_align_en_i	: in std_logic := '0';
    usr_rx4_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx4_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx4_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx4_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx4_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx4_rst_n_i	: in std_logic := '0';
    usr_rx4_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx4_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx4_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx4_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx4_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx4_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx4_busy_o	: out std_logic := '0';
    usr_rx4_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_pll_lock_o	: out std_logic := '0';
    pma_rx4_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 5 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx5_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx5_rst_n_i	: in std_logic := '0';
    usr_tx5_pma_clk_en_i	: in std_logic := '0';
    usr_tx5_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx5_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx5_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx5_busy_o	: out std_logic := '0';
    pma_tx5_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx5_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx5_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx5_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx5_ctrl_align_en_i	: in std_logic := '0';
    usr_rx5_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx5_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx5_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx5_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx5_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx5_rst_n_i	: in std_logic := '0';
    usr_rx5_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx5_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx5_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx5_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx5_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx5_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx5_busy_o	: out std_logic := '0';
    usr_rx5_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_pll_lock_o	: out std_logic := '0';
    pma_rx5_i	: in std_logic := '0'
);
end component NX_HSSL_FULL_L;

component NX_CTX_L is
generic (
     pma_clk_pos          : bit := '0';
     pcs_protocol_size    : bit := '0';
     pcs_8b_scr_sel       : bit := '0';
     pcs_scr_init         : bit_vector(16 downto 0) := (others => '0');
     pcs_scr_bypass       : bit := '0';
     pcs_sync_supported   : bit := '0';
     pcs_replace_bypass   : bit := '0';
     pcs_enc_bypass       : bit := '0';
     pcs_loopback         : bit := '0';
     pcs_polarity         : bit := '0';
     pcs_esistream_fsm_en : bit := '0';
     test                 : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc   : bit := '0';
     pcs_bypass_usr_cdc   : bit := '0';
     pma_loopback         : bit := '0';
     location             : string := ""
 );
port (
    ENC_E_I1	: in std_logic := '0';
    ENC_E_I2	: in std_logic := '0';
    ENC_E_I3	: in std_logic := '0';
    ENC_E_I4	: in std_logic := '0';
    ENC_E_I5	: in std_logic := '0';
    ENC_E_I6	: in std_logic := '0';
    ENC_E_I7	: in std_logic := '0';
    ENC_E_I8	: in std_logic := '0';

    CH_K_I1	: in std_logic := '0';
    CH_K_I2	: in std_logic := '0';
    CH_K_I3	: in std_logic := '0';
    CH_K_I4	: in std_logic := '0';
    CH_K_I5	: in std_logic := '0';
    CH_K_I6	: in std_logic := '0';
    CH_K_I7	: in std_logic := '0';
    CH_K_I8	: in std_logic := '0';

    SCR_E_I1	: in std_logic := '0';
    SCR_E_I2	: in std_logic := '0';
    SCR_E_I3	: in std_logic := '0';
    SCR_E_I4	: in std_logic := '0';
    SCR_E_I5	: in std_logic := '0';
    SCR_E_I6	: in std_logic := '0';
    SCR_E_I7	: in std_logic := '0';
    SCR_E_I8	: in std_logic := '0';

    EOMF_I1	: in std_logic := '0';
    EOMF_I2	: in std_logic := '0';
    EOMF_I3	: in std_logic := '0';
    EOMF_I4	: in std_logic := '0';
    EOMF_I5	: in std_logic := '0';
    EOMF_I6	: in std_logic := '0';
    EOMF_I7	: in std_logic := '0';
    EOMF_I8	: in std_logic := '0';

    EOF_I1	: in std_logic := '0';
    EOF_I2	: in std_logic := '0';
    EOF_I3	: in std_logic := '0';
    EOF_I4	: in std_logic := '0';
    EOF_I5	: in std_logic := '0';
    EOF_I6	: in std_logic := '0';
    EOF_I7	: in std_logic := '0';
    EOF_I8	: in std_logic := '0';

    REP_E_I	: in std_logic := '0';
    RST_N_I	: in std_logic := '0';

    TST_I1	: in std_logic := '0';
    TST_I2	: in std_logic := '0';
    TST_I3	: in std_logic := '0';
    TST_I4	: in std_logic := '0';

    DATA_I1	: in std_logic := '0';
    DATA_I2	: in std_logic := '0';
    DATA_I3	: in std_logic := '0';
    DATA_I4	: in std_logic := '0';
    DATA_I5	: in std_logic := '0';
    DATA_I6	: in std_logic := '0';
    DATA_I7	: in std_logic := '0';
    DATA_I8	: in std_logic := '0';
    DATA_I9	: in std_logic := '0';
    DATA_I10	: in std_logic := '0';
    DATA_I11	: in std_logic := '0';
    DATA_I12	: in std_logic := '0';
    DATA_I13	: in std_logic := '0';
    DATA_I14	: in std_logic := '0';
    DATA_I15	: in std_logic := '0';
    DATA_I16	: in std_logic := '0';
    DATA_I17	: in std_logic := '0';
    DATA_I18	: in std_logic := '0';
    DATA_I19	: in std_logic := '0';
    DATA_I20	: in std_logic := '0';
    DATA_I21	: in std_logic := '0';
    DATA_I22	: in std_logic := '0';
    DATA_I23	: in std_logic := '0';
    DATA_I24	: in std_logic := '0';
    DATA_I25	: in std_logic := '0';
    DATA_I26	: in std_logic := '0';
    DATA_I27	: in std_logic := '0';
    DATA_I28	: in std_logic := '0';
    DATA_I29	: in std_logic := '0';
    DATA_I30	: in std_logic := '0';
    DATA_I31	: in std_logic := '0';
    DATA_I32	: in std_logic := '0';
    DATA_I33	: in std_logic := '0';
    DATA_I34	: in std_logic := '0';
    DATA_I35	: in std_logic := '0';
    DATA_I36	: in std_logic := '0';
    DATA_I37	: in std_logic := '0';
    DATA_I38	: in std_logic := '0';
    DATA_I39	: in std_logic := '0';
    DATA_I40	: in std_logic := '0';
    DATA_I41	: in std_logic := '0';
    DATA_I42	: in std_logic := '0';
    DATA_I43	: in std_logic := '0';
    DATA_I44	: in std_logic := '0';
    DATA_I45	: in std_logic := '0';
    DATA_I46	: in std_logic := '0';
    DATA_I47	: in std_logic := '0';
    DATA_I48	: in std_logic := '0';
    DATA_I49	: in std_logic := '0';
    DATA_I50	: in std_logic := '0';
    DATA_I51	: in std_logic := '0';
    DATA_I52	: in std_logic := '0';
    DATA_I53	: in std_logic := '0';
    DATA_I54	: in std_logic := '0';
    DATA_I55	: in std_logic := '0';
    DATA_I56	: in std_logic := '0';
    DATA_I57	: in std_logic := '0';
    DATA_I58	: in std_logic := '0';
    DATA_I59	: in std_logic := '0';
    DATA_I60	: in std_logic := '0';
    DATA_I61	: in std_logic := '0';
    DATA_I62	: in std_logic := '0';
    DATA_I63	: in std_logic := '0';
    DATA_I64	: in std_logic := '0';

    TST_O1	: out std_logic := '0';
    TST_O2	: out std_logic := '0';
    TST_O3	: out std_logic := '0';
    TST_O4	: out std_logic := '0';

    BUSY_O	: out std_logic := '0';
    CLK_E_I	: in std_logic := '0';

    LINK	: inout std_logic_vector(CTX_LINK_SIZE-1 downto 0) := (others => '0');

    TX_O	: out std_logic := '0'
);
end component NX_CTX_L;

component NX_CRX_L is
generic (
     test                         : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc           : bit := '0';
     pcs_bypass_usr_cdc           : bit := '0';
     pcs_debug_en                 : bit := '0';
     pcs_fsm_watchdog_en          : bit := '0';
     pma_clk_pos                  : bit := '0';
     pcs_protocol_size            : bit := '0';
     pcs_loopback                 : bit := '0';
     pcs_polarity                 : bit := '0';
     pcs_p_comma_en               : bit := '0';
     pcs_p_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_m_comma_en               : bit := '0';
     pcs_m_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_comma_mask               : bit_vector(9 downto 0) := (others => '0');
     pcs_nb_comma_bef_realign     : bit_vector(1 downto 0) := (others => '0');
     pcs_align_bypass             : bit := '0';
     pcs_dec_bypass               : bit := '0';
     pcs_el_buff_max_comp         : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_diff_bef_comp    : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_only_one_skp     : bit := '0';
     pcs_el_buff_underflow_handle : bit := '0';
     pcs_el_buff_skp_seq_size     : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_char_0       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_1       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_2       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_3       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_size  : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_header_0     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_1     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_2     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_3     : bit_vector(8 downto 0) := (others => '0');
     pcs_buffers_use_cdc          : bit := '0';
     pcs_buffers_bypass           : bit := '0';
     pcs_sync_supported           : bit := '0';
     pcs_replace_bypass           : bit := '0';
     pcs_dscr_bypass              : bit := '0';
     pcs_8b_dscr_sel              : bit := '0';
     pcs_fsm_sel                  : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divf_en_n            : bit := '0';
     pma_pll_divm_en_n            : bit := '0';
     pma_pll_divn_en_n            : bit := '0';
     pma_cdr_cp                   : bit_vector(3 downto 0) := (others => '0');
     pma_ctrl_term                : bit_vector(5 downto 0) := (others => '0');
     pma_pll_cpump_n              : bit_vector(2 downto 0) := (others => '0');
     pma_pll_divf                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divm                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divn                 : bit := '0';
     pma_loopback                 : bit := '0';
     location                     : string := ""
 );
port (
    DSCR_E_I	: in std_logic := '0';
    DEC_E_I	: in std_logic := '0';
    ALIGN_E_I	: in std_logic := '0';
    ALIGN_S_I	: in std_logic := '0';
    REP_E_I	: in std_logic := '0';
    BUF_R_I	: in std_logic := '0';

    OVS_BS_I1	: in std_logic := '0';
    OVS_BS_I2	: in std_logic := '0';

    BUF_FE_I	: in std_logic := '0';
    RST_N_I	: in std_logic := '0';
    CDR_R_I	: in std_logic := '0';
    CKG_RN_I	: in std_logic := '0';
    PLL_RN_I	: in std_logic := '0';

    TST_I1	: in std_logic := '0';
    TST_I2	: in std_logic := '0';
    TST_I3	: in std_logic := '0';
    TST_I4	: in std_logic := '0';

    LOS_O	: out std_logic := '0';

    DATA_O1	: out std_logic := '0';
    DATA_O2	: out std_logic := '0';
    DATA_O3	: out std_logic := '0';
    DATA_O4	: out std_logic := '0';
    DATA_O5	: out std_logic := '0';
    DATA_O6	: out std_logic := '0';
    DATA_O7	: out std_logic := '0';
    DATA_O8	: out std_logic := '0';
    DATA_O9	: out std_logic := '0';
    DATA_O10	: out std_logic := '0';
    DATA_O11	: out std_logic := '0';
    DATA_O12	: out std_logic := '0';
    DATA_O13	: out std_logic := '0';
    DATA_O14	: out std_logic := '0';
    DATA_O15	: out std_logic := '0';
    DATA_O16	: out std_logic := '0';
    DATA_O17	: out std_logic := '0';
    DATA_O18	: out std_logic := '0';
    DATA_O19	: out std_logic := '0';
    DATA_O20	: out std_logic := '0';
    DATA_O21	: out std_logic := '0';
    DATA_O22	: out std_logic := '0';
    DATA_O23	: out std_logic := '0';
    DATA_O24	: out std_logic := '0';
    DATA_O25	: out std_logic := '0';
    DATA_O26	: out std_logic := '0';
    DATA_O27	: out std_logic := '0';
    DATA_O28	: out std_logic := '0';
    DATA_O29	: out std_logic := '0';
    DATA_O30	: out std_logic := '0';
    DATA_O31	: out std_logic := '0';
    DATA_O32	: out std_logic := '0';
    DATA_O33	: out std_logic := '0';
    DATA_O34	: out std_logic := '0';
    DATA_O35	: out std_logic := '0';
    DATA_O36	: out std_logic := '0';
    DATA_O37	: out std_logic := '0';
    DATA_O38	: out std_logic := '0';
    DATA_O39	: out std_logic := '0';
    DATA_O40	: out std_logic := '0';
    DATA_O41	: out std_logic := '0';
    DATA_O42	: out std_logic := '0';
    DATA_O43	: out std_logic := '0';
    DATA_O44	: out std_logic := '0';
    DATA_O45	: out std_logic := '0';
    DATA_O46	: out std_logic := '0';
    DATA_O47	: out std_logic := '0';
    DATA_O48	: out std_logic := '0';
    DATA_O49	: out std_logic := '0';
    DATA_O50	: out std_logic := '0';
    DATA_O51	: out std_logic := '0';
    DATA_O52	: out std_logic := '0';
    DATA_O53	: out std_logic := '0';
    DATA_O54	: out std_logic := '0';
    DATA_O55	: out std_logic := '0';
    DATA_O56	: out std_logic := '0';
    DATA_O57	: out std_logic := '0';
    DATA_O58	: out std_logic := '0';
    DATA_O59	: out std_logic := '0';
    DATA_O60	: out std_logic := '0';
    DATA_O61	: out std_logic := '0';
    DATA_O62	: out std_logic := '0';
    DATA_O63	: out std_logic := '0';
    DATA_O64	: out std_logic := '0';

    CH_COM_O1	: out std_logic := '0';
    CH_COM_O2	: out std_logic := '0';
    CH_COM_O3	: out std_logic := '0';
    CH_COM_O4	: out std_logic := '0';
    CH_COM_O5	: out std_logic := '0';
    CH_COM_O6	: out std_logic := '0';
    CH_COM_O7	: out std_logic := '0';
    CH_COM_O8	: out std_logic := '0';

    CH_K_O1	: out std_logic := '0';
    CH_K_O2	: out std_logic := '0';
    CH_K_O3	: out std_logic := '0';
    CH_K_O4	: out std_logic := '0';
    CH_K_O5	: out std_logic := '0';
    CH_K_O6	: out std_logic := '0';
    CH_K_O7	: out std_logic := '0';
    CH_K_O8	: out std_logic := '0';

    NIT_O1	: out std_logic := '0';
    NIT_O2	: out std_logic := '0';
    NIT_O3	: out std_logic := '0';
    NIT_O4	: out std_logic := '0';
    NIT_O5	: out std_logic := '0';
    NIT_O6	: out std_logic := '0';
    NIT_O7	: out std_logic := '0';
    NIT_O8	: out std_logic := '0';

    D_ERR_O1	: out std_logic := '0';
    D_ERR_O2	: out std_logic := '0';
    D_ERR_O3	: out std_logic := '0';
    D_ERR_O4	: out std_logic := '0';
    D_ERR_O5	: out std_logic := '0';
    D_ERR_O6	: out std_logic := '0';
    D_ERR_O7	: out std_logic := '0';
    D_ERR_O8	: out std_logic := '0';

    CH_A_O1	: out std_logic := '0';
    CH_A_O2	: out std_logic := '0';
    CH_A_O3	: out std_logic := '0';
    CH_A_O4	: out std_logic := '0';
    CH_A_O5	: out std_logic := '0';
    CH_A_O6	: out std_logic := '0';
    CH_A_O7	: out std_logic := '0';
    CH_A_O8	: out std_logic := '0';

    CH_F_O1	: out std_logic := '0';
    CH_F_O2	: out std_logic := '0';
    CH_F_O3	: out std_logic := '0';
    CH_F_O4	: out std_logic := '0';
    CH_F_O5	: out std_logic := '0';
    CH_F_O6	: out std_logic := '0';
    CH_F_O7	: out std_logic := '0';
    CH_F_O8	: out std_logic := '0';

    ALIGN_O	: out std_logic := '0';
    BUSY_O	: out std_logic := '0';

    TST_O1	: out std_logic := '0';
    TST_O2	: out std_logic := '0';
    TST_O3	: out std_logic := '0';
    TST_O4	: out std_logic := '0';
    TST_O5	: out std_logic := '0';
    TST_O6	: out std_logic := '0';
    TST_O7	: out std_logic := '0';
    TST_O8	: out std_logic := '0';

    LOCK_O	: out std_logic := '0';

    LINK	: inout std_logic_vector(CRX_LINK_SIZE-1 downto 0) := (others => '0');

    RX_I	: in std_logic := '0'
);
end component NX_CRX_L;

component NX_PMA_L is
generic (
     main_test                   : bit_vector(7 downto 0) := (others => '0');
     rx_pma_half_step            : bit := '0';
     pll_pma_int_data_len        : bit := '0';
     pll_pma_cpump_n             : bit_vector(2 downto 0) := (others => '0');
     pll_pma_divf                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divm                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divn                : bit := '0';
     pll_pma_lvds_mux            : bit := '0';
     pll_pma_mux_ckref           : bit := '0';
     pll_pma_divf_en_n           : bit := '0';
     pll_pma_divm_en_n           : bit := '0';
     pll_pma_divn_en_n           : bit := '0';
     main_clk_to_fabric_div_mode : bit := '0';
     main_clk_to_fabric_div_en   : bit := '0';
     main_clk_to_fabric_sel      : bit := '0';
     main_use_only_usr_clock     : bit := '0';
     main_use_pcs_clk_2          : bit := '0';
     pcs_word_len                : bit_vector(1 downto 0) := (others => '0');
     pcs_ovs_mode                : bit := '0';
     pcs_pll_lock_count          : bit_vector(2 downto 0) := (others => '0');
     location                    : string := ""
 );
port (
    CLK_USER_I	: in std_logic := '0';
    CLK_REF_I	: in std_logic := '0';
--    CLK_I1      : in  std_logic;
--    CLK_I2      : in  std_logic;
--    CLK_I3      : in  std_logic;
--    CLK_I4      : in  std_logic;
--    CLK_I5      : in  std_logic;
--    CLK_I6      : in  std_logic;
--    CLK_I7      : in  std_logic;
--    CLK_I8      : in  std_logic;

    PRE_SG_I	: in std_logic := '0';
    PRE_EN_I	: in std_logic := '0';

    PRE_IS_I1	: in std_logic := '0';
    PRE_IS_I2	: in std_logic := '0';
    PRE_IS_I3	: in std_logic := '0';
    PRE_IS_I4	: in std_logic := '0';

    MAIN_SG_I	: in std_logic := '0';

    MAIN_EN_I1	: in std_logic := '0';
    MAIN_EN_I2	: in std_logic := '0';
    MAIN_EN_I3	: in std_logic := '0';
    MAIN_EN_I4	: in std_logic := '0';
    MAIN_EN_I5	: in std_logic := '0';
    MAIN_EN_I6	: in std_logic := '0';

    MARG_S_I1	: in std_logic := '0';
    MARG_S_I2	: in std_logic := '0';
    MARG_S_I3	: in std_logic := '0';
    MARG_S_I4	: in std_logic := '0';

    MARG_IS_I1	: in std_logic := '0';
    MARG_IS_I2	: in std_logic := '0';
    MARG_IS_I3	: in std_logic := '0';
    MARG_IS_I4	: in std_logic := '0';

    MARG_SV_I1	: in std_logic := '0';
    MARG_SV_I2	: in std_logic := '0';
    MARG_SV_I3	: in std_logic := '0';
    MARG_SV_I4	: in std_logic := '0';
    MARG_SV_I5	: in std_logic := '0';

    MARG_ISV_I1	: in std_logic := '0';
    MARG_ISV_I2	: in std_logic := '0';
    MARG_ISV_I3	: in std_logic := '0';
    MARG_ISV_I4	: in std_logic := '0';
    MARG_ISV_I5	: in std_logic := '0';

    POST_EN_I1	: in std_logic := '0';
    POST_EN_I2	: in std_logic := '0';
    POST_EN_I3	: in std_logic := '0';
    POST_EN_I4	: in std_logic := '0';
    POST_EN_I5	: in std_logic := '0';

    POST_SG_I	: in std_logic := '0';

    POST_IS_I1	: in std_logic := '0';
    POST_IS_I2	: in std_logic := '0';
    POST_IS_I3	: in std_logic := '0';
    POST_IS_I4	: in std_logic := '0';

    POST_ISV_I1	: in std_logic := '0';
    POST_ISV_I2	: in std_logic := '0';
    POST_ISV_I3	: in std_logic := '0';
    POST_ISV_I4	: in std_logic := '0';

    TX_SEL_I1	: in std_logic := '0';
    TX_SEL_I2	: in std_logic := '0';
    TX_SEL_I3	: in std_logic := '0';
    TX_SEL_I4	: in std_logic := '0';
    TX_SEL_I5	: in std_logic := '0';
    TX_SEL_I6	: in std_logic := '0';

    CT_CAP_I1	: in std_logic := '0';
    CT_CAP_I2	: in std_logic := '0';
    CT_CAP_I3	: in std_logic := '0';
    CT_CAP_I4	: in std_logic := '0';

    CT_RESP_I1	: in std_logic := '0';
    CT_RESP_I2	: in std_logic := '0';
    CT_RESP_I3	: in std_logic := '0';
    CT_RESP_I4	: in std_logic := '0';

    CT_RESN_I1	: in std_logic := '0';
    CT_RESN_I2	: in std_logic := '0';
    CT_RESN_I3	: in std_logic := '0';
    CT_RESN_I4	: in std_logic := '0';

    M_EYE_I	: in std_logic := '0';

    RX_SEL_I1	: in std_logic := '0';
    RX_SEL_I2	: in std_logic := '0';
    RX_SEL_I3	: in std_logic := '0';
    RX_SEL_I4	: in std_logic := '0';
    RX_SEL_I5	: in std_logic := '0';
    RX_SEL_I6	: in std_logic := '0';

    PLL_RN_I	: in std_logic := '0';
    RST_N_I	: in std_logic := '0';

    CAL_1P_I1	: in std_logic := '0';
    CAL_1P_I2	: in std_logic := '0';
    CAL_1P_I3	: in std_logic := '0';
    CAL_1P_I4	: in std_logic := '0';
    CAL_1P_I5	: in std_logic := '0';
    CAL_1P_I6	: in std_logic := '0';
    CAL_1P_I7	: in std_logic := '0';
    CAL_1P_I8	: in std_logic := '0';

    CAL_2N_I1	: in std_logic := '0';
    CAL_2N_I2	: in std_logic := '0';
    CAL_2N_I3	: in std_logic := '0';
    CAL_2N_I4	: in std_logic := '0';
    CAL_2N_I5	: in std_logic := '0';
    CAL_2N_I6	: in std_logic := '0';
    CAL_2N_I7	: in std_logic := '0';
    CAL_2N_I8	: in std_logic := '0';

    CAL_3N_I1	: in std_logic := '0';
    CAL_3N_I2	: in std_logic := '0';
    CAL_3N_I3	: in std_logic := '0';
    CAL_3N_I4	: in std_logic := '0';
    CAL_3N_I5	: in std_logic := '0';
    CAL_3N_I6	: in std_logic := '0';
    CAL_3N_I7	: in std_logic := '0';
    CAL_3N_I8	: in std_logic := '0';

    CAL_4P_I1	: in std_logic := '0';
    CAL_4P_I2	: in std_logic := '0';
    CAL_4P_I3	: in std_logic := '0';
    CAL_4P_I4	: in std_logic := '0';
    CAL_4P_I5	: in std_logic := '0';
    CAL_4P_I6	: in std_logic := '0';
    CAL_4P_I7	: in std_logic := '0';
    CAL_4P_I8	: in std_logic := '0';

    CAL_SEL_I1	: in std_logic := '0';
    CAL_SEL_I2	: in std_logic := '0';
    CAL_SEL_I3	: in std_logic := '0';
    CAL_SEL_I4	: in std_logic := '0';

    CAL_E_I	: in std_logic := '0';
    LOCK_E_I	: in std_logic := '0';
    OVS_E_I	: in std_logic := '0';

    TST_I1	: in std_logic := '0';
    TST_I2	: in std_logic := '0';
    TST_I3	: in std_logic := '0';
    TST_I4	: in std_logic := '0';
    TST_I5	: in std_logic := '0';
    TST_I6	: in std_logic := '0';
    TST_I7	: in std_logic := '0';
    TST_I8	: in std_logic := '0';

    CLK_O	: out std_logic := '0';
    LOCK_O	: out std_logic := '0';
    CAL_O	: out std_logic := '0';

    TST_O1	: out std_logic := '0';
    TST_O2	: out std_logic := '0';
    TST_O3	: out std_logic := '0';
    TST_O4	: out std_logic := '0';
    TST_O5	: out std_logic := '0';
    TST_O6	: out std_logic := '0';
    TST_O7	: out std_logic := '0';
    TST_O8	: out std_logic := '0';

    LINK_TX0	: inout std_logic_vector(CTX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX1	: inout std_logic_vector(CTX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX2	: inout std_logic_vector(CTX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX3	: inout std_logic_vector(CTX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX4	: inout std_logic_vector(CTX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX5	: inout std_logic_vector(CTX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX0	: inout std_logic_vector(CRX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX1	: inout std_logic_vector(CRX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX2	: inout std_logic_vector(CRX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX3	: inout std_logic_vector(CRX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX4	: inout std_logic_vector(CRX_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX5	: inout std_logic_vector(CRX_LINK_SIZE-1 downto 0) := (others => '0');

    CLK_EXT_I	: in std_logic := '0'
);
end component NX_PMA_L;


end nxPackage;
-- =================================================================================================
--   NX_IOB definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB_I is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayOn         : string := "";
    inputDelayLine       : string := "";
    outputDelayOn        : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in  std_logic;
    C  : in  std_logic;
    T  : in  std_logic;
    IO : in  std_logic;
    O  : out std_logic
);
end NX_IOB_I;

architecture NX_RTL of NX_IOB_I is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB_O is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayOn         : string := "";
    inputDelayLine       : string := "";
    outputDelayOn        : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in  std_logic;
    C  : in  std_logic;
    T  : in  std_logic;
    O  : out std_logic;
    IO : out std_logic
);
end NX_IOB_O;

architecture NX_RTL of NX_IOB_O is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB is
generic (
    location             : string := "";
    standard             : string := "";
    drive                : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayOn         : string := "";
    inputDelayLine       : string := "";
    outputDelayOn        : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in    std_logic;
    C  : in    std_logic;
    T  : in    std_logic;
    O  : out   std_logic;
    IO : inout std_logic
);
end NX_IOB;

architecture NX_RTL of NX_IOB is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
e17goxvVDE89T70fGGqPq2G2VJuLdUWiSeGXdd2rZ+JDMcliRJF9HzUr+Sggja1P
yu/YJmqijLrhcxjw3YsgAOt9630aMpkcDpbP5TTwzLKMyUwRTfo+Hmd1Rq1z6TPx
ATuhnIJCG8CAJRbILD2+SH/EWaHXp9xEqGwXqOhyw3QErazyfWOCLqICLkDAI1HT
xjzniUDYvrxLtadPmW2++gK7RyoVAykCOwcp5rUThQaRvIOjWbiwmWouS7Dq053c
RS/Q4FAjeva1zMIHdirJ9dg3DMB9Tm73R2oCd10qzN/0skhOtuBV3C1Wm4cLVKCi
Vtl6gFTl8u0ObBjz+FlLlQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2608)
`protect data_block
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
QO+Ow/KzF7IxMWhScjIiDg==
`protect end_protected

-- =================================================================================================
--   NX_IOM_L definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_L is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk1 : bit := '0';
--  latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
--  inv_di_fclk2 : bit := '0';
--  latency2     : bit := '0';
--  sel_clk_out2 : bit_vector(1 downto 0) := "00";
--  sel_clk_out3 : bit_vector(1 downto 0) := "00";
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_io_cal  : bit := '0';
    pads_dict    : string := "";
    pads_path    : string := ""
);
port(
    RTCK1   : in    std_logic;
    RRCK1   : in    std_logic;
    WTCK1   : in    std_logic;
    WRCK1   : in    std_logic;
    RTCK2   : in    std_logic;
    RRCK2   : in    std_logic;
    WTCK2   : in    std_logic;
    WRCK2   : in    std_logic;
    CTCK    : in    std_logic;
    CCK     : in    std_logic;
    DCK     : in    std_logic;

    C1TW    : in    std_logic;
    C1TS    : in    std_logic;
    C1RW1   : in    std_logic;
    C1RW2   : in    std_logic;
    C1RW3   : in    std_logic;
    C1RNE   : in    std_logic;
    C1RS    : in    std_logic;
    C2TW    : in    std_logic;
    C2TS    : in    std_logic;
    C2RW1   : in    std_logic;
    C2RW2   : in    std_logic;
    C2RW3   : in    std_logic;
    C2RNE   : in    std_logic;
    C2RS    : in    std_logic;
    FA1     : in    std_logic;
    FA2     : in    std_logic;
    FA3     : in    std_logic;
    FA4     : in    std_logic;
    FA5     : in    std_logic;
    FA6     : in    std_logic;
    FZ      : in    std_logic;
    DC      : in    std_logic;
    DRI1    : in    std_logic;
    DRI2    : in    std_logic;
    DRI3    : in    std_logic;
    DRI4    : in    std_logic;
    DRI5    : in    std_logic;
    DRI6    : in    std_logic;
    DRA1    : in    std_logic;
    DRA2    : in    std_logic;
    DRA3    : in    std_logic;
    DRA4    : in    std_logic;
    DRA5    : in    std_logic;
    DRA6    : in    std_logic;
    DRL     : in    std_logic;
    DOS     : in    std_logic;
    DOG     : in    std_logic;
    DIS     : in    std_logic;
    DIG     : in    std_logic;
    DPAS    : in    std_logic;
    DPAG    : in    std_logic;
    DQSS    : in    std_logic;
    DQSG    : in    std_logic;
    DS1     : in    std_logic;
    DS2     : in    std_logic;
    CAD1    : in    std_logic;
    CAD2    : in    std_logic;
    CAD3    : in    std_logic;
    CAD4    : in    std_logic;
    CAD5    : in    std_logic;
    CAD6    : in    std_logic;
    CAP1    : in    std_logic;
    CAP2    : in    std_logic;
    CAP3    : in    std_logic;
    CAP4    : in    std_logic;
    CAN1    : in    std_logic;
    CAN2    : in    std_logic;
    CAN3    : in    std_logic;
    CAN4    : in    std_logic;
    CAT1    : in    std_logic;
    CAT2    : in    std_logic;
    CAT3    : in    std_logic;
    CAT4    : in    std_logic;

    FLD     : out   std_logic;
    FLG     : out   std_logic;
    C1RED   : out   std_logic;
    C2RED   : out   std_logic;
    DRO1    : out   std_logic;
    DRO2    : out   std_logic;
    DRO3    : out   std_logic;
    DRO4    : out   std_logic;
    DRO5    : out   std_logic;
    DRO6    : out   std_logic;
    CAL     : out   std_logic;

    P1CI1   : in    std_logic;
    P1CL    : in    std_logic;
    P1CR    : in    std_logic;
    P1CO    : out   std_logic;
    P1CTI   : in    std_logic;
    P1CTO   : out   std_logic;
    P1EI1   : in    std_logic;
    P1EI2   : in    std_logic;
    P1EI3   : in    std_logic;
    P1EI4   : in    std_logic;
    P1EI5   : in    std_logic;
    P1EL    : in    std_logic;
    P1ER    : in    std_logic;
    P1EO    : out   std_logic;
    P1RI    : in    std_logic;
    P1RL    : in    std_logic;
    P1RR    : in    std_logic;
    P1RO1   : out   std_logic;
    P1RO2   : out   std_logic;
    P1RO3   : out   std_logic;
    P1RO4   : out   std_logic;
    P1RO5   : out   std_logic;

    P2CI1   : in    std_logic;
    P2CL    : in    std_logic;
    P2CR    : in    std_logic;
    P2CO    : out   std_logic;
    P2CTI   : in    std_logic;
    P2CTO   : out   std_logic;
    P2EI1   : in    std_logic;
    P2EI2   : in    std_logic;
    P2EI3   : in    std_logic;
    P2EI4   : in    std_logic;
    P2EI5   : in    std_logic;
    P2EL    : in    std_logic;
    P2ER    : in    std_logic;
    P2EO    : out   std_logic;
    P2RI    : in    std_logic;
    P2RL    : in    std_logic;
    P2RR    : in    std_logic;
    P2RO1   : out   std_logic;
    P2RO2   : out   std_logic;
    P2RO3   : out   std_logic;
    P2RO4   : out   std_logic;
    P2RO5   : out   std_logic;

    P3CI1   : in    std_logic;
    P3CL    : in    std_logic;
    P3CR    : in    std_logic;
    P3CO    : out   std_logic;
    P3CTI   : in    std_logic;
    P3CTO   : out   std_logic;
    P3EI1   : in    std_logic;
    P3EI2   : in    std_logic;
    P3EI3   : in    std_logic;
    P3EI4   : in    std_logic;
    P3EI5   : in    std_logic;
    P3EL    : in    std_logic;
    P3ER    : in    std_logic;
    P3EO    : out   std_logic;
    P3RI    : in    std_logic;
    P3RL    : in    std_logic;
    P3RR    : in    std_logic;
    P3RO1   : out   std_logic;
    P3RO2   : out   std_logic;
    P3RO3   : out   std_logic;
    P3RO4   : out   std_logic;
    P3RO5   : out   std_logic;

    P4CI1   : in    std_logic;
    P4CL    : in    std_logic;
    P4CR    : in    std_logic;
    P4CO    : out   std_logic;
    P4CTI   : in    std_logic;
    P4CTO   : out   std_logic;
    P4EI1   : in    std_logic;
    P4EI2   : in    std_logic;
    P4EI3   : in    std_logic;
    P4EI4   : in    std_logic;
    P4EI5   : in    std_logic;
    P4EL    : in    std_logic;
    P4ER    : in    std_logic;
    P4EO    : out   std_logic;
    P4RI    : in    std_logic;
    P4RL    : in    std_logic;
    P4RR    : in    std_logic;
    P4RO1   : out   std_logic;
    P4RO2   : out   std_logic;
    P4RO3   : out   std_logic;
    P4RO4   : out   std_logic;
    P4RO5   : out   std_logic;

    P5CI1   : in    std_logic;
    P5CI2   : in    std_logic;	-- DQS
    P5CI3   : in    std_logic;	-- DQS
    P5CI4   : in    std_logic;	-- DQS
    P5CI5   : in    std_logic;	-- DQS
    P5CL    : in    std_logic;
    P5CR    : in    std_logic;
    P5CO    : out   std_logic;
    P5CTI   : in    std_logic;
    P5CTO   : out   std_logic;
    P5EI1   : in    std_logic;
    P5EI2   : in    std_logic;
    P5EI3   : in    std_logic;
    P5EI4   : in    std_logic;
    P5EI5   : in    std_logic;
    P5EL    : in    std_logic;
    P5ER    : in    std_logic;
    P5EO    : out   std_logic;
    P5RI    : in    std_logic;
    P5RL    : in    std_logic;
    P5RR    : in    std_logic;
    P5RO1   : out   std_logic;
    P5RO2   : out   std_logic;
    P5RO3   : out   std_logic;
    P5RO4   : out   std_logic;
    P5RO5   : out   std_logic;

    P6CI1   : in    std_logic;
    P6CL    : in    std_logic;
    P6CR    : in    std_logic;
    P6CO    : out   std_logic;
    P6CTI   : in    std_logic;
    P6CTO   : out   std_logic;
    P6EI1   : in    std_logic;
    P6EI2   : in    std_logic;
    P6EI3   : in    std_logic;
    P6EI4   : in    std_logic;
    P6EI5   : in    std_logic;
    P6EL    : in    std_logic;
    P6ER    : in    std_logic;
    P6EO    : out   std_logic;
    P6RI    : in    std_logic;
    P6RL    : in    std_logic;
    P6RR    : in    std_logic;
    P6RO1   : out   std_logic;
    P6RO2   : out   std_logic;
    P6RO3   : out   std_logic;
    P6RO4   : out   std_logic;
    P6RO5   : out   std_logic;

    P7CI1   : in    std_logic;
    P7CL    : in    std_logic;
    P7CR    : in    std_logic;
    P7CO    : out   std_logic;
    P7CTI   : in    std_logic;
    P7CTO   : out   std_logic;
    P7EI1   : in    std_logic;
    P7EI2   : in    std_logic;
    P7EI3   : in    std_logic;
    P7EI4   : in    std_logic;
    P7EI5   : in    std_logic;
    P7EL    : in    std_logic;
    P7ER    : in    std_logic;
    P7EO    : out   std_logic;
    P7RI    : in    std_logic;
    P7RL    : in    std_logic;
    P7RR    : in    std_logic;
    P7RO1   : out   std_logic;
    P7RO2   : out   std_logic;
    P7RO3   : out   std_logic;
    P7RO4   : out   std_logic;
    P7RO5   : out   std_logic;

    P8CI1   : in    std_logic;
    P8CL    : in    std_logic;
    P8CR    : in    std_logic;
    P8CO    : out   std_logic;
    P8CTI   : in    std_logic;
    P8CTO   : out   std_logic;
    P8EI1   : in    std_logic;
    P8EI2   : in    std_logic;
    P8EI3   : in    std_logic;
    P8EI4   : in    std_logic;
    P8EI5   : in    std_logic;
    P8EL    : in    std_logic;
    P8ER    : in    std_logic;
    P8EO    : out   std_logic;
    P8RI    : in    std_logic;
    P8RL    : in    std_logic;
    P8RR    : in    std_logic;
    P8RO1   : out   std_logic;
    P8RO2   : out   std_logic;
    P8RO3   : out   std_logic;
    P8RO4   : out   std_logic;
    P8RO5   : out   std_logic;

    P9CI1   : in    std_logic;
    P9CL    : in    std_logic;
    P9CR    : in    std_logic;
    P9CO    : out   std_logic;
    P9CTI   : in    std_logic;
    P9CTO   : out   std_logic;
    P9EI1   : in    std_logic;
    P9EI2   : in    std_logic;
    P9EI3   : in    std_logic;
    P9EI4   : in    std_logic;
    P9EI5   : in    std_logic;
    P9EL    : in    std_logic;
    P9ER    : in    std_logic;
    P9EO    : out   std_logic;
    P9RI    : in    std_logic;
    P9RL    : in    std_logic;
    P9RR    : in    std_logic;
    P9RO1   : out   std_logic;
    P9RO2   : out   std_logic;
    P9RO3   : out   std_logic;
    P9RO4   : out   std_logic;
    P9RO5   : out   std_logic;

    P10CI1  : in    std_logic;
    P10CL   : in    std_logic;
    P10CR   : in    std_logic;
    P10CO   : out   std_logic;
    P10CTI  : in    std_logic;
    P10CTO  : out   std_logic;
    P10EI1  : in    std_logic;
    P10EI2  : in    std_logic;
    P10EI3  : in    std_logic;
    P10EI4  : in    std_logic;
    P10EI5  : in    std_logic;
    P10EL   : in    std_logic;
    P10ER   : in    std_logic;
    P10EO   : out   std_logic;
    P10RI   : in    std_logic;
    P10RL   : in    std_logic;
    P10RR   : in    std_logic;
    P10RO1  : out   std_logic;
    P10RO2  : out   std_logic;
    P10RO3  : out   std_logic;
    P10RO4  : out   std_logic;
    P10RO5  : out   std_logic;

    P11CI1  : in    std_logic;
    P11CL   : in    std_logic;
    P11CR   : in    std_logic;
    P11CO   : out   std_logic;
    P11CTI  : in    std_logic;
    P11CTO  : out   std_logic;
    P11EI1  : in    std_logic;
    P11EI2  : in    std_logic;
    P11EI3  : in    std_logic;
    P11EI4  : in    std_logic;
    P11EI5  : in    std_logic;
    P11EL   : in    std_logic;
    P11ER   : in    std_logic;
    P11EO   : out   std_logic;
    P11RI   : in    std_logic;
    P11RL   : in    std_logic;
    P11RR   : in    std_logic;
    P11RO1  : out   std_logic;
    P11RO2  : out   std_logic;
    P11RO3  : out   std_logic;
    P11RO4  : out   std_logic;
    P11RO5  : out   std_logic;

    P12CI1  : in    std_logic;
    P12CL   : in    std_logic;
    P12CR   : in    std_logic;
    P12CO   : out   std_logic;
    P12CTI  : in    std_logic;
    P12CTO  : out   std_logic;
    P12EI1  : in    std_logic;
    P12EI2  : in    std_logic;
    P12EI3  : in    std_logic;
    P12EI4  : in    std_logic;
    P12EI5  : in    std_logic;
    P12EL   : in    std_logic;
    P12ER   : in    std_logic;
    P12EO   : out   std_logic;
    P12RI   : in    std_logic;
    P12RL   : in    std_logic;
    P12RR   : in    std_logic;
    P12RO1  : out   std_logic;
    P12RO2  : out   std_logic;
    P12RO3  : out   std_logic;
    P12RO4  : out   std_logic;
    P12RO5  : out   std_logic;

    P13CI1  : in    std_logic;
    P13CL   : in    std_logic;
    P13CR   : in    std_logic;
    P13CO   : out   std_logic;
    P13CTI  : in    std_logic;
    P13CTO  : out   std_logic;
    P13EI1  : in    std_logic;
    P13EI2  : in    std_logic;
    P13EI3  : in    std_logic;
    P13EI4  : in    std_logic;
    P13EI5  : in    std_logic;
    P13EL   : in    std_logic;
    P13ER   : in    std_logic;
    P13EO   : out   std_logic;
    P13RI   : in    std_logic;
    P13RL   : in    std_logic;
    P13RR   : in    std_logic;
    P13RO1  : out   std_logic;
    P13RO2  : out   std_logic;
    P13RO3  : out   std_logic;
    P13RO4  : out   std_logic;
    P13RO5  : out   std_logic;

    P14CI1  : in    std_logic;
    P14CL   : in    std_logic;
    P14CR   : in    std_logic;
    P14CO   : out   std_logic;
    P14CTI  : in    std_logic;
    P14CTO  : out   std_logic;
    P14EI1  : in    std_logic;
    P14EI2  : in    std_logic;
    P14EI3  : in    std_logic;
    P14EI4  : in    std_logic;
    P14EI5  : in    std_logic;
    P14EL   : in    std_logic;
    P14ER   : in    std_logic;
    P14EO   : out   std_logic;
    P14RI   : in    std_logic;
    P14RL   : in    std_logic;
    P14RR   : in    std_logic;
    P14RO1  : out   std_logic;
    P14RO2  : out   std_logic;
    P14RO3  : out   std_logic;
    P14RO4  : out   std_logic;
    P14RO5  : out   std_logic;

    P15CI1  : in    std_logic;
    P15CL   : in    std_logic;
    P15CR   : in    std_logic;
    P15CO   : out   std_logic;
    P15CTI  : in    std_logic;
    P15CTO  : out   std_logic;
    P15EI1  : in    std_logic;
    P15EI2  : in    std_logic;
    P15EI3  : in    std_logic;
    P15EI4  : in    std_logic;
    P15EI5  : in    std_logic;
    P15EL   : in    std_logic;
    P15ER   : in    std_logic;
    P15EO   : out   std_logic;
    P15RI   : in    std_logic;
    P15RL   : in    std_logic;
    P15RR   : in    std_logic;
    P15RO1  : out   std_logic;
    P15RO2  : out   std_logic;
    P15RO3  : out   std_logic;
    P15RO4  : out   std_logic;
    P15RO5  : out   std_logic;

    P16CI1  : in    std_logic;
    P16CL   : in    std_logic;
    P16CR   : in    std_logic;
    P16CO   : out   std_logic;
    P16CTI  : in    std_logic;
    P16CTO  : out   std_logic;
    P16EI1  : in    std_logic;
    P16EI2  : in    std_logic;
    P16EI3  : in    std_logic;
    P16EI4  : in    std_logic;
    P16EI5  : in    std_logic;
    P16EL   : in    std_logic;
    P16ER   : in    std_logic;
    P16EO   : out   std_logic;
    P16RI   : in    std_logic;
    P16RL   : in    std_logic;
    P16RR   : in    std_logic;
    P16RO1  : out   std_logic;
    P16RO2  : out   std_logic;
    P16RO3  : out   std_logic;
    P16RO4  : out   std_logic;
    P16RO5  : out   std_logic;

    P17CI1  : in    std_logic;
    P17CL   : in    std_logic;
    P17CR   : in    std_logic;
    P17CO   : out   std_logic;
    P17CTI  : in    std_logic;
    P17CTO  : out   std_logic;
    P17EI1  : in    std_logic;
    P17EI2  : in    std_logic;
    P17EI3  : in    std_logic;
    P17EI4  : in    std_logic;
    P17EI5  : in    std_logic;
    P17EL   : in    std_logic;
    P17ER   : in    std_logic;
    P17EO   : out   std_logic;
    P17RI   : in    std_logic;
    P17RL   : in    std_logic;
    P17RR   : in    std_logic;
    P17RO1  : out   std_logic;
    P17RO2  : out   std_logic;
    P17RO3  : out   std_logic;
    P17RO4  : out   std_logic;
    P17RO5  : out   std_logic;

    P18CI1  : in    std_logic;
    P18CL   : in    std_logic;
    P18CR   : in    std_logic;
    P18CO   : out   std_logic;
    P18CTI  : in    std_logic;
    P18CTO  : out   std_logic;
    P18EI1  : in    std_logic;
    P18EI2  : in    std_logic;
    P18EI3  : in    std_logic;
    P18EI4  : in    std_logic;
    P18EI5  : in    std_logic;
    P18EL   : in    std_logic;
    P18ER   : in    std_logic;
    P18EO   : out   std_logic;
    P18RI   : in    std_logic;
    P18RL   : in    std_logic;
    P18RR   : in    std_logic;
    P18RO1  : out   std_logic;
    P18RO2  : out   std_logic;
    P18RO3  : out   std_logic;
    P18RO4  : out   std_logic;
    P18RO5  : out   std_logic;

    P19CI1  : in    std_logic;
    P19CL   : in    std_logic;
    P19CR   : in    std_logic;
    P19CO   : out   std_logic;
    P19CTI  : in    std_logic;
    P19CTO  : out   std_logic;
    P19EI1  : in    std_logic;
    P19EI2  : in    std_logic;
    P19EI3  : in    std_logic;
    P19EI4  : in    std_logic;
    P19EI5  : in    std_logic;
    P19EL   : in    std_logic;
    P19ER   : in    std_logic;
    P19EO   : out   std_logic;
    P19RI   : in    std_logic;
    P19RL   : in    std_logic;
    P19RR   : in    std_logic;
    P19RO1  : out   std_logic;
    P19RO2  : out   std_logic;
    P19RO3  : out   std_logic;
    P19RO4  : out   std_logic;
    P19RO5  : out   std_logic;

    P20CI1  : in    std_logic;
    P20CL   : in    std_logic;
    P20CR   : in    std_logic;
    P20CO   : out   std_logic;
    P20CTI  : in    std_logic;
    P20CTO  : out   std_logic;
    P20EI1  : in    std_logic;
    P20EI2  : in    std_logic;
    P20EI3  : in    std_logic;
    P20EI4  : in    std_logic;
    P20EI5  : in    std_logic;
    P20EL   : in    std_logic;
    P20ER   : in    std_logic;
    P20EO   : out   std_logic;
    P20RI   : in    std_logic;
    P20RL   : in    std_logic;
    P20RR   : in    std_logic;
    P20RO1  : out   std_logic;
    P20RO2  : out   std_logic;
    P20RO3  : out   std_logic;
    P20RO4  : out   std_logic;
    P20RO5  : out   std_logic;

    P21CI1  : in    std_logic;
    P21CL   : in    std_logic;
    P21CR   : in    std_logic;
    P21CO   : out   std_logic;
    P21CTI  : in    std_logic;
    P21CTO  : out   std_logic;
    P21EI1  : in    std_logic;
    P21EI2  : in    std_logic;
    P21EI3  : in    std_logic;
    P21EI4  : in    std_logic;
    P21EI5  : in    std_logic;
    P21EL   : in    std_logic;
    P21ER   : in    std_logic;
    P21EO   : out   std_logic;
    P21RI   : in    std_logic;
    P21RL   : in    std_logic;
    P21RR   : in    std_logic;
    P21RO1  : out   std_logic;
    P21RO2  : out   std_logic;
    P21RO3  : out   std_logic;
    P21RO4  : out   std_logic;
    P21RO5  : out   std_logic;

    P22CI1  : in    std_logic;
    P22CL   : in    std_logic;
    P22CR   : in    std_logic;
    P22CO   : out   std_logic;
    P22CTI  : in    std_logic;
    P22CTO  : out   std_logic;
    P22EI1  : in    std_logic;
    P22EI2  : in    std_logic;
    P22EI3  : in    std_logic;
    P22EI4  : in    std_logic;
    P22EI5  : in    std_logic;
    P22EL   : in    std_logic;
    P22ER   : in    std_logic;
    P22EO   : out   std_logic;
    P22RI   : in    std_logic;
    P22RL   : in    std_logic;
    P22RR   : in    std_logic;
    P22RO1  : out   std_logic;
    P22RO2  : out   std_logic;
    P22RO3  : out   std_logic;
    P22RO4  : out   std_logic;
    P22RO5  : out   std_logic;

    P23CI1  : in    std_logic;
    P23CL   : in    std_logic;
    P23CR   : in    std_logic;
    P23CO   : out   std_logic;
    P23CTI  : in    std_logic;
    P23CTO  : out   std_logic;
    P23EI1  : in    std_logic;
    P23EI2  : in    std_logic;
    P23EI3  : in    std_logic;
    P23EI4  : in    std_logic;
    P23EI5  : in    std_logic;
    P23EL   : in    std_logic;
    P23ER   : in    std_logic;
    P23EO   : out   std_logic;
    P23RI   : in    std_logic;
    P23RL   : in    std_logic;
    P23RR   : in    std_logic;
    P23RO1  : out   std_logic;
    P23RO2  : out   std_logic;
    P23RO3  : out   std_logic;
    P23RO4  : out   std_logic;
    P23RO5  : out   std_logic;

    P24CI1  : in    std_logic;
    P24CL   : in    std_logic;
    P24CR   : in    std_logic;
    P24CO   : out   std_logic;
    P24CTI  : in    std_logic;
    P24CTO  : out   std_logic;
    P24EI1  : in    std_logic;
    P24EI2  : in    std_logic;
    P24EI3  : in    std_logic;
    P24EI4  : in    std_logic;
    P24EI5  : in    std_logic;
    P24EL   : in    std_logic;
    P24ER   : in    std_logic;
    P24EO   : out   std_logic;
    P24RI   : in    std_logic;
    P24RL   : in    std_logic;
    P24RR   : in    std_logic;
    P24RO1  : out   std_logic;
    P24RO2  : out   std_logic;
    P24RO3  : out   std_logic;
    P24RO4  : out   std_logic;
    P24RO5  : out   std_logic;

    P25CI1  : in    std_logic;
    P25CL   : in    std_logic;
    P25CR   : in    std_logic;
    P25CO   : out   std_logic;
    P25CTI  : in    std_logic;
    P25CTO  : out   std_logic;
    P25EI1  : in    std_logic;
    P25EI2  : in    std_logic;
    P25EI3  : in    std_logic;
    P25EI4  : in    std_logic;
    P25EI5  : in    std_logic;
    P25EL   : in    std_logic;
    P25ER   : in    std_logic;
    P25EO   : out   std_logic;
    P25RI   : in    std_logic;
    P25RL   : in    std_logic;
    P25RR   : in    std_logic;
    P25RO1  : out   std_logic;
    P25RO2  : out   std_logic;
    P25RO3  : out   std_logic;
    P25RO4  : out   std_logic;
    P25RO5  : out   std_logic;

    P26CI1  : in    std_logic;
    P26CL   : in    std_logic;
    P26CR   : in    std_logic;
    P26CO   : out   std_logic;
    P26CTI  : in    std_logic;
    P26CTO  : out   std_logic;
    P26EI1  : in    std_logic;
    P26EI2  : in    std_logic;
    P26EI3  : in    std_logic;
    P26EI4  : in    std_logic;
    P26EI5  : in    std_logic;
    P26EL   : in    std_logic;
    P26ER   : in    std_logic;
    P26EO   : out   std_logic;
    P26RI   : in    std_logic;
    P26RL   : in    std_logic;
    P26RR   : in    std_logic;
    P26RO1  : out   std_logic;
    P26RO2  : out   std_logic;
    P26RO3  : out   std_logic;
    P26RO4  : out   std_logic;
    P26RO5  : out   std_logic;

    P27CI1  : in    std_logic;
    P27CL   : in    std_logic;
    P27CR   : in    std_logic;
    P27CO   : out   std_logic;
    P27CTI  : in    std_logic;
    P27CTO  : out   std_logic;
    P27EI1  : in    std_logic;
    P27EI2  : in    std_logic;
    P27EI3  : in    std_logic;
    P27EI4  : in    std_logic;
    P27EI5  : in    std_logic;
    P27EL   : in    std_logic;
    P27ER   : in    std_logic;
    P27EO   : out   std_logic;
    P27RI   : in    std_logic;
    P27RL   : in    std_logic;
    P27RR   : in    std_logic;
    P27RO1  : out   std_logic;
    P27RO2  : out   std_logic;
    P27RO3  : out   std_logic;
    P27RO4  : out   std_logic;
    P27RO5  : out   std_logic;

    P28CI1  : in    std_logic;
    P28CL   : in    std_logic;
    P28CR   : in    std_logic;
    P28CO   : out   std_logic;
    P28CTI  : in    std_logic;
    P28CTO  : out   std_logic;
    P28EI1  : in    std_logic;
    P28EI2  : in    std_logic;
    P28EI3  : in    std_logic;
    P28EI4  : in    std_logic;
    P28EI5  : in    std_logic;
    P28EL   : in    std_logic;
    P28ER   : in    std_logic;
    P28EO   : out   std_logic;
    P28RI   : in    std_logic;
    P28RL   : in    std_logic;
    P28RR   : in    std_logic;
    P28RO1  : out   std_logic;
    P28RO2  : out   std_logic;
    P28RO3  : out   std_logic;
    P28RO4  : out   std_logic;
    P28RO5  : out   std_logic;

    P29CI1  : in    std_logic;
    P29CI2  : in    std_logic;	-- DQS
    P29CI3  : in    std_logic;	-- DQS
    P29CI4  : in    std_logic;	-- DQS
    P29CI5  : in    std_logic;	-- DQS
    P29CL   : in    std_logic;
    P29CR   : in    std_logic;
    P29CO   : out   std_logic;
    P29CTI  : in    std_logic;
    P29CTO  : out   std_logic;
    P29EI1  : in    std_logic;
    P29EI2  : in    std_logic;
    P29EI3  : in    std_logic;
    P29EI4  : in    std_logic;
    P29EI5  : in    std_logic;
    P29EL   : in    std_logic;
    P29ER   : in    std_logic;
    P29EO   : out   std_logic;
    P29RI   : in    std_logic;
    P29RL   : in    std_logic;
    P29RR   : in    std_logic;
    P29RO1  : out   std_logic;
    P29RO2  : out   std_logic;
    P29RO3  : out   std_logic;
    P29RO4  : out   std_logic;
    P29RO5  : out   std_logic;

    P30CI1  : in    std_logic;
    P30CL   : in    std_logic;
    P30CR   : in    std_logic;
    P30CO   : out   std_logic;
    P30CTI  : in    std_logic;
    P30CTO  : out   std_logic;
    P30EI1  : in    std_logic;
    P30EI2  : in    std_logic;
    P30EI3  : in    std_logic;
    P30EI4  : in    std_logic;
    P30EI5  : in    std_logic;
    P30EL   : in    std_logic;
    P30ER   : in    std_logic;
    P30EO   : out   std_logic;
    P30RI   : in    std_logic;
    P30RL   : in    std_logic;
    P30RR   : in    std_logic;
    P30RO1  : out   std_logic;
    P30RO2  : out   std_logic;
    P30RO3  : out   std_logic;
    P30RO4  : out   std_logic;
    P30RO5  : out   std_logic;

    P31CI1  : in    std_logic;
    P31CL   : in    std_logic;
    P31CR   : in    std_logic;
    P31CO   : out   std_logic;
    P31CTI  : in    std_logic;
    P31CTO  : out   std_logic;
    P31EI1  : in    std_logic;
    P31EI2  : in    std_logic;
    P31EI3  : in    std_logic;
    P31EI4  : in    std_logic;
    P31EI5  : in    std_logic;
    P31EL   : in    std_logic;
    P31ER   : in    std_logic;
    P31EO   : out   std_logic;
    P31RI   : in    std_logic;
    P31RL   : in    std_logic;
    P31RR   : in    std_logic;
    P31RO1  : out   std_logic;
    P31RO2  : out   std_logic;
    P31RO3  : out   std_logic;
    P31RO4  : out   std_logic;
    P31RO5  : out   std_logic;

    P32CI1  : in    std_logic;
    P32CL   : in    std_logic;
    P32CR   : in    std_logic;
    P32CO   : out   std_logic;
    P32CTI  : in    std_logic;
    P32CTO  : out   std_logic;
    P32EI1  : in    std_logic;
    P32EI2  : in    std_logic;
    P32EI3  : in    std_logic;
    P32EI4  : in    std_logic;
    P32EI5  : in    std_logic;
    P32EL   : in    std_logic;
    P32ER   : in    std_logic;
    P32EO   : out   std_logic;
    P32RI   : in    std_logic;
    P32RL   : in    std_logic;
    P32RR   : in    std_logic;
    P32RO1  : out   std_logic;
    P32RO2  : out   std_logic;
    P32RO3  : out   std_logic;
    P32RO4  : out   std_logic;
    P32RO5  : out   std_logic;

    P33CI1  : in    std_logic;
    P33CL   : in    std_logic;
    P33CR   : in    std_logic;
    P33CO   : out   std_logic;
    P33CTI  : in    std_logic;
    P33CTO  : out   std_logic;
    P33EI1  : in    std_logic;
    P33EI2  : in    std_logic;
    P33EI3  : in    std_logic;
    P33EI4  : in    std_logic;
    P33EI5  : in    std_logic;
    P33EL   : in    std_logic;
    P33ER   : in    std_logic;
    P33EO   : out   std_logic;
    P33RI   : in    std_logic;
    P33RL   : in    std_logic;
    P33RR   : in    std_logic;
    P33RO1  : out   std_logic;
    P33RO2  : out   std_logic;
    P33RO3  : out   std_logic;
    P33RO4  : out   std_logic;
    P33RO5  : out   std_logic;

    P34CI1  : in    std_logic;
    P34CL   : in    std_logic;
    P34CR   : in    std_logic;
    P34CO   : out   std_logic;
    P34CTI  : in    std_logic;
    P34CTO  : out   std_logic;
    P34EI1  : in    std_logic;
    P34EI2  : in    std_logic;
    P34EI3  : in    std_logic;
    P34EI4  : in    std_logic;
    P34EI5  : in    std_logic;
    P34EL   : in    std_logic;
    P34ER   : in    std_logic;
    P34EO   : out   std_logic;
    P34RI   : in    std_logic;
    P34RL   : in    std_logic;
    P34RR   : in    std_logic;
    P34RO1  : out   std_logic;
    P34RO2  : out   std_logic;
    P34RO3  : out   std_logic;
    P34RO4  : out   std_logic;
    P34RO5  : out   std_logic
);
end NX_IOM_L;

architecture NX_RTL of NX_IOM_L is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
nDAVrBeJ0CQA71aZLSAFkzfHq3Bltvni3eICzQU3zXtY7996omaMkL+TJ0Q5l+4k
TR02mF+2ryHLjmVgc+hzKMVRc2qp5/9QeSJ9IaB30OEqVX7Ccn0skfw5GfkH7H1t
3J2NtFvpXtAISdL/L3Czc4rEVG2geCn80dLqXSlECyVKVPBItDXcG54mVuFvHlDu
LlhttsUUkD0m75dwi72BG7Tr3jd7HAQy/GOF5M8KzG3WwtrjwSxiR9zXStfBzsdm
ZU4B3CDwQaTPqSQqBQGMI4HvTaQAKBShBh9x0ykVBDr9/kbuKhHTaxXe5AchLFTa
Egqk2nFjw9W1crK/RL0/oA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 27968)
`protect data_block
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
`protect end_protected


-- =================================================================================================
--   NX_IOM_CONTROL definition                                                            2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_CONTROL is
generic (
    mode_side1   : integer := 0;
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk1 : bit := '0';
    latency1     : bit := '0';
    mode_side2   : integer := 0;
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000";
    inv_di_fclk2 : bit := '0';
    latency2     : bit := '0';
    sel_clk_out1 : bit := '0';
    sel_clk_out2 : bit := '0';
    mode_rpath   : string := "";
    mode_epath   : string := "";
    mode_cpath   : string := "";
    mode_tpath   : string := "";
    mode_io_cal  : bit    := '0';
    location  : string    := ""
);
port(
    RTCK1   : in    std_logic;
    RRCK1   : in    std_logic;
    WTCK1   : in    std_logic;
    WRCK1   : in    std_logic;
    RTCK2   : in    std_logic;
    RRCK2   : in    std_logic;
    WTCK2   : in    std_logic;
    WRCK2   : in    std_logic;
    CTCK    : in    std_logic;

    C1TW    : in    std_logic;
    C1TS    : in    std_logic;
    C1RW1   : in    std_logic;
    C1RW2   : in    std_logic;
    C1RW3   : in    std_logic;
    C1RNE   : in    std_logic;
    C1RS    : in    std_logic;
    C2TW    : in    std_logic;
    C2TS    : in    std_logic;
    C2RW1   : in    std_logic;
    C2RW2   : in    std_logic;
    C2RW3   : in    std_logic;
    C2RNE   : in    std_logic;
    C2RS    : in    std_logic;
    FA1     : in    std_logic;
    FA2     : in    std_logic;
    FA3     : in    std_logic;
    FA4     : in    std_logic;
    FA5     : in    std_logic;
    FA6     : in    std_logic;
    FZ      : in    std_logic;
    DC      : in    std_logic;
    CCK     : in    std_logic;
    DCK     : in    std_logic;
    DRI1    : in    std_logic;
    DRI2    : in    std_logic;
    DRI3    : in    std_logic;
    DRI4    : in    std_logic;
    DRI5    : in    std_logic;
    DRI6    : in    std_logic;
    DRA1    : in    std_logic;
    DRA2    : in    std_logic;
    DRA3    : in    std_logic;
    DRA4    : in    std_logic;
    DRA5    : in    std_logic;
    DRA6    : in    std_logic;
    DRL     : in    std_logic;
    DOS     : in    std_logic;
    DOG     : in    std_logic;
    DIS     : in    std_logic;
    DIG     : in    std_logic;
    DPAS    : in    std_logic;
    DPAG    : in    std_logic;
    DQSS    : in    std_logic;
    DQSG    : in    std_logic;
    DS1     : in    std_logic;
    DS2     : in    std_logic;
    CAD1    : in    std_logic;
    CAD2    : in    std_logic;
    CAD3    : in    std_logic;
    CAD4    : in    std_logic;
    CAD5    : in    std_logic;
    CAD6    : in    std_logic;
    CAP1    : in    std_logic;
    CAP2    : in    std_logic;
    CAP3    : in    std_logic;
    CAP4    : in    std_logic;
    CAN1    : in    std_logic;
    CAN2    : in    std_logic;
    CAN3    : in    std_logic;
    CAN4    : in    std_logic;
    CAT1    : in    std_logic;
    CAT2    : in    std_logic;
    CAT3    : in    std_logic;
    CAT4    : in    std_logic;

    FLD     : out   std_logic;
    FLG     : out   std_logic;
    C1RED   : out   std_logic;
    C2RED   : out   std_logic;
    DRO1    : out   std_logic;
    DRO2    : out   std_logic;
    DRO3    : out   std_logic;
    DRO4    : out   std_logic;
    DRO5    : out   std_logic;
    DRO6    : out   std_logic;
    CAL     : out   std_logic;

    LINK1  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK2  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK3  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK4  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK5  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK6  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK7  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK8  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK9  : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK10 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK11 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK12 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK13 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK14 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK15 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK16 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK17 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK18 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK19 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK20 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK21 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK22 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK23 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK24 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK25 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK26 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK27 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK28 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK29 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK30 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK31 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK32 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK33 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
    LINK34 : inout std_logic_vector(IOM_LINK_SIZE - 1 downto 0)
);
end NX_IOM_CONTROL;

architecture NX_RTL of NX_IOM_CONTROL is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_CONTROL";
    attribute NX_USE of LINK1  : signal is "LINK";
    attribute NX_USE of LINK2  : signal is "LINK";
    attribute NX_USE of LINK3  : signal is "LINK";
    attribute NX_USE of LINK4  : signal is "LINK";
    attribute NX_USE of LINK5  : signal is "LINK";
    attribute NX_USE of LINK6  : signal is "LINK";
    attribute NX_USE of LINK7  : signal is "LINK";
    attribute NX_USE of LINK8  : signal is "LINK";
    attribute NX_USE of LINK9  : signal is "LINK";
    attribute NX_USE of LINK10 : signal is "LINK";
    attribute NX_USE of LINK11 : signal is "LINK";
    attribute NX_USE of LINK12 : signal is "LINK";
    attribute NX_USE of LINK13 : signal is "LINK";
    attribute NX_USE of LINK14 : signal is "LINK";
    attribute NX_USE of LINK15 : signal is "LINK";
    attribute NX_USE of LINK16 : signal is "LINK";
    attribute NX_USE of LINK17 : signal is "LINK";
    attribute NX_USE of LINK18 : signal is "LINK";
    attribute NX_USE of LINK19 : signal is "LINK";
    attribute NX_USE of LINK20 : signal is "LINK";
    attribute NX_USE of LINK21 : signal is "LINK";
    attribute NX_USE of LINK22 : signal is "LINK";
    attribute NX_USE of LINK23 : signal is "LINK";
    attribute NX_USE of LINK24 : signal is "LINK";
    attribute NX_USE of LINK25 : signal is "LINK";
    attribute NX_USE of LINK26 : signal is "LINK";
    attribute NX_USE of LINK27 : signal is "LINK";
    attribute NX_USE of LINK28 : signal is "LINK";
    attribute NX_USE of LINK29 : signal is "LINK";
    attribute NX_USE of LINK30 : signal is "LINK";
    attribute NX_USE of LINK31 : signal is "LINK";
    attribute NX_USE of LINK32 : signal is "LINK";
    attribute NX_USE of LINK33 : signal is "LINK";
    attribute NX_USE of LINK34 : signal is "LINK";

begin
end NX_RTL;


`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
mBOb2AyRfWm1+yLHRL5ShIsAUfs/pXgXlWx4DFaR1VUc8qZxAE/krI0ExdLFm6lU
X0Uk2/bN8zaeR4aJvwniGSlziwp7uT1N9Vhh5V3n+1x/wUjb8Ibsnwu/hgdCPAg1
QVjWHK88slCQPDVo1hFZtXga34m5AAAMMh/Hf7AmmJcknNovMhdEjRP4LYa4bHQs
U8YzZ25PZqhYaoDNl5ZWyhoh52WPlV5pTjb+uK7JrMkbkht6WTJld3vKap1hoMsW
jN8MQ1uhqn2P40cK6YAcaly+Rh0tFwY/N/hp+HeWTbh8ktfEXxU19fTmt3WVS3/O
m47Sdcr35Cjmn8lXLDi2WA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 10224)
`protect data_block
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
KtnayWxvXLNu+EI+1cS/qt116MHUcd5QOySOtnLf7uvJUDnp9VXJ39w2Yb97NEty
WO0nSjsMjueWM6qlrIO4t19PK/A3a+hvLYvOtb1x3UPwhcv+9XCnXxegfLQRv3G+
OtsVDrTjL+tKdk3abKLIWc8XyWrwuiP8qPm4fnIjBy2K++5vsHDC10PjBPV1ZDXn
CMjYoL9e2qFll3r6ZmGIt2YLZ9xi51ljY/rh6G9NsdMWbq/XTHPJq11uKDu8VrEa
+o6wgM0ErX6VOSwBkzDcXhpOkOn/1i/pZSDPMrtnFZEDsKURbYPSKublztt+tEcm
r4IR3cMzpBFycM2SJpoD8b2BBFZ4VYh6QumL0Ssd9h672ENBG8DpbCmZW1YgcXGx
r7XYDYua//oVzCxv+I832KoGEAFxShlpfBiJlU9f6RyTwW6UX6HrIZqBtTuQ3RF7
yYGcpIeImY+PA/MMg5nvMoYuLQ+2vqd84cMWgUKBDpIcR04AbV+xlElW5kOwiPnW
tZP67bzsdfrZIm+S9+JALMl0MEyxn2f8ZdXxx0NPsZdF+lVyV2I0bTN4mja3rDB2
pSp7xCjiCjARMYuH7VKaOnVJvlY+lN2LGzQIh7ctaIOT5Z+/k9k8ORlbDYO7o/Jt
jtrF2NCB3AxenYESZJih7VtXqUm69aBpb87wpYShUmx56PyspbVuvKT9l8arxvEm
4kSVQo7WVOPLKqQXU2lSIWJNqF4ND3/YTrkMuX5utzIE7VZe5V1G9D79ZOqhn3JD
K6/gPwfGSL8t6a/MgxKPO5ZrZc3m5T8kw0LvZXJ1GPqYTHSpdq/OVbzah3Kojw/I
fAV1cckGyupntC2n2+Wuj0bkEB0DNbeuPvA6I3EHFYdI2qFEu/5lFwuvtf/Z5SIT
XF0s5DTWSWlrIuTLoFDDAHA+Y4IZ12RvA2ONu9iJsYVtVBq25/E94JeYqrE5JkeL
qORhKdA3MvrnWIhEbGvUzTS3caHt4sOcchgvYURkLIU3TqUH7A2FYaTl+TfRr1Np
JDi9GbCbjPWmrWxf1KJ7Rv5UEl3xSoZGtpvUsXKJTnahgDpadffIMsPL0aEAE4bi
qR6EhcD8MdFfQr6Ig0dCSC06+qYxKnCsxE6SUt1/IX77kUDzjinjl2TdSjFpgKoT
/nYJu097EdBXEqdAYf4vsnFFjXObnOleRZ02w2hSLcELtDbJuXXs6e4m/jiZo/6F
PyUCNoyl2+vpSKfdVcFkdVul0A+ZQzszanBDtCNU9y9IeRJ7qf+kberi+I6ZccsE
+XIlwKP8ssfnpD7gK6HSpNyUFIP5Ykmzyhp32H+w+N/PQxptbRq9DIKpUSdUcYib
ed4hdejfMyp/oDQNU9J35oDp0B1H+L0lNGxOBZjz4/YIwpgysYObqbGxwyFYjlxO
lUt/ULp/hRSy26iYomcxXpcgwnOUUZ25j79gmAiMlBscOsJdTEYznqtI/Tfg9Z0t
j3IBuyKOEGMQa6CR5fPAuq+vDVHYzdZDck1SM9lLO2SiapBQaE6LNahQCSqBxrAz
Uvv2iA90PrFosPNhPMSlel/KIeL2og//8tGl1aOebBzVAW3JKw+uyMwq8VxV7Ep6
gajAoRuVTJhKPMbbwIoRk1k1xh81VEqD3/Sx7+KPmEomNIRYK1ggJ+MEEJu8cAlt
nqiv/pmsGNiDP2TXSQWRu96c1GFygMT3BHcqrB1OsFNW0E99DrFlXq1V/Ue5GtqJ
pwnnWRe1Tb6mErYW1ZD672x1c9GwAAgaZD7nd6NFnGel68LJF9RTFWDQSouWxHE0
z+DNSnxSOvzT+1IHcWLoeAYaXMtF1cqm/Fftl+WTeepwsVGNiOOBqjUZGBgHbhnB
gxNK/v7mS1MZyVJ59lYlPW0lD3x9kB0miKsvNDd2mWQ3UzGJMUB90Ylgi17afu3T
qIaKal0t52lcu43/M9h19s2OTgxojUBpHIbo8FrQbAJK1nW6WtX+pi9JOCVE1Fi1
rBqgKKfPpogEW2wAOq+dA4aJy8h8WcCLHWbaJKHABn7arVWbMNqKgTAoN2bR4Qri
dsNQQW8qxg9YWwPyyX6qcNe+hzvYTeJgcpc1yGwTLCQaWa1SAVNEjtK9syaihW3B
NS3sK7xSySPwJNGsZYW6Jy7QDTOgzmG/Op23E06BWbVxFpG7az4IqxQ7ewaq/YsN
dJbOsxrY8wL8QDK+N2OAtSjHKHAYeNRqfaC7WAONR/DOPqgc1on/bWMkdKemD5jh
20epqi9xejcaagZNLMON6QbqGUOfnJv0IPVqiwV6AUT06o3ujTz5hvV0R3nIoFvh
t+YehxJlYLoyz6rTvLhG4P7Rwp/xenBHhbxfII9eSHQH+KajIeH3r48+y6WRzkZA
743IYhYlUV8cMHeGvOtst6c3N3g5xCwlSGKjLV4BW8esldB7qoDFvhuF8PavsPub
HZBaxV1pDeA0n68r/2+p31a+LwDDKPQIeHYYmdGzFCGkNsyrvUjvrZci+wppz+sD
jJHT+xXft40SPCWif5UEhcImJQYa3845V1lOJ9ewgVnAJE4CYlJI6N7IzU9nkJq5
92phLKECP6KMiiT5qwmtMGRbaJpobKE6UmRdgSp0DJKPviU3aNpXnaJCKXnpe2ib
byGZKzLUGDmt69JEHEsvMXVy2V5vr7CXZs2Vqis/HLFz/KHHWKfFF8AwxSaSZ6zW
UVTpkARPhxEKw/wsKLGB1q483wNuQYuPsDA3K2KIjV8GLbCsEpnqehOX6/roYl2E
hjwR9cfe/Mj21gN0npPJSOGoeySXHKEs8FLhS111/iCuZjLeVOcg1WA5ZAP6qxFh
VVPM8BtKXPi/BSkO9MGsRMr6YYfy6h3nu3rhZSemLFWDGFEH+LHYbXsx2RSblFco
DcUUXlZjr3FXWF2ZXjgUmXLQ/SRKR1eA7dc7ucxXNpIdYjqkLxU/e2n3Mrm0zAeR
8FqKsEsqJenno6JG2jiN1gDHYUhPeUCk+tlvuJHKOVhaDv65K1dNK00aC0M2zw85
eL24siYl0ryjJBagjovDC4RrAPur4LnKaouHhL542NZ7Y/HJEXHDCD0/eaIH/Tgg
Pr4fwt2hc6WInYWDL87gw5b7sc87vLcCEFZTaoxH0nSQzU1kmrIqzBj/EGUl6159
rEX1m8eN+zwLszm+a05voHc7NycBGWnLCdKACOkA+BQ11nibpLa0MrTKmCW8YOgx
YiFZAPtNpnHzZqCcqf2fvFTLpKGi0UyWWUHYRckqssRfbBJRNDH/VuO3rKcw7eGX
ixOFxfxg/UadfUJ7lHmTTSOl2avROcOgCj3yjyM3qJ93qVYRJmrPOu9wnti3j21U
pSW/KqEfxOYN+mIUznrJZ3tTokWNr30ZTYKJbk30XVmceKsjL7Gl0DPB3j3Fo9fM
oTFZqGG7qumE9yeDcyTuLuub8h9faiGZlHohWjIZdYAHLgGDJERgrU/KugnApaoe
4Osg06ie6lpFnX34ll5Lvk93nvLURkIGPchLNgTpVPQkvXnVjzm+CqYfQEWvMwOs
NPPKm3sFR/jlPlZuMTEbjPAM6hbNMbWuTZaOipXGTfqF9p6KjrXNWTXyYHIVZu5N
Hgy0W7m/dpHSaFlG3clz3hGDfgJM6q6YY8HosQLn/8ychQjxnR7mChQB5Ygy+bnU
Qu3CPtxENxEN9Jlgc6ot2mv/yrp36pMF4jFyc/rDnuVQx/FZr2Y8kv3eLFT9xSAp
k1QxiyBJmLeRRyFVO1imh1ihsuaO2pE3iPV7NWl+YwSHDbv2ZpBRgJKgspZtWBHq
mNJOE4uKyabHdVFcMALYAIvnZz9AZFGaZbi0km3r3ZpGZWkbLSqw8ZFiz3l/2MFP
bl5+jWXUnge4vS2TL1OQZiP2NxbOB6gLTZ5rLvmF4lVegtfgPpRUTR+PDWu4zNe1
aj1SGxo2CpaaKe5vdX+x0WpL6ztjUxvudvxtFUyroOHaqXAIMG/QLd7eFY2vu11M
+/V1wElossvTJp5qyqXSy/GFcYpKCPvwmIYD4RdkM0lZcnXuAVF+33aLDtXYh8s4
DJiqj8aELHpxkaZPuIXAXgiMnyjFtcYwCmYjXODW8Ea3f5wiyjZAb8U5DQP7/xO9
dbxuQkmnqgybliqiNCa+i1SANmcVc2m1H+mb4SSH3eMLcJdIYtGOVE+77tHpDpb9
aa87jtyMQKP1wXlmJ5qAPUd7WCZXlc/PY0YUDdEAnuIzYoNrbWn8xJAvL59YgqaJ
6lkxrixLbrTkHRM67qQX6hbAzuaH8D9xtBapj/JKumbsCH5XXy8tcTUFhcVFJdnN
bDMSvskNZbNGV6o3bZh8WhgHA4Glyw2moNkKBvZFW8bqftOW7dB+rSKZRyb2UXBI
/gc4nqVTj1mcbSICjSM/RIrznby7UNw5qegpInd28suxebtWiDWKXokpzVGXjRpY
N+my9ZCBkgYHmE298GcPW7syQZ7yVUm2M6T3j6J+88yDwRElNfXNHrig7lN41GU/
4FnQcVjdHA0D3ouyoXBjcIH0Y995kmjLqIwbXbmDIUT+JYDXsOdgo1QJoScCfkJV
3S5SrLQ8zKhifbwHwLPIujOZXdBcm5w9bFfB9xV2pIop4RGwRqRGqtJ0vEJ7/zst
TzRq8QCGePFVIOjo/CsaP7gb9JIALgqMwIJ/PD0F6BXbrFxeHE5qvm8/paQwecS7
HZwF7S4lvvMcIgDrB4Anz6xZC8aK/LUFas884oOefcd4Y/hdoWuGG6QMHJMpuW3A
fhc0evLgtNGgCKgopjIzeR2duVPa1BbIWPWdp8XNZUcmKNRgG2wNH5QWYju6Jg0g
lTPGzeFd86uC5ToDpahTKc6a2Z77UbNpHnKHu1qkirIat4Qk5N34Gx8TnRIE8V5q
4pHERhHcMXeWnUnNC/TPwYLwcvOnbiqXVVi1RHU85MYedzFdU02vwrJRGmrU1JlQ
PPqfKNnDoCHdsfjGGOBw8lGZ3bVvs/nH4F3W0NBEij5Qo/buihqWoYNhsy0ZLrtD
C5UTJpBj1Hlu2KDUXaRVQB714ePwyg/Axf7AK79tThcxjw7pMWPxIkVU9qS7U946
ouFKwteIGtl7hGKf6HcDzMzst5TrCHKIWYKeowPQuY1299zFY6w3So4wSoc5FbIV
jw1iQvqvuGeyzOnzT6ZX3bo/o2EgFnxcmzNjMSSE3lXf/AFeemN2v+f4SgYz34SK
UvwfV6EHPgCtcS0YHbJL+laQXy1W4WUFJbEgyeHsa1HZLnocgDH7I3e4QJ56vOdt
QKXUDQr8kUuZqAOoUUPzQYRbRqQy5Yc9S86z2BmbiDaXQ6CJpdDeGEUGt3MUBSSt
b7E+rTGYS/G9eh1d6CmUfDC5Fzr6gkIrtAsWP7GiPMVzBrMBIYxLmN2hVEW8LAJq
GpYL+ESR+3aKfR1k6nhhKkDQe875bBWkF6AaTUwO5bt8MQgNX+7lhmV+fM2+kS5/
D2v7RhkEZUj5u7cpdtjgbbmuqKydchCIm0ux10kM3kywuz2LxQ4Y7PnYVzlOxbGN
SffbWAw6uy2ZZIH4OrK/D5f/J08kK34WHDoedivjC02MKLZr/QD6pSVk0fePx/H0
2c78gMAj+ATscqEgRTu6cjSuvR73MUpz0SDC3jIt3q31eoXdsmxvbJQGhxOCcejH
yUcMtuaOAS7HPx10fkOof10IbmdOEEjOp6HtdZ3q0/CubMtw53SZSOirRMTIYJJs
p9qPJ44RKS2LXeWBhFVr2CQtnafoqxVptfn1fbQQXmKu9h2NsYDYaj510hpvTiL4
+hgnD6tgUbz8jQCMxvnZBlPD/Pa+0peMD1iez9hdITJhL6tp0s9JmVNih3xU7WHR
+Owo7A2NyulzlnrgDIviZcNBkVUsx6DWCPYb7xqQoqBoRCWuSB6j/edaeNmLS9F/
BHrt++i3i05jeaoOxSfYQ+qWXGvIhx5ZgOPJarfZhClJThsfuGZzlGy7JXBmhNjY
wGiPDbZrGtFRRUv56KYnTr3i+FahnebleTqBrMcspya0t/qvM5mdVMr5S0aL+LTP
YfBjn0snwJcHuAh8yoWPey0u7VkfDFzwQujSiSknTPuoCeUR/N9B8zP9Z8fIIscj
QcJap00ouNRsc5sLGB2DZszztl9RrL1gSv3o5FieTiqJJhU2+1EBwA5h9I51t8QA
W+uJPxTmtIl166dds6O5YuM55ytJIwUCfOONDM9PXE/dVyU7NEjii4FBQ4Mzf9Gg
5XluWyrZsuHdMOIJYA7ypx3S0cvS6CESCP1qITDFbffF8BnF2Q1U7aGLTZAHQYyT
mTDj4CFEAtfyPhq6dZDWupmsZMbZBeuTb7QaJBstNH3vi5lyPTB3EOXV8dvOiSqr
MJVsaqgz799NY66fhUDDb97pAQnPBHyCYPnzy7FBdmdIhPw2gmI3oZznPrpUzQOw
oTCT4dSaJguWRlsOSIz7aunBfSUKR0m7dtE3UC1D1W7DUNtz5PEfMYzVHEQJLlI5
fO5LDU1vJ6M4HHpV1ip7Tw0Tqec7kncu7pPhLGiiI9MhCM5/jKP5CGBoadaji9tf
09xjazg+8ZGzdnAACtUt9m3z43cSmDpLTDksnKqtavWA68/GJ+OzjuGrDQvw8Hv6
JyLKgszGgy6JQjPjLVUpc9AKtb43EiIh6tXlbUBR6ByDaq9SRqwCV9N659X9bQvU
3XMOJrAWY+T8pgl9q6r/O1mfArP2prQeeJ3uC+u0Vkqq9kVTaAFUlhczpQT+W72m
uD6GkvGz/Zmxq/gATRpNe3F0uLeL784FaZiHWXYzRmmGHwwFHrAgmj5FWl+oyg54
IiDT1Oswe0NA8sMSK8H8T+A9prF6x1lH95khtNgWfGfPfbpXQSIlI1oMm/AvCsPP
cjywusXZcegRVe+bgOoYTBW6cIYxwPUrJJY7XHq0Jks9YGL8ImZ0BJsRH/kH/puY
Yo0URNe+W4eN6CvnDTtIhItK9Hi1Mnbymz1Of39xwOcPYdZZasGUJc+ve6ClrZjy
BeTqu4MLR6qGXqCEn7GPO6ldcMQoU9wdC5Q1EA9VDxBTdQV4M6ilEZQcHGYOkuWT
CG1gDo3lV3784Uz3bC8Q13QY0gHUVhcZ1GK5L8+sm/ao/pM3oNLk9a7jPnywSjY5
ZfMmZeqPk8nNQzqnDQ0/o7whWGdT4T6KM7JiiDW/nwGAubeCZNPOIo/Su34HYpcL
i3Zeb0QIX9filhKc9CVK8fZolDqHP5zq9JmcP519Tot5n/mxMF9sU8ApaNiNdlvw
T1GwjDUW2AbwVasla48TxgnmgCA2aYQWSYS8BlTxF6G6NBvbB5yES0PzuP6UPZPt
WbvpEsEjUCL1Wp61cQvAoxn2Wg09bKdSU5HxmtWvEIRieyM3tSh1+xc0C+dk6znV
hwaGy/KIwnZZvaFq56dA/FlVHYAzwdYfU+/RDcXALBTFXPig2uYj2vEv8dUUgv7q
Lw5OcRUb83xmMMRHfhCbSvB1G5qMx6RFNFe4i+IJcHMn72a8jw0YdTqvC4CSQgVC
Ty4fNiXn/Y+s9QFo0gP4I6jwhyd35dcf+azMiV3Iy5WVuCRQBVI+XgpMBHkz1RyL
y2/mGI24RKDOV6NLi0GVrH92IVBvtfWr9CZVoaTPLky4OTBVEXh3eGbZjhzgU/Fk
8O46uAfAiq4VW3AA8zsvP4zpnEV5o3ZdbkiOUDRylD1AN7tfmJo4J+l/692VEpOA
+hP5OawG4wkpJp80gMl3nRWEIbcibwRanchQYSJEPHnMGPi+fzj1rbhDnPzm9RhH
wIKAoZ0QwRujbwc+LtU+lGM3Dx8rYtPM1VlufKEUFS5doJt1CFVnLVaYrXrVrjNW
pMU3lbx9cFpWlLIdC+nM+3pYVnurrSjOOctQiZ9MCykIiBNGVPrK9Z3HHpTw/5F4
2LCi0mc7vCTVzqbwhbtFes+rR5S7U3N/xCEz7g3blX2Q4XTo+ZUOA0X11WaCr6rI
I8W1VNymKU2Gb7G+0ivdF5US3AUwVPWduGVBfgpR9r4q9IaM04iXJhPNTmBO8Lxd
EJnLiaWt2Yq+fC0T+JNO6Yb147UA2wMgbKC19F4vXJ0jdyDCXXWOUy143HDmt9Ab
jsigK4AH2PeKFfihg0qPPrCB37u7+Ndr8S4TeOLW7UAvCAY/zdfJrgufaQ6Q7x2l
DE+HB/v4Hhz0rwTz5ngwXavdaBrw0m0/XhDLZeL5QJCFVdgZKLbWIAy0Hiv12PSX
dkfiGwEkQnxLoHsVehQtX7cwt+jfD9+nKVoVU8fCgck+Ait2nQIOMC94pvAgyuDG
8LerztzMznhyuB9ein/cipwxHMINUmFRSumOnblqfhDsacaRmUAfJuEoUJwYMW6b
uotT8M+ewL4rx7uwfQnjkbYpJ+vr+ub9/2kB2EW2CZXUE8U+YQtLcd5yfhiYFr3P
WX7wF30ZD4FecDnnSV8/E4xLL6VCn7PDDlGwEsO6yJuQqgBEK50qN2u9pC3wvbmp
5ggXP11D0eVGp8opuh1PegTF3KXYIHKcXkAq1VZcI7wMt0/L4wi15gKIo8vU2GiZ
V53T0xkvmgLoyVrHLs9uWqxyXrxbO1Pl2s/zKO2RwrUC+Ei6fe27AlW4wKOQsckW
At99V6IZt0YU+CdFXqMLyHVbUq+abdrprIkZE9Lq+f4x8Rps+HA/POoMVMK79j9X
RpvwjGera8/+1raKs8gOBweZKlEJLcMw5erEKowHibq1jnXcqlO+vDiIa4Ib7Ki0
1t4UQmm0EN7tCRE+Ir2KjYIBIq/KYwFArGwphK+QV3QIxx/lVMmQ2zSIKAbNPSRh
WmzoXve9cTOI+551kyD+x3QsEYhqVHnggerX+6HtOrt1m43bDXvd6XIIg26/fdOk
tVHiW90ibKyhKPrtXZqOFQ+jQBX/2GV/M2cF/iWWNg/VkEzn4lmxSBhyIIUbfxQj
r82Igea+2/2dobOfp2S/czPBxmIWfjBZDTEsbJVShdFCBoNY6++CuguAYpLHRgBh
+28BrcV6eAEqr/tQkGWp+rT2WerLh8Z7axFp3aDv9EnE6mhaL/mvG0t6eI5XN89v
b1v2VkW7XqQUpWKg7IqMpr1aD0F/Qs8/5BCOWKSlrWUQnO/Tq1m5//ZrfhVCcC3g
ftz5EewsWpgnc0wlxrN45Om/bOdMv3V3HDeDOzXT0SPMynRI1uQrvAVZs8s2vlD8
Z7pdq+hrrVN+DWjsQ0VBSwwQIzNEDfOsXpO/gd/gjMSXO/uTvr1Elnm8qrhZHkO1
t/jIdEQuoxqmwCOcrihX0ejDIzNj1dalr+SnmlJpz+MIw9A3mHmRParuo3gis0CZ
W38ly4GR1zoosH36q+Cr1QUUMbwor5fzpQGBnWUN+GZK9YX8Z3N+x5CYPgf4cQu1
0Px6RnYDMe3nmy1xSl9aeiVZ5Vn9ohi3C2x2VW31w3ciwDwn0ANcSqfZ9zKC+PkE
NZsIpdC6YTg+iF1dm6wCL10YSMjfXW6fzO/iM5s6kBdx/uL7B7or7HKyvyzxjIow
NY50rtrsadW/DqrnRXkBnHUO+bUL/nOYGSJORB7k5XqPhHuqe6AZwIrtbsgijKUw
ZDYFAdtgbbirkl56NCCcT224/zGg8CnmfoSZrhkGcRw5hDlYZizxjMljF6bLR7yh
hslyFQiv81M+UsnSZWYpvKQQB0OPNovpblHhFV09NRnGJ6xB9dH0GJHPFp75dBOt
lcAZAG7kY+s8RejLMF+oajef8f6doXQNjf5YUwuRvmebn2av1Zvz6s6UWxKQ7PMH
wfWl99GWVbILnq6yGd/2NPNYFJ/vNUTI1SslYiQ0i4XIJNPxb6li8j44/fSuC8RS
+fYD4WWaDba62Ts9TIP9DQWzaSdWd7LRAHnhHWtR6rYK/oGamQQ1flH2RElamgXH
tsIcNmhtLCgYJU795+FdOVdq+MOwJUSQhIiI71jOQZosCQTvmJ068effMKY0L6Qg
28KKwFETQ1sFPPALRi2SmnykpviuDVb4Ddx6RK5uQnKW2kxBr1IfyD1E/GDORhjb
8QnJgxBUG6sMCVoNH81EzLVHbLGE5LvBDkdkeU8nLUum28doP6X1vf7IZGKHqduW
v9F248Rb55YxQ1cszYk4qIUddctttRKXRFVO9LGYwgJ+Gx+5+M4XVssWKPUhOize
k+CWTG5mWpuSo9dXxCv1tIdZsIWRlE94DTdp0scgG2l7Z9pJpIOXHAfa+Jcn4zQr
tql8lzwPuBerzn7U/cZIjesDbIzYScufNXp+5gqp/rh1FZ2aTUik9FPr8rA+Qk+P
grKonuN+9pZdQWE62+tyJwclMtDq5ah+ZAe50BnPSYq8DcSfmxR0/VvACY8FpGCI
PYbaPSh2F61BwuNxMyT7JWVpxNehnWRjZaQMLj8cnLi/MJ0IGqe/xHVMqFJc1CXn
iBH2hzZ7nhEdbf1n0QG9o2mhFS39yEtLMXsXFyeHAAQzZMPoT1hHOP81VyI7WQFb
ewJosCZhihtUXQUCSas38/wukM5Ge50w/nmkwFdsysfjp1QN7/ZvxZSp36Y5Gtr+
Xvh6WchLIVXSUzqTnANOwYsM2BbV6TugNA+TmLJ88KTmYWzrmEsrIRicmgmaF7gt
KAJT6xYh6o9mygs8u5KmsnhO+6GNZSCmYq6V9xKA/P3CwH2pATC+Rdj64v+Lz591
+CyBIThtv4KpsrqTEtaCFU9T7dStFrHOSJB3VI1+ukcHjOGGeMQ7nQHKtUu9RuSz
YEimce+QXOXf25p/gWpEv2BGm46kxs7lENRXov7UJKljZ4znsBJ15spZgDTTM7Ch
FeNHJ0r1uYqr1v1zIFqTnyJ9u6xUU3XuZA4rKdTxcqW5FcFgmX6bYrwu+NupkoS5
KuedLWoHuogByPpC16m+eazApe0VGm3OH/0h7HvJywzqNnF8znniuCNzVSPLrbLr
Pm10e0pgbQUwb0hcIbYYWEEW72XlII1rRjD0h533krO3BnXOTp7v6VGvMOVqyjvM
gT5TeJLuEpyC+c4V9vveUakg+UMC6qcUoX+djRPnyqWKwtS3ArlBBxGVZcyHFTr7
MMpnkqOJgkM8rTBiu/h4i70P2Z5cxgQp48M2G/Nadak/9sVAAmarek9IP8mOFC5n
9hfmHdYpQc97w89f9UeJYrlyoy/J9JB9azFqx9ptPhfO0w09/gWakzmxVPIDeIOD
sOKckAK0VMLZ8D8owx6wqovwbspa8ywCvnwud7Orck/was/hXUW5lNk7PGKYaq/R
`protect end_protected


-- =================================================================================================
--   NX_IOM_DRIVER definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_DRIVER is
generic (
    epath_edge      : bit := '0';
    epath_init      : bit := '0';
    epath_load      : bit := '0';
    epath_mode      : bit_vector(3 downto 0) := "0000";
    epath_sync      : bit := '0';
    epath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    rpath_edge      : bit := '0';
    rpath_init      : bit := '0';
    rpath_load      : bit := '0';
    rpath_mode      : bit_vector(3 downto 0) := "0000";
    rpath_sync      : bit := '0';
    rpath_dynamic   : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    cpath_edge      : bit := '0';
    cpath_init      : bit := '0';
    cpath_load      : bit := '0';
    cpath_mode      : bit_vector(3 downto 0) := "0000";
    cpath_sync      : bit := '0';
    cpath_inv       : bit := '0';

    tpath_mode      : bit_vector(1 downto 0) := "00";

    location        : string := "";
    chained         : bit    := '0';
    symbol          : string := ""
);
port (
    EI1  : in  std_logic;
    EI2  : in  std_logic;
    EI3  : in  std_logic;
    EI4  : in  std_logic;
    EI5  : in  std_logic;
    EL   : in  std_logic;
    ER   : in  std_logic;
    CI1  : in  std_logic;
    CI2  : in  std_logic;
    CI3  : in  std_logic;
    CI4  : in  std_logic;
    CI5  : in  std_logic;
    CL   : in  std_logic;
    CR   : in  std_logic;
    CTI  : in  std_logic;
    RI   : in  std_logic;
    RL   : in  std_logic;
    RR   : in  std_logic;
    CO   : out std_logic;
    EO   : out std_logic;
    RO1  : out std_logic;
    RO2  : out std_logic;
    RO3  : out std_logic;
    RO4  : out std_logic;
    RO5  : out std_logic;
    CTO  : out std_logic;
    LINK : inout  std_logic_vector(IOM_LINK_SIZE - 1 downto 0)
);
end NX_IOM_DRIVER;

architecture NX_RTL of NX_IOM_DRIVER is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_DRIVER";
    attribute NX_USE of LINK: signal is "LINK";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
N5JnNCnK6Cjm2i4YYEvJaJ3zAVdBGvt7inxHkYuPMoXTqKDWOaKww8X19faOoERM
YuMUct6rKbF4I2zWvMjudeVbTQ4mxFWuSgPjJqqJlx7z34Sx7cQ/gm9nyw7fnvI8
mvgNva8SboH44IAlc8DyimhPuCurCcwgUpSNkFSnEIMwBSiWzFx9WQM0sg48zbYP
xmUlDFch6cVQDMACSuGXC+waJ/qYdq8O/z/4UEQXWU+47OYdFDCiHXM9nr8gyQst
5rE7x2ju3ghy4TizBay5f67rBGJBK9FcstIYbOEFQcfSBosWKJREkMXeP2nvwqBp
2XSizpVTcdOi0Cgaiy7YrA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 19088)
`protect data_block
tlGZOkZ8Ucw0a19oCf2G3WkF/Nes55Q2pcGnlp63b4E6nR4a4YA/Bewt0wO541Um
3xc6A5Tct/7bOJmFGEgDqKQmEFo3n60lj7KpNWvLfZcc08J/bdpGwWiOqPULWYCk
YfxUce2mkf5uoxQLHMBuPa0uPOW6CKb4AJ7nprwDES6STSpPPsADLsDvL2K9e1Sf
oBojawu2mzpO9S4nsEqc7mwN97lu1DrdI+3TqKgUQGahefQE65KmNt4O4jBzcO8S
6P4elIxnz1Wq5HSQ+MAIujeTUvIZLPOtYlZk7butpK9J4IcbpAFvJQ5y1rBe89hV
vx8LdURvnnhJCM2OpoqCAQbVCg0mLvVCS+QBZ1gwRqHSvT9djea7JJRpBjbsfJ90
o5Y/lSs2UQjMIIEdIOVgwBG8Sw6k1v+LiL6ZQBXbxqtPslfMvfs/6N51euDJopzG
Fcpv9OzUxbnjnQSLZGFj+rcm/mhsbnBjRyDAtArbm3uQBzxWiqL23Mb43Bl7h6Hy
jMUUydd55eYIJUyN8GdR6YXjf1VNj/TdLcUdc3lSIqrkq30f6mOCFNn02RTcvCns
GhMS88lqbTHds/4pQ4juxqF6gdlg5miTkytbrrs6qTJqHyDyjK9jeAugTJWc6zo+
Yz6QZAYBlz+X8OY2KqQGr5hzJR8nQpWklrFPqkUJWjX6hfKkPkD2k5ZYLjB9rUWt
XtgbYUc+HWlwU3Vq4x3wf8GfYlSfSa7Cmrysn98RZ5ZSioB476onuG7NOF0R5zB2
TTT6akTAGlmdI0iDb4I6WnBnWLf6zmojNx7W5ZZx+c1/XZFCdCf02mO2VZNguOQL
HcZeDq8MtpCnJWkbmG9XsdKfSnRAdkEiaLpXe1TwKteEL+ftmrcHBrbpurlP3s36
45lQ5qtvFA9kaFmUFhX4LOYEzi314CsD75ehVo7kKOKAAB1V5h+XMyDwMZtEqjmT
GwdIXb7800IogYCLbBhnqJIPeR8gCV0LTrPXCqWLFZs3h4/Nu7+lVk8lxQhqbxt+
+eY3gUhWFFMqw6lK7CwCF7oFKSZfvaTHWNMrs4qtQeT/Bvy+xthfbWD/9Afm0ZF2
3jhSIdCT92+ReWsnWSRGni8V/ii2hdXVIvNeQJxfgNRe6tYqOATYWuJuFQ29lo9c
w4vdqzx75ZAd2nastu04DEUJhZ+qVhnSVYYz0fv6KeFNHf04qqrF+rIKXmCIhHvp
vFobEuCCR/Gw5Q5MJJe8B0v3aPvFdwtrdkxEfPdI/N1c8Nv4VqFQ22CgSRLrEZ5U
vF20lUcNtmOb6QwPpdjt/XdKcE3TySjk5eZrTqHoY59MzJle4bJDcCfl1LEeimzo
WViy5RGZX1Lx0N5XZbaKE2cNdNeL5NYkzivvqg1SLCWHDhyIgvKpnpruS60a0+Ab
79Rt4aVRXOBKSkUsIH2uwP3M4NuBD9WIPqbwXIlFrWsL4RrJiiIq51OfJvAEdxT+
GPXIJhqmkP7KqmaitdLXIRShLdGvAXSdxUzs1ltWDYAo3urvAWEs1y7Kgyom/7cJ
TZYQXcmQQWrZ/oOsSoe0Sefa4OomYR41tZrEeW0bLZ3R9fF1/SlgyjoCckrhVUD3
Cg9ZncUUUex7L+fXT48Q2Pc5BILv226a35gx+3ughqbgJXR8puLq5T3kbrv90TVC
h6qAReSzR5qmXGd10vUgSS7jjojg1QxchWftMphEax4JL59Q2mHbctxNlLhUPXF2
RMHWlb/ejdExyf0OvIfIeNixSEcjWNGPZNcJtayw/0fk50ZmLcR2oI0OvWw4/2ax
whe6IhELgA3BheBMHZUP2NSCuVDOuiTDhhUgmVify3txGjfUpXV/CEEiKWMpuGDM
DRmhMMBZdCGncJHWGpKnnomONj0nfC9/vfD95xFWU0BxT/LX8Y85fIj8pm9yg6dw
9cblH/rJXESO+ZV75IOiI3cWUwesj8txxz/q+w2zbpYINJMiUjU5nfx4s8KarrFI
VyZdhCklyvk4+stHFj2UJmem6QrLEDyTD4pa3JLU3RHSiABtkaH98qJgfd7YugsC
bo4Kwgu7jP/V7fKHYXpyaYIXbEwmmJ4CsNI7yU2oRAkPhng5wLDX5PAhlFs3RddK
lGTxetLkuw7O3t+1LmJAhsVtjr3u2uIB4SbjVOSJE7ueykYgHiZzjRK+VN6P1ufV
93zITTsAh2pKpWbyMpSGQCwGGkeCH3VzU/dq9sIsZsRFK1wVvH9/GYQaJgV+j1ep
rWCNqFvqy4/FO2nDRHb5t/x2w9/IdKU8O2wt+v2MU2y5Lkez6mQleOK7fAFTmpTq
hA+NAnewRz18wuTyt+/97TsWqZzcuoVSKKJgt3GmNkCMBGSAgbIBz+yhIxfoa1CR
Fa5KYiLROESL2u8yNOX0C1NV50jQRLPUuR2JFvdnynxbJA/zQ5bGCWDDGwEzTrAh
KO6s3Am+3BFX4m+5ijE1oLifvQq4HcNNlJyV3iqx+x0CJvUXBZqZSWp8YUNudUcm
yMtmXwL3A/a31cBwdD9z/V+2cRcIT1fS+4Jw1zMcqCV6QXN+jlPt9Djv552y7+B4
xQeP1gdGCS8bRjx909Hv8GZt+bnGGGG5FQbxUzFnj7Q4nJnBEPBy37/+Lr8wbSr8
iMo/p12LNY0j0m04Y+OTnBVenMK1y68gYDisWtXcO7t3WJ2muw+idlIMZNx2aTQQ
I84g2fIIF1dGbtgwTS63kbK/RYJ5N8YlT+qX+lYb0bbyF3r40dIZdolK/Dj+U5qG
INpS8QrvODWrec1P8hdB0cnosLUg+iD2rNLN/LmzU5GnMG77qQPPodYVEY82D/ds
R1lC4tUZzQ63QONOXRHcmEgXpHuThfb1A7cTNLf5Bz/EwWZEes/EOnGvU1BXkoId
K7yOsbp4rjPl4wxORCj6b/CCO+fm1K94ev7qfFs1XxS0RZn9R2R4UMW7mI9uNRbT
rbAUnnIojBV+HesHR5S5mtHNCxooO41eXkV20EYtFGyDKS9ZO+fw9IUdyxhYav5k
QoDlA6Eu3OuyOvsMyFqef2io28HMX3FDQR2QpvIUnliud9oW40CM0zT3YDPnJiaR
tl/SifocmvV/mVGgW0ll5Rg94NPfz3xLZwmkc7UInNMlup3KYhuunVkaEidoYpBv
GUIi+oYYOQfX+iZE2ks1pVU/UuVNOSAzLhndNtnEhY7cRZ+1KT5ujwowhYjJ38Vx
okbsRXEI4Pi72QhCHjXKtNPCFoqx70atnRohFxD62hSMYGTlJAk3FhpC7xBNyU0O
HgUGNA6WtE4NJUx3WHVlC5kVy1hAScnwfF4IqJ/lh835hMfBQoOvEN1ujPpF9zsp
MrOESEGgqj+UPmBNHfNPA80BOF3IpCO8cxX1lqRf0TY3ZJ3HotSvGevn9+ZNK6ik
TsakuOz2AZFgsKVlIzd4jJjje4W7yg88aFffSZ8fq90q+q8acK8icqIDNwp5AdbH
0WP1QQywrUlwYU7PXrivlB/bRUxagtGlTq8iqe2k/PF3eYcGbCS5zQ5KkMCWnPSE
jfHlQ/Ejuc0ouOAJDN+1uQnATdTfSYp/JCG/7eJat8W97iVwJ4SUjl8uU4BXjs7B
TNavpfjpsKCbJlS/Oa3DxmXj6DA4/8Qn8hDNvac9zZB0+cqPcimWbKfsBzFAE8u9
4HPiDGXbnNnRLq1F4GFUlU4BqoxnZxSKe0V6dAJbbzot5us8EFu9/FCCZVra0X/l
vvhEkUws63kl8drW4zsqir0GNSsxdVqxWalANv7yIM8dE2E4nWsOd3wXqQXlDW9e
Oa0jSXeQc8Oa24NvtRvfDw9aCIvZHU0D7wBTlov+MTJx12vgCi/CD+0msbIlOtUP
PBW26KFFUW/yPqkfTT1ibpaOvQ9LgaByWA95cPt/dTfKy5NQPycJU4lsoy5deEyA
QCl0WVmtB2jGtCbVHcrxpc6ZDzjiHX1Qq4q1HVu+pe1W3LHcOGy/q/qkejYke+bU
vzeh6cEzChu5LMSwGQPnj/1d02wG1yQAUB6JpvEsl1YDZkKeV1Pj1FAh8IBb2A8X
QW9Y2Nmzk93TqhYrjQDk4lUZ5FqpkIKDT+XsQIkrQxHV6vaixDpvav6Ot7+1OFB8
yYoS4r0TumBHp7mDcSsgB4E64SNXG0/pL9jTUepLxUtvB8KGgsCWxgbJA/3qjD4E
MbHdugge046DzEdob90vIf26/xZ1p+gVf8KFpuEeMVSJ8iUxfioYsPMTeRHVyBXY
3ChsBBJEd6cCYChM9rsR7Xbc8x8EG4AEJXWHfbx/HNBNDbQw3e7hLPXr+ATXLUbw
fT4kpj0WXg4uNYKVqcGpnuc0Mim2Cas3SJfkUKeybTtu7Wu2MSCrNUf8ApQCNQuT
xuhptywCrkSxDRBRnYmwuVgT9Qvq61cKJdxkNbTCQaJJM5hPpGk59yXnQBsnjvGj
7e6yhwl66/DMaCDdWeupiou2PGn1DzUB8kGg66Cs2tKKUD7i8rXIyoCFg53RIFTy
Q8BLDHze8EdW4AU4WPk7WO82LwMerfYGQA59xoe+zso6i+9UXtYisRYadK0jUd6w
KW3vLdsFAoz1ZQYH1Ya+ArCXdsSz1oFxUxlcDGGnAg2bcDr7uBv8+qzLN1p/FK6a
4/TyhTS9b6amj+fM67CH3tIQwmGVq2q1PfvtAfjS51L9SMF4o3xcwQZwT4jQweiq
scQdV4RglQfhf4mJBupOwBSkZJcf2PTRjw2eLaH2eH8YM4jzmWnXNqSjFysnnujN
NOtvaI/JNZQqQsmgpx5pRovl6Z7XXwDPJwr/X+O4HsWkFjLWVDXCu8MLvGv89yeN
XrXW4HFth4I80nh0anSjx3TaNN+RGv9H3bTokhBZDSUg03kwcapwbsAsdb3SwUAW
QvtpH5/1HePGs8VciQoIW64R8UQOKaxeLjMdRhNE5DNCPHUI6RPUVC+IyWJJb0vM
5Y0wf/ZBh7y8I2qNUeN8drCIe1IgqxcZ4SHiubxTByycyASIql47UgOcrOsLEb8s
OKEf4CVN37TEv77HudgS6HStTVrJQWDj5JJf75pyztdi/MoVrBKcBdO5pKBlD6XT
vjMBBBG1Hg97XOAsH5B7Vc7XjUbQKKm0aH/Pk89vGJizS1JqOGDFsTxS0UAfoB6N
usAqklJyr7Js83IMIE7Le6dhWWJMDDFodfylZmaqnAve6F+DrzfQHNj0DsdeqM6w
52tTXZ8q0z63kBxsUMWvx1qo9G5WBKNJ4gWm7aJo+r438FiEKaip+gVTpEHioVqo
N+SyhVshMtBZd/H11ErzIVM1LxrLfE2UQ0A/LOgZYmrFdRsSLlHbtPcnyC/3VQzh
7eRS6lFJLU4WKCuFfHvIlBBDfEbs2crCW4QGCUdaiomYQHOmSM04dsLYtK0zfjym
XikxY2T57j031vXTaEUeMPJe4hAmEE1UFcAXzL3sY6S5xWx1sMzCKulQGL0jkP5G
JklUTsrASAaC0BKOSXY/zTKnagUfzmqdCePUlxFifO+7eiflHTZXk9//kZazYwQ1
StFRqEGaERgc/POMIquorzpEW0QaWPtSjP1dQYFZvBFjTwTF9DfyGfTWJZ9j5JK/
avTsW0+CYtVyWU6ICCVgYZeQLE3nlks6lkNIjfbv9OafHoLN4rKAAXbKujIv6ts/
Z562gO6POsJTiPB6GvM1y3flmCZuEcPQNhBncN7STqLS9ElvWDRK+MoCad3bLx7N
lLLTiZ3I87TjZk5U99883ToSBwR6y6oonKWKMdFHY5F0I8/oFRFPrIKP8koLTjiJ
mNsvbmEiBNqx0L1l3z/tbNcKVdZNLptNXz0qExAkdhfo67E2k56F+5ni3l2P5tjo
Ec55ZwfheCnE1/FALTWetL/o3pNPzCGXnOTjO8mZqQrUR5O6XMecqoa2SZ6NfHXb
+jNGLCJ5kL082VOn13GJrZyhPS+255w5hPS3L4g00bNsIk/CdFc+eMhaGY2tX5r3
uhY8hpLIUxuv5UHmdIfG2uDbJrqTnbYHfPWKKVL9DYyIoh0NksIhlSfRO84Z9Fw2
1JQemgythgAVoELGOsYhuFC2f8eOSaTR39hHCKS8dvrnbPKnVnbkXm/taOOX8sZk
M1AW2C1V49nKF2YodmKzISUCT8RQWopRodf52PoS2aKSj8KLe3oe6iII9YPOY4nZ
6rHUdIJJtF3S0xtYTGE73YquK/9tPiK8PVIDVH1kAvLsYsdDhdSAbLiU8RYCJ7ko
aTMEBxTVmcCxPyBAnZjNcKMjwJ2RvT1r06/ZkJpNgqyBsIA2kn1ki1CG87sPZFJo
TFr61EQKZYPyqmPlMZq00P5f1lR8yJzBewFO6uxzpkJTVgUPGuIHUkvqjNhVzvN2
qdUdfPE4REPb9Zmv2qx/a680ncr30OQh07K+jezAg4vPAYDU6GGzboZtKtzI7/RQ
7ShcepUG3Goe7nIcBDw2Ol6+Ea49HglYgALfdgijzer4e9/dgJuL5jOMC3paiOYu
UNpOpOz/jDl4jb9cw2dvGh4mXSoBKG78FC9eu/XRV8qfEb8JDRBnrB6Kys9c2G0+
y0bMXqrBCjnJwpPpsclHsfS7OYtldCJDWF1YY0a8yDZxQakdXJiSaCi+0IKA9Vol
+Zt+8UXtV6v8l9P3WGjyO+3v4e7yXCk2ubmrWxSrKYkxU5uf84CAqdx2FyjUeBPP
+y2UveHGFD6uFqyBIwZF5+VqOZVW7qUzUv7LCOwuPyKZtvhLSKHr2rwVHXGRYFrm
NtPwXesyOoI/4MrD4GIYSu+JNrk+fE2Ez166hMv/E5MryZd0bTrtjIF4+1CVc9r3
MSG9SUgrL4d5xmAb3yJDAGkIo+mErGCjCuihxLB/d1E/rSwFRmiYfknXMM7yxkYo
x805xLg4edYDxaGl+uCy5a5Iow6VuGU0Poq2ZxxVRMmeUpFl65c1xUYZOzZvX93U
q0LrMjlfLWT6eBdIXeQwfi1VheP9D6LfeEJvVdB4M4RSKpoxEN/QFaRjRqVAQTAe
Hov6nqqWwMj9seQb32YTwSejxreXM1TzIEqrQYYiod3k74hQ5glIpE4a21kuTj0r
kcP03AXK529+dN1ggKc+k4hSox5shI/vMtS2WWYqgkfA41uIDz3Ge5WIJoJl7tIy
DjcKbAn30hssVmbdKYDiNXJOhhy3y8GrOjG9ALHqmM5SvhHK4RovhFaOki9d1hbz
KUtFuUBRV2c1JNlsl3GRR5dkXxyz3ccVkRm8U001IgY3YnMqIY1L75lKcUjyORew
ZskBb3qtdGwsduZLxOIbjcgKXXJaERENtKo+igek/B57k2eUrOUUGUztyzzh8Iyr
L1cU1LjB4riPMkGsLt98XXEiUDGR6W4ugw6+SvlFubAQGLLsX/WuN98Iz2FwZ/GP
RO/Ow3i4txie67ejng+biA6hpTlYhdUy9JM7vKfP+yyDk0doHj5bfYH6VIoukQ5O
sY3dCAUvkLneboNdB1to9Cpi8yGh1+BJJC7Ozh06jiU6c4BoG6BTvpqc3p6Dm73N
xCIhXcmcOqYmKvMsaWQ7V6bQagYjXOl4ENBSNVy6E1mf7FmavyBQ81W26Lo7oxcg
2e+G7h1LPfC68NOXSthsgG+wpcgZWHdNTsYUMYimFqr9nWSU0yySVQoOYv7W3T2t
UfdAC2J8puwBg+CZqTf21u7Wmah9+nBcoDWoAKAouRrR9UV9Q7X8XJR3zxnPABqq
tSW3TCoTbHko63f4bcQzDddtdh0AvrWpB7OZWQMUFEYoM6QZPPaMN5cyrogl8xxg
Xwi7Z9y6BlspARhiYf+W4+qgFpCjcfORt7eHgXAShoFF47OTd51cCVwv7P3i+6AW
9gbMEFwEcV53Db3B/UZNTSKG5tMXDSCTZLUMl8fEuq3PhxAsdsoHoC6/zJZBedsX
rsv6FZwML+9dzBzwDxtRUnDGwJDp9arTg98So0bSEpl7Wkl/UhIqCA3b1aidbgR5
eFtEQcm+ln27pqGRWBxMaQNzryNIWnUNuUFWuhlVnXSxgRd7ejEkxmKwJnUuCf2Q
/5IDawYmVvny3n7Yx8t/hSdxbquYSS4rRx22f6Td8YgCmi8nCwPSZl3E6uSSnrKe
H1iaw09GLPYX4O7xSqKrGL6VvElyiQEVb7Svy0ORzSj5f7DDkpoYOt4koE335e2K
Gu7horLwdYG28lyCBljBlYX4cNBsZUugYDXp3S7urIPhVp+PP3eUD3/XBqOG2xIi
enymX0dDvSQ1WGYzJYOYWlvzQ/qoqrcDajoL9bcR1gV5ejYHLNwAVru3eUOZ49Hb
hzvM5hRDWhBLnHmF6OPw2ewaNrnD04OByfWVGE77/TZRyQvoeodAdlWBPrk3cPSd
rzXrHxuacn6add0vju/PgA98lIZ9ZQ32eOnILbXMhcyPWqmUyBIf7u4f0tLwdpGk
KkYaxwBDVLbsj6wvu5arOLeyUMQ+DxAE7hsGhEws3Wcm6STF9go0lNLgej0v5hCT
Pb/r9cJWFdEu7qN2nhQ0jaFfOkyuoA64JVjYasSnRoDWJ7Q5R6xbvFNCrDAilt3x
IaO1HMzRgJspl6O21ybaOU4FioLuWLCzW3YTVu7+wiyeoNbeHSKYuWGt8rKPhTJY
cMn5Lab6sU8mHI22rbf/3E8KoXkVPh5D7TCTlZfGiCMdn78WIDUofGStpMeSoI1E
hENNoagmEa2iY0VDrqVxpHt4peKhTA9qyrCGL9hxhJ8vSD05UwaP4ebgIVNKUrim
Cv8Y7EFLtedZAM6Ro5VqNppbGlZtWiL2a0HOY6yX9ILLA8zxaCK2EoEmS93tbpRj
Xwb7Wy7wdhG2BVLaZLxVl4cOxLuJ8S0dyXB3jpyxGp0ozpAH1JZ8tpYja1RhKkrF
z8vF2QQU3b82xdvfzP5Fv599fO0pntd2917MwAai1KCKdwoTQYfbgBGFkM98xpVQ
lx0lH+Lbrkee4rEFfyMPyT7GvGEOFcKx0Uu0Ko6WMsBuvgvL8pltyIUbOaOLCyKx
u2t7q49bV/gc9GOAodhOT500smh2dOQI+8RKf6KcW44Z5S9weP8SErX3BOFLH800
4sQdUoN9PjkLY8g4FGrIhwWWakHYyE/6lZuqNS5pR0XD9Y9bg9acGjEoZJtMcslF
hwrMqpqecudE3l/2RiiytCQUKIi6HWyn22u2uP9uQbb70b2ivZqGa+t/1+4hw7A3
MdxBKTm14XKMQ7AK7nvK+NYv1B9CN4ZpxQtOX6f9FALyTz4nka8cLCVt0KI1HjUm
0N/ezeeQLMaDjTIgXTooo1+AwWxwYEDJiFgN+NkofcyM2UZ73v3t+G0BS9Gknt++
o4AhyJ/bBW3sWrgPj+IhmP4Ur3w9KtBvAZwY6aR5sdxwtsyzSY06IADXnOo8Mldo
80VD0CDVCFaJH52nNhIBobfxr5qlz8etbc1tSPzk68kiOmBEZWnzWBdpTGB1RTwH
clHPFXiq1eHB2cuQpHLFWFwF/ajr1ErtUvF8m55T5l16NgM5SSuKLDJNFZToS1Rw
Qg8hDFWFirD6zgBzD50wQVyhajC9Im5SIMloguGJo89X1t5HIhEWKZuJiWzuWllx
Yi3e3cMpmoZUEhT3Y6wEEPz3ilSRboA8rtdRuDrzYlwcZgxrM5RgjzHXdnCI/E3c
xxe3x2wKfaEgW99aiM9YMklfuSkAP1ELZWbOe8QpuWSbrzsHqPnvgMsp6CK2H2on
EGFyrLZmQlNtcO8t6x8DEQrnFw29gxf3BhTNTF9x3xROZxu5loE9iWPUbS5a2Wn0
XtCdSAX42xMLZzFiXvi2HqLH2N3v7rHUSGUgGO5w+dUULALweO/vX+/pRx4ZI/Ot
IrdiGgXGHcDy909xdB3fQ8xpiYlrOOtYmvoBkRh5P9CTEyL2QEw89aVDOMfGBM0H
lYLGBQyCmRlo1++jy7NwsbbIzsB6DkYhPfRaceAnkZSLKHOtuRSGqhA8aZd3GATx
ZM0NrZpJEkR7+3KYXXUTGpMfC38Q8KjgTYL0bf1gCCoY31zisPB8xsxDRbu8UAuz
5Bwngdkj6gkQCKOqsMBDbUyySJu0ErPUmzBUGAlIAFNGdszJbupinUcbeOzeSmZ+
78/lupMO4Bjam/PQgr/+BZzCDnvOXtDH1jIUoaoFXIHbUVnxfYcqTNpAOIFGby1q
XDdmHeEOERSwaRWSzukylhd6ZTmJmfUfmWUcuXIDATZMEui1S94/MkNHo6LIo6Ai
YHnaH2YCd4UmWOWSNNCU6rj3/I+4q5vVEU3EyVxm0ZTAUGVd7OwN5qPsFaFK0Fw9
dQ59tiJm+pegJkF4fKfYB1qRxqKEmzhQGJfK+uotI88j16wa0S0ftO4kF/wappnK
3jXqr/22EtabeOMDEQDamlODjsuQT+PbIBars2JsMK6F7djwts9zdumew5kGO77z
SnODUGeoMz9ygoBydJWNH1iJBAHlR4kkj+mXQNZF0AbsJUPIuA0SEAKHvN12MJtw
PrFEmOvTj6KgaVu7eUG+X6jCTTio7h2sruKpHpuU785oBi8if5cECtNGKY+k7/1/
CCfEbq+d6mK0lrm6Q4m+7qlim/0eQUounHj+y8LtJcojUuv/IuNccw1l7IKfkJvW
t3deTuiEPiP4nF5LiTEOt9vALhnTwH75HcCD8F6bT69M3SMfdyP9YB4Fc4TCiaCe
LFLp8GmETJqnSsivNcA2gGUvMGD9BLHu6jupxLGtlOqFFzFHqkR6xXDgcOzUh+kU
UGPDDEOk0oVGQMik9dJ08QSz5aUU/K3jjT9zU4zyBi7Vx8KvttmS+OnbzOwoFWQq
Zi42m6WUNdu/rwnNgSLmZawP7HrpQ7BM4DgzfjdKDmC/MzlnBoiILIaUpEhg9eit
rA8dIkKfu5aQxjtGglrwIL6ds4DQwqO+s0ajPpt4dM7FJMPsbu26Bj5yDaPeQ1yM
vJxPscVuSMNUnRIZGdRnFgeQ7f5JYZwG0rGDXRs/Q8KjB6qGmkFJfA//22py20ub
55jhWgCgM7QEge3IqaSX6mtzkhnPUvrrlz11FJV+CuIxk0iPJeTiMEx0a7oJ0ygj
4c0txA9A+aZNX9GfH2rbly5i8NAMUyz3LXX+iiWMp202uBge0UZ7YaOOCdqeDV38
VhhPjmhWgLdFJ171u8wDHbZm6y2QQB6/9DQ1tUVKgirqg4GZvCm1f8MSPHxcN+Gr
5KOIJRm8+ZgDWBk5ZEjMwjeGQMSfmIbsM2rdWB/45gXodscTCjuHNf0X0sOfOfos
j2f6Cz7pcp9FHuLnxN2DAHF+tj71tt16NiQWvOlaTKpb8KhjifZUyaoIdpnPgZ+j
TbtN7Hc701pP516ZU3Lspt+JZ715MISRPAcB9GmDmliOIiYvUXbkWHt5pCOz1VQR
41x3KJs4Zl3097sWHjdHUud5cH7YAyDe7GUF/hDy/hnfv1qIMyTqKvsCJuCVGK5r
2eqG5oCef145aQ5FXjGdcX92eov9+co9A3Xwx2VX/B8wva8A2XTli//zIxN5aY5l
3tIudCTfclJePNlCyoqMj5gQZKRoKcH7mi2Jq9OdxMNcaRA3PK3zwGoyWS4CfeJD
Jl9/gs3ZJBbys+A71txKkRI2EwsM8rW7asqMcllvSi6vynQQTs8xidD0Nyo96S7X
Y7s7WCUO43rI8HOZzEsdXEGCfoFw6i424gT6sO0mHPmwZLjZSPivB7oJZphjVr8/
DiK+552mcDGWWyt+MKzDrN4v/miuRwEVyCk9iKQk1zxaqrOUY4NxsmkvkiD/yNrB
5zKFz3unQ9HBp3m/zdDWogrPae5DzKniLgDrybyi4tuMkrVYptPkYKckyfoJ+gb6
sjUBABA2x4JLukJjnUnE3te0+qLBItBT+/uvT77ZDPhfHSFxj8ujqQZ1Dy71Iu99
X6QqT7CsGoNKIdsrNps3GZDKs1dwBmKIJqWessokiWKAw9XM3/p284gv2n6em8ow
UmwKobSE6JXDZuNfT8jIPbGXih4/QrHenGPrCkUi0AD3fxZ38qh/KpY26DpiHQhG
KixySNtC/ld0f3tS00eIF1TeCa8QeEuWYo0naapNZbORiXElVfzG2VJEXrauYdZ4
E9gwDzQWf82ju48iAkgXuGG9pXRIge0p/sI2FM5WxemYXYg46L5MYik9Zw31PQ1B
33K/EPuEUmCYYxoUob05nylXzv58EasXS+UMhwOp2MBU+A8LfEQVvqQWzs2uZLGe
MFuZtddj3S0UDqxhBh5j4SReeeJLJ/XuSHadKi0UTTuI0BX8CmWqsVMyoPF3X/FV
AXV7lU0OOQI/S3Y/41Vqb/bHn+iWs2fN8v1vf0rXWDpZhUbwzmWodgZET9du0jo3
ZZHwDELEp7a0UOFmcDP4owfMEsqLo283zllaIBlemLvKvUVFf4TzBgqGhWbC47lW
3oUjixFs9TJtShZz7LjTg8IAxK4w08R+I26w2uCrB5pBqaoxw7R9pIn0I4VdQDI/
r3VqTZTxSgvAWq+WpY6dCuC7SaYPpPsZ0g0LF5Isq88XBmoyKLizwdMdazqpUskU
BXgQUN40VW6qDspP3HiNrz2WevkMM9PiueWlLrkeQ9jRiW5+fcvfSY1LzWM3aB8p
DK7nUmcFxZI14YrN0OSjxSZK9GrXDIE0gtfbOZM1ZQhRz843XzO1JW5iuBIJoEt8
QVNwzQbWuBLI8UiHppnmKrzQgTw/Zj22Ht1uqtn6KNNr96k6NV+DMRuuZpiyPRNv
tpKVrsE1IZ6zWnOODJDnlqWwcuH68l56YtlMjSzJ3yT4XjEJ4ujEkgYBZX7djlLw
/TBYUmy3GCZvXEU5lKiVSQqcza2+VHuxIBe3hnAzaNiDKyVEVyotIduOl/ZnMFwO
HBueYpAAhGSnt9uLtw/9w4pggSajAH65mfW3/vmr/D2HJNE5K6OllosAryzvUCvN
soOs6eMZsqhnwquMCFEFWvTljtPobHL0UFu24cGkfTqCHt8+Fz22QYZooo1N1Noi
yoAaC55BmdwiWM07QfiI7rI5756fGRdZYlcqKN/xUvtN5OxcvdoCQruxJkDeaohD
NMvFgwKedRyX2ggSQ/eqSdA3c58pPqXP11W2VNNYzmcEQt/hzP8h7EorQUyuWU9n
lBGuxX1Cbu3Lmpuf1H4/59CO767HRebKNJzX55wt34goj4PgfwB/9wIt4nzcu1hB
RTXhvqLfJ1rX6kmBh7/miWZHPlc3psn+pKyggxVtnQAyH5eErzKZMUA66u+cllnd
YfEW8qO74k+y8KDt4XIojdFQhzKI5urrRT+wLhdRMT1t6JDMzvi+4If4c22zPCrT
bJy82LS9MWRhnHzcwHfnJzNDN7yKxePcCghqE/lNSKWgwEu8cQWQ1yaoTqoA7aLW
voz0iCJ4f+nN0lpm3AG3Zcf9HvNSLlT05BkvUOrmRCfHANIYiEGAZXCWl/Zs2Qi+
AscbvFl3eB1nE8TS0eBr2/0mnL3Zfg1VPBt6aWTLRyZVQMGIlaj1Z4PNit6wuYYN
hOyhL1gQUSjV+MnIJF2VkiJT0om1YNOuBuWJIgBk+D5iL85bD6G7LFIpZpG0KS93
XbxqjMRo6340e6MBXbv38/3L1vaTGY/52YrRaNy6UpUR0oR6YgO5Sdy/y83AJ8zo
zHsBRLfmFNxZJCIJNNcOkszLuQ1zDMYlJvHRRjtLUGJxHS8Q7CUD0ml/+phm07v7
kPEwpLeGBth9G95aeFF11DqLlM37SLMFLJ8JnmDmvoGDmmzTwjb1U8zAMevxhppd
xGb5ARdk1CkvQx/bZXvoZbjioh7LuQKu3QE3lOgEChFE6nUcwjzVmAWX/sOczDki
IeUg4AGpQgEHVLlGz6s5dXkXOGIks8eZB9p4QoHY+PawrdszX1RhyiDhP1gxP39p
00VSKS/bcbADHIHrWvW87XwUCJoizOm4wiDRQ95bf/+KaOo7i9bgTqsPL7u/ojAD
2Ua3YI8FsPmopUNjJwLeY/RhI9U6yM2Rsju/rw0jlYSFhq8xrIG8h+EiW55wvNqA
WDGKvdCjsu9OyIobE3U1YbXRlRW/kGps9cNz3K8A6LpfvocnptwupxeE5ue46a7a
qAXAOrXNEhn4CTRPMZXX8lwt1AN1xRa1OgPGXLH7y07V8lNKuhUfsbnRy3HpdWI0
vDgAKTF3XmdPm+93D//j6mGlIAA9eZPuOBNnQpBRci6TKQZd5G7JvSWiRKNXhdaf
T7Z4z5tMUNiRsRUGezWRubidtiB5pYHPO6NX5HIajIy2UIdG+ZtRw1Dv+NlqIWfh
887E+MsTeroheVo7Qs/90tMUWbEgSa1Xqc5cDg1noxxaqYgB4RR7ufap/EX/TiwU
VTltow0Zw/DHsKXNE0itxmMkRTZXaUO6Lk3EWHtKq4uqgkQcDLOmcWON6R+J5dWj
cjK2Wkv9YSrooV47J6vIJvq3pHS0C7JstS5gO/Z39X7BQo3RhvQwqvWB89s/HQVU
te7xPbg47DW319ExVEVd9t/19UBYVqmmpk/znUKJQomTGWl8I+9V3F1Nic5+yzcj
ePBfwRQBCHH6kKMBpSZh1PO6t/jL7FXLK4N/g4LYR7UgP2ZI+EOnO//raUGEK4tQ
kaiTgdx1znGvOPdakY07efXjsPm60D961hG6GWcCr8Sc28wiIiZlmF4L4pHkG5jX
hdmVRaAZJkMQvRTe4j4lhZ0kSJ/QmKNGpfR4Ki7Yxrora78zjWCxgefZmHvllcPC
iTyxwvNuBgHZyEEGiyKchxKnHfFPDMdH3w7gkltERkeOldKyrS0S/keSgpXIjzZr
ZZnQL1Vpu1VlB4pJx54fyOCm4bRcgSvKt1SQA7T9YxLgMakDvWfFgeANDSVTtXYd
OyeTh0bMwg1lPrGB0URIlQhUIDI12pXal/n1oYNc1BpBcYWjCuT3HBOT4K7doGJs
uuAi9dSmkezXJ/92KCan0rGTSYoZECX9lGGXpePtasb3tNGMBPysAuimhE5aa7/q
AokgaRQL/+5g17BkVDe3uYze0RdiAeebmtW3uPRVYbtV2l2Pwa5eDBfrKgOXUZ3H
E9TStmV+1l3QrFq7GPZZGzrQwFvHpuktnzIpwzOA2wiuy6aLwFEtV3ogxJTIPmRQ
ZCHdupyu/HpLdOW1Ukj2vFqvHS63SISKRG9CzPpe6UpleGmvcGZyOSrWyQf2aUym
qSffeSSBjCidHStSZQW7UD420YFSqxnvDde+0MtS9mVeOWZNcCzg3SWjJJW0Dz/y
amVmwRYv1xDyHBb6wCO4uVEF+FU6AdNdZ4SI9h6sC3hv1yQv9QONUtbybVMGMVcQ
d5rumsiVqXQ+zp8vYdwkNOnpgfiamgDyuMVmBUATxIEi68LkSTYYEDuB++s3Mkks
0DyTiSdG3Mqo5X28GLspYpCekwBwPnI0eOFaldu5DAA7ezl2RVhcIdfuqG7pMDNj
kWPbppTtnpX2PSgOYIhKHMIDg7r4ZWCh/Esm96+Jb6j0fqyg+o1ike5adTT2nzJI
6JI/aOcdEdlSop9nU0eXLmrs5KJN8ldJZFuY8rv2xncAvthh7IH36jlHRpZQqskB
g+NsdRTk4ih6j2BNJW5yQU9cQglFHSLiWD3V9zo1Gb9Yb4tEbn//o3DAsvYls3P8
P4OaCoPJ97jESZsj0v7quobG6Lxlbz5WeWphsoAsS2EvtY1F3a1NA2bX0qgKy3sx
QKpIBJ4x+Ug7FmgV89hkeYXFaSk6XEIsliUDh5TYytnvMzkvzLytRRMLnk6AwqSq
SLksVx22TGw36TOC7wEsrjGyr4SF3usruFiu1R9jl0Y4wuwVyEIaCxYnRVMFD7Mu
QeTlCh/1Nhs76bLyKCrKZrGh4CjMIq33achmAAz4uTzOJd1rtrGHgyQ8hBeTm9kY
X7n3ShSQznKXCr4RKfOvE/8nsy6cnWpbQOSDVaxMStSSIy6elkQ12QTE01vx/mtL
LxxJVG7DDoNY2uI9iuWunLW6Vqm09yTw/Outu8HBc4iaponU/mo+x72951HgREFn
qep/F7AY4IsqxMeoHGcUw8UMdFUzuflDDSjkriACNXK77fnKM2u653Y5HmTG/vHX
B4TGEcadnZzdsDK6flpfzESOb5wBd9KiwGJZMbcrHcA4QJ4t7SGE4HwxfWXkRGp+
MDdFEbMzW6i/o5V4l8Bw+8RoczY95QoakbZBAqFuF1SwrWTGsGDt5lflEgF+8i0O
OYb1CjuU1eHlkLlA4ugs7UD1zKDJKMRYZX2T7+0nIFqHbG37Ga72l8tFqQaDfHol
siy/jlN3S0S9FYGvH5aavcnANbbRdsl43s09q+yWuGhiaHLFj/wF4WJJIlXtFsTk
OcMr/wW4mk6dRqx7m5c0U3NOd0htdHS9Yxv3oFgVMAwJW7f3AY8iUD7YD/nZBCQO
S+S62S0HnEYioxbRGgdL0sd77uWXNDmdyql4KdKffHoMhOhxNfIUr6K/2A4GL3WM
toA1DSRcRji+9dljO0MUN7hd4f1T10eJNGs1RRoCYpz7hPE6lYXLFDNNYoOtbT3n
B+40BCT+3egSvIZZWrepO5mEFX468UgtJm/uET0odxZ/6HfRNmfE4jagShmmlip4
Ycwr8ehDMVeb710X9s4aR5G29sLieFDKr2Kl7vSY+9HWbKBpGM2Ph9rQHZ4MQXRJ
cM7xSrYQ1/5sJpmrsZXMuqloS6EKxarDuuia/2Xrft/nT9iImKxnD9lxyzhUjlnn
tqEftfE9cH5LZ8pGE/+5G04Cp+Xtx5A7kuKxhrjBoff5+1JqME6CqPEUJ1Q+xA++
S9Flmcrz/itxx9tC9vDvm6D1cmYB1xOjyq969BaaTgOVDgJ+xH6FYhTnFp7LwFaL
F/Lb3TSTNgBevirWqQNDGJwhgI/MsA4+YFYswbklZT1OUUsdlthyYVDTpnMOGKux
ReDB3Y0sFGAa12FYtDAdfE59dAo1fAPbaLJekH2WwnsALMPF3ZgyLRrYWsXlsKgH
4GgPJXDS1kv8tya4LLK25X4XPUhK09yy+NA9wVnpJcqce+yPu0gqs503iCvZa1M+
GKgImKapxQgz0K7yB5Gz1SnNj5UbAG4UqsJJYW+/e9qeMMUlO0GROeEqcRVhjF92
X6OKQFK7NTJCcGyDIavGhsrMIj5KW+omyXn8sMSWs6hySzkAhXmlAH34CAWmw94D
IMkD9LnWY5GLoZG6bJlS7yykTpeueDTC6eTXOzTk09qibuvMkKzcft/FHiVkcWXZ
LNXC7V/xJTQlAVe/Nt1ZyfBmSjX3DbPbUIZ+kEn6PUj8KNzSbWeLbagYjJQ1Fj2W
Oj1jwwDFkFv9+jMZEQtJ4+JBjRC1Up43oL12NP4CgQ9j4P9+tQWISUnnYtNEyeW3
obaRdlu6iwfzFECQNPn+2QkbBJNylEpH5ix6MYnz2w/6QUOf7HbwKV4VY4nziYm2
gcTKyOmWms2POeVbNQWZcyFO1MS23aX03Lht2S/4Gpsbl/xa2h8uXGa2ddgCUe+h
4W0u+ziaSvRnsJ0Z9jkt4PuAURsD/3iTO7Zov1y6punrvMmpSpwW3ECA5/W2lag+
4y4chYl9zkogkPwRY727Mb2atWvWapEX+nXEL/FNG/Hkfn+fbryCeUwydW+yy3EE
9FAEq7cdAZTLTyWYFE+xhi8GXb2ksNDGwdMMmPkhqO6vTNI4oHHkhVlIMNGbFiMw
nlmYjX04lN6RiYli5Y7005aOlW1nXcWNKrRYRGafsVul5STVvr0nqcA8Ueai4GEK
B/bQz+aWMGrUBOJeCEi9mMYGN1AW9VYKCZMNPezhXiXjZVvr4BRLLVVDa88ukYpx
SjQ70QokwyBdPjYKxQEeeh48ghrxRFbWIwKONLLI9H8tAgmPY6zpB2rv16t/Jkz+
eygxHZv3zAoVZS3/bpUisJyR8Ykhl4k4dfxJav3ITu0taczSlYJog93VESSmtIrQ
N5QPrqkR/0ByJFQeRB2Se5yjQ6paY5qjrRQAiPVTMALnvQR1y8r/awbHrGzHfoya
VPvhySVBfoVgP77la6F7Na0vNORfTxg/curmV3gov/RM573ZBKJt1ZLzEIOabfHO
PbxC42KTuvMXlfOWoe49NX46FA5ZE4aS6mxX5584QIH7/b/VyCdNM9DbHTTNVim5
UcEcA6VcOXIdbyCIKqS1ioZwxSDHgvutyI/wgb4myslQ3FzEmBzl6M9AW3R8pkaL
QQDpBpRYeRq81UNoplnM/eLiVPYWTp/1U8j2wZm+e+i/sRZGtjzAGB77uWbJNLPD
Cr/lPkA3ZPwiv8H4ICXlC4j3FZ5KS8ckeRDA4R/4BLCbqlUKVRgtZ0eDLh5frlsT
h34SN8fkXYtz+G3gLv+gJij2WSC/asz/dAsCJijarvnR55nkzzlAlbyWpQ4BzllH
u/3EExIJO3WaOFhB1Zgr8mBRu27MouIGMC8Fpwe4p9CFbqWw5uLXmvXc6hE2wKTW
JL/97wsUIF5L09QC6i5a8TK3hxyZu46xzvd4UEPVdZBRUw+RDboz+hb6Sw+2pbAC
cIGTNgoKBRKeJ38AiXhArdUAZJwDpoESi/zB8oebP6X9f7VGHDS0D4m0H+hT2sXu
uAP921bdr/trqbUzU7KaSc6wKMRkQ/WuPFhx25x9Msc8meyaH0VCWmoFYmHrPFyT
LTwvC6S/NNBJ6Asc3Bvv+MQBgzFEXSv0czRmaioMXq5zOKkW3hWNT7K65jlovCHS
bnUFbvlsHt1SRORVPdUZUCWJRZ4AA2aTSRB6NPHTTbioP4G2uUIr9T5AxfR56wlg
LW6SHMMPpBZ85hFfXhBxdslCi2DnLDvTEzUo3lo0Zwd2QkHFgdixkdGT2Vzv1j6y
o8wKV8627qoVqltk69ksY0Ql564LXFlKw+pujsqCUbhJ5sJIwdpshNXiHawIfs6k
s3pNzLe59+bKzKf8wNpknF7AcSz8PWThCt7qe460x7QcKSVMiDECnldWZgjg19nh
LjioimIF78gfUbASLRTcLiM0FwFH0O1rhD9KNj9z1joR4pbsCWi9FjcPXu2iXaDT
zu0iZ67scL+f16qZu3XZkqsuD5Kxp0XyWZ3A+oVr6FD/Z2wsPlZHY87Ym2wR+pmr
UkqbJJqXKy0k2bcRYwZwg7yTjXHM5LNoEnhYLgu42wwGXH5ZOwZkW/PkzsqiegZN
aljNiC+oxtp3xFXn7BCaDH4vuhMc9ts/eP67YTMzrtpDuFKVNWpGcIIbwxuZrvyJ
yKkOK7veNvHAMvibxcgs6KVk5VE/3gJNVwy/E5b8uTSyH29ciPzrVHmqLdG+A97Q
BzLltKV8c5pRv/pzbTCqB1XQza8jc6U77V+mVQdf1qYfUwOY9qXG6S4RxBdPcHLe
pkkFq7c7mq9KrrF9puykzUeBbRXrCwDaL6NXVQy1sgQv2nI7qaNoy6ykBxOp0TDX
ERhMECC5Y3lqeouEn2NlCnjkUEmFVo33/ZNvotNeElOBe8UgvlTrPak1fdOpCBGC
AaOFUU2XrziDbUOCZfeLQubph34Qijix4ff2vNMKxoP4qj6/fBjCFRXnpcR0aCAv
MGVQtQ1vBC9F+xLTz+nQwdl7Ubq26bUEDhwOkNWMsW5TQqE4Z/zhiKbaexYs4L4U
h46DdDGW/BTHWA6PD6TCmgMwHjoUjDtI1zLcBoV3YMouRvmjJYeA+8/Hl/vYA0e4
Ub5oW1SukMsOiFXMqnuSadqa4f6C3aHUwdcMxRkZE92yYiV753CMH7Q5waGz/wYD
hysrJDhuv6ql1VVQ1860GefcTfFxgaH3xAEouDaynKtl5b946my6DcnhyfecQjkE
rptFHUApalqd/Tmrgz+hI7Uffr1FxBK0/jMjrJK+f9J2wh1+ajD69nckIRK6JZHQ
bIQmdyxpT9ARF/rSw9jqU71vF8TSzWBFzQ6vFlI9eclgrYElA/PtM6uHM97B6SpU
mvwf6eL4U72fF/NSYLaqUdCSbKJ4bQRveWBbIAFLItMYFs99eJsQNZepJbfA+lWP
rilknabs0T8EdXokOdcCGpWsTwIfwYRZO1iNcyAV5wPBnbnNwSMf0x1xm2wbKTPC
U9zKZ3kqMhUG2RTwIuCcfieU5F5p2IrKo8zhMWavjBteU3Gr9DEwmcXaw1nfar/+
nSjvu3JuwRp6aXqvUCrorlY/jksQ6tcYaNiBlkZ+GZP8u0leR86PmbncfSVBikym
WRwfVewSMgmzy/4lLJ+yZqPPptcAX1ZEk3faTOVefm4f5cVwhFezx/JzBMSHxqR+
Ty4xuWLzLrW1DOYIB6SaHxnJw2hnxqFomcJe8j36o1Vetf2er1fOL/VP2CyEriY2
4G5mVb+I9GtJRWhitpedmW1XcG8dw+5CakrtdOIqQcCLYTfOxeLeN5uaMGzcTNyV
aDL1lkAcMBXX5QMKqKLQdKxh6EffvmOa6afQUQKRzjAoDDm5HTjn+/wf5lZkD50o
zuRe6L8qj/AodWWpVmB1jZ176E5rWoy2vw//NfOpRCC0wrSdGDRS1C7Qar6DXGpr
gn3KMwKJmeJo3Vd92aiO++lyq0WBJauts1sscJPQiIzobZUffKv+hESv0x9/FuVU
fcRFroLajxha6mNhLx0bnWbHUcrGPgLnB4HFdX3OweNmjR1kWYy3B/4tP9YA8Os4
xzRCTPg19LODqTHC444SbfhDHr6ZxfbZKcG3UtOWLT2Kqtdyld1ol0z6eY8XhoSQ
8XN5k2L/WT2B4CWlE6saLXUJxwvH0XLkkkBK54czyLTGskrfAisBZwW2avTSHP/8
l7yEtNEXCrrAS2lMNBmBfZSAovwH3YPfOZYXoZ2LUu2SFyuscuuG6j5sfUHIhJT9
qgu64VC9pxRXp9CNPX63wuOLAg5gAxW43abodfd0iyMknbdVMKzita4WO9EMJ0Jf
crBH3PpOtj+/FRgLDohQtHg/5qdyU5PrZdPhYPoxCqwMQTuEusDKuyfgD19sG04m
KNh9U5ulWQu51Je0RPcijOf3GxQgKkhAMgRgTNx/U718M/mI6PixlRvkUQclrvMC
7tyB9N2qehLcOP1W7Di6eHL2v8NSyTk/ueEbYfR9CAEVD/nql/sOj6vSXa94pYil
NTTEOSbaF+emJw6FdnRJup8bjjItbZg33cKe6oBo52AmnBo1EyXJPj1k3naKnZFk
ttYCWZqWOVWUTnHO0kOgzx5EgFq2/ScOxD8yOoowHu7dbcoxEfwjz/qKp3MxLeNU
L2z5skOXyIYmttKIDCMsFEPODfFRFwWpVLz7ZE+Y1OsEzeMALDR9ZjHZnY1LsysH
E1oihsi9wKdojRWLACLftoKsKaDN2qhOpNgtyss/K5RzSBe3tFuT3k68VXPy2TGP
TSw6d7vrGrXI6G4N9xPZiArnL13AK4ByDWntc40f7VkehZHu50JsUh8x1S7nPR3E
ZopFY//W5LKo7Y5Cm5t9drpjct9KyijKUBSchlNHzPQsZdou6j6vnqSaHYUUkwQM
3SBMs4DaX4W3zKNw21RgHkMU+m62t2IdO60MG/H9Y95FGShNURojb9ftYOIysUi4
tqfbSJuqIX6jAYEFWPgKjLFCffjalysaKTU0tw2zIJYAW4z3aS63LlHe/a+g5/mG
UeSBlpZGLkfd4ioTZk07zUnHQlCfgybysbJK0lY59gaUYq0pk6rpFj+IND9GW2Xt
XQzr2fZ8IypjSxWwiHBaqUBMPafcvlMsrz4zkaZBK4Uigdf4B1btvZIrNRJNsfCv
IvtK6KpGQ4FaRaHSb25m7rb/cZ65AUA2Xh6ki3ONvQ6QdleJk5DPTTyIEAFAvbPL
lXLSjtA0aM815q1SdNJkZPuo9XsxjNMvEmfOz4cH/0c3UkCHn9hO0GQGAF8bE+Br
JKVaASxHxwAsTHTyvIeC0GtyxpXzrNaCgerpYNhRMl2/qcnxocA9RqIAqMZqxxex
q5+lmGsD6aNjUkABqxExlONfstRxNaxev2j/sEKc8LLnwesQIwHe34o318RPuBuQ
6QMDMv0AOMd3zw/XmURhz5/2hXRsLk/+By4SqF2JUa2vrpHESW7y9XK6INqTd+Pa
SCEIal3NfiE6EGGjUJjkxF2X6b0iBbT/M3MmVpX+FVGGahjttgJfdqAa29ItEADm
DUlAc37ihjMU5AbJ7MdB4yQyOJbJOuevU81Vx11kXPKERoKoaUcSnif+QqxM6IQP
V6H+Ba/hFH8UyIjGk9UnfXYOWKLEp46xKYKEtumr6Wf7OF9W+kWs9SASLdnbE0d0
CUarDfhpI9p3T0Pw3yThKqNwfhIkE0OZIr67dvX5eSdb8vkccaY/p2aSRarU/EBS
fJscWFw7gWziPUdryuObQNYALjjgtF6+RJdJfab+7r0dyzk10B29TRFNTsrDxFK1
c85QwoHS0ekaiaxfN//El1iBpfyzLNGawrZYK/gxgZqO0H3SXoYDc9bOMFviKXFl
ZIi/lgbH7/pYqSAbPetOZwSGNkqep5PywsluFOqHf24QX343kELroxixlgMzUDif
kni4L2hvrq/VxQFb/eWGYJVwra2wUeOPiUavMDYjE8QpdMxZFOV1xTIUbD/kdwUT
R8LrpmUy4VQ8aEgqzgJdRc4fwF5PQMhokd+55w+AVUb/+qJE7wHrEsWOPJQw1c+E
WUhkuN51iqTb2rRqlys1PJcRkz7N7eoRkmmT/DZilkag93j1EPK3HLCwSn5y7hq5
D5S+LCPN8yDfcFC0XlQu2kO0xr25TaaFZQ+jdjDKRPqsU3VCTv0M8bK/22oQhbvF
XcpxFOptPQfYM9d0UeTGrcIepz6ISBOH4+bqrkfdrdvPp8viaFRjLxVvFhoQo4tJ
dcIwX8GMYqzz8pS4yFXekYQhyXvxKH2ntKzqC7zi1aXrOWNFBoLAXH4XMag5GNEj
yvmtHnVjDNqxEJjNEHMAQGlauRy+Ki+urMB8RfHhO3msvev9GsmORsT0TN79NbS5
8hEZ8xj3NSgAMqO3JCMJCro1BnLDDlGCExuzrdkSaf3kyVy093FV4wAq/iWSvoWW
ICY8Io1x9/ci3+BF5GEmJ8T2UvQmNxDeC96KEVU3aJn5T/T0jamIr0lI8yKFE8GD
mllBMk57EerQhcus7EDV3H1P+44CpfgcmjfTHJgcvKsxtyjhQM41Sc9tmImmw6rW
N8Jy5jrKeSOpFk1J5tkaMnO/v6fYnT8mjySwMxxAgdLOnjrVR/m5hnwXxd8fplPZ
Jb1hvKV8i3at6EDHSUesc9802g55wRgbN6/rZ8QyAV8IDgMdhIGFr97EZfjd5IUG
kUABvydWh1pwnAl28MS0RNvAS5YwgcNpQZoEtaldxCyHjJRn5ZWH2MPT12rkYw9z
k2iaSTJPC0nCeU0+9Gs6T4zM31h9ykXofzNbrsQhkym4Cnk3BvwvPWOAY8OT0ENX
swuoug6QXRJ9WofYjUXfCJzPBh5tzdepfn3kQFvf32PXyQWSNli6JAMcYykyCI6J
cdU3AXyqm8JAZYyQ5lCwyHPwSpuN8f+Hltogar8FYnT61CJEP+ehj1iJCSqVqlQo
x5OoXogTy0cWoNaeWgFllyuBcRVd1BB8AJUMkoeNjJzbvyr1r7S02KhTP7OIFD20
uud5gwliynRLdErvIU6zp+XRtvnsbcsrFbFEjG41t2LHNrB75KBUqeuHyH5pFkyp
CS5kFqZ87dD1SiewycHj7AmUzJudAsiWbdguB3HPs2KGrebggiJ64fmUzei/U0mc
DAUFy8E1hgV3SkpGlGeiSYRC65ljHvvbtWE5kmZPtTEzqzYZCKWI37UJ0CfteOtG
6Gh/iV3orpwP210VO/mTLrrfu/UuKSeNrKVhFVX7M3koiOBFTV/QXrSB8EHvGXJv
5uYXTqGOBCwMwAO3AZgXKm5yRS7hGrW7MjkJpk/aJugyPx9pW1eZ42BrVXAmnBl8
aaTanUIrdQnJdlXjuDZ9/cKCbHcbMjS7OJnfgK6N2CWts946IQEGjKWrbhiCuNXP
QZo7ZOc/WbrtRAb8cHho8cKz6nFhytcVYmGe3CgTa4MbM9tffFMQPJ575sOux2s3
aa83FweCHkIucjrUNjKriCyMJ2axiWI41l+f++aI4UdduGLDYJY/ENCUsEgU4dvT
0qLk77t2HksB4KpGlNo+0Z4FLHBZczn2iJbmwaAXDC3mpUXiARDwsgt/cSofOT3k
9UwO7TbP245HWrrkc/8J4NEPS5L3N2NsnEjrW1B0Uj1TbYiigR/QF+N9VzSuaLEJ
NB2ytXCowMaVgoa56g7dN+1dyW8XOVZU8QO+1sf1qcnPHi8KDRZ1N4aBmqJfqf+V
MjBTJPK8Ks/Nmt2o8uhfm+Fhpt1AJpevn12oanbyLKoOzrHiOzeSOVcH/wD0Fe1Z
bTsxhCAjabEsPteT9gPnDvbrpit+wJNEuT8YBQ5mo+RvWkqFKIlw4sTjeXSp2lqi
HzMoF1UmW219RKnXyr/SERYh9udAqKhh74PV6okXUCAn8F7zbAMr5F9QEWdx5uKt
ejysWjnhScfTSiojAM6ustPxb368WUVX+OtXCs0KXOpM/Vja9iZxpcpQYKMDnNMm
k0M5sFPlhOtREGuL4kqh1G2gzkoZve0ETMTgjeTxmA0Iuv6YOC4n3UhBGqjYje9I
OH8BzM6kV4SSkeGh3UgcG6/SrY1xMNf2adOGwhHfDu8tXDPEb3HSLoMKM49IDb7/
CmpSwSn4LHYUvwonJ0pc3L1RnrxNrf3L2ccRWViEGmV+XsSqVLKEEIB+Y704ZpBy
cgY936fGQX9T0kqoMFHFErIDvh2By+p1oztUyFPwKN0h5o6U+/5ZZj1YwTo+i4z+
oQAtnqAT4kZ9+xv/0CQU9CrOGzErJ/3gYnYgK4U3CF/rdPooMr/f0b3FigdlZ6bP
1HPw7F27EfqI0m6L6lD5GoHk3+9+oLQrj2xlsuPEwP5PuRFkYFDdI40/MSXaT1G/
/OGLPCPrdE3fNZVymF0DOcG86OKvQjShx8cbCZ7jhAZATMyuqP++shPdvMJ5efKL
YpnRCeKXDHUSdrO7RQ3VX1TG1nYpvnBbBS1J/zHJuC54wF+UZSWysNPjbzoMxj6L
uCcpsZhxixr/Ko18zHcULCRf/eY5SOzF+O3oH+WXW/DQ9wsH+C/cRttdICgP9kw2
zm+f1pzTKmt85Azyo1cskNZdOy27J4rcgJhqtsL2J1H7VFrSub6P70xNNeMsq9VT
soE+gFt/fjtyrf1FYXukuxl8jICpMST6F5KpohjxyjBH6x1an1s9jQZKf9dgjPDF
ceIYwqLCjQ7i8RaiCBgHbyVA51sffNUVXwqyZIt7rDRKSkbYObQeSicYHC6vp2B0
SOO2vHq6281dAC/AdD+D6IA9dfnHJ+uEBze7F/w6rupHBzPnOZVoiOA0kzFTg00l
Mx2nl6IEbVrYC6zmTRtySjetsmKmEBtg7bbNYRkQQnE/TyN9uvNiMS3A0kowp9ls
gvaIR0K85kUlAv9AJhLv5FCjwbpYe7/11daZhNPFMN0h0Vr37RLmfdGbCtBA0zlF
nADmABZZtQjO0pdnae0AnkoTXfMCOKNVmZo0RYO1Zmc=
`protect end_protected


-- =================================================================================================
--   NX_IOM_SERDES definition                                                             2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOM_SERDES is
generic (
    data_size : integer range 2 to 10 := 5;
    location  : string := ""
);
port (
    RTCK  : in std_logic;
    WRCK  : in std_logic;
    WTCK  : in std_logic;
    RRCK  : in std_logic;
    TRST  : in std_logic;
    RRST  : in std_logic;
    CTCK  : in std_logic;
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic;
    LINKN : inout std_logic_vector(IOM_LINK_SIZE-1 downto 0);
    LINKP : inout std_logic_vector(IOM_LINK_SIZE-1 downto 0)
);
end NX_IOM_SERDES;

architecture NX_RTL of NX_IOM_SERDES is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOM_SERDES";
    attribute NX_USE of LINKP: signal is "LINK";
    attribute NX_USE of LINKN: signal is "LINK";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Ln+oor7+gkWl77/YVJXdsQ33MfncbTUkOnSCQSo3V8E40FM2Bookj46j0PRXMQoD
uPZgxNc9VDtjT5rBwL/qkFP9L2gY5Bx2foxQYMWMicMsPNDTg8GRkzku9VrCPMV4
0HVhkudb2fHNqnAGZSD5Ftpl1vmE+lhAhiAKFveV21kxD5kry/xY6zs9BY3iKgn2
TIS6zKNz5b9721pP/MucEW9yK0HraoESdX+ZofzOSUEX9X97ouXHuSfusUmi8my2
X4p27V0RipicxRCccTaxozMr0A9s/BVO+8BzUIud89cfY3Nil7VVXGeCMONiWqjj
lO9u9T1fAjezVCZp3PkSiA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 44272)
`protect data_block
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
nHpGQ0tWF7LQcyI6vVwtjUnt0eLzPHzIwkN2O5/AK/QncnuQHiAqHMYOQAjq2DQq
UQWSIz1DbrmdfMC7L2spNPbWuRXlododwL4Oo0qevKU7vPXu/Le4pJM7CT4Q5u2D
MQJ7dIyilINIUJBVArLCKd+G/DIFkNaNXUSMdzUfLH7+UHt3+xQlFPXzRhS9w4tg
YuUxHOIyQWGM5wPMVexQ+eTBXvQwYhQ1stBrseCBcmiswPtroU8OmpzI1/y6jE0T
BXk2qhFjzQTCDcmBblQCt2EtK+6UVAy0jOD28iQrB9bPA4w247efNyiAj+s0koMu
B/i0xyKuol1gypcwqSDs56glWG1MoM7r0aryuwA5buIf3I+vCEgUkPBmsNbq9SfD
yRHpOUVx3BLq4oCM5yq2EwNnsYvFoWrVKjQ55YBRAOAaWETSU7lBdyCKpV5osagv
3jLwhVepRWAzphdhsBmtb2Anq4inauf+dVse9UdjyObR38bcuQxRpCcx2qwclfNb
AC8/kVZiyfE1TW/AO7YJ00BmXLPSm9D6Nr3zqHB9pnRhIqr4hXmEO4Aj51b1MVs/
J5i99uA4CNMNlXZ0H2GqDNf33hAoFw1pgKHg6RSYqgJQmVh5okRmGgA9jh0poWNW
YpYkGZzBIhYvEJfs8oFXE+/0Q50EysGINmoPLztXt0DKGRqKeYyh+/QE/QJaEc6W
0u4NZpjIeuL9Q4SM73jZazwosL067Gzu77pPd+hh4l2l+30hkUK8syW79mBL+/vj
34SW5cFZ6SozVVRXG0n4mWIiKlo27SEM5CoFdcloFVGvhQcADwE3edRpHYvuSmbQ
3Rb2yMsc+Kvx2IOtALAfs3W77Z9y9wc1uSjnCATqpXd+exWGRLG5kBPY21a641Ma
p8RNpUVma7Ozwz7sgCB/rsIQ5ehoTC+VJ+DnuxurVPI78jClGFiKnu8dAvJYLW44
cjDaakYXG/tZUkotli05cMbJt+Tm4mtfEac21M63Y6dQNyP9zjd8800NTyKvzSWm
oauCXUlldw7vCk5hvheM3gMbERjWaeFkT9Zk0b2ehbRtHNqoHBlvi+nkVf5V7Rta
jBh54jyj3s4VW8wNBGPntBjjbmyuTo2eTHGTI5wk+/+H3WroKnaTJGUHI7W8RQHD
82fQ2ew5mwBa47PfQdYWf7acgPW3zYSHo2p4HsPM8OTNw9qJdTQCgCMpu5JWsTtF
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
UW6CbBJEZde6UBoP+7cdVQ==
`protect end_protected

-- =================================================================================================
--   NX_LUT definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1 : in  std_logic;
    I2 : in  std_logic;
    I3 : in  std_logic;
    I4 : in  std_logic;
    O  : out std_logic
);
end NX_LUT;

architecture NX_RTL of NX_LUT is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_LUT";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFF;

architecture NX_RTL of NX_DFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFF is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFF;

architecture NX_RTL of NX_BFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFR is
generic (
    location   : string := "";
    iobname    : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    ring       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFR;

architecture NX_RTL of NX_DFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFR is
generic (
    location   : string := "";
    iobname    : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    ring       : integer := 0
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFR;

architecture NX_RTL of NX_BFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
cR8/k4FtViVC3oJxpxKY7Q9UE3gIaAiAIxDckPD43DLoZWNwdtcYDpKuPjOulMYq
by62ykECvVhtSooIdNujNzQFOrQ/0QCOOCJ/p4lA1I7D9Yc8SYufB8PhRJygKPXZ
qFFU6YPD3XT2iAvBTnxIBU+TEiowRyT5VH8Kw8GTbOraria0wB8kUa6DvZuzEv60
u/s1+9NbMofb43HxjjpET7699C2a24yivCQzdeO7MOUct325AuecbwsPGaNB2D0W
5dwpTeOHV4r1C1QHo1xesKOe6BlV+KnXil/3NWh3jueaMVn9P/Z8aQNh7cLRYLbJ
5uBRpNY1j6pmwma7JltiCg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7216)
`protect data_block
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
gSr01K+PUXTWNpQY3bs9JQ==
`protect end_protected

-- =================================================================================================
--   NX_CY definition                                                                   2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1 : in  std_logic;
    A2 : in  std_logic;
    A3 : in  std_logic;
    A4 : in  std_logic;
    B1 : in  std_logic;
    B2 : in  std_logic;
    B3 : in  std_logic;
    B4 : in  std_logic;
    CI : in  std_logic;
    CO : out std_logic;
    S1 : out std_logic;
    S2 : out std_logic;
    S3 : out std_logic;
    S4 : out std_logic
);
end NX_CY;

architecture NX_RTL of NX_CY is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CY";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
J6PqIqyLDQWHsKc4fQgP9HMtaRO246rZ/isG3GIeYIh+ZADWDMCF3SmXluZqiBTE
mDac0WnDM60rKVzJCEhDp3OJXoehBcpqess/sztg1UwPoRpZW+6gh1w2+na+fdFO
j/e2bgrGj5uEz5nq/z3j0qoChVQcmHBKVAQH/Y/jU900PVYX1p5Hio7bvffW38s3
nV5eBCRBoZg9qCOLlFjr26hjfeY0YNPCgP8nw5336A5PHOpt4UM7DY3DK7uyMmlH
lC3jblHFmb4ea3E/jnzwRC3WMpk123gYw1K7v2RsL9zQgDcPNmLGe8mX6W/e/1J0
F03omrQuJxJoUYjvgTMKBg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2576)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_RFB (compatible) definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB is
generic (
    rck_edge  : bit := '0';   -- 0: read  clock rising edge - 1: read  clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic
);
end NX_RFB;

architecture NX_RTL of NX_RFB is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_L is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XRO6 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic;
    XWO6 : out std_logic
);
end component NX_RFB_L;

begin

rfb: NX_RFB_L generic map (
    rck_edge    => rck_edge,
    wck_edge    => wck_edge,
    mem_ctxt    => mem_ctxt)
port map (
    RCK => RCK,
    WCK => WCK,
    I1  => I1,
    I2  => I2,
    I3  => I3,
    I4  => I4,
    I5  => I5,
    I6  => I6,
    I7  => I7,
    I8  => I8,
    I9  => I9,
    I10 => I10,
    I11 => I11,
    I12 => I12,
    I13 => I13,
    I14 => I14,
    I15 => I15,
    I16 => I16,
    COR => COR,
    ERR => ERR,
    O1  => O1,
    O2  => O2,
    O3  => O3,
    O4  => O4,
    O5  => O5,
    O6  => O6,
    O7  => O7,
    O8  => O8,
    O9  => O9,
    O10 => O10,
    O11 => O11,
    O12 => O12,
    O13 => O13,
    O14 => O14,
    O15 => O15,
    O16 => O16,
    RA1 => RA1,
    RA2 => RA2,
    RA3 => RA3,
    RA4 => RA4,
    RA5 => RA5,
    RA6 => RA6,
    RE  => RE,
    WA1 => WA1,
    WA2 => WA2,
    WA3 => WA3,
    WA4 => WA4,
    WA5 => WA5,
    WA6 => WA6,
    WE  => WE,
    XRCK => OPEN,
    XRO1 => OPEN,
    XRO2 => OPEN,
    XRO3 => OPEN,
    XRO4 => OPEN,
    XRO5 => OPEN,
    XRO6 => OPEN,
    XWCK => OPEN,
    XWO1 => OPEN,
    XWO2 => OPEN,
    XWO3 => OPEN,
    XWO4 => OPEN,
    XWO5 => OPEN,
    XWO6 => OPEN
);
end NX_RTL;

-- =================================================================================================
--   NX_RFB_L definition                                                                2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_L is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XRO6 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic;
    XWO6 : out std_logic
);
end NX_RFB_L;

architecture NX_RTL of NX_RFB_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RFB_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RFB_L_WRAP definition                                                           2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_L_WRAP is
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I   : in  std_logic_vector(15 downto 0);
    COR : out std_logic;
    ERR : out std_logic;
    O   : out std_logic_vector(15 downto 0);
    RA  : in  std_logic_vector(5 downto 0);
    RE  : in  std_logic;
    WA  : in  std_logic_vector(5 downto 0);
    WE  : in  std_logic;
    XRCK : out std_logic;
    XRO  : out std_logic_vector(5 downto 0);
    XWCK : out std_logic;
    XWO  : out std_logic_vector(5 downto 0)
);
end NX_RFB_L_WRAP;

architecture NX_RTL of NX_RFB_L_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_L
generic (
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XRO6 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic;
    XWO6 : out std_logic
);
end component NX_RFB_L;

begin

rfb: NX_RFB_L generic map (
    rck_edge    => rck_edge,
    wck_edge    => wck_edge,
    mem_ctxt    => mem_ctxt)
port map (
    RCK => RCK,
    WCK => WCK,
    I1  => I(0),
    I2  => I(1),
    I3  => I(2),
    I4  => I(3),
    I5  => I(4),
    I6  => I(5),
    I7  => I(6),
    I8  => I(7),
    I9  => I(8),
    I10 => I(9),
    I11 => I(10),
    I12 => I(11),
    I13 => I(12),
    I14 => I(13),
    I15 => I(14),
    I16 => I(15),
    COR => COR,
    ERR => ERR,
    O1  => O(0),
    O2  => O(1),
    O3  => O(2),
    O4  => O(3),
    O5  => O(4),
    O6  => O(5),
    O7  => O(6),
    O8  => O(7),
    O9  => O(8),
    O10 => O(9),
    O11 => O(10),
    O12 => O(11),
    O13 => O(12),
    O14 => O(13),
    O15 => O(14),
    O16 => O(15),
    RA1 => RA(0),
    RA2 => RA(1),
    RA3 => RA(2),
    RA4 => RA(3),
    RA5 => RA(4),
    RA6 => RA(5),
    RE  => RE,
    WA1 => WA(0),
    WA2 => WA(1),
    WA3 => WA(2),
    WA4 => WA(3),
    WA5 => WA(4),
    WA6 => WA(5),
    WE  => WE,
    XRCK => XRCK,
    XRO1 => XRO(0),
    XRO2 => XRO(1),
    XRO3 => XRO(2),
    XRO4 => XRO(3),
    XRO5 => XRO(4),
    XRO6 => XRO(5),
    XWCK => XWCK,
    XWO1 => XWO(0),
    XWO2 => XWO(1),
    XWO3 => XWO(2),
    XWO4 => XWO(3),
    XWO5 => XWO(4),
    XWO6 => XWO(5)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_CKS is
port (
    CKI : in  std_logic;
    CMD : in  std_logic;
    CKO : out std_logic
);
end NX_CKS;

architecture NX_RTL of NX_CKS is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CKS";
begin
end NX_RTL;
----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
SxJByZG+dxCOJ/dqhhRiFofchsl1SUgapTRv+hNrqjKMu2xwhrA08Q2fAtJBc0/j
m847yQozEqBjPOqkIqEQe9QGKDN8sffR9DNgBhVrncUceLy7dAQam5OSXpJsan85
3dcNIA2sFl2U/O1ZXakiBzXwVLGNZ+KsGSqZVAbozOnoYvy+qB5UedpuFNU3tbN1
G9tE6wvdesks1ZHEiTwTV7hRYOXNZjsmov/t1wsL6OsycHGlwQAZKzyUKgGWNgHq
jmsXp/mQBARk/e7xDBreo+BAGSo14du5uFfP2FDTi30Dnd/o7rt4OSutQOSHor8E
A4B2KPzBS/m1IWqvui4N6Q==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 6768)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_DSP_L definition                                                                2018/11/30
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_DSP_L is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";   -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";    -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";          -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                 -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;
    CAI19 : in  std_logic;
    CAI20 : in  std_logic;
    CAI21 : in  std_logic;
    CAI22 : in  std_logic;
    CAI23 : in  std_logic;
    CAI24 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;
    CAO19 : out std_logic;
    CAO20 : out std_logic;
    CAO21 : out std_logic;
    CAO22 : out std_logic;
    CAO23 : out std_logic;
    CAO24 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO57  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end NX_DSP_L;

architecture NX_RTL of NX_DSP_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DSP_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_L_WRAP definition                                                           2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_DSP_L_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A    : in  std_logic_vector(23 downto 0);
    B    : in  std_logic_vector(17 downto 0);
    C    : in  std_logic_vector(35 downto 0);

    CAI  : in  std_logic_vector(23 downto 0);
    CAO  : out std_logic_vector(23 downto 0);
    CBI  : in  std_logic_vector(17 downto 0);
    CBO  : out std_logic_vector(17 downto 0);

    CCI  : in  std_logic;
    CCO  : out std_logic;
    CI   : in  std_logic;
    CK   : in  std_logic;
    CO   : out std_logic;
    CO37 : out std_logic;
    CO57 : out std_logic;

    CZI  : in  std_logic_vector(55 downto 0);
    CZO  : out std_logic_vector(55 downto 0);

    D    : in  std_logic_vector(17 downto 0);

    OVF  : out std_logic;
    R    : in  std_logic;
    RZ   : in  std_logic;
    WE   : in  std_logic;

    Z    : out std_logic_vector(55 downto 0)
);
end NX_DSP_L_WRAP;

-- architecture NXP_ARCH of NX_DSP_L_WRAP#{{{#
architecture NXP_ARCH of NX_DSP_L_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NXP_ARCH: architecture is "WRAPPER";

component NX_DSP_L
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";      -- MUX
    raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";       -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";             -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                    -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;
    CAI19 : in  std_logic;
    CAI20 : in  std_logic;
    CAI21 : in  std_logic;
    CAI22 : in  std_logic;
    CAI23 : in  std_logic;
    CAI24 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;
    CAO19 : out std_logic;
    CAO20 : out std_logic;
    CAO21 : out std_logic;
    CAO22 : out std_logic;
    CAO23 : out std_logic;
    CAO24 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO57  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end component;

begin

dsp: NX_DSP_L generic map (
    std_mode    => std_mode,
    raw_config0 => raw_config0,
    raw_config1 => raw_config1,
    raw_config2 => raw_config2,
    raw_config3 => raw_config3)
port map (
    A1    => A(0),
    A2    => A(1),
    A3    => A(2),
    A4    => A(3),
    A5    => A(4),
    A6    => A(5),
    A7    => A(6),
    A8    => A(7),
    A9    => A(8),
    A10   => A(9),
    A11   => A(10),
    A12   => A(11),
    A13   => A(12),
    A14   => A(13),
    A15   => A(14),
    A16   => A(15),
    A17   => A(16),
    A18   => A(17),
    A19   => A(18),
    A20   => A(19),
    A21   => A(20),
    A22   => A(21),
    A23   => A(22),
    A24   => A(23),

    B1    => B(0),
    B2    => B(1),
    B3    => B(2),
    B4    => B(3),
    B5    => B(4),
    B6    => B(5),
    B7    => B(6),
    B8    => B(7),
    B9    => B(8),
    B10   => B(9),
    B11   => B(10),
    B12   => B(11),
    B13   => B(12),
    B14   => B(13),
    B15   => B(14),
    B16   => B(15),
    B17   => B(16),
    B18   => B(17),

    C1    => C(0),
    C2    => C(1),
    C3    => C(2),
    C4    => C(3),
    C5    => C(4),
    C6    => C(5),
    C7    => C(6),
    C8    => C(7),
    C9    => C(8),
    C10   => C(9),
    C11   => C(10),
    C12   => C(11),
    C13   => C(12),
    C14   => C(13),
    C15   => C(14),
    C16   => C(15),
    C17   => C(16),
    C18   => C(17),
    C19   => C(18),
    C20   => C(19),
    C21   => C(20),
    C22   => C(21),
    C23   => C(22),
    C24   => C(23),
    C25   => C(24),
    C26   => C(25),
    C27   => C(26),
    C28   => C(27),
    C29   => C(28),
    C30   => C(29),
    C31   => C(30),
    C32   => C(31),
    C33   => C(32),
    C34   => C(33),
    C35   => C(34),
    C36   => C(35),

    CAI1  => CAI(0),
    CAI2  => CAI(1),
    CAI3  => CAI(2),
    CAI4  => CAI(3),
    CAI5  => CAI(4),
    CAI6  => CAI(5),
    CAI7  => CAI(6),
    CAI8  => CAI(7),
    CAI9  => CAI(8),
    CAI10 => CAI(9),
    CAI11 => CAI(10),
    CAI12 => CAI(11),
    CAI13 => CAI(12),
    CAI14 => CAI(13),
    CAI15 => CAI(14),
    CAI16 => CAI(15),
    CAI17 => CAI(16),
    CAI18 => CAI(17),
    CAI19 => CAI(18),
    CAI20 => CAI(19),
    CAI21 => CAI(20),
    CAI22 => CAI(21),
    CAI23 => CAI(22),
    CAI24 => CAI(23),

    CAO1  => CAO(0),
    CAO2  => CAO(1),
    CAO3  => CAO(2),
    CAO4  => CAO(3),
    CAO5  => CAO(4),
    CAO6  => CAO(5),
    CAO7  => CAO(6),
    CAO8  => CAO(7),
    CAO9  => CAO(8),
    CAO10 => CAO(9),
    CAO11 => CAO(10),
    CAO12 => CAO(11),
    CAO13 => CAO(12),
    CAO14 => CAO(13),
    CAO15 => CAO(14),
    CAO16 => CAO(15),
    CAO17 => CAO(16),
    CAO18 => CAO(17),
    CAO19 => CAO(18),
    CAO20 => CAO(19),
    CAO21 => CAO(20),
    CAO22 => CAO(21),
    CAO23 => CAO(22),
    CAO24 => CAO(23),

    CBI1  => CBI(0),
    CBI2  => CBI(1),
    CBI3  => CBI(2),
    CBI4  => CBI(3),
    CBI5  => CBI(4),
    CBI6  => CBI(5),
    CBI7  => CBI(6),
    CBI8  => CBI(7),
    CBI9  => CBI(8),
    CBI10 => CBI(9),
    CBI11 => CBI(10),
    CBI12 => CBI(11),
    CBI13 => CBI(12),
    CBI14 => CBI(13),
    CBI15 => CBI(14),
    CBI16 => CBI(15),
    CBI17 => CBI(16),
    CBI18 => CBI(17),

    CBO1  => CBO(0),
    CBO2  => CBO(1),
    CBO3  => CBO(2),
    CBO4  => CBO(3),
    CBO5  => CBO(4),
    CBO6  => CBO(5),
    CBO7  => CBO(6),
    CBO8  => CBO(7),
    CBO9  => CBO(8),
    CBO10 => CBO(9),
    CBO11 => CBO(10),
    CBO12 => CBO(11),
    CBO13 => CBO(12),
    CBO14 => CBO(13),
    CBO15 => CBO(14),
    CBO16 => CBO(15),
    CBO17 => CBO(16),
    CBO18 => CBO(17),

    CCI   => CCI,
    CCO   => CCO,
    CI    => CI,
    CK    => CK,
    CO    => CO,
    CO37  => CO37,
    CO57  => CO57,

    CZI1  => CZI(0),
    CZI2  => CZI(1),
    CZI3  => CZI(2),
    CZI4  => CZI(3),
    CZI5  => CZI(4),
    CZI6  => CZI(5),
    CZI7  => CZI(6),
    CZI8  => CZI(7),
    CZI9  => CZI(8),
    CZI10 => CZI(9),
    CZI11 => CZI(10),
    CZI12 => CZI(11),
    CZI13 => CZI(12),
    CZI14 => CZI(13),
    CZI15 => CZI(14),
    CZI16 => CZI(15),
    CZI17 => CZI(16),
    CZI18 => CZI(17),
    CZI19 => CZI(18),
    CZI20 => CZI(19),
    CZI21 => CZI(20),
    CZI22 => CZI(21),
    CZI23 => CZI(22),
    CZI24 => CZI(23),
    CZI25 => CZI(24),
    CZI26 => CZI(25),
    CZI27 => CZI(26),
    CZI28 => CZI(27),
    CZI29 => CZI(28),
    CZI30 => CZI(29),
    CZI31 => CZI(30),
    CZI32 => CZI(31),
    CZI33 => CZI(32),
    CZI34 => CZI(33),
    CZI35 => CZI(34),
    CZI36 => CZI(35),
    CZI37 => CZI(36),
    CZI38 => CZI(37),
    CZI39 => CZI(38),
    CZI40 => CZI(39),
    CZI41 => CZI(40),
    CZI42 => CZI(41),
    CZI43 => CZI(42),
    CZI44 => CZI(43),
    CZI45 => CZI(44),
    CZI46 => CZI(45),
    CZI47 => CZI(46),
    CZI48 => CZI(47),
    CZI49 => CZI(48),
    CZI50 => CZI(49),
    CZI51 => CZI(50),
    CZI52 => CZI(51),
    CZI53 => CZI(52),
    CZI54 => CZI(53),
    CZI55 => CZI(54),
    CZI56 => CZI(55),

    CZO1  => CZO(0),
    CZO2  => CZO(1),
    CZO3  => CZO(2),
    CZO4  => CZO(3),
    CZO5  => CZO(4),
    CZO6  => CZO(5),
    CZO7  => CZO(6),
    CZO8  => CZO(7),
    CZO9  => CZO(8),
    CZO10 => CZO(9),
    CZO11 => CZO(10),
    CZO12 => CZO(11),
    CZO13 => CZO(12),
    CZO14 => CZO(13),
    CZO15 => CZO(14),
    CZO16 => CZO(15),
    CZO17 => CZO(16),
    CZO18 => CZO(17),
    CZO19 => CZO(18),
    CZO20 => CZO(19),
    CZO21 => CZO(20),
    CZO22 => CZO(21),
    CZO23 => CZO(22),
    CZO24 => CZO(23),
    CZO25 => CZO(24),
    CZO26 => CZO(25),
    CZO27 => CZO(26),
    CZO28 => CZO(27),
    CZO29 => CZO(28),
    CZO30 => CZO(29),
    CZO31 => CZO(30),
    CZO32 => CZO(31),
    CZO33 => CZO(32),
    CZO34 => CZO(33),
    CZO35 => CZO(34),
    CZO36 => CZO(35),
    CZO37 => CZO(36),
    CZO38 => CZO(37),
    CZO39 => CZO(38),
    CZO40 => CZO(39),
    CZO41 => CZO(40),
    CZO42 => CZO(41),
    CZO43 => CZO(42),
    CZO44 => CZO(43),
    CZO45 => CZO(44),
    CZO46 => CZO(45),
    CZO47 => CZO(46),
    CZO48 => CZO(47),
    CZO49 => CZO(48),
    CZO50 => CZO(49),
    CZO51 => CZO(50),
    CZO52 => CZO(51),
    CZO53 => CZO(52),
    CZO54 => CZO(53),
    CZO55 => CZO(54),
    CZO56 => CZO(55),

    D1    => D(0),
    D2    => D(1),
    D3    => D(2),
    D4    => D(3),
    D5    => D(4),
    D6    => D(5),
    D7    => D(6),
    D8    => D(7),
    D9    => D(8),
    D10   => D(9),
    D11   => D(10),
    D12   => D(11),
    D13   => D(12),
    D14   => D(13),
    D15   => D(14),
    D16   => D(15),
    D17   => D(16),
    D18   => D(17),

    OVF   => OVF,
    R     => R,
    RZ    => RZ,
    WE    => WE,

    Z1    => Z(0),
    Z2    => Z(1),
    Z3    => Z(2),
    Z4    => Z(3),
    Z5    => Z(4),
    Z6    => Z(5),
    Z7    => Z(6),
    Z8    => Z(7),
    Z9    => Z(8),
    Z10   => Z(9),
    Z11   => Z(10),
    Z12   => Z(11),
    Z13   => Z(12),
    Z14   => Z(13),
    Z15   => Z(14),
    Z16   => Z(15),
    Z17   => Z(16),
    Z18   => Z(17),
    Z19   => Z(18),
    Z20   => Z(19),
    Z21   => Z(20),
    Z22   => Z(21),
    Z23   => Z(22),
    Z24   => Z(23),
    Z25   => Z(24),
    Z26   => Z(25),
    Z27   => Z(26),
    Z28   => Z(27),
    Z29   => Z(28),
    Z30   => Z(29),
    Z31   => Z(30),
    Z32   => Z(31),
    Z33   => Z(32),
    Z34   => Z(33),
    Z35   => Z(34),
    Z36   => Z(35),
    Z37   => Z(36),
    Z38   => Z(37),
    Z39   => Z(38),
    Z40   => Z(39),
    Z41   => Z(40),
    Z42   => Z(41),
    Z43   => Z(42),
    Z44   => Z(43),
    Z45   => Z(44),
    Z46   => Z(45),
    Z47   => Z(46),
    Z48   => Z(47),
    Z49   => Z(48),
    Z50   => Z(49),
    Z51   => Z(50),
    Z52   => Z(51),
    Z53   => Z(52),
    Z54   => Z(53),
    Z55   => Z(54),
    Z56   => Z(55)
);

end NXP_ARCH;
-- #}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_L_SPLIT definition                                                          2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_signed.ALL;

entity NX_DSP_L_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port(
   CK   : IN  std_logic;
   R    : IN  std_logic;
   RZ   : IN  std_logic;
   WE   : IN  std_logic;

   CI   : IN  std_logic;     -- cy_i
   A    : IN  std_logic_vector(23 downto 0);
   B    : IN  std_logic_vector(17 downto 0);
   C    : IN  std_logic_vector(35 downto 0);
   D    : IN  std_logic_vector(17 downto 0);
   CAI  : IN  std_logic_vector(23 downto 0);
   CBI  : IN  std_logic_vector(17 downto 0);
   CZI  : IN  std_logic_vector(55 downto 0);
   CCI  : IN  std_logic;  -- ccy_i

   Z    : out  std_logic_vector(55 downto 0);
   CO   : OUT  std_logic;  -- cy_o
   CO36 : OUT  std_logic;  -- cy36_o
   CO56 : OUT  std_logic;  -- cy56_o
   OVF  : OUT  std_logic;
   CAO  : OUT  std_logic_vector(23 downto 0);
   CBO  : OUT  std_logic_vector(17 downto 0);
   CZO  : OUT  std_logic_vector(55 downto 0);
   CCO  : OUT  std_logic  -- ccy_o
  );
end NX_DSP_L_SPLIT;

-- architecture NX_RTL of NX_DSP_L_SPLIT#{{{#
architecture NX_RTL of NX_DSP_L_SPLIT is

----------------------------------------------------------
-- Internal signals to be mapped to the NX_DSP_L component
----------------------------------------------------------
signal A1         : std_logic := '0';
signal A2         : std_logic := '0';
signal A3         : std_logic := '0';
signal A4         : std_logic := '0';
signal A5         : std_logic := '0';
signal A6         : std_logic := '0';
signal A7         : std_logic := '0';
signal A8         : std_logic := '0';
signal A9         : std_logic := '0';
signal A10        : std_logic := '0';
signal A11        : std_logic := '0';
signal A12        : std_logic := '0';
signal A13        : std_logic := '0';
signal A14        : std_logic := '0';
signal A15        : std_logic := '0';
signal A16        : std_logic := '0';
signal A17        : std_logic := '0';
signal A18        : std_logic := '0';
signal A19        : std_logic := '0';
signal A20        : std_logic := '0';
signal A21        : std_logic := '0';
signal A22        : std_logic := '0';
signal A23        : std_logic := '0';
signal A24        : std_logic := '0';

signal B1         : std_logic := '0';
signal B2         : std_logic := '0';
signal B3         : std_logic := '0';
signal B4         : std_logic := '0';
signal B5         : std_logic := '0';
signal B6         : std_logic := '0';
signal B7         : std_logic := '0';
signal B8         : std_logic := '0';
signal B9         : std_logic := '0';
signal B10        : std_logic := '0';
signal B11        : std_logic := '0';
signal B12        : std_logic := '0';
signal B13        : std_logic := '0';
signal B14        : std_logic := '0';
signal B15        : std_logic := '0';
signal B16        : std_logic := '0';
signal B17        : std_logic := '0';
signal B18        : std_logic := '0';
         
signal C1         : std_logic := '0';
signal C2         : std_logic := '0';
signal C3         : std_logic := '0';
signal C4         : std_logic := '0';
signal C5         : std_logic := '0';
signal C6         : std_logic := '0';
signal C7         : std_logic := '0';
signal C8         : std_logic := '0';
signal C9         : std_logic := '0';
signal C10        : std_logic := '0';
signal C11        : std_logic := '0';
signal C12        : std_logic := '0';
signal C13        : std_logic := '0';
signal C14        : std_logic := '0';
signal C15        : std_logic := '0';
signal C16        : std_logic := '0';
signal C17        : std_logic := '0';
signal C18        : std_logic := '0';
signal C19        : std_logic := '0';
signal C20        : std_logic := '0';
signal C21        : std_logic := '0';
signal C22        : std_logic := '0';
signal C23        : std_logic := '0';
signal C24        : std_logic := '0';
signal C25        : std_logic := '0';
signal C26        : std_logic := '0';
signal C27        : std_logic := '0';
signal C28        : std_logic := '0';
signal C29        : std_logic := '0';
signal C30        : std_logic := '0';
signal C31        : std_logic := '0';
signal C32        : std_logic := '0';
signal C33        : std_logic := '0';
signal C34        : std_logic := '0';
signal C35        : std_logic := '0';
signal C36        : std_logic := '0';

signal CAI1       : std_logic := '0';
signal CAI2       : std_logic := '0';
signal CAI3       : std_logic := '0';
signal CAI4       : std_logic := '0';
signal CAI5       : std_logic := '0';
signal CAI6       : std_logic := '0';
signal CAI7       : std_logic := '0';
signal CAI8       : std_logic := '0';
signal CAI9       : std_logic := '0';
signal CAI10      : std_logic := '0';
signal CAI11      : std_logic := '0';
signal CAI12      : std_logic := '0';
signal CAI13      : std_logic := '0';
signal CAI14      : std_logic := '0';
signal CAI15      : std_logic := '0';
signal CAI16      : std_logic := '0';
signal CAI17      : std_logic := '0';
signal CAI18      : std_logic := '0';
signal CAI19      : std_logic := '0';
signal CAI20      : std_logic := '0';
signal CAI21      : std_logic := '0';
signal CAI22      : std_logic := '0';
signal CAI23      : std_logic := '0';
signal CAI24      : std_logic := '0';

signal CAO1       : std_logic := '0';
signal CAO2       : std_logic := '0';
signal CAO3       : std_logic := '0';
signal CAO4       : std_logic := '0';
signal CAO5       : std_logic := '0';
signal CAO6       : std_logic := '0';
signal CAO7       : std_logic := '0';
signal CAO8       : std_logic := '0';
signal CAO9       : std_logic := '0';
signal CAO10      : std_logic := '0';
signal CAO11      : std_logic := '0';
signal CAO12      : std_logic := '0';
signal CAO13      : std_logic := '0';
signal CAO14      : std_logic := '0';
signal CAO15      : std_logic := '0';
signal CAO16      : std_logic := '0';
signal CAO17      : std_logic := '0';
signal CAO18      : std_logic := '0';
signal CAO19      : std_logic := '0';
signal CAO20      : std_logic := '0';
signal CAO21      : std_logic := '0';
signal CAO22      : std_logic := '0';
signal CAO23      : std_logic := '0';
signal CAO24      : std_logic := '0';

signal CBI1       : std_logic := '0';
signal CBI2       : std_logic := '0';
signal CBI3       : std_logic := '0';
signal CBI4       : std_logic := '0';
signal CBI5       : std_logic := '0';
signal CBI6       : std_logic := '0';
signal CBI7       : std_logic := '0';
signal CBI8       : std_logic := '0';
signal CBI9       : std_logic := '0';
signal CBI10      : std_logic := '0';
signal CBI11      : std_logic := '0';
signal CBI12      : std_logic := '0';
signal CBI13      : std_logic := '0';
signal CBI14      : std_logic := '0';
signal CBI15      : std_logic := '0';
signal CBI16      : std_logic := '0';
signal CBI17      : std_logic := '0';
signal CBI18      : std_logic := '0';

signal CBO1       : std_logic := '0';
signal CBO2       : std_logic := '0';
signal CBO3       : std_logic := '0';
signal CBO4       : std_logic := '0';
signal CBO5       : std_logic := '0';
signal CBO6       : std_logic := '0';
signal CBO7       : std_logic := '0';
signal CBO8       : std_logic := '0';
signal CBO9       : std_logic := '0';
signal CBO10      : std_logic := '0';
signal CBO11      : std_logic := '0';
signal CBO12      : std_logic := '0';
signal CBO13      : std_logic := '0';
signal CBO14      : std_logic := '0';
signal CBO15      : std_logic := '0';
signal CBO16      : std_logic := '0';
signal CBO17      : std_logic := '0';
signal CBO18      : std_logic := '0';

signal CO37       : std_logic := '0';
signal CO57       : std_logic := '0';

signal CZI1       : std_logic := '0';
signal CZI2       : std_logic := '0';
signal CZI3       : std_logic := '0';
signal CZI4       : std_logic := '0';
signal CZI5       : std_logic := '0';
signal CZI6       : std_logic := '0';
signal CZI7       : std_logic := '0';
signal CZI8       : std_logic := '0';
signal CZI9       : std_logic := '0';
signal CZI10      : std_logic := '0';
signal CZI11      : std_logic := '0';
signal CZI12      : std_logic := '0';
signal CZI13      : std_logic := '0';
signal CZI14      : std_logic := '0';
signal CZI15      : std_logic := '0';
signal CZI16      : std_logic := '0';
signal CZI17      : std_logic := '0';
signal CZI18      : std_logic := '0';
signal CZI19      : std_logic := '0';
signal CZI20      : std_logic := '0';
signal CZI21      : std_logic := '0';
signal CZI22      : std_logic := '0';
signal CZI23      : std_logic := '0';
signal CZI24      : std_logic := '0';
signal CZI25      : std_logic := '0';
signal CZI26      : std_logic := '0';
signal CZI27      : std_logic := '0';
signal CZI28      : std_logic := '0';
signal CZI29      : std_logic := '0';
signal CZI30      : std_logic := '0';
signal CZI31      : std_logic := '0';
signal CZI32      : std_logic := '0';
signal CZI33      : std_logic := '0';
signal CZI34      : std_logic := '0';
signal CZI35      : std_logic := '0';
signal CZI36      : std_logic := '0';
signal CZI37      : std_logic := '0';
signal CZI38      : std_logic := '0';
signal CZI39      : std_logic := '0';
signal CZI40      : std_logic := '0';
signal CZI41      : std_logic := '0';
signal CZI42      : std_logic := '0';
signal CZI43      : std_logic := '0';
signal CZI44      : std_logic := '0';
signal CZI45      : std_logic := '0';
signal CZI46      : std_logic := '0';
signal CZI47      : std_logic := '0';
signal CZI48      : std_logic := '0';
signal CZI49      : std_logic := '0';
signal CZI50      : std_logic := '0';
signal CZI51      : std_logic := '0';
signal CZI52      : std_logic := '0';
signal CZI53      : std_logic := '0';
signal CZI54      : std_logic := '0';
signal CZI55      : std_logic := '0';
signal CZI56      : std_logic := '0';

signal CZO1       : std_logic := '0';
signal CZO2       : std_logic := '0';
signal CZO3       : std_logic := '0';
signal CZO4       : std_logic := '0';
signal CZO5       : std_logic := '0';
signal CZO6       : std_logic := '0';
signal CZO7       : std_logic := '0';
signal CZO8       : std_logic := '0';
signal CZO9       : std_logic := '0';
signal CZO10      : std_logic := '0';
signal CZO11      : std_logic := '0';
signal CZO12      : std_logic := '0';
signal CZO13      : std_logic := '0';
signal CZO14      : std_logic := '0';
signal CZO15      : std_logic := '0';
signal CZO16      : std_logic := '0';
signal CZO17      : std_logic := '0';
signal CZO18      : std_logic := '0';
signal CZO19      : std_logic := '0';
signal CZO20      : std_logic := '0';
signal CZO21      : std_logic := '0';
signal CZO22      : std_logic := '0';
signal CZO23      : std_logic := '0';
signal CZO24      : std_logic := '0';
signal CZO25      : std_logic := '0';
signal CZO26      : std_logic := '0';
signal CZO27      : std_logic := '0';
signal CZO28      : std_logic := '0';
signal CZO29      : std_logic := '0';
signal CZO30      : std_logic := '0';
signal CZO31      : std_logic := '0';
signal CZO32      : std_logic := '0';
signal CZO33      : std_logic := '0';
signal CZO34      : std_logic := '0';
signal CZO35      : std_logic := '0';
signal CZO36      : std_logic := '0';
signal CZO37      : std_logic := '0';
signal CZO38      : std_logic := '0';
signal CZO39      : std_logic := '0';
signal CZO40      : std_logic := '0';
signal CZO41      : std_logic := '0';
signal CZO42      : std_logic := '0';
signal CZO43      : std_logic := '0';
signal CZO44      : std_logic := '0';
signal CZO45      : std_logic := '0';
signal CZO46      : std_logic := '0';
signal CZO47      : std_logic := '0';
signal CZO48      : std_logic := '0';
signal CZO49      : std_logic := '0';
signal CZO50      : std_logic := '0';
signal CZO51      : std_logic := '0';
signal CZO52      : std_logic := '0';
signal CZO53      : std_logic := '0';
signal CZO54      : std_logic := '0';
signal CZO55      : std_logic := '0';
signal CZO56      : std_logic := '0';

signal D1         : std_logic := '0';
signal D2         : std_logic := '0';
signal D3         : std_logic := '0';
signal D4         : std_logic := '0';
signal D5         : std_logic := '0';
signal D6         : std_logic := '0';
signal D7         : std_logic := '0';
signal D8         : std_logic := '0';
signal D9         : std_logic := '0';
signal D10        : std_logic := '0';
signal D11        : std_logic := '0';
signal D12        : std_logic := '0';
signal D13        : std_logic := '0';
signal D14        : std_logic := '0';
signal D15        : std_logic := '0';
signal D16        : std_logic := '0';
signal D17        : std_logic := '0';
signal D18        : std_logic := '0';

signal Z1         : std_logic := '0';
signal Z2         : std_logic := '0';
signal Z3         : std_logic := '0';
signal Z4         : std_logic := '0';
signal Z5         : std_logic := '0';
signal Z6         : std_logic := '0';
signal Z7         : std_logic := '0';
signal Z8         : std_logic := '0';
signal Z9         : std_logic := '0';
signal Z10        : std_logic := '0';
signal Z11        : std_logic := '0';
signal Z12        : std_logic := '0';
signal Z13        : std_logic := '0';
signal Z14        : std_logic := '0';
signal Z15        : std_logic := '0';
signal Z16        : std_logic := '0';
signal Z17        : std_logic := '0';
signal Z18        : std_logic := '0';
signal Z19        : std_logic := '0';
signal Z20        : std_logic := '0';
signal Z21        : std_logic := '0';
signal Z22        : std_logic := '0';
signal Z23        : std_logic := '0';
signal Z24        : std_logic := '0';
signal Z25        : std_logic := '0';
signal Z26        : std_logic := '0';
signal Z27        : std_logic := '0';
signal Z28        : std_logic := '0';
signal Z29        : std_logic := '0';
signal Z30        : std_logic := '0';
signal Z31        : std_logic := '0';
signal Z32        : std_logic := '0';
signal Z33        : std_logic := '0';
signal Z34        : std_logic := '0';
signal Z35        : std_logic := '0';
signal Z36        : std_logic := '0';
signal Z37        : std_logic := '0';
signal Z38        : std_logic := '0';
signal Z39        : std_logic := '0';
signal Z40        : std_logic := '0';
signal Z41        : std_logic := '0';
signal Z42        : std_logic := '0';
signal Z43        : std_logic := '0';
signal Z44        : std_logic := '0';
signal Z45        : std_logic := '0';
signal Z46        : std_logic := '0';
signal Z47        : std_logic := '0';
signal Z48        : std_logic := '0';
signal Z49        : std_logic := '0';
signal Z50        : std_logic := '0';
signal Z51        : std_logic := '0';
signal Z52        : std_logic := '0';
signal Z53        : std_logic := '0';
signal Z54        : std_logic := '0';
signal Z55        : std_logic := '0';


constant raw_config0_gen : bit_vector(19 downto 0)
    := CO_SEL & ALU_DYNAMIC_OP & SATURATION_RANK & ENABLE_SATURATION & Z_FEEDBACK_SHL12 & MUX_Z &
       MUX_CI & MUX_Y & MUX_X & MUX_P & MUX_B & MUX_A & PRE_ADDER_OP & SIGNED_MODE;

constant raw_config1_gen : bit_vector(18 downto 0)
    := PR_OV_MUX & PR_CO_MUX & PR_Z_MUX & PR_ALU_MUX & PR_MULT_MUX & PR_Y_MUX & PR_X_MUX &
       PR_P_MUX & PR_CI_MUX & PR_D_MUX & PR_C_MUX & PR_B_CASCADE_MUX & PR_B_MUX & PR_A_CASCADE_MUX &
       PR_A_MUX;

constant raw_config2_gen : bit_vector(12 downto 0)
    := ENABLE_PR_OV_RST & ENABLE_PR_CO_RST & ENABLE_PR_Z_RST & ENABLE_PR_ALU_RST &
       ENABLE_PR_MULT_RST & ENABLE_PR_Y_RST & ENABLE_PR_X_RST & ENABLE_PR_P_RST & ENABLE_PR_CI_RST &
       ENABLE_PR_D_RST & ENABLE_PR_C_RST & ENABLE_PR_B_RST & ENABLE_PR_A_RST;

constant raw_config3_gen : bit_vector(6 downto 0) := ALU_MUX & ALU_OP;


----------------------------------------------------------
-- NX_DSP_L declaration
----------------------------------------------------------
component NX_DSP_L
generic (
   std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
   raw_config1 : bit_vector(18 downto 0) := B"0000000000000000000";         -- PRC
   raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
   raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
   );
port (
   A1         : in std_logic := '0';
   A2         : in std_logic := '0';
   A3         : in std_logic := '0';
   A4         : in std_logic := '0';
   A5         : in std_logic := '0';
   A6         : in std_logic := '0';
   A7         : in std_logic := '0';
   A8         : in std_logic := '0';
   A9         : in std_logic := '0';
   A10        : in std_logic := '0';
   A11        : in std_logic := '0';
   A12        : in std_logic := '0';
   A13        : in std_logic := '0';
   A14        : in std_logic := '0';
   A15        : in std_logic := '0';
   A16        : in std_logic := '0';
   A17        : in std_logic := '0';
   A18        : in std_logic := '0';
   A19        : in std_logic := '0';
   A20        : in std_logic := '0';
   A21        : in std_logic := '0';
   A22        : in std_logic := '0';
   A23        : in std_logic := '0';
   A24        : in std_logic := '0';

   B1         : in std_logic := '0';
   B2         : in std_logic := '0';
   B3         : in std_logic := '0';
   B4         : in std_logic := '0';
   B5         : in std_logic := '0';
   B6         : in std_logic := '0';
   B7         : in std_logic := '0';
   B8         : in std_logic := '0';
   B9         : in std_logic := '0';
   B10        : in std_logic := '0';
   B11        : in std_logic := '0';
   B12        : in std_logic := '0';
   B13        : in std_logic := '0';
   B14        : in std_logic := '0';
   B15        : in std_logic := '0';
   B16        : in std_logic := '0';
   B17        : in std_logic := '0';
   B18        : in std_logic := '0';

   C1         : in std_logic := '0';
   C2         : in std_logic := '0';
   C3         : in std_logic := '0';
   C4         : in std_logic := '0';
   C5         : in std_logic := '0';
   C6         : in std_logic := '0';
   C7         : in std_logic := '0';
   C8         : in std_logic := '0';
   C9         : in std_logic := '0';
   C10        : in std_logic := '0';
   C11        : in std_logic := '0';
   C12        : in std_logic := '0';
   C13        : in std_logic := '0';
   C14        : in std_logic := '0';
   C15        : in std_logic := '0';
   C16        : in std_logic := '0';
   C17        : in std_logic := '0';
   C18        : in std_logic := '0';
   C19        : in std_logic := '0';
   C20        : in std_logic := '0';
   C21        : in std_logic := '0';
   C22        : in std_logic := '0';
   C23        : in std_logic := '0';
   C24        : in std_logic := '0';
   C25        : in std_logic := '0';
   C26        : in std_logic := '0';
   C27        : in std_logic := '0';
   C28        : in std_logic := '0';
   C29        : in std_logic := '0';
   C30        : in std_logic := '0';
   C31        : in std_logic := '0';
   C32        : in std_logic := '0';
   C33        : in std_logic := '0';
   C34        : in std_logic := '0';
   C35        : in std_logic := '0';
   C36        : in std_logic := '0';

   CAI1       : in std_logic := '0';
   CAI2       : in std_logic := '0';
   CAI3       : in std_logic := '0';
   CAI4       : in std_logic := '0';
   CAI5       : in std_logic := '0';
   CAI6       : in std_logic := '0';
   CAI7       : in std_logic := '0';
   CAI8       : in std_logic := '0';
   CAI9       : in std_logic := '0';
   CAI10      : in std_logic := '0';
   CAI11      : in std_logic := '0';
   CAI12      : in std_logic := '0';
   CAI13      : in std_logic := '0';
   CAI14      : in std_logic := '0';
   CAI15      : in std_logic := '0';
   CAI16      : in std_logic := '0';
   CAI17      : in std_logic := '0';
   CAI18      : in std_logic := '0';
   CAI19      : in std_logic := '0';
   CAI20      : in std_logic := '0';
   CAI21      : in std_logic := '0';
   CAI22      : in std_logic := '0';
   CAI23      : in std_logic := '0';
   CAI24      : in std_logic := '0';

   CAO1       : out std_logic := '0';
   CAO2       : out std_logic := '0';
   CAO3       : out std_logic := '0';
   CAO4       : out std_logic := '0';
   CAO5       : out std_logic := '0';
   CAO6       : out std_logic := '0';
   CAO7       : out std_logic := '0';
   CAO8       : out std_logic := '0';
   CAO9       : out std_logic := '0';
   CAO10      : out std_logic := '0';
   CAO11      : out std_logic := '0';
   CAO12      : out std_logic := '0';
   CAO13      : out std_logic := '0';
   CAO14      : out std_logic := '0';
   CAO15      : out std_logic := '0';
   CAO16      : out std_logic := '0';
   CAO17      : out std_logic := '0';
   CAO18      : out std_logic := '0';
   CAO19      : out std_logic := '0';
   CAO20      : out std_logic := '0';
   CAO21      : out std_logic := '0';
   CAO22      : out std_logic := '0';
   CAO23      : out std_logic := '0';
   CAO24      : out std_logic := '0';

   CBI1       : in std_logic := '0';
   CBI2       : in std_logic := '0';
   CBI3       : in std_logic := '0';
   CBI4       : in std_logic := '0';
   CBI5       : in std_logic := '0';
   CBI6       : in std_logic := '0';
   CBI7       : in std_logic := '0';
   CBI8       : in std_logic := '0';
   CBI9       : in std_logic := '0';
   CBI10      : in std_logic := '0';
   CBI11      : in std_logic := '0';
   CBI12      : in std_logic := '0';
   CBI13      : in std_logic := '0';
   CBI14      : in std_logic := '0';
   CBI15      : in std_logic := '0';
   CBI16      : in std_logic := '0';
   CBI17      : in std_logic := '0';
   CBI18      : in std_logic := '0';

   CBO1       : out std_logic := '0';
   CBO2       : out std_logic := '0';
   CBO3       : out std_logic := '0';
   CBO4       : out std_logic := '0';
   CBO5       : out std_logic := '0';
   CBO6       : out std_logic := '0';
   CBO7       : out std_logic := '0';
   CBO8       : out std_logic := '0';
   CBO9       : out std_logic := '0';
   CBO10      : out std_logic := '0';
   CBO11      : out std_logic := '0';
   CBO12      : out std_logic := '0';
   CBO13      : out std_logic := '0';
   CBO14      : out std_logic := '0';
   CBO15      : out std_logic := '0';
   CBO16      : out std_logic := '0';
   CBO17      : out std_logic := '0';
   CBO18      : out std_logic := '0';

   CCI        : in std_logic := '0';
   CCO        : out std_logic := '0';
   CI         : in std_logic := '0';
   CK         : in std_logic := '0';
   CO         : out std_logic := '0';
   CO37       : out std_logic := '0';
   CO57       : out std_logic := '0';

   CZI1       : in std_logic := '0';
   CZI2       : in std_logic := '0';
   CZI3       : in std_logic := '0';
   CZI4       : in std_logic := '0';
   CZI5       : in std_logic := '0';
   CZI6       : in std_logic := '0';
   CZI7       : in std_logic := '0';
   CZI8       : in std_logic := '0';
   CZI9       : in std_logic := '0';
   CZI10      : in std_logic := '0';
   CZI11      : in std_logic := '0';
   CZI12      : in std_logic := '0';
   CZI13      : in std_logic := '0';
   CZI14      : in std_logic := '0';
   CZI15      : in std_logic := '0';
   CZI16      : in std_logic := '0';
   CZI17      : in std_logic := '0';
   CZI18      : in std_logic := '0';
   CZI19      : in std_logic := '0';
   CZI20      : in std_logic := '0';
   CZI21      : in std_logic := '0';
   CZI22      : in std_logic := '0';
   CZI23      : in std_logic := '0';
   CZI24      : in std_logic := '0';
   CZI25      : in std_logic := '0';
   CZI26      : in std_logic := '0';
   CZI27      : in std_logic := '0';
   CZI28      : in std_logic := '0';
   CZI29      : in std_logic := '0';
   CZI30      : in std_logic := '0';
   CZI31      : in std_logic := '0';
   CZI32      : in std_logic := '0';
   CZI33      : in std_logic := '0';
   CZI34      : in std_logic := '0';
   CZI35      : in std_logic := '0';
   CZI36      : in std_logic := '0';
   CZI37      : in std_logic := '0';
   CZI38      : in std_logic := '0';
   CZI39      : in std_logic := '0';
   CZI40      : in std_logic := '0';
   CZI41      : in std_logic := '0';
   CZI42      : in std_logic := '0';
   CZI43      : in std_logic := '0';
   CZI44      : in std_logic := '0';
   CZI45      : in std_logic := '0';
   CZI46      : in std_logic := '0';
   CZI47      : in std_logic := '0';
   CZI48      : in std_logic := '0';
   CZI49      : in std_logic := '0';
   CZI50      : in std_logic := '0';
   CZI51      : in std_logic := '0';
   CZI52      : in std_logic := '0';
   CZI53      : in std_logic := '0';
   CZI54      : in std_logic := '0';
   CZI55      : in std_logic := '0';
   CZI56      : in std_logic := '0';

   CZO1       : out std_logic := '0';
   CZO2       : out std_logic := '0';
   CZO3       : out std_logic := '0';
   CZO4       : out std_logic := '0';
   CZO5       : out std_logic := '0';
   CZO6       : out std_logic := '0';
   CZO7       : out std_logic := '0';
   CZO8       : out std_logic := '0';
   CZO9       : out std_logic := '0';
   CZO10      : out std_logic := '0';
   CZO11      : out std_logic := '0';
   CZO12      : out std_logic := '0';
   CZO13      : out std_logic := '0';
   CZO14      : out std_logic := '0';
   CZO15      : out std_logic := '0';
   CZO16      : out std_logic := '0';
   CZO17      : out std_logic := '0';
   CZO18      : out std_logic := '0';
   CZO19      : out std_logic := '0';
   CZO20      : out std_logic := '0';
   CZO21      : out std_logic := '0';
   CZO22      : out std_logic := '0';
   CZO23      : out std_logic := '0';
   CZO24      : out std_logic := '0';
   CZO25      : out std_logic := '0';
   CZO26      : out std_logic := '0';
   CZO27      : out std_logic := '0';
   CZO28      : out std_logic := '0';
   CZO29      : out std_logic := '0';
   CZO30      : out std_logic := '0';
   CZO31      : out std_logic := '0';
   CZO32      : out std_logic := '0';
   CZO33      : out std_logic := '0';
   CZO34      : out std_logic := '0';
   CZO35      : out std_logic := '0';
   CZO36      : out std_logic := '0';
   CZO37      : out std_logic := '0';
   CZO38      : out std_logic := '0';
   CZO39      : out std_logic := '0';
   CZO40      : out std_logic := '0';
   CZO41      : out std_logic := '0';
   CZO42      : out std_logic := '0';
   CZO43      : out std_logic := '0';
   CZO44      : out std_logic := '0';
   CZO45      : out std_logic := '0';
   CZO46      : out std_logic := '0';
   CZO47      : out std_logic := '0';
   CZO48      : out std_logic := '0';
   CZO49      : out std_logic := '0';
   CZO50      : out std_logic := '0';
   CZO51      : out std_logic := '0';
   CZO52      : out std_logic := '0';
   CZO53      : out std_logic := '0';
   CZO54      : out std_logic := '0';
   CZO55      : out std_logic := '0';
   CZO56      : out std_logic := '0';

   D1         : in std_logic := '0';
   D2         : in std_logic := '0';
   D3         : in std_logic := '0';
   D4         : in std_logic := '0';
   D5         : in std_logic := '0';
   D6         : in std_logic := '0';
   D7         : in std_logic := '0';
   D8         : in std_logic := '0';
   D9         : in std_logic := '0';
   D10        : in std_logic := '0';
   D11        : in std_logic := '0';
   D12        : in std_logic := '0';
   D13        : in std_logic := '0';
   D14        : in std_logic := '0';
   D15        : in std_logic := '0';
   D16        : in std_logic := '0';
   D17        : in std_logic := '0';
   D18        : in std_logic := '0';

   OVF        : out std_logic := '0';
   R          : in std_logic := '0';
   RZ         : in std_logic := '0';
   WE         : in std_logic := '0';

   Z1         : out std_logic := '0';
   Z2         : out std_logic := '0';
   Z3         : out std_logic := '0';
   Z4         : out std_logic := '0';
   Z5         : out std_logic := '0';
   Z6         : out std_logic := '0';
   Z7         : out std_logic := '0';
   Z8         : out std_logic := '0';
   Z9         : out std_logic := '0';
   Z10        : out std_logic := '0';
   Z11        : out std_logic := '0';
   Z12        : out std_logic := '0';
   Z13        : out std_logic := '0';
   Z14        : out std_logic := '0';
   Z15        : out std_logic := '0';
   Z16        : out std_logic := '0';
   Z17        : out std_logic := '0';
   Z18        : out std_logic := '0';
   Z19        : out std_logic := '0';
   Z20        : out std_logic := '0';
   Z21        : out std_logic := '0';
   Z22        : out std_logic := '0';
   Z23        : out std_logic := '0';
   Z24        : out std_logic := '0';
   Z25        : out std_logic := '0';
   Z26        : out std_logic := '0';
   Z27        : out std_logic := '0';
   Z28        : out std_logic := '0';
   Z29        : out std_logic := '0';
   Z30        : out std_logic := '0';
   Z31        : out std_logic := '0';
   Z32        : out std_logic := '0';
   Z33        : out std_logic := '0';
   Z34        : out std_logic := '0';
   Z35        : out std_logic := '0';
   Z36        : out std_logic := '0';
   Z37        : out std_logic := '0';
   Z38        : out std_logic := '0';
   Z39        : out std_logic := '0';
   Z40        : out std_logic := '0';
   Z41        : out std_logic := '0';
   Z42        : out std_logic := '0';
   Z43        : out std_logic := '0';
   Z44        : out std_logic := '0';
   Z45        : out std_logic := '0';
   Z46        : out std_logic := '0';
   Z47        : out std_logic := '0';
   Z48        : out std_logic := '0';
   Z49        : out std_logic := '0';
   Z50        : out std_logic := '0';
   Z51        : out std_logic := '0';
   Z52        : out std_logic := '0';
   Z53        : out std_logic := '0';
   Z54        : out std_logic := '0';
   Z55        : out std_logic := '0';
   Z56        : out std_logic := '0'
   );
end component;

begin

----------------------------------------------------------
-- Instantiation the NX_DSP_L component
----------------------------------------------------------
DSP_INST : NX_DSP_L
generic map (
   std_mode    => "", -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 => raw_config0_gen, -- MODE and MUXes
   raw_config1 => raw_config1_gen, -- Pipeline Registers
   raw_config2 => raw_config2_gen, -- Reset Enable for internal registers
   raw_config3 => raw_config3_gen   -- ALU modes
   )
port map (
   A1         => A(0),
   A2         => A(1),
   A3         => A(2),
   A4         => A(3),
   A5         => A(4),
   A6         => A(5),
   A7         => A(6),
   A8         => A(7),
   A9         => A(8),
   A10        => A(9),
   A11        => A(10),
   A12        => A(11),
   A13        => A(12),
   A14        => A(13),
   A15        => A(14),
   A16        => A(15),
   A17        => A(16),
   A18        => A(17),
   A19        => A(18),
   A20        => A(19),
   A21        => A(20),
   A22        => A(21),
   A23        => A(22),
   A24        => A(23),
         
   B1         => B(0),
   B2         => B(1),
   B3         => B(2),
   B4         => B(3),
   B5         => B(4),
   B6         => B(5),
   B7         => B(6),
   B8         => B(7),
   B9         => B(8),
   B10        => B(9),
   B11        => B(10),
   B12        => B(11),
   B13        => B(12),
   B14        => B(13),
   B15        => B(14),
   B16        => B(15),
   B17        => B(16),
   B18        => B(17),
        
   C1         => C(0),
   C2         => C(1),
   C3         => C(2),
   C4         => C(3),
   C5         => C(4),
   C6         => C(5),
   C7         => C(6),
   C8         => C(7),
   C9         => C(8),
   C10        => C(9),
   C11        => C(10),
   C12        => C(11),
   C13        => C(12),
   C14        => C(13),
   C15        => C(14),
   C16        => C(15),
   C17        => C(16),
   C18        => C(17),
   C19        => C(18),
   C20        => C(19),
   C21        => C(20),
   C22        => C(21),
   C23        => C(22),
   C24        => C(23),
   C25        => C(24),
   C26        => C(25),
   C27        => C(26),
   C28        => C(27),
   C29        => C(28),
   C30        => C(29),
   C31        => C(30),
   C32        => C(31),
   C33        => C(32),
   C34        => C(33),
   C35        => C(34),
   C36        => C(35),

   CAI1       => CAI(0),
   CAI2       => CAI(1),
   CAI3       => CAI(2),
   CAI4       => CAI(3),
   CAI5       => CAI(4),
   CAI6       => CAI(5),
   CAI7       => CAI(6),
   CAI8       => CAI(7),
   CAI9       => CAI(8),
   CAI10      => CAI(9),
   CAI11      => CAI(10),
   CAI12      => CAI(11),
   CAI13      => CAI(12),
   CAI14      => CAI(13),
   CAI15      => CAI(14),
   CAI16      => CAI(15),
   CAI17      => CAI(16),
   CAI18      => CAI(17),
   CAI19      => CAI(18),
   CAI20      => CAI(19),
   CAI21      => CAI(20),
   CAI22      => CAI(21),
   CAI23      => CAI(22),
   CAI24      => CAI(23),

   CAO1       => CAO(0),
   CAO2       => CAO(1),
   CAO3       => CAO(2),
   CAO4       => CAO(3),
   CAO5       => CAO(4),
   CAO6       => CAO(5),
   CAO7       => CAO(6),
   CAO8       => CAO(7),
   CAO9       => CAO(8),
   CAO10      => CAO(9),
   CAO11      => CAO(10),
   CAO12      => CAO(11),
   CAO13      => CAO(12),
   CAO14      => CAO(13),
   CAO15      => CAO(14),
   CAO16      => CAO(15),
   CAO17      => CAO(16),
   CAO18      => CAO(17),
   CAO19      => CAO(18),
   CAO20      => CAO(19),
   CAO21      => CAO(20),
   CAO22      => CAO(21),
   CAO23      => CAO(22),
   CAO24      => CAO(23),

   CBI1       => CBI(0),
   CBI2       => CBI(1),
   CBI3       => CBI(2),
   CBI4       => CBI(3),
   CBI5       => CBI(4),
   CBI6       => CBI(5),
   CBI7       => CBI(6),
   CBI8       => CBI(7),
   CBI9       => CBI(8),
   CBI10      => CBI(9),
   CBI11      => CBI(10),
   CBI12      => CBI(11),
   CBI13      => CBI(12),
   CBI14      => CBI(13),
   CBI15      => CBI(14),
   CBI16      => CBI(15),
   CBI17      => CBI(16),
   CBI18      => CBI(17),

   CBO1       => CBO(0),
   CBO2       => CBO(1),
   CBO3       => CBO(2),
   CBO4       => CBO(3),
   CBO5       => CBO(4),
   CBO6       => CBO(5),
   CBO7       => CBO(6),
   CBO8       => CBO(7),
   CBO9       => CBO(8),
   CBO10      => CBO(9),
   CBO11      => CBO(10),
   CBO12      => CBO(11),
   CBO13      => CBO(12),
   CBO14      => CBO(13),
   CBO15      => CBO(14),
   CBO16      => CBO(15),
   CBO17      => CBO(16),
   CBO18      => CBO(17),

   CCI        => CCI,
   CCO        => CCO,
   CI         => CI,
   CK         => CK,
   CO         => CO,
   CO37       => CO36,
   CO57       => CO56,

   CZI1       => CZI(0),
   CZI2       => CZI(1),
   CZI3       => CZI(2),
   CZI4       => CZI(3),
   CZI5       => CZI(4),
   CZI6       => CZI(5),
   CZI7       => CZI(6),
   CZI8       => CZI(7),
   CZI9       => CZI(8),
   CZI10      => CZI(9),
   CZI11      => CZI(10),
   CZI12      => CZI(11),
   CZI13      => CZI(12),
   CZI14      => CZI(13),
   CZI15      => CZI(14),
   CZI16      => CZI(15),
   CZI17      => CZI(16),
   CZI18      => CZI(17),
   CZI19      => CZI(18),
   CZI20      => CZI(19),
   CZI21      => CZI(20),
   CZI22      => CZI(21),
   CZI23      => CZI(22),
   CZI24      => CZI(23),
   CZI25      => CZI(24),
   CZI26      => CZI(25),
   CZI27      => CZI(26),
   CZI28      => CZI(27),
   CZI29      => CZI(28),
   CZI30      => CZI(29),
   CZI31      => CZI(30),
   CZI32      => CZI(31),
   CZI33      => CZI(32),
   CZI34      => CZI(33),
   CZI35      => CZI(34),
   CZI36      => CZI(35),
   CZI37      => CZI(36),
   CZI38      => CZI(37),
   CZI39      => CZI(38),
   CZI40      => CZI(39),
   CZI41      => CZI(40),
   CZI42      => CZI(41),
   CZI43      => CZI(42),
   CZI44      => CZI(43),
   CZI45      => CZI(44),
   CZI46      => CZI(45),
   CZI47      => CZI(46),
   CZI48      => CZI(47),
   CZI49      => CZI(48),
   CZI50      => CZI(49),
   CZI51      => CZI(50),
   CZI52      => CZI(51),
   CZI53      => CZI(52),
   CZI54      => CZI(53),
   CZI55      => CZI(54),
   CZI56      => CZI(55),

   CZO1       => CZO(0),
   CZO2       => CZO(1),
   CZO3       => CZO(2),
   CZO4       => CZO(3),
   CZO5       => CZO(4),
   CZO6       => CZO(5),
   CZO7       => CZO(6),
   CZO8       => CZO(7),
   CZO9       => CZO(8),
   CZO10      => CZO(9),
   CZO11      => CZO(10),
   CZO12      => CZO(11),
   CZO13      => CZO(12),
   CZO14      => CZO(13),
   CZO15      => CZO(14),
   CZO16      => CZO(15),
   CZO17      => CZO(16),
   CZO18      => CZO(17),
   CZO19      => CZO(18),
   CZO20      => CZO(19),
   CZO21      => CZO(20),
   CZO22      => CZO(21),
   CZO23      => CZO(22),
   CZO24      => CZO(23),
   CZO25      => CZO(24),
   CZO26      => CZO(25),
   CZO27      => CZO(26),
   CZO28      => CZO(27),
   CZO29      => CZO(28),
   CZO30      => CZO(29),
   CZO31      => CZO(30),
   CZO32      => CZO(31),
   CZO33      => CZO(32),
   CZO34      => CZO(33),
   CZO35      => CZO(34),
   CZO36      => CZO(35),
   CZO37      => CZO(36),
   CZO38      => CZO(37),
   CZO39      => CZO(38),
   CZO40      => CZO(39),
   CZO41      => CZO(40),
   CZO42      => CZO(41),
   CZO43      => CZO(42),
   CZO44      => CZO(43),
   CZO45      => CZO(44),
   CZO46      => CZO(45),
   CZO47      => CZO(46),
   CZO48      => CZO(47),
   CZO49      => CZO(48),
   CZO50      => CZO(49),
   CZO51      => CZO(50),
   CZO52      => CZO(51),
   CZO53      => CZO(52),
   CZO54      => CZO(53),
   CZO55      => CZO(54),
   CZO56      => CZO(55),

   D1         => D(0),
   D2         => D(1),
   D3         => D(2),
   D4         => D(3),
   D5         => D(4),
   D6         => D(5),
   D7         => D(6),
   D8         => D(7),
   D9         => D(8),
   D10        => D(9),
   D11        => D(10),
   D12        => D(11),
   D13        => D(12),
   D14        => D(13),
   D15        => D(14),
   D16        => D(15),
   D17        => D(16),
   D18        => D(17),

   OVF        => OVF,
   R          => R,
   RZ         => RZ,
   WE         => WE,

   Z1         => Z(0),
   Z2         => Z(1),
   Z3         => Z(2),
   Z4         => Z(3),
   Z5         => Z(4),
   Z6         => Z(5),
   Z7         => Z(6),
   Z8         => Z(7),
   Z9         => Z(8),
   Z10        => Z(9),
   Z11        => Z(10),
   Z12        => Z(11),
   Z13        => Z(12),
   Z14        => Z(13),
   Z15        => Z(14),
   Z16        => Z(15),
   Z17        => Z(16),
   Z18        => Z(17),
   Z19        => Z(18),
   Z20        => Z(19),
   Z21        => Z(20),
   Z22        => Z(21),
   Z23        => Z(22),
   Z24        => Z(23),
   Z25        => Z(24),
   Z26        => Z(25),
   Z27        => Z(26),
   Z28        => Z(27),
   Z29        => Z(28),
   Z30        => Z(29),
   Z31        => Z(30),
   Z32        => Z(31),
   Z33        => Z(32),
   Z34        => Z(33),
   Z35        => Z(34),
   Z36        => Z(35),
   Z37        => Z(36),
   Z38        => Z(37),
   Z39        => Z(38),
   Z40        => Z(39),
   Z41        => Z(40),
   Z42        => Z(41),
   Z43        => Z(42),
   Z44        => Z(43),
   Z45        => Z(44),
   Z46        => Z(45),
   Z47        => Z(46),
   Z48        => Z(47),
   Z49        => Z(48),
   Z50        => Z(49),
   Z51        => Z(50),
   Z52        => Z(51),
   Z53        => Z(52),
   Z54        => Z(53),
   Z55        => Z(54),
   Z56        => Z(55)
   );

end NX_RTL;
-- #}}}#

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
ILooH2kbo0/+d80He9TmXhmS0dsWLAya9EgoKI/gk8keuagUYIXZ7JAIbgEo+QBm
SxkalVxvpqbzfzRl7J0Xy4eSN/57rSPZ+M+3W2/3hVGPg3RVNSA6k1b+JThckYmC
cTV3cA9yQc7AbbkUliz8oSKnFog/GVdEFvPdiorLL7ajSYMqQ3cXcL7NJ955aWnR
OMWNKvzO1OqWShLEe1sGthgDbElFRrvCD0toByt8cgjhdzc1RfMXThdFzkP2AYm6
y6eC5vopejABKmwOzG5UHZBbffljLTcyJGpdxyXAuqtNg/l7Njpwgqmsu9FwuY/a
Jf4Tk2tVjTwVnPl4dASydg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 41152)
`protect data_block
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
Vsn6k6xiTl442NmUEpMTMZozYBdOPZI/PbGL5JFdpSjTuhdWX8NnLiSskevyM6UD
5x0IIUHXwPYVGh6mzN0D1EeVbJVrTIgfcvT8vznii905GzuM9HjnOGvO2rovr078
Yj+0X7xY/Ia2lDvM5yP9PAqyKlpwVt3Wt45pcAvDbJor+ANW+atgRidlSwXghQaW
gHTXiyYojTlYGeJFJ4BBwauFesBNH7GHOQHaqCnnJfzF7iYbaX/4g2ySU/UGQrIR
30vmv+6o7iLYtUr93cv7Dlhkcja9Ff7WFy3WnXjao2qUWAcY17NTXQ2Iar3tz4ne
yPtyBcQdZlOXRXTMDYVhxcOKtjgZ0b4DtpQI4yTGCnzhu/gSXdKAyoyMuxOVIAEv
CLQE5370Mz+546zJDX50FX0FlD465h+1dB8f99Q474fYTes4NEJcuNc7niNGNJfC
xPnWoVgWWTVruxQzv+7oaRHg1SV6/qqVn1C85rNlQ4wc2ROkfzKwV/TBhTfY5fQX
i29I+k7MqABIZTMTO/Km7ct9dOUos0i4yYvkNrUHJrF4SMcIxsrme/W+yno0x+2l
DxCZeQHSa8QKvSPdmEhpfUchJ0EAiQzYcQ1UdYa2Va2S5hlPFPP84opdIrq/cFKP
zoMaaYXULuktH9g8HFFX79uJ0KEC3rhT8eU0SthOfRA0t3S5bj4W2CgShu4lw2nz
1y7/CJeHrOpY6BFZUoVVWbSEICTUYei+9WjshZ9NVWmlCnqAU/mYndLw//y2T9r5
bxlEocQCSnvBHfUPGla34eStsunr9shEZLLf2R8mIIzFiR2kmFchDC12UkCx535v
BbSMnLhaWKD7TX81HCUz63IywdD0Gz3A0gBJF+yZUrtzPMs2afDZ/V17CCi+21wS
HwSX/asArrd6+EuynYOwaRQSMnH+WAaEQNxb8sFYKd6Q8Mo5Uz0Q3SNnMrKmww+B
6LHUZa+MuZeYCvx7Uv4NJess/j9JsE+QhIMtOmNhHtsuuuC3dcVGPz5sWzR74VWv
oRjbs1ltJRo+6sRz12MD4HnizTQWh+pQCYcO7QjGdmyJ2OOv6m2j+GeHuziIWDN1
qyWQt8OdBNGkEq+Hdwn+/T5Hj9bp4usAsrpmZ5h8QPM/3ie91pPnkYxrFQSEkAqx
yFwINcUKCk9tPZf3Yp3fFz1KBJOSV4yblajD17k7ZwQqMeXhvgYqU6H+UQQI1/Yi
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
83Q9JbrJuOO+ZSLJiWF8wg==
`protect end_protected

-- beware following components are only intended for internal use. Do not try to instantiate them.

-- =================================================================================================
--   NX_BUFFER definition                                                               2017/09/11
-- =================================================================================================

-- NX_BUFFER#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_BUFFER is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BUFFER;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
XbM3jbFNJKeNJV1Xxo4yAU+I/Ps+uPwJ0N6Jv9eTMX+b5h6EuJ2xLP8ETzDIFLxg
aX9u/NPrZ11XT4iTbfWvAc5X0hoRWvZGm3p9/sfyp3DyifvH6yRzlyQquoZeCBkD
5Bcz/dJAuoRVMbr+YGHWbtzq0MO2a3whNV2dXJyD38l6rlkutb5ux3a6FcK+dboZ
zmUM0UNgQBA1Z7uDNDNu/DFao/OyHQwXm7qExBBD9/W0eoSg+86F0OR8qCRa0m7o
tGxXSNHQ6O8UlH//3eksbfNNlmhMvvvNYK8RkA8rTqP1/NLut4FMeQEVyEjSLGQV
qnMAKnSixnwbnVqZMB0paA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
/6OF66/VUZgaWIS1ORV7mKh4npazFsdJ3oQRO5CjfM+1flLeXxQZh4G68mvAjSez
yeDs2ME9q1Hhs0NpD4bNxWyYT0EFOXGOImw/aud59eGEsmWwZjYE1C8gN0KL9C4/
20Hfvkh1wHAl/g38ARbscyesDgb7o3RycyetfnYZa8buMVnGkwNWqNI2ddPfavga
xFfHjKvP/8Kw2Z18pBWPOT0S2GhSZFC3Xe1dWndJZY1TWxM7jJaObILHvdWGR8zW
A52pZ7BLKdSrFuwXhAL+RALkX7oAINnSwMYh/WYMuK7QQI2/AcZcmNnrO1/bYeqs
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_CSC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_CSC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_CSC is
port (
    I  : in  std_logic;
    O  : out std_logic
);
end NX_CSC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
q5PfF9gcsoi/NOcJiMjiZTfJtwS1zmwNIa6tZ385QmNhCjHQq5f+gWb7JOompLbY
65IEkSKfXJUvwphek6/SUbnw1HYU66fyuYk+CJYoFE2y8FQwFJ2ajpQcDtb0lRvH
f/StPWLRN0MfNaMydJmP/aYGNZcNEuPa54Cmrzxf/EJ02kiUGnjs1GAV08r726VJ
8FGOhhITbrycG3fEvtdHqmGY1kScaQGeFDfXzAHubIJZ0hqzDEVff5Dbx2ogWebU
cJ9vcsv93wk2Zpt3ZKAIyMr4AILeD36fdzKAKjWaBFPFOUTPPpCrJXaIi9PAM0Fq
zm/MJjmrEbIh4K2WukklXg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
tSVqT9N5ygspTCMdXk5s8oVS3XxTFhu0wIRJIlYXw6l8sViBKOsmhEcWPMeuajPV
6hDaDKOmmu12t4dEslrEI+H0L8Pb6NyVorvzPzqo+BwZshBj2jDWiPRShiu7qH8z
2GYyLjZTQFYMlygmMoyx/+1w24ZpVsT4o4aCj8m4UYNtbqzz64esao+gp6QBMKql
umSPL1kzRkF9SDrdRyfFH3Hwflww731e1CwK6Zb3j4sL3mnSvfyX22P/Ke3QSH31
hgBEtdkWFL8ax/qw7gxKxYPr+OvTQOSdvTY35ej/c00jpqZuyl5o9C1FYM96XYDE
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_SCC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_SCC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_SCC is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_SCC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
qIP1aw5m3yqQ8IeyoMKV6DFbPv66viIClCbuRA7QIhS4CfZCy0DqXQEZicMbvoJd
+nsu/MXIer0Bem3RndBOHntpQeXoRc1wT15rx6f9uHSV3v0YtXJA2TbQ+lAI0BJp
NTB4iNmHsJMRcYkDqVxN7gXssqdjOD35ihoXN9ULL4DJm5fzkopubc15Wih/mQih
axTcVYqYIwBwuFH/VtblMNr+x6BDzAXRzMrtPtNZ/xgPlXZkphU9xuQ1oyru0Yku
PAsxLCRw1r+c+pdzEkup9nm3t6JC9opn7REExAL8187hWN/6zrKfRRRpvrBLTKP5
ORD1RwnsD+jMaLTf19Degw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
CZFLiAMphuRYHP5NkUc2Fy/tBfQTHFHdWY1grfnXzjWA9Iw4BiHr3z9QQxDb3KYM
wVSp48rmbT16fFOZKZYAvPT5qjSDxbA0/xoEPuCjhz2dVmuVHz0Deh6n7c+fvsHA
obPAsU0da5rHrcf+szbmEoRZLJmTVcCzT7j+hzeGT1zg4qz8gJkBr1iGBoyyNnlE
3YK+1TyDPBRK5CUDjtHpARUZnkDBK9yjLoul2uH4E0r69GnCO4hzcZ+sf3FR16FF
ew+LpWQXJdC3xIJwaUiiwE0Kft8bcsD9K0Gk1+WNGlbTSNyEL32l1NdLRAYtmtJ+
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_syn_tp definition                                                               2017/09/11
-- =================================================================================================

-- NX_syn_tp#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_syn_tp is
port (
    I : in  std_logic
);
end NX_syn_tp;

architecture NX_RTL of NX_syn_tp is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_syn_tp";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
mDSfjA+2Kcf1uSaEo4GZFhnZyBTw6OkxLe7r1XQxhPHGkLhB5EZd0mhEUhrxVymJ
p9mhul6bFA9Ykfg0NSb9usKK5fgDqTnY3SVmc2qbW3ByOSe0eKvR3wQAs6+RqRjg
shXX12Mey9GRKjZ34AHb6wWyaz8m4eoPSEtFV0T+DTrR8DpT7wiC/3ImuZhiEY+d
3NSBn0Fl6QLWN/QN/iqXXTJeQ1Zp/Nek+zR7OAb7X4uORJzu5mQd/u4KMq08M3oi
JLfmo1ZxLa8Atfke7th5OJn/bGju6lOcmdVh1P1va46TCxxj8wJ7fuD3iiUUqtaF
rSASpCkMiRmGKVJabRNAMw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 208)
`protect data_block
pdbdxIyUc/chCxkGlsrkvTTrNtuRV1IZ02IcCmxu+eMU5tEQgPTlPrCZa50m2mn0
wg7Q0SzteMOkLHRAFCTaOlFoZy7NwbRAQfzZPcAuUbTPKOGOe1HrwyMjMBpbZXV/
Si2QtaSWS1IiVqsH+IeIEwInXgWNIJoTDFW7Dtvx2/WNclU/UOBsBAZ8d8q66EV9
4puWxZ6Ev6J4dXuuxvBX72wvXEDrg+UJzCAk6YgDPrdk0DGgK9DWHRSXKbTeKO8H
V4jrqM0GDAxMv9nokrEWFQ==
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_BD definition                                                                   2018/06/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_BD is
generic (
    system: bit := '1'
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BD;

architecture NX_RTL of NX_BD is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BD";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
RL9QAMeWzYW8P7p2ak1V32zvSbCS7iFJ4OGoAJfB+Jbl9udEj2MkN2fl1OkaB3bp
cPZzCdZPIUN7hTG8qgvP471ZMWHq7D26sG0+FY+/c+tJfu+bMl7La1mBnNuIReO1
Pe1CylYfPpp+zcsmtXz/wqWdSKXUOU0SxH1MOsUCujXz2jC0hxereLjSWZf5dOu4
s5fEhMacUOYsFyCXvjf5BepOL1VieS2jPdsFSm9BarYlUDMMQTejqr7SU3r18ZLj
rhz1CN3ECs2hUE09LqXeACxlQzD20gpzXizw7uA2Bz7FsIy5flrHaq5k+jPgohNu
OblW5uSwKWZJ9dVFXi38/g==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
zBW5Da75glGc9NrXqOHgSaEB3byE7KIvYqG3YOe1O+eGnvENboQDZ0mtRj24yWEZ
FxHARsLFvNakPK9MyMus8mL9bDmybP6YMsajXU7N7vGAMfnjWazi4zRjO+HQyvI+
CuOTGcYIpfEBcIaCoahiExU2vyeix65khAOaprjxcHsyXe6bmDD2DR/8g/L+xaKS
GoyshXXiOo3W83p5T9WIp22QNjR8EjPwrLF0Haf/WEyTJ29a+Q4iQ7b78ZVGWJuI
r0E1JFylzWedL8Ay52w3ADt/4JnTq6xjbq17yl22xahnWTqRklbi3oeXPNHO4uiJ
`protect end_protected

-- =================================================================================================
--   NX_SER definition                                                                  2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_SER is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Number of serialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    outputDelayLine      : string := "";		-- "0_to_63_delay_value"
    outputCapacity       : string := "";		-- 0 to 40 (value in pF)
    -- Delay Control
    spath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK   : in  std_logic;
    SCK   : in  std_logic;
    R     : in  std_logic;
    I     : in  std_logic_vector(data_size - 1 downto 0);
    IO    : out std_logic;
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0)
);
end NX_SER;

-- =================================================================================================
--   NX_DES definition                                                                  2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_DES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- -- Pad locationNumber of deserialization factor
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    termination          : string := "";		-- Input impedance adaptatio    terminationReference : string := "";
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- Input impedance adaptation
    weakTermination      : string := "";		-- "floating" or "VTT"
    inputDelayLine       : string := "";		-- "0_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    -- Delay Control
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay

);
port (
    FCK   : in  std_logic;
    SCK   : in  std_logic;
    R     : in  std_logic;
    IO    : in  std_logic;
    O     : out std_logic_vector(data_size - 1 downto 0);
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic
);
end NX_DES;

-- =================================================================================================
--   NX_SERDES definition                                                               2018/10/16
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_SERDES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Serialiser/deserializer factor 
    location             : string := "";		-- Pad location
    standard             : string := "";		-- Pad electrical standard
    drive                : string := "";		-- Pad electrical drive
    differential         : string := "";		-- Single ended ("0" or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    termination          : string := "";		-- Input impedance adaptation
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- "true" or "false"
    weakTermination      : string := "";		-- "PullUp" or "None"
    inputDelayLine       : string := "";		-- "O_to_63_delay_value"
    outputDelayLine      : string := "";		-- "O_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    outputCapacity       : string := "";		-- "0" to "40" (value in pF)
    cpath_registered     : bit := '0';			-- Use Register in Enable Path ('1')
    -- Delay Control
    spath_dynamic        : bit := '0';			-- 0: off/fixed delay, 1: dynamic delay
    dpath_dynamic        : bit := '0'			-- 0: off/fixed delay, 1: dynamic delay
);
port (
    FCK   : in    std_logic;
    SCK   : in    std_logic;
    RTX   : in    std_logic;
    RRX   : in    std_logic;
    CI    : in    std_logic;
    CCK   : in    std_logic;
    CL    : in    std_logic;
    CR    : in    std_logic;
    I     : in    std_logic_vector(data_size - 1 downto 0);
    IO    : inout std_logic;
    O     : out   std_logic_vector(data_size - 1 downto 0);
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(5 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(5 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic
);
end NX_SERDES;

-- NX_SER#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_SER is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal I_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

function BOOL_TO_STR(X : boolean)
  return string is
begin
  if X then
    return "true";
  else
    return "false";
  end if;
end BOOL_TO_STR;

constant spath_delay_on : string := BOOL_TO_STR((outputDelayLine /= "") or (spath_dynamic = '1'));

attribute syn_noprune : boolean;

begin

I_net: for j in 0 to (data_size - 1) generate
    I_int(j) <= I(j);
end generate;

I_dummy: for j in data_size to 9 generate
    I_int(j) <= '0';
end generate;

single_ser: if (data_size <= 5) generate
attribute syn_noprune of iodx : label is true;
begin

    iobx: NX_IOB_O generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, outputDelayOn        => spath_delay_on
	, outputDelayLine      => outputDelayLine
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
		   epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , location        => location
		 , symbol          => "SER"
		 )
		 port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RI   => OPEN
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);
end generate;

large_ser: if (5 < data_size) generate
attribute syn_noprune of iodp : label is true;
attribute syn_noprune of iodn : label is true;
begin


    iobp: NX_IOB_O generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, outputDelayOn        => spath_delay_on
	, outputDelayLine      => outputDelayLine
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
		   epath_init      => '1'
		 , epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , location        => location
		 , symbol          => "SER"
		 )
		 port map (
			    EI1  => I_int(0)
			  , EI2  => I_int(1)
			  , EI3  => I_int(2)
			  , EI4  => I_int(3)
			  , EI5  => I_int(4)
			  , RI   => OPEN
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
		   epath_init      => '1'
		 , epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , chained         => '1'
		 , symbol          => "SER_C"
		 )
		 port map (
			    EI1  => I_int(5)
			  , EI2  => I_int(6)
			  , EI3  => I_int(7)
			  , EI4  => I_int(8)
			  , EI5  => I_int(9)
			  , RI   => OPEN
			  , EO   => OPEN
			  , CO   => OPEN
			  , LINK => LINKN
		);
end generate;

iom: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RTCK  => FCK	    -- ECK
			    , WTCK  => SCK
			    , TRST  => R	    -- ER
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , DRO   => DRO
			    , DID   => DID
		   );

end NX_RTL;
-- #}}}#

-- NX_DES#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_DES is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal O_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

function BOOL_TO_STR(X : boolean)
  return string is
begin
  if X then
    return "true";
  else
    return "false";
  end if;
end BOOL_TO_STR;

constant dpath_delay_on : string := BOOL_TO_STR((inputDelayLine /= "") or (dpath_dynamic = '1'));

begin

O_net: for j in 0 to (data_size - 1) generate
    O(j) <= O_int(j);
end generate;

single_des: if (data_size <= 5) generate
    iobx: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayOn         => dpath_delay_on
	, inputDelayLine       => inputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
		   rpath_init      => '1'
		 , rpath_mode      => b"0100"
		 , rpath_dynamic   => dpath_dynamic
		 , cpath_mode      => b"0000"
		 , location        => location
		 , symbol          => "DES_D"
		 )
		 port map (
			    RO1  => O_int(4)
			  , RO2  => O_int(3)
			  , RO3  => O_int(2)
			  , RO4  => O_int(1)
			  , RO5  => O_int(0)
			  , RI   => O_pad
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);
end generate;

large_des: if (5 < data_size) generate
    iobp: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayOn         => dpath_delay_on
	, inputDelayLine       => inputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
		   rpath_init      => '1'
		 , rpath_mode      => b"0100"
		 , rpath_dynamic   => dpath_dynamic
		 , cpath_mode      => b"0000"
		 , location        => location
		 , symbol          => "DES_D"
		 )
		 port map (
			    RO1  => O_int(9)
			  , RO2  => O_int(8)
			  , RO3  => O_int(7)
			  , RO4  => O_int(6)
			  , RO5  => O_int(5)
			  , RI   => O_pad
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
		  rpath_init       => '1'
		, rpath_mode       => b"0100"
		, cpath_mode       => b"0000"
		, chained          => '1'
		, symbol           => "DES_DC"
		)
		port map (
			   RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , RI   => OPEN
			 , EO   => OPEN
			 , CO   => OPEN
			 , LINK => LINKN
		);
end generate;

iom: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RRCK  => SCK
			    , WRCK  => FCK	    -- RCK
			    , RRST  => R	    -- RR
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DIG   => DIG
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , FZ    => FZ
			    , DRO   => DRO
			    , DID   => DID
			    , FLD   => FLD
			    , FLG   => FLG
		   );

end NX_RTL;
-- #}}}#

-- NX_SERDES#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_SERDES is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal I_int : std_logic_vector(9 downto 0);
signal O_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOM_LINK_SIZE - 1 downto 0);

type switch_mode is array(bit) of bit_vector(3 downto 0);
constant switch : switch_mode := ('0' => b"0010", '1' => b"0011");
constant cpath_mode : bit_vector(3 downto 0) := switch(cpath_registered);

function BOOL_TO_STR(X : boolean)
  return string is
begin
  if X then
    return "true";
  else
    return "false";
  end if;
end BOOL_TO_STR;

constant spath_delay_on : string := BOOL_TO_STR((outputDelayLine /= "") or (spath_dynamic = '1'));
constant dpath_delay_on : string := BOOL_TO_STR((inputDelayLine  /= "") or (dpath_dynamic = '1'));

begin

I_net: for j in 0 to (data_size - 1) generate
    I_int(j) <= I(j);
end generate;

I_dummy: for j in (data_size - 1) to 9 generate
    I_int(j) <= '0';
end generate;

O_net: for j in 0 to (data_size - 1) generate
    O(j) <= O_int(j);
end generate;

single_serdes: if (data_size <= 5) generate
    iobx: NX_IOB generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayOn         => dpath_delay_on
	, outputDelayOn        => spath_delay_on
	, inputDelayLine       => inputDelayLine
	, outputDelayLine      => outputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		 port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , rpath_dynamic   => dpath_dynamic
			     , cpath_mode      => cpath_mode
			     , location        => location
			     , symbol          => "SD_DR"
		)
		port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , CI1  => CI
			 , CL   => CL
			 , CR   => CR
			 , RI   => O_pad
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);
end generate;

large_serdes: if (5 < data_size) generate
    iobp: NX_IOB_I generic map (
	  location             => location
	, standard             => standard
	, drive                => drive
	, differential         => differential
	, slewRate             => slewRate
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayOn         => dpath_delay_on
	, outputDelayOn        => spath_delay_on
	, inputDelayLine       => inputDelayLine
	, outputDelayLine      => outputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , rpath_dynamic   => dpath_dynamic
			     , cpath_mode      => cpath_mode
			     , location        => location
			     , symbol          => "SD_DR"
		)
		port map (
			   EI1  => I_int(5)
			 , EI2  => I_int(6)
			 , EI3  => I_int(7)
			 , EI4  => I_int(8)
			 , EI5  => I_int(9)
			 , RO1  => O_int(9)
			 , RO2  => O_int(8)
			 , RO3  => O_int(7)
			 , RO4  => O_int(6)
			 , RO5  => O_int(5)
			 , CI1  => CI
			 , CL   => CL
			 , CR   => CR
			 , RI   => O_pad
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);

    iodn: NX_IOM_DRIVER generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , cpath_mode      => cpath_mode
			     , chained         => '1'
			     , symbol          => "SD_DRC"
		)
		port map (
			   EI1  => I_int(0)
			 , EI2  => I_int(1)
			 , EI3  => I_int(2)
			 , EI4  => I_int(3)
			 , EI5  => I_int(4)
			 , RO1  => O_int(4)
			 , RO2  => O_int(3)
			 , RO3  => O_int(2)
			 , RO4  => O_int(1)
			 , RO5  => O_int(0)
			 , CI1  => CI
			 , CL   => CL
			 , CR   => CR
			 , RI   => OPEN
			 , EO   => OPEN
			 , CO   => OPEN
			 , LINK => LINKN
		);
end generate;

iom: NX_IOM_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RTCK  => FCK	    -- ECK
			    , WTCK  => SCK
			    , RRCK  => SCK
			    , WRCK  => FCK	    -- RCK
			    , TRST  => RTX	    -- ER
			    , RRST  => RRX	    -- RR
			    , CTCK  => CCK	    -- CCK
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DIG   => DIG
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , FZ    => FZ
			    , DRO   => DRO
			    , DID   => DID
			    , FLD   => FLD
			    , FLG   => FLG
		   );

end NX_RTL;
-- #}}}#



library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
   );
port (
   ACK   : in  std_logic;
   ACKC  : in  std_logic;
   ACKD  : in  std_logic;
   ACKR  : in  std_logic;
   BCK   : in  std_logic;
   BCKC  : in  std_logic;
   BCKD  : in  std_logic;
   BCKR  : in  std_logic;

   AI1   : in  std_logic;
   AI2   : in  std_logic;
   AI3   : in  std_logic;
   AI4   : in  std_logic;
   AI5   : in  std_logic;
   AI6   : in  std_logic;
   AI7   : in  std_logic;
   AI8   : in  std_logic;
   AI9   : in  std_logic;
   AI10  : in  std_logic;
   AI11  : in  std_logic;
   AI12  : in  std_logic;
   AI13  : in  std_logic;
   AI14  : in  std_logic;
   AI15  : in  std_logic;
   AI16  : in  std_logic;

   AI17  : in  std_logic;
   AI18  : in  std_logic;
   AI19  : in  std_logic;
   AI20  : in  std_logic;
   AI21  : in  std_logic;
   AI22  : in  std_logic;
   AI23  : in  std_logic;
   AI24  : in  std_logic;

   BI1   : in  std_logic;
   BI2   : in  std_logic;
   BI3   : in  std_logic;
   BI4   : in  std_logic;
   BI5   : in  std_logic;
   BI6   : in  std_logic;
   BI7   : in  std_logic;
   BI8   : in  std_logic;
   BI9   : in  std_logic;
   BI10  : in  std_logic;
   BI11  : in  std_logic;
   BI12  : in  std_logic;
   BI13  : in  std_logic;
   BI14  : in  std_logic;
   BI15  : in  std_logic;
   BI16  : in  std_logic;

   BI17  : in  std_logic;
   BI18  : in  std_logic;
   BI19  : in  std_logic;
   BI20  : in  std_logic;
   BI21  : in  std_logic;
   BI22  : in  std_logic;
   BI23  : in  std_logic;
   BI24  : in  std_logic;

   ACOR  : out std_logic;
   AERR  : out std_logic;
   BCOR  : out std_logic;
   BERR  : out std_logic;

   AO1   : out std_logic;
   AO2   : out std_logic;
   AO3   : out std_logic;
   AO4   : out std_logic;
   AO5   : out std_logic;
   AO6   : out std_logic;
   AO7   : out std_logic;
   AO8   : out std_logic;
   AO9   : out std_logic;
   AO10  : out std_logic;
   AO11  : out std_logic;
   AO12  : out std_logic;
   AO13  : out std_logic;
   AO14  : out std_logic;
   AO15  : out std_logic;
   AO16  : out std_logic;

   AO17  : out std_logic;
   AO18  : out std_logic;
   AO19  : out std_logic;
   AO20  : out std_logic;
   AO21  : out std_logic;
   AO22  : out std_logic;
   AO23  : out std_logic;
   AO24  : out std_logic;

   BO1   : out std_logic;
   BO2   : out std_logic;
   BO3   : out std_logic;
   BO4   : out std_logic;
   BO5   : out std_logic;
   BO6   : out std_logic;
   BO7   : out std_logic;
   BO8   : out std_logic;
   BO9   : out std_logic;
   BO10  : out std_logic;
   BO11  : out std_logic;
   BO12  : out std_logic;
   BO13  : out std_logic;
   BO14  : out std_logic;
   BO15  : out std_logic;
   BO16  : out std_logic;

   BO17  : out std_logic;
   BO18  : out std_logic;
   BO19  : out std_logic;
   BO20  : out std_logic;
   BO21  : out std_logic;
   BO22  : out std_logic;
   BO23  : out std_logic;
   BO24  : out std_logic;

   AA1   : in  std_logic;
   AA2   : in  std_logic;
   AA3   : in  std_logic;
   AA4   : in  std_logic;
   AA5   : in  std_logic;
   AA6   : in  std_logic;

   AA7   : in  std_logic;
   AA8   : in  std_logic;
   AA9   : in  std_logic;
   AA10  : in  std_logic;
   AA11  : in  std_logic;
   AA12  : in  std_logic;
   AA13  : in  std_logic;
   AA14  : in  std_logic;
   AA15  : in  std_logic;
   AA16  : in  std_logic;

   ACS   : in  std_logic;
   AWE   : in  std_logic;
   AR    : in  std_logic;

   BA1   : in  std_logic;
   BA2   : in  std_logic;
   BA3   : in  std_logic;
   BA4   : in  std_logic;
   BA5   : in  std_logic;
   BA6   : in  std_logic;

   BA7   : in  std_logic;
   BA8   : in  std_logic;
   BA9   : in  std_logic;
   BA10  : in  std_logic;
   BA11  : in  std_logic;
   BA12  : in  std_logic;
   BA13  : in  std_logic;
   BA14  : in  std_logic;
   BA15  : in  std_logic;
   BA16  : in  std_logic;

   BCS   : in  std_logic;
   BWE   : in  std_logic;
   BR    : in  std_logic
);
end NX_RAM;

architecture NX_RTL of NX_RAM is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RAM";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RAM_WRAP definition                                                             2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM_WRAP is
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   -- For specific NG_LARGE Extended Features
   raw_l_enable : bit := '0';                          -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000";  -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                         -- context initialization
);
port (
   ACK  : in  std_logic;
   ACKD : in  std_logic;
   ACKR : in  std_logic;
   BCK  : in  std_logic;
   BCKD : in  std_logic;
   BCKR : in  std_logic;

   AI   : in  std_logic_vector(23 downto 0);
   BI   : in  std_logic_vector(23 downto 0);

   ACOR : out std_logic;
   AERR : out std_logic;
   BCOR : out std_logic;
   BERR : out std_logic;

   AO   : out std_logic_vector(23 downto 0);
   BO   : out std_logic_vector(23 downto 0);
   AA   : in  std_logic_vector(15 downto 0);

   ACS  : in  std_logic;
   AWE  : in  std_logic;
   AR   : in  std_logic;

   BA   : in  std_logic_vector(15 downto 0);

   BCS  : in  std_logic;
   BWE  : in  std_logic;
   BR   : in  std_logic
);
end NX_RAM_WRAP;


`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
cBdJr5xvqu58GnvWvW/Nq5gcLbRH6FIDfh6LggmBEhJqm37WkBY6xTBeCTaZNu9E
qmveHq4PkfgWEht3+PRXN0M6H89JYlnvKcz4PkQ2WJbvi0DBEpD7Z4IbHXUfjTNZ
ComTlO3ZVezqBABDReagWhPfk5kIg82ue9e4WbeATWFVFLKgJH/I9/WQxBCvDZhn
CFvnwVyKwQncgJyHNHhHvFGj3IeXEdNpPcTd9AZ7qCKpcmCjRtVCvGhDUHSPHuDO
w4rLgYxFiItmZkd3er3vKu2cSZEvFoyCABXgU2l00rSxFAVCCOg8qO9udD0jndKc
606+A/7Z7yB+8rshR5vexQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 8672)
`protect data_block
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
`protect end_protected


architecture NX_RTL of NX_RAM_WRAP is
   attribute NX_TYPE :string;
   attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RAM
generic (
   std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
   mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
   mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
   pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
   pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge

   pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
   pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port B input
   pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port A output
   pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output

   raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
   raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD

   raw_l_enable : bit := '0';                         -- '0' for NG-MEDIUM, '1' for NG-LARGE extended modes (NO_ECC x3 & x6) + scrubbing, test...
   raw_l_extend : bit_vector( 3 downto 0) := B"0000"; -- Extended modes for NG-LARGE (Scrubbing, test... )

   mem_ctxt     : string := ""                        -- context initialization
);
port (
   ACK   : in  std_logic;
   ACKC  : in  std_logic;
   ACKD  : in  std_logic;
   ACKR  : in  std_logic;
   BCK   : in  std_logic;
   BCKC  : in  std_logic;
   BCKD  : in  std_logic;
   BCKR  : in  std_logic;

   AI1   : in  std_logic;
   AI2   : in  std_logic;
   AI3   : in  std_logic;
   AI4   : in  std_logic;
   AI5   : in  std_logic;
   AI6   : in  std_logic;
   AI7   : in  std_logic;
   AI8   : in  std_logic;
   AI9   : in  std_logic;
   AI10  : in  std_logic;
   AI11  : in  std_logic;
   AI12  : in  std_logic;
   AI13  : in  std_logic;
   AI14  : in  std_logic;
   AI15  : in  std_logic;
   AI16  : in  std_logic;

   AI17  : in  std_logic;
   AI18  : in  std_logic;
   AI19  : in  std_logic;
   AI20  : in  std_logic;
   AI21  : in  std_logic;
   AI22  : in  std_logic;
   AI23  : in  std_logic;
   AI24  : in  std_logic;

   BI1   : in  std_logic;
   BI2   : in  std_logic;
   BI3   : in  std_logic;
   BI4   : in  std_logic;
   BI5   : in  std_logic;
   BI6   : in  std_logic;
   BI7   : in  std_logic;
   BI8   : in  std_logic;
   BI9   : in  std_logic;
   BI10  : in  std_logic;
   BI11  : in  std_logic;
   BI12  : in  std_logic;
   BI13  : in  std_logic;
   BI14  : in  std_logic;
   BI15  : in  std_logic;
   BI16  : in  std_logic;

   BI17  : in  std_logic;
   BI18  : in  std_logic;
   BI19  : in  std_logic;
   BI20  : in  std_logic;
   BI21  : in  std_logic;
   BI22  : in  std_logic;
   BI23  : in  std_logic;
   BI24  : in  std_logic;

   ACOR  : out std_logic;
   AERR  : out std_logic;
   BCOR  : out std_logic;
   BERR  : out std_logic;

   AO1   : out std_logic;
   AO2   : out std_logic;
   AO3   : out std_logic;
   AO4   : out std_logic;
   AO5   : out std_logic;
   AO6   : out std_logic;
   AO7   : out std_logic;
   AO8   : out std_logic;
   AO9   : out std_logic;
   AO10  : out std_logic;
   AO11  : out std_logic;
   AO12  : out std_logic;
   AO13  : out std_logic;
   AO14  : out std_logic;
   AO15  : out std_logic;
   AO16  : out std_logic;

   AO17  : out std_logic;
   AO18  : out std_logic;
   AO19  : out std_logic;
   AO20  : out std_logic;
   AO21  : out std_logic;
   AO22  : out std_logic;
   AO23  : out std_logic;
   AO24  : out std_logic;

   BO1   : out std_logic;
   BO2   : out std_logic;
   BO3   : out std_logic;
   BO4   : out std_logic;
   BO5   : out std_logic;
   BO6   : out std_logic;
   BO7   : out std_logic;
   BO8   : out std_logic;
   BO9   : out std_logic;
   BO10  : out std_logic;
   BO11  : out std_logic;
   BO12  : out std_logic;
   BO13  : out std_logic;
   BO14  : out std_logic;
   BO15  : out std_logic;
   BO16  : out std_logic;

   BO17  : out std_logic;
   BO18  : out std_logic;
   BO19  : out std_logic;
   BO20  : out std_logic;
   BO21  : out std_logic;
   BO22  : out std_logic;
   BO23  : out std_logic;
   BO24  : out std_logic;

   AA1   : in  std_logic;
   AA2   : in  std_logic;
   AA3   : in  std_logic;
   AA4   : in  std_logic;
   AA5   : in  std_logic;
   AA6   : in  std_logic;

   AA7   : in  std_logic;
   AA8   : in  std_logic;
   AA9   : in  std_logic;
   AA10  : in  std_logic;
   AA11  : in  std_logic;
   AA12  : in  std_logic;
   AA13  : in  std_logic;
   AA14  : in  std_logic;
   AA15  : in  std_logic;
   AA16  : in  std_logic;

   ACS   : in  std_logic;
   AWE   : in  std_logic;
   AR    : in  std_logic;

   BA1   : in  std_logic;
   BA2   : in  std_logic;
   BA3   : in  std_logic;
   BA4   : in  std_logic;
   BA5   : in  std_logic;
   BA6   : in  std_logic;

   BA7   : in  std_logic;
   BA8   : in  std_logic;
   BA9   : in  std_logic;
   BA10  : in  std_logic;
   BA11  : in  std_logic;
   BA12  : in  std_logic;
   BA13  : in  std_logic;
   BA14  : in  std_logic;
   BA15  : in  std_logic;
   BA16  : in  std_logic;

   BCS   : in  std_logic;
   BWE   : in  std_logic;
   BR    : in  std_logic
);
end component;

begin

ram: NX_RAM generic map (
   std_mode     => std_mode,
   mcka_edge    => mcka_edge,
   mckb_edge    => mckb_edge,
   pcka_edge    => pcka_edge,
   pckb_edge    => pckb_edge,
   pipe_ia      => pipe_ia,
   pipe_ib      => pipe_ib,
   pipe_oa      => pipe_oa,
   pipe_ob      => pipe_ob,
   raw_config0  => raw_config0,
   raw_config1  => raw_config1,
   raw_l_enable => raw_l_enable,
   raw_l_extend => raw_l_extend,
   mem_ctxt     => mem_ctxt
)
port map(
   ACK   => ACK,
   ACKC  => ACK,
   ACKD  => ACKD,
   ACKR  => ACKR,
   BCK   => BCK,
   BCKC  => BCK,
   BCKD  => BCKD,
   BCKR  => BCKR,

   AI1   => AI(0),
   AI2   => AI(1),
   AI3   => AI(2),
   AI4   => AI(3),
   AI5   => AI(4),
   AI6   => AI(5),
   AI7   => AI(6),
   AI8   => AI(7),
   AI9   => AI(8),
   AI10  => AI(9),
   AI11  => AI(10),
   AI12  => AI(11),
   AI13  => AI(12),
   AI14  => AI(13),
   AI15  => AI(14),
   AI16  => AI(15),

   AI17  => AI(16),
   AI18  => AI(17),
   AI19  => AI(18),
   AI20  => AI(19),
   AI21  => AI(20),
   AI22  => AI(21),
   AI23  => AI(22),
   AI24  => AI(23),

   BI1   => BI(0),
   BI2   => BI(1),
   BI3   => BI(2),
   BI4   => BI(3),
   BI5   => BI(4),
   BI6   => BI(5),
   BI7   => BI(6),
   BI8   => BI(7),
   BI9   => BI(8),
   BI10  => BI(9),
   BI11  => BI(10),
   BI12  => BI(11),
   BI13  => BI(12),
   BI14  => BI(13),
   BI15  => BI(14),
   BI16  => BI(15),

   BI17  => BI(16),
   BI18  => BI(17),
   BI19  => BI(18),
   BI20  => BI(19),
   BI21  => BI(20),
   BI22  => BI(21),
   BI23  => BI(22),
   BI24  => BI(23),

   ACOR  => ACOR,
   AERR  => AERR,
   BCOR  => BCOR,
   BERR  => BERR,

   AO1   => AO(0),
   AO2   => AO(1),
   AO3   => AO(2),
   AO4   => AO(3),
   AO5   => AO(4),
   AO6   => AO(5),
   AO7   => AO(6),
   AO8   => AO(7),
   AO9   => AO(8),
   AO10  => AO(9),
   AO11  => AO(10),
   AO12  => AO(11),
   AO13  => AO(12),
   AO14  => AO(13),
   AO15  => AO(14),
   AO16  => AO(15),

   AO17  => AO(16),
   AO18  => AO(17),
   AO19  => AO(18),
   AO20  => AO(19),
   AO21  => AO(20),
   AO22  => AO(21),
   AO23  => AO(22),
   AO24  => AO(23),

   BO1   => BO(0),
   BO2   => BO(1),
   BO3   => BO(2),
   BO4   => BO(3),
   BO5   => BO(4),
   BO6   => BO(5),
   BO7   => BO(6),
   BO8   => BO(7),
   BO9   => BO(8),
   BO10  => BO(9),
   BO11  => BO(10),
   BO12  => BO(11),
   BO13  => BO(12),
   BO14  => BO(13),
   BO15  => BO(14),
   BO16  => BO(15),

   BO17  => BO(16),
   BO18  => BO(17),
   BO19  => BO(18),
   BO20  => BO(19),
   BO21  => BO(20),
   BO22  => BO(21),
   BO23  => BO(22),
   BO24  => BO(23),

   AA1   => AA(0),
   AA2   => AA(1),
   AA3   => AA(2),
   AA4   => AA(3),
   AA5   => AA(4),
   AA6   => AA(5),

   AA7   => AA(6),
   AA8   => AA(7),
   AA9   => AA(8),
   AA10  => AA(9),
   AA11  => AA(10),
   AA12  => AA(11),
   AA13  => AA(12),
   AA14  => AA(13),
   AA15  => AA(14),
   AA16  => AA(15),

   ACS   => ACS,
   AWE   => AWE,
   AR    => AR,

   BA1   => BA(0),
   BA2   => BA(1),
   BA3   => BA(2),
   BA4   => BA(3),
   BA5   => BA(4),
   BA6   => BA(5),

   BA7   => BA(6),
   BA8   => BA(7),
   BA9   => BA(8),
   BA10  => BA(9),
   BA11  => BA(10),
   BA12  => BA(11),
   BA13  => BA(12),
   BA14  => BA(13),
   BA15  => BA(14),
   BA16  => BA(15),

   BCS   => BCS,
   BWE   => BWE,
   BR    => BR
   );

end NX_RTL;
`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
WCFPKT5POtV/HlsJdhkwuEkpmOem2dSCnLGqWF6eJ18LPOTEmiF16Dqf4zPnF7nK
fv1TyocPi5U8GAfN1BX11uFhNwagprZdtHhuKDSeKk6VpSgsDiA4VxyRBB3YGmbM
1b5w6z3Ux6WwPxFoSXVUAhiNFq5Qi5/5hfBfB5AZR+yqukSwV8GniviqQ3VYyt6b
9unOFfQJgQL+/9GK+u1nrEqBKLqRAfmdHhrdjNKoBvuoDPJgndUQN8m9FyESnDCh
o5rk0glT22Va19xNr0XuBS5/JWZBPt2XvWpuDGiujhDljA/BGhHdaIVXZVGfLjid
mKeAEfbu5+IJLaPWgQ0c9Q==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7808)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
rpVTMTguYbXVHcN1J3+bfxZBn6PeiY466fPDZShotwJZ0iXe1Qcb6NFiVNfC/4N7
k5tyWw7Bw2vbxes5IVhSm7K05Bl1Guov8UefLTD+W8qEcpeMrMDVGignCy18DE5P
5O6qRgg3YGR3sgSrhLFlf9TyH7COTw7PuFnikCfH8bUlNLc1EfVnlhHFxLbObaNA
i7iyAFgOGrQhZPBOk6A86bgWnO2qZDsfROOZxHjdG+/FoUjtveU5ttw319x2Wq4+
Q0kE6UCDRwZRK4zlT5BBh37s6utzTtliImR0+2b1kFnRmti9ugXQSaJHpNOMcoRB
byb23JR3hFxVlgqAfBBeKQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 13664)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
lZCBVM3KBe0DdBuNK9QEBFPiKi4NpUW10v84I5rXM1CxySoY2uSXEfSutkzAYRdh
lMCPMMB6aVuaELIM8cq1IPXyXyGn8ug9Rma7idpVtj/ExdVNeC1xIuQV/l7cSuYm
sS/Hl9wgcdCdddexxtoG2uY9/NW891UWQktY2V04pj/SjutfG79NZcUtcKvSTp/T
2j/ntGEHjVJb9TBs/2x5V0tGAk94U6oJCODWJsWwaBFuO+IwFFpcFgLXDg8+n/ZP
/jdGW/ARsyJxIWccX5iGlQorllySoTwqqJ606liwoP1v2m1FkD+XWlIyObJriqjt
X7CXohMJMQk1dzolmHeqtg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 10352)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
elnFt+utkqXMU6aKknMGWQmotVzpwbB4ZwGWEOcehTTyNDj+0BCmLKbvwD+SWjIA
RCj67rgIWtnH7ENFoTtfjc83ObbhNQpwNJTZ8fBej/40xdV5hgN8Yf5Q9UoJ/QYI
aLxNJFYlLuaegnUlD8a45/SXZWIf1ht09tF3v+0I7ZDkLAFHKKJPAWalPE3ShKMm
aoAVLbu/vhrxcVHSWO11TDZ27TT5AeCdquU7ojb1Iytq4xY7+2G63YECbdb55RaL
20ybeNQCd2OSbX1FitHH11FNSAVkF/IvdPcSfN0q88sxHAdRZmYwUHS9l1rlOE9E
6sPz7D0QLIOuQ5VVJG43Hg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 1888)
`protect data_block
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
+x9YjdPNle4FlFjWjiT0nw==
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
pBcBDde5Y9ddtXBbieC+kLRsCEeUkBvZEOp0O0G9LLQ67IZdMC3zfatIRAuCcoxf
r8Kzsf+gGkd+zeLCc2QSL7KsrLiTPekda0QvG9ar5JNvuMHJCIj/jyuvq83z1rq7
yS6y3tKKOQKb7wFrc/j7F0njD/9EhHLhIs4s5cf2lqDti8EVerouOf7o4ikVbPNx
L/oj69tvTJiOmajePwFV38EWwIm83VEBit/viYIhr6hOF6xrFPF/qhDD0kNU0yMs
93NQPPXfnhBlpfbpF8UGWrqqO/FKDx44XSELN+c9al4THEYKSgUzJMLzgkPmuwrj
97u8UEso3BvWY+1Xw49Y4w==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 1680)
`protect data_block
d/aAO0YDW+p4CXhmuA24pCCRDCtK0nWmJuWPVQqcx9ZqUJ/lpok7MIJl7bNohr/j
OaBA+Z8b31+r2tbXs8TXkAEyJBW1McVridR6NeUCP+oOHiiSqt4e/msaV/MiNLem
M+V82PdcToSllMph0O1rnd/ZiC/fjbO/l0ttk1RwRcwg9xJBAUbWzXLVbpdDilEg
J9uj5g6vQStuF1ipcVJRPlQScdG7uFitsO8VCYwUshapI0CwwbkZ8a4CopHlficf
RyHHmWHQrdMUxIawGlGs3vxgayDs97+wm9Wa8HTtBOSp4JCZaFXHYwRrJImm6ec5
WY1LXrHsDPTNWXgzSHDwPEEbozhlClUZzmsMDHw6bY2e9MsKxIPnceMbg1BgJUH3
DBVpbU9GFW+dV56Go6PuJMtWAolvB60BzM4PV6lFnmXW9GX4ZXVADUuEn3EnNSlY
rSMSBCYJJApTIOKPtC67v+MmVjl/6YEDAYL74pX9OR748xf4S/Emc5B64gI6vHfC
1y1oXarlaqBWBwI0bkw4hKomTgzOjwmq3iA9KZDHJ054ce9bgM88XcUqOwO0Jofb
JOOUT09nUwnqW//q5JCZDV/5pUqJATmyAr40UE5ZOhti3K+/viVT7lzHSzRHTdHw
NuuH1ikfI0a82lweZkZOIoZDOyhlBHH4IfAzEGXY3F0Sli/BnVDjpMUy7qgi/P/+
7KLamK2uuDfLdwloPX1I67GDDQrmmZiOQ0Y/FhxwpAvNypcN5LJ8nI+v8n6JzXtm
QbuP8DLXJYZ+Q3Uy4/VFq9HgcrtX8ZkV2rzps3SaCPnG9nIv+z0ZTDU7oAkHeFZC
w7JaVWcsAgmtrgUZgjZKYrpySUfYiCTKO/NZqHhe1N1nOJc0LsyLWZzPOAFFQOQB
80omrNVqpmrfTwNDSMpEIbusw0xVSgeBR1k5Y+xuc46VOXZErjMXEIfxLDwW9EzS
oZVi7otnrdvBgpecNBxFP9Xh3PRXq3YCt7ImAGJesANHCZEXEkQElpmp0GqOyH+v
djVRMolwJ6PEb7zfR82OmO5eW1NPxRfexlT4rKvZGUqBM0TCpf3/Kx13QUEWhGMr
IsUgkRQm/tGN5PcQfKy2JIby50Z4yBGxZDzKusd8E7FB0ujQyX4VxwgCwttRhI0L
k4slwkW+qo5Wyn+c8eD+ofKFSwyqwSxHFevAzS2AK1GeiBgrpPjidZQiVYLdP95M
OBMcHq/K+q7n3hp6Z/VzDBFYgWAMIBDxS9p/Plyd8i+OJ4cMKbbHfDk1pXrx4+hD
lqsky20JMmx2tZ30xinxWf8tInA9m3YsDy1pdeNviv+/IiZmrc9SuNIv4PDAMVHB
N6TlmyP/3xdL69dzVwdE4/GxGPZsuJooaxCsAhc4WAGOVkRyprtpvVDV0x63LTR+
xtMLx3I/2pDVM7koxC5Gl575bEmzIbDFu5KqoV6/9m4unakF8va4UiCXNP/1Xh1M
esP8Go9Ju3NIGpP/yksrR5ruw9CFEY1V0AjosaC6Nv1dENl2jh4AWu5/DxHdvACT
hoX/Mpq8j/qwKKsRoJQiec5GyVUgNodgZS2r5BYLuDJ6KoZE+N+HvalWy4U5RFH0
ukuJd8LPpozKxo40lnWyFcVS4kXXln/dNYQC0aV6fKNJLEFZbjs7LKhz3mumskMo
QgMht5H7r5MPF8zfnRuygkA33tHVDR7LzyN7WdXaR1G6VUJ6VbqnYBemZPGYkbzU
jkBIaHk+M30uK5WdIVf9tCoy1tWgHbUHwH3v9nCDgYvDXM5kNlNehSwkNsyiZFLM
60tb8co7ciYe/PTrHdgp7jOlXZ6Qa2dnV1K/RggvoULnYqn0VF7bfi0Y0uD6GpYK
Xb4YZYX1OAas2TfauV57QQcx/ox04rS6ne8va2mu46VKtKlSYBx0gFXVJMC+e81O
H3vZkrg85uhOZxCKou1jXQyq4TTEL+yUZKgau0M/5UOglkVCYPUOndvHKuAGEmrm
jR5/ZXbUYTMLm7HrvcCKp/LFYUQSKc2E4fzceUHEYyAoltSpNLAGfOgmBYx4FMjU
cZpT8uERLe42nfIClb4rdukmCDlsy4xdey9Rmg2i7ieMEPKr29tkl5Lovm8XSBbM
yuJ2AP3STFefE/A7upd48vaJgFq7Eb+FLJIKnldO8h4sajYCPEKed47DWsx2337S
tglTrdirZfDyocQuz2N5rn+eXyFGaSc49Mzwa/9Cke99sB0omQlRdWzB9jqre0sk
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
FBYgTZy/6vtP3D4+95DF9IldPm1OwoO4OG0t7i2mJinjiRhKlsDRdsXprdO2blIx
0Ya/XxrQkKb2bwt1+hJxwBLIcEcnsoz+Rq5Cvc/Q8BYGMYAfvWGHLnJbZ64KTebT
+b3W6Gz4YmSnzrITinBGA8eB9eYzRlKkAK/BgXks/2B/hqolbbAeph61On2D60mJ
+6fsRWdCox5KfZYYMelZftmi9IHmW3PfSUgLedeLF3oCEgOgtAskwDJ3DITrFWsu
7y6ZDuqT18D4apfEo7VwPBTjzgBiJzCiFgwqvKeDPpgoeHvJSlcbQpXTNb9qCySi
0HKH5SYsKfV9BwZr7qWvIw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 12624)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_ECC definition                                                                  2020/05/12
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_ECC is
    port(
	CKD : in std_logic;
	CHK : in std_logic;
	COR : out std_logic;
	ERR : out std_logic
    );
end NX_ECC;

architecture NX_RTL of NX_ECC is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_ECC";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------
`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
cVmaIUZCaW4xiw+4zeqZy8AOLdT0QxsEem7fCgqm4QXjxfHW4oJmOonAhyr7NNCR
vp45l9F8L6U0qk+0ROtsSMKFu9Ro/hvx6Y74ZGfsRoLnivHZNiUhvym1YLllNybv
P2upbKTc8pFbwOLWxwc4g9TTxWTJCX4VeZAEUEATx/9oUBZUXqRdkazOQfRtAMzu
4sCYqhydgoasAmkBu8DAYmQ69XQCgw/hDsAa3x1vYbsjKBJ7S66oRoNPOTeXjBrK
6CDxEjk2jSKnFIxQIdZ83q8T2OfjP18h3nHLnR4EO9br/9xWkWWn6cVGP8i81HiD
PyzUkNgM6VRXw5BFG/ej9A==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2544)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Qv8h1sb0jPH4XCijJADpsLW4WYZOQRiRVrEmW4UQ7rJ2joXN9/wCiPJA6ZFFEK3I
jlk26yHoC98VrwFIkWMPl5JY2jbJPURBkur8n0hoDUirdiEqhRC+oHfynOhDwbAa
tHuyNA7rgynU3W2gPiL/+3XRi7i5h9YvgRXbjs+7cBebLTOtd89zu+cliWxnzZQo
5HXAaNUFDihgIfT6L1NownFhUC2S47Y+1NoOI4LpNXegJT+rj/TYPm7l0fw44nqw
poREQoqiNaXA5Nid539Du80KBiRm13hA4pwtBcA342QFsPI0dIFCou7ElSY620Z1
tZm42qM5UPMtubQXIsHj9Q==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 15840)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_PLL_L definition                                                                2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_PLL_L is
generic (
    location	      : string := "";
                      
    ref_intdiv        : integer   range 0 to 31 := 0;  -- 0 to 31  (%1 to %32)
    ref_osc_on        : bit := '0';                    -- 0: disabled - 1: enabled
                      
    cfg_use_pll       : std_logic:='1';                -- use or bypass PLL
                      
    ext_fbk_on        : bit := '0';                    -- 0: disabled - 1: enabled
                      
    fbk_intdiv        : integer   range 0 to 31 := 2;  -- 0 to 31  (%4 to %66 by step 2)
                      
    fbk_delay_on      : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay         : integer   range 0 to 63 := 0;  -- 0 to 63

    wfg_sync_pll_lock : bit := '0';                    -- 0: disabled - 1: enabled
    wfg_sync_cal_lock : bit := '0';                    -- 0: disabled - 1: enabled

    clk_outdivp1      : integer   range 0 to 7 := 0;   -- 0 to 7  P1 (2^n    : %1 to %128)
    clk_outdivp2      : integer   range 0 to 7 := 0;   -- 0 to 7  P2 (2^(n+1): %2 to %256)
    clk_outdivo1      : integer   range 0 to 7 := 0;   -- 0 to 7  O1 ((2n)+3 : %3 to  %17)
    clk_outdivp3o2    : integer   range 0 to 7 := 0    -- 0 to 7  P3 (2^(n+2): %4 to %512)
                                                       --         O2 ((2n)+5 : %5 to  %19)
);
port (
    REF               : in  std_logic;
    FBK               : in  std_logic;

    R                 : in  std_logic := '0';

    VCO               : out std_logic; -- CLK_PLL
    LDFO              : out std_logic; -- LDF_DIV
    REFO              : out std_logic; -- REF_DIV

    DIVO1             : out std_logic; -- (2n)+3
    DIVO2             : out std_logic; -- (2n)+5

    DIVP1             : out std_logic; -- 2^n
    DIVP2             : out std_logic; -- 2^(n+1)
    DIVP3             : out std_logic; -- 2^(n+2)
    OSC               : out std_logic; -- 100MHz

    PLL_LOCKED        : out std_logic;
    CAL_LOCKED        : out std_logic
);
end NX_PLL_L;

architecture NX_RTL of NX_PLL_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_PLL_L";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
ctIIfjNAhh1ZoTfzpaQ/t+vLnrnWowtcwNYU/P2Vz/PBuA65hl2yqqFdxsSscm96
KBbA7WIpInF8pvoVF1hpuFFOHk2BDAdrl8qNzPYTl1yqAxtj6IdNHYs6xsb8Rf2j
9fBwIhiJ8Naw7riKxei54ikOuEKhAQHQZ94VQxu0hotVBdiKvlUasWhK4MhVOKD+
NKud0CHBZjARFpSAlTAXdTK6fNxfZR3qNkfET0ayui40L/EVf7wyW5O8/9adlRFP
btCPWoh4mAyJDaXXPhPPCDqOUJHyytnFpx4J4xGbEVBnXBKz1KSQ6pGPdL+qPM8A
gbgGHn52S5vXP4+dwhpH/A==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 6416)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_WFG_L definition                                                                2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_WFG_L is
generic (
    location    : string := "";
    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
                                                           -- 1:    invert / Falling

    mode        : bit := '0';                              -- 0: no pattern - 1: pattern
    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    R   : in  std_logic := '0';
    SI  : in  std_logic;
    ZI  : in  std_logic;
    RDY : in  std_logic := '1';
    SO  : out std_logic;
    ZO  : out std_logic
);
end NX_WFG_L;

architecture NX_RTL of NX_WFG_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_WFG_L";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
EqxiduUvNwO9+5R/kSDTJ/+YRqvkv7+C2d8wiB5b3GldZKiIhqTKiSfEe9THZG9A
gDcUnAn6Axadn+b4HjkRpAA4c3vIhnjKyqQSSws8CIFpQjKaa2LQ43hmUS3xWf4Z
jbH0OtUOFV41zFdT0OI/fAN7O6dzEcfiEFeX2Dk3afpZTewI7TElC4m+LIWvlVEE
Q1PA7GTc5V80AvH+9w9THoVyVMDoKCP5XHFkN6xqLaSFy6960CEszGDLZPlRIMK1
t0WdxaBeYFGX0fkP3dCNiGT87b7sjfTun0rIYDBgpIlKGJP0072mAHv8i+8NQkxb
mjMMqu3l9xJe6c2hmTtC6Q==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2112)
`protect data_block
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
`protect end_protected



-- =================================================================================================
--   NX_R5_L definition                                                                 2019/04/09
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_R5_L is
port (
    -- Inputs
    A_CKEM_I      : in  std_logic; --  aclkenm0      1
    A_CKEP_I      : in  std_logic; --  aclkenp0      1
    A_CKES_I      : in  std_logic; --  aclkens0      1

    AR_A_I32      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I31      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I30      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I29      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I28      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I27      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I26      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I25      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I24      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I23      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I22      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I21      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I20      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I19      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I18      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I17      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I16      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I15      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I14      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I13      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I12      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I11      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I10      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I9       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I8       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I7       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I6       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I5       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I4       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I3       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I2       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I1       : in  std_logic; --  araddrs0      32  [0:31]

    AR_BU_I2      : in  std_logic; --  arbursts0     2   [0:1]
    AR_BU_I1      : in  std_logic; --  arbursts0     2   [0:1]

    AR_CH_I4      : in  std_logic; --  arcaches0     4   [0:3]
    AR_CH_I3      : in  std_logic; --  arcaches0     4   [0:3]
    AR_CH_I2      : in  std_logic; --  arcaches0     4   [0:3]
    AR_CH_I1      : in  std_logic; --  arcaches0     4   [0:3]

    AR_IDS_I8     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I7     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I6     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I5     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I4     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I3     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I2     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I1     : in  std_logic; --  arids0        8   [0:7]

    AR_LE_I4      : in  std_logic; --  arlens0       4   [0:3]
    AR_LE_I3      : in  std_logic; --  arlens0       4   [0:3]
    AR_LE_I2      : in  std_logic; --  arlens0       4   [0:3]
    AR_LE_I1      : in  std_logic; --  arlens0       4   [0:3]

    AR_LK_I2      : in  std_logic; --  arlocks0      2   [0:1]
    AR_LK_I1      : in  std_logic; --  arlocks0      2   [0:1]

    AR_PR_I3      : in  std_logic; --  arprots0      3   [0:2]
    AR_PR_I2      : in  std_logic; --  arprots0      3   [0:2]
    AR_PR_I1      : in  std_logic; --  arprots0      3   [0:2]

    AR_RYM_I      : in  std_logic; --  arreadym0     1
    AR_RYP_I      : in  std_logic; --  arreadyp0     1

    AR_SZ_I3      : in  std_logic; --  arsizes0      3   [0:2]
    AR_SZ_I2      : in  std_logic; --  arsizes0      3   [0:2]
    AR_SZ_I1      : in  std_logic; --  arsizes0      3   [0:2]

    AR_VD_I       : in  std_logic; --  arvalids0     1
    AT_RS_I       : in  std_logic; --  atresetn      1

    AW_A_I32      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I31      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I30      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I29      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I28      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I27      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I26      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I25      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I24      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I23      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I22      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I21      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I20      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I19      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I18      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I17      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I16      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I15      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I14      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I13      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I12      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I11      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I10      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I9       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I8       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I7       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I6       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I5       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I4       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I3       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I2       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I1       : in  std_logic; --  awaddrs0      32  [0:31]

    AW_BU_I2      : in  std_logic; --  awbursts0     2   [0:1]
    AW_BU_I1      : in  std_logic; --  awbursts0     2   [0:1]

    AW_CH_I4      : in  std_logic; --  awcaches0     4   [0:3]
    AW_CH_I3      : in  std_logic; --  awcaches0     4   [0:3]
    AW_CH_I2      : in  std_logic; --  awcaches0     4   [0:3]
    AW_CH_I1      : in  std_logic; --  awcaches0     4   [0:3]

    AW_IDS_I8     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I7     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I6     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I5     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I4     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I3     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I2     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I1     : in  std_logic; --  awids0        8   [0:7]

    AW_LE_I4      : in  std_logic; --  awlens0       4   [0:3]
    AW_LE_I3      : in  std_logic; --  awlens0       4   [0:3]
    AW_LE_I2      : in  std_logic; --  awlens0       4   [0:3]
    AW_LE_I1      : in  std_logic; --  awlens0       4   [0:3]

    AW_LK_I2      : in  std_logic; --  awlocks0      2   [0:1]
    AW_LK_I1      : in  std_logic; --  awlocks0      2   [0:1]

    AW_PR_I3      : in  std_logic; --  awprots0      3   [0:2]
    AW_PR_I2      : in  std_logic; --  awprots0      3   [0:2]
    AW_PR_I1      : in  std_logic; --  awprots0      3   [0:2]

    AW_RYM_I      : in  std_logic; --  awreadym0     1
    AW_RYP_I      : in  std_logic; --  awreadyp0     1

    AW_SZ_I3      : in  std_logic; --  awsizes0      3   [0:2]
    AW_SZ_I2      : in  std_logic; --  awsizes0      3   [0:2]
    AW_SZ_I1      : in  std_logic; --  awsizes0      3   [0:2]

    AW_VD_I       : in  std_logic; --  awvalids0     1

    B_IDM_I4      : in  std_logic; --  bidm0         4   [0:3]
    B_IDM_I3      : in  std_logic; --  bidm0         4   [0:3]
    B_IDM_I2      : in  std_logic; --  bidm0         4   [0:3]
    B_IDM_I1      : in  std_logic; --  bidm0         4   [0:3]

    B_IDP_I4      : in  std_logic; --  bidp0         4   [0:3]
    B_IDP_I3      : in  std_logic; --  bidp0         4   [0:3]
    B_IDP_I2      : in  std_logic; --  bidp0         4   [0:3]
    B_IDP_I1      : in  std_logic; --  bidp0         4   [0:3]

    B_RDY_I       : in  std_logic; --  breadys0      1

    B_RSPM_I2     : in  std_logic; --  brespm0 2     [0:1]
    B_RSPM_I1     : in  std_logic; --  brespm0 2     [0:1]

    B_RSPP_I2     : in  std_logic; --  brespp0 2     [0:1]
    B_RSPP_I1     : in  std_logic; --  brespp0 2     [0:1]

    B_VDM_I       : in  std_logic; --  bvalidm0      1
    B_VDP_I       : in  std_logic; --  bvalidp0      1

--    CAL_I5        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I4        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I3        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I2        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I1        : in  std_logic; --  calibration   5   [0:4]

    CDB_PW_I      : in  std_logic; --  cdbgpwrupack  1
    CDB_RS_I      : in  std_logic; --  cdbgrstack    1
    CFG_EE_I      : in  std_logic; --  cfgee         1
    CFG_IE_I      : in  std_logic; --  cfgie         1
    CFG_NM_I      : in  std_logic; --  cfgnmfi0      1
    CK_I          : in  std_logic; --  clk           1
--    CK_DR_I       : in  std_logic; --  clock_dr      1
    CS_PW_I       : in  std_logic; --  csyspwrupack  1
    DB_E_I        : in  std_logic; --  dbgen0        1
    DB_NCK_I      : in  std_logic; --  dbgnoclkstop  1

    DB_RA_I20     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I19     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I18     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I17     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I16     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I15     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I14     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I13     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I12     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I11     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I10     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I9      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I8      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I7      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I6      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I5      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I4      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I3      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I2      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I1      : in  std_logic; --  dbgromaddr    20  [0:19]

    DB_RAV_I      : in  std_logic; --  dbgromaddrv   1

    DB_SA_I20     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I19     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I18     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I17     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I16     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I15     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I14     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I13     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I12     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I11     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I10     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I9      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I8      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I7      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I6      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I5      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I4      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I3      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I2      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I1      : in  std_logic; --  dbgselfaddr0  20  [0:19]

    DB_SAV_I      : in  std_logic; --  dbgselfaddrv0 1
    DEV_E_I       : in  std_logic; --  deviceen      1

    DFTS_I8       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I7       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I6       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I5       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I4       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I3       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I2       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I1       : in  std_logic; --  dftsi         8   [0:7]

    E_DB_I        : in  std_logic; --  edbgrq0       1
    ERR_R_I       : in  std_logic; --  errenram0     1
    EVENT_I       : in  std_logic; --  eventi0       1

    GID_I4        : in  std_logic; --  groupid       4   [0:3]
    GID_I3        : in  std_logic; --  groupid       4   [0:3]
    GID_I2        : in  std_logic; --  groupid       4   [0:3]
    GID_I1        : in  std_logic; --  groupid       4   [0:3]

    INIT_P_I      : in  std_logic; --  initppx0      1
    INIT_R_I      : in  std_logic; --  initrama0     1
    LOC_R_I       : in  std_logic; --  loczrama0     1
--    LBK_E_I       : in  std_logic; --  loopback_en   1
--    LBK_MX_I      : in  std_logic; --  loopback_mux  1

--    MODE1_I3      : in  std_logic; --  mode1         3   [0:2]
--    MODE1_I2      : in  std_logic; --  mode1         3   [0:2]
--    MODE1_I1      : in  std_logic; --  mode1         3   [0:2]

--    MODE2_I3      : in  std_logic; --  mode2         3   [0:2]
--    MODE2_I2      : in  std_logic; --  mode2         3   [0:2]
--    MODE2_I1      : in  std_logic; --  mode2         3   [0:2]

--    MODE3_I3      : in  std_logic; --  mode3         3   [0:2]
--    MODE3_I2      : in  std_logic; --  mode3         3   [0:2]
--    MODE3_I1      : in  std_logic; --  mode3         3   [0:2]

    NCPUH_I       : in  std_logic; --  ncpuhalt0     1
    NET_RS_I      : in  std_logic; --  netmporeset   1
    N_FIQ_I       : in  std_logic; --  nfiq0         1
    N_IDE_I       : in  std_logic; --  niden0        1
    N_IRQ_I       : in  std_logic; --  nirq0         1
    N_PRS_I       : in  std_logic; --  npotrst       1
    N_RS_I        : in  std_logic; --  nreset0       1
    N_SPRS_I      : in  std_logic; --  nsysporeset   1
    N_TRS_I       : in  std_logic; --  ntrst         1

    P_A_I29       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I28       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I27       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I26       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I25       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I24       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I23       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I22       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I21       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I20       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I19       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I18       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I17       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I16       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I15       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I14       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I13       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I12       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I11       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I10       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I9        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I8        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I7        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I6        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I5        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I4        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I3        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I2        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I1        : in  std_logic; --  paddrsys      29  [0:28]

    P_ECC_I       : in  std_logic; --  pareccenram0  1
    PLVL_I        : in  std_logic; --  paritylevel   1
    P_CK_E_I      : in  std_logic; --  pclkensys     1
    P_CK_I        : in  std_logic; --  pclksys       1
    P_E_I         : in  std_logic; --  penablesys    1

    PPV_BS_I20    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I19    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I18    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I17    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I16    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I15    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I14    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I13    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I12    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I11    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I10    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I9     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I8     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I7     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I6     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I5     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I4     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I3     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I2     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I1     : in  std_logic; --  ppvbase0      20  [0:19]

    PPV_SZ_I5     : in  std_logic; --  ppvsize0      5   [0:4]
    PPV_SZ_I4     : in  std_logic; --  ppvsize0      5   [0:4]
    PPV_SZ_I3     : in  std_logic; --  ppvsize0      5   [0:4]
    PPV_SZ_I2     : in  std_logic; --  ppvsize0      5   [0:4]
    PPV_SZ_I1     : in  std_logic; --  ppvsize0      5   [0:4]

    PPX_BS_I20    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I19    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I18    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I17    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I16    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I15    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I14    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I13    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I12    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I11    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I10    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I9     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I8     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I7     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I6     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I5     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I4     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I3     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I2     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I1     : in  std_logic; --  ppxbase0      20  [0:19]

    PPX_SZ_I5     : in  std_logic; --  ppxsize0      5   [0:4]
    PPX_SZ_I4     : in  std_logic; --  ppxsize0      5   [0:4]
    PPX_SZ_I3     : in  std_logic; --  ppxsize0      5   [0:4]
    PPX_SZ_I2     : in  std_logic; --  ppxsize0      5   [0:4]
    PPX_SZ_I1     : in  std_logic; --  ppxsize0      5   [0:4]

    P_RS_I        : in  std_logic; --  presetsysn    1
    P_SEL_I       : in  std_logic; --  pselsys       1

    PW_D_I32      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I31      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I30      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I29      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I28      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I27      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I26      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I25      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I24      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I23      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I22      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I21      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I20      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I19      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I18      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I17      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I16      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I15      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I14      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I13      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I12      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I11      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I10      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I9       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I8       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I7       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I6       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I5       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I4       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I3       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I2       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I1       : in  std_logic; --  pwdatasys     32  [0:31]

    PW_I          : in  std_logic; --  pwritesys     1

    RAMCTL_I8     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I7     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I6     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I5     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I4     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I3     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I2     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I1     : in  std_logic; --  ramcontrol0   8   [0:7]

    R_DM_I64      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I63      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I62      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I61      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I60      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I59      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I58      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I57      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I56      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I55      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I54      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I53      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I52      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I51      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I50      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I49      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I48      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I47      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I46      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I45      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I44      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I43      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I42      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I41      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I40      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I39      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I38      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I37      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I36      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I35      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I34      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I33      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I32      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I31      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I30      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I29      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I28      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I27      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I26      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I25      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I24      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I23      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I22      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I21      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I20      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I19      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I18      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I17      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I16      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I15      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I14      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I13      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I12      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I11      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I10      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I9       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I8       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I7       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I6       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I5       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I4       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I3       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I2       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I1       : in  std_logic; --  rdatam0       64  [0:63]

    R_DP_I32      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I31      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I30      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I29      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I28      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I27      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I26      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I25      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I24      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I23      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I22      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I21      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I20      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I19      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I18      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I17      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I16      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I15      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I14      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I13      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I12      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I11      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I10      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I9       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I8       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I7       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I6       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I5       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I4       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I3       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I2       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I1       : in  std_logic; --  rdatap0       32  [0:31]

--    RDY_I3        : in  std_logic; --  ready         3   [0:2]
--    RDY_I2        : in  std_logic; --  ready         3   [0:2]
--    RDY_I1        : in  std_logic; --  ready         3   [0:2]

    R_IDM_I4      : in  std_logic; --  ridm0         4   [0:3]
    R_IDM_I3      : in  std_logic; --  ridm0         4   [0:3]
    R_IDM_I2      : in  std_logic; --  ridm0         4   [0:3]
    R_IDM_I1      : in  std_logic; --  ridm0         4   [0:3]

    R_IDP_I4      : in  std_logic; --  ridp0         4   [0:3]
    R_IDP_I3      : in  std_logic; --  ridp0         4   [0:3]
    R_IDP_I2      : in  std_logic; --  ridp0         4   [0:3]
    R_IDP_I1      : in  std_logic; --  ridp0         4   [0:3]

    R_LSTM_I      : in  std_logic; --  rlastm0       1
    R_LSTP_I      : in  std_logic; --  rlastp0       1
    R_RDY_I       : in  std_logic; --  rreadys0      1

    R_RSPM_I2     : in  std_logic; --  rrespm0       2   [0:1]
    R_RSPM_I1     : in  std_logic; --  rrespm0       2   [0:1]

    R_RSPP_I2     : in  std_logic; --  rrespp0       2   [0:1]
    R_RSPP_I1     : in  std_logic; --  rrespp0       2   [0:1]

    RS_BYP_I      : in  std_logic; --  rstbypass     1
    R_VDM_I       : in  std_logic; --  rvalidm0      1
    R_VDP_I       : in  std_logic; --  rvalidp0      1
--    SCAN_E_I      : in  std_logic; --  scan_en       1
    SE_I          : in  std_logic; --  se            1
--    SHF_DR_I      : in  std_logic; --  shift_dr      1
--    SH_I          : in  std_logic; --  shin          1
    SW_CK_I       : in  std_logic; --  swclktck      1
    SW_DI_I       : in  std_logic; --  swditms       1
    T_DI_I        : in  std_logic; --  tdi           1
    TE_INI_I      : in  std_logic; --  teinit        1
--    TEST_E_I      : in  std_logic; --  test_en       1
--    UPD_DR_I      : in  std_logic; --  update_dr     1
    VINI_I        : in  std_logic; --  vinithi0      1

    W_D_I64       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I63       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I62       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I61       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I60       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I59       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I58       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I57       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I56       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I55       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I54       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I53       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I52       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I51       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I50       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I49       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I48       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I47       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I46       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I45       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I44       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I43       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I42       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I41       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I40       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I39       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I38       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I37       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I36       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I35       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I34       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I33       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I32       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I31       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I30       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I29       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I28       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I27       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I26       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I25       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I24       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I23       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I22       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I21       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I20       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I19       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I18       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I17       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I16       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I15       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I14       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I13       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I12       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I11       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I10       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I9        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I8        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I7        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I6        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I5        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I4        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I3        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I2        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I1        : in  std_logic; --  wdatas0       64  [0:63]

    W_IDS_I8      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I7      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I6      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I5      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I4      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I3      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I2      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I1      : in  std_logic; --  wids0         8   [0:7]

    W_LST_I       : in  std_logic; --  wlasts0       1
    W_RYM_I       : in  std_logic; --  wreadym0      1
    W_RYP_I       : in  std_logic; --  wreadyp0      1

    W_SBS_I8      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I7      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I6      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I5      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I4      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I3      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I2      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I1      : in  std_logic; --  wstrbs0       8   [0:7]

    W_VD_I        : in  std_logic; --  wvalids0      1

    -- Outputs
    AR_AM_O32     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O31     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O30     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O29     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O28     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O27     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O26     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O25     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O24     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O23     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O22     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O21     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O20     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O19     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O18     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O17     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O16     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O15     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O14     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O13     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O12     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O11     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O10     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O9      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O8      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O7      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O6      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O5      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O4      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O3      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O2      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O1      : out std_logic; --  araddrm0            32  [0:31]

    AR_AP_O32     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O31     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O30     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O29     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O28     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O27     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O26     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O25     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O24     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O23     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O22     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O21     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O20     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O19     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O18     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O17     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O16     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O15     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O14     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O13     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O12     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O11     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O10     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O9      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O8      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O7      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O6      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O5      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O4      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O3      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O2      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O1      : out std_logic; --  araddrp0            32  [0:31]

    AR_BUM_O2     : out std_logic; --  arburstm0           2   [0:1]
    AR_BUM_O1     : out std_logic; --  arburstm0           2   [0:1]

    AR_BUP_O2     : out std_logic; --  arburstp0           2   [0:1]
    AR_BUP_O1     : out std_logic; --  arburstp0           2   [0:1]

    AR_CHM_O4     : out std_logic; --  arcachem0           4   [0:3]
    AR_CHM_O3     : out std_logic; --  arcachem0           4   [0:3]
    AR_CHM_O2     : out std_logic; --  arcachem0           4   [0:3]
    AR_CHM_O1     : out std_logic; --  arcachem0           4   [0:3]

    AR_CHP_O4     : out std_logic; --  arcachep0           4   [0:3]
    AR_CHP_O3     : out std_logic; --  arcachep0           4   [0:3]
    AR_CHP_O2     : out std_logic; --  arcachep0           4   [0:3]
    AR_CHP_O1     : out std_logic; --  arcachep0           4   [0:3]

    AR_IDM_O4     : out std_logic; --  aridm0              4   [0:3]
    AR_IDM_O3     : out std_logic; --  aridm0              4   [0:3]
    AR_IDM_O2     : out std_logic; --  aridm0              4   [0:3]
    AR_IDM_O1     : out std_logic; --  aridm0              4   [0:3]

    AR_IDP_O4     : out std_logic; --  aridp0              4   [0:3]
    AR_IDP_O3     : out std_logic; --  aridp0              4   [0:3]
    AR_IDP_O2     : out std_logic; --  aridp0              4   [0:3]
    AR_IDP_O1     : out std_logic; --  aridp0              4   [0:3]

    AR_INM_O4     : out std_logic; --  arinnerm0           4   [0:3]
    AR_INM_O3     : out std_logic; --  arinnerm0           4   [0:3]
    AR_INM_O2     : out std_logic; --  arinnerm0           4   [0:3]
    AR_INM_O1     : out std_logic; --  arinnerm0           4   [0:3]

    AR_LEM_O4     : out std_logic; --  arlenm0             4   [0:3]
    AR_LEM_O3     : out std_logic; --  arlenm0             4   [0:3]
    AR_LEM_O2     : out std_logic; --  arlenm0             4   [0:3]
    AR_LEM_O1     : out std_logic; --  arlenm0             4   [0:3]

    AR_LEP_O4     : out std_logic; --  arlenp0             4   [0:3]
    AR_LEP_O3     : out std_logic; --  arlenp0             4   [0:3]
    AR_LEP_O2     : out std_logic; --  arlenp0             4   [0:3]
    AR_LEP_O1     : out std_logic; --  arlenp0             4   [0:3]

    AR_LKM_O2     : out std_logic; --  arlockm0            2   [0:1]
    AR_LKM_O1     : out std_logic; --  arlockm0            2   [0:1]

    AR_LKP_O2     : out std_logic; --  arlockp0            2   [0:1]
    AR_LKP_O1     : out std_logic; --  arlockp0            2   [0:1]

    AR_PRM_O3     : out std_logic; --  arprotm0            3   [0:2]
    AR_PRM_O2     : out std_logic; --  arprotm0            3   [0:2]
    AR_PRM_O1     : out std_logic; --  arprotm0            3   [0:2]

    AR_PRP_O3     : out std_logic; --  arprotp0            3   [0:2]
    AR_PRP_O2     : out std_logic; --  arprotp0            3   [0:2]
    AR_PRP_O1     : out std_logic; --  arprotp0            3   [0:2]

    AR_RDY_O      : out std_logic; --  arreadys0           1
    AR_SHM_O      : out std_logic; --  arsharem0           1

    AR_SZM_O3     : out std_logic; --  arsizem0            3   [0:2]
    AR_SZM_O2     : out std_logic; --  arsizem0            3   [0:2]
    AR_SZM_O1     : out std_logic; --  arsizem0            3   [0:2]

    AR_SZP_O3     : out std_logic; --  arsizep0            3   [0:2]
    AR_SZP_O2     : out std_logic; --  arsizep0            3   [0:2]
    AR_SZP_O1     : out std_logic; --  arsizep0            3   [0:2]

    AR_VDM_O      : out std_logic; --  arvalidm0           1
    AR_VDP_O      : out std_logic; --  arvalidp0           1

    AW_AM_O32     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O31     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O30     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O29     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O28     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O27     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O26     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O25     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O24     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O23     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O22     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O21     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O20     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O19     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O18     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O17     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O16     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O15     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O14     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O13     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O12     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O11     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O10     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O9      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O8      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O7      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O6      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O5      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O4      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O3      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O2      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O1      : out std_logic; --  awaddrm0            32  [0:31]

    AW_AP_O32     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O31     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O30     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O29     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O28     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O27     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O26     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O25     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O24     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O23     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O22     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O21     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O20     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O19     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O18     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O17     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O16     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O15     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O14     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O13     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O12     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O11     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O10     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O9      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O8      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O7      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O6      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O5      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O4      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O3      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O2      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O1      : out std_logic; --  awaddrp0            32  [0:31]

    AW_BUM_O2     : out std_logic; --  awburstm0           2   [0:1]
    AW_BUM_O1     : out std_logic; --  awburstm0           2   [0:1]

    AW_BUP_O2     : out std_logic; --  awburstp0           2   [0:1]
    AW_BUP_O1     : out std_logic; --  awburstp0           2   [0:1]

    AW_CHM_O4     : out std_logic; --  awcachem0           4   [0:3]
    AW_CHM_O3     : out std_logic; --  awcachem0           4   [0:3]
    AW_CHM_O2     : out std_logic; --  awcachem0           4   [0:3]
    AW_CHM_O1     : out std_logic; --  awcachem0           4   [0:3]

    AW_CHP_O4     : out std_logic; --  awcachep0           4   [0:3]
    AW_CHP_O3     : out std_logic; --  awcachep0           4   [0:3]
    AW_CHP_O2     : out std_logic; --  awcachep0           4   [0:3]
    AW_CHP_O1     : out std_logic; --  awcachep0           4   [0:3]

    AW_IDM_O4     : out std_logic; --  awidm0              4   [0:3]
    AW_IDM_O3     : out std_logic; --  awidm0              4   [0:3]
    AW_IDM_O2     : out std_logic; --  awidm0              4   [0:3]
    AW_IDM_O1     : out std_logic; --  awidm0              4   [0:3]

    AW_IDP_O4     : out std_logic; --  awidp0              4   [0:3]
    AW_IDP_O3     : out std_logic; --  awidp0              4   [0:3]
    AW_IDP_O2     : out std_logic; --  awidp0              4   [0:3]
    AW_IDP_O1     : out std_logic; --  awidp0              4   [0:3]

    AW_INM_O4     : out std_logic; --  awinnerm0           4   [0:3]
    AW_INM_O3     : out std_logic; --  awinnerm0           4   [0:3]
    AW_INM_O2     : out std_logic; --  awinnerm0           4   [0:3]
    AW_INM_O1     : out std_logic; --  awinnerm0           4   [0:3]

    AW_LEM_O4     : out std_logic; --  awlenm0             4   [0:3]
    AW_LEM_O3     : out std_logic; --  awlenm0             4   [0:3]
    AW_LEM_O2     : out std_logic; --  awlenm0             4   [0:3]
    AW_LEM_O1     : out std_logic; --  awlenm0             4   [0:3]

    AW_LEP_O4     : out std_logic; --  awlenp0             4   [0:3]
    AW_LEP_O3     : out std_logic; --  awlenp0             4   [0:3]
    AW_LEP_O2     : out std_logic; --  awlenp0             4   [0:3]
    AW_LEP_O1     : out std_logic; --  awlenp0             4   [0:3]

    AW_LKM_O2     : out std_logic; --  awlockm0            2   [0:1]
    AW_LKM_O1     : out std_logic; --  awlockm0            2   [0:1]

    AW_LKP_O2     : out std_logic; --  awlockp0            2   [0:1]
    AW_LKP_O1     : out std_logic; --  awlockp0            2   [0:1]

    AW_PRM_O3     : out std_logic; --  awprotm0            3   [0:2]
    AW_PRM_O2     : out std_logic; --  awprotm0            3   [0:2]
    AW_PRM_O1     : out std_logic; --  awprotm0            3   [0:2]

    AW_PRP_O3     : out std_logic; --  awprotp0            3   [0:2]
    AW_PRP_O2     : out std_logic; --  awprotp0            3   [0:2]
    AW_PRP_O1     : out std_logic; --  awprotp0            3   [0:2]

    AW_RDY_O      : out std_logic; --  awreadys0           1
    AW_SHM_O      : out std_logic; --  awsharem0           1

    AW_SZM_O3     : out std_logic; --  awsizem0            3   [0:2]
    AW_SZM_O2     : out std_logic; --  awsizem0            3   [0:2]
    AW_SZM_O1     : out std_logic; --  awsizem0            3   [0:2]

    AW_SZP_O3     : out std_logic; --  awsizep0            3   [0:2]
    AW_SZP_O2     : out std_logic; --  awsizep0            3   [0:2]
    AW_SZP_O1     : out std_logic; --  awsizep0            3   [0:2]

    AW_VDM_O      : out std_logic; --  awvalidm0           1
    AW_VDP_O      : out std_logic; --  awvalidp0           1

    B_IDS_O8      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O7      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O6      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O5      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O4      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O3      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O2      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O1      : out std_logic; --  bids0               8   [0:7]

    B_RDYM_O      : out std_logic; --  breadym0            1
    B_RDYP_O      : out std_logic; --  breadyp0            1

    B_RSP_O2      : out std_logic; --  bresps0             2   [0:1]
    B_RSP_O1      : out std_logic; --  bresps0             2   [0:1]

    B_VD_O        : out std_logic; --  bvalids0            1

--    CAL_O5        : out std_logic; --  calibration         5   [0:4]
--    CAL_O4        : out std_logic; --  calibration         5   [0:4]
--    CAL_O3        : out std_logic; --  calibration         5   [0:4]
--    CAL_O2        : out std_logic; --  calibration         5   [0:4]
--    CAL_O1        : out std_logic; --  calibration         5   [0:4]

    CDB_PW_O      : out std_logic; --  cdbgpwrupreq        1
    CDB_RS_O      : out std_logic; --  cdbgrstreq          1
--    CK_DR_O       : out std_logic; --  clock_dr            1
    COM_RX_O      : out std_logic; --  commrx0             1
    COM_TX_O      : out std_logic; --  commtx0             1
    CS_PW_O       : out std_logic; --  csyspwrupreq        1
    DB_ACK_O      : out std_logic; --  dbgack0             1
    DB_NPD_O      : out std_logic; --  dbgnopwrdwn         1
    DB_RS_O       : out std_logic; --  dbgrstreq0          1

    DFTS_O8       : out std_logic; --  dftso               8   [0:7]
    DFTS_O7       : out std_logic; --  dftso               8   [0:7]
    DFTS_O6       : out std_logic; --  dftso               8   [0:7]
    DFTS_O5       : out std_logic; --  dftso               8   [0:7]
    DFTS_O4       : out std_logic; --  dftso               8   [0:7]
    DFTS_O3       : out std_logic; --  dftso               8   [0:7]
    DFTS_O2       : out std_logic; --  dftso               8   [0:7]
    DFTS_O1       : out std_logic; --  dftso               8   [0:7]

    ET_ASC_O8     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O7     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O6     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O5     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O4     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O3     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O2     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O1     : out std_logic; --  etmasicctl0         8   [0:7]

    ET_E_O        : out std_logic; --  etmen0              1

    ET_EXT_O2     : out std_logic; --  etmextout0          2   [0:1]
    ET_EXT_O1     : out std_logic; --  etmextout0          2   [0:1]

    EVENT_O       : out std_logic; --  evento0             1
    FP_DZC_O      : out std_logic; --  fpdzc0              1
    FP_IDC_O      : out std_logic; --  fpidc0              1
    FP_IOC_O      : out std_logic; --  fpioc0              1
    FP_IXC_O      : out std_logic; --  fpixc0              1
    FP_OFC_O      : out std_logic; --  fpofc0              1
    FP_UFC_O      : out std_logic; --  fpufc0              1
    JTAG_O        : out std_logic; --  jtagnsw             1
--    LBK_E_O       : out std_logic; --  loopback_en         1
--    LBK_MX_O      : out std_logic; --  loopback_mux        1

--    MODE1_O2      : out std_logic; --  mode1               3   [0:2]
--    MODE1_O1      : out std_logic; --  mode1               3   [0:2]

--    MODE2_O2      : out std_logic; --  mode2               3   [0:2]
--    MODE2_O1      : out std_logic; --  mode2               3   [0:2]

--    MODE3_O2      : out std_logic; --  mode3               3   [0:2]
--    MODE3_O1      : out std_logic; --  mode3               3   [0:2]

    N_CKST_O      : out std_logic; --  nclkstopped0        1
    N_PMU_O       : out std_logic; --  npmuirq0            1
    N_TDO_O       : out std_logic; --  ntdoen              1
    N_VFIQ_O      : out std_logic; --  nvalfiq0            1
    N_VIRQ_O      : out std_logic; --  nvalirq0            1
    N_VRST_O      : out std_logic; --  nvalreset0          1
    N_EPST_O      : out std_logic; --  nwfepipestopped0    1
    N_IPST_O      : out std_logic; --  nwfipipestopped0    1

    P_RD_O32      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O31      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O30      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O29      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O28      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O27      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O26      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O25      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O24      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O23      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O22      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O21      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O20      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O19      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O18      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O17      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O16      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O15      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O14      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O13      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O12      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O11      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O10      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O9       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O8       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O7       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O6       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O5       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O4       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O3       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O2       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O1       : out std_logic; --  prdatasys           32  [0:31]

    P_RDY_O       : out std_logic; --  preadysys           1
    P_VER_O       : out std_logic; --  pslverrsys          1

    RD_O64        : out std_logic; --  rdatas0             64  [0:63]
    RD_O63        : out std_logic; --  rdatas0             64  [0:63]
    RD_O62        : out std_logic; --  rdatas0             64  [0:63]
    RD_O61        : out std_logic; --  rdatas0             64  [0:63]
    RD_O60        : out std_logic; --  rdatas0             64  [0:63]
    RD_O59        : out std_logic; --  rdatas0             64  [0:63]
    RD_O58        : out std_logic; --  rdatas0             64  [0:63]
    RD_O57        : out std_logic; --  rdatas0             64  [0:63]
    RD_O56        : out std_logic; --  rdatas0             64  [0:63]
    RD_O55        : out std_logic; --  rdatas0             64  [0:63]
    RD_O54        : out std_logic; --  rdatas0             64  [0:63]
    RD_O53        : out std_logic; --  rdatas0             64  [0:63]
    RD_O52        : out std_logic; --  rdatas0             64  [0:63]
    RD_O51        : out std_logic; --  rdatas0             64  [0:63]
    RD_O50        : out std_logic; --  rdatas0             64  [0:63]
    RD_O49        : out std_logic; --  rdatas0             64  [0:63]
    RD_O48        : out std_logic; --  rdatas0             64  [0:63]
    RD_O47        : out std_logic; --  rdatas0             64  [0:63]
    RD_O46        : out std_logic; --  rdatas0             64  [0:63]
    RD_O45        : out std_logic; --  rdatas0             64  [0:63]
    RD_O44        : out std_logic; --  rdatas0             64  [0:63]
    RD_O43        : out std_logic; --  rdatas0             64  [0:63]
    RD_O42        : out std_logic; --  rdatas0             64  [0:63]
    RD_O41        : out std_logic; --  rdatas0             64  [0:63]
    RD_O40        : out std_logic; --  rdatas0             64  [0:63]
    RD_O39        : out std_logic; --  rdatas0             64  [0:63]
    RD_O38        : out std_logic; --  rdatas0             64  [0:63]
    RD_O37        : out std_logic; --  rdatas0             64  [0:63]
    RD_O36        : out std_logic; --  rdatas0             64  [0:63]
    RD_O35        : out std_logic; --  rdatas0             64  [0:63]
    RD_O34        : out std_logic; --  rdatas0             64  [0:63]
    RD_O33        : out std_logic; --  rdatas0             64  [0:63]
    RD_O32        : out std_logic; --  rdatas0             64  [0:63]
    RD_O31        : out std_logic; --  rdatas0             64  [0:63]
    RD_O30        : out std_logic; --  rdatas0             64  [0:63]
    RD_O29        : out std_logic; --  rdatas0             64  [0:63]
    RD_O28        : out std_logic; --  rdatas0             64  [0:63]
    RD_O27        : out std_logic; --  rdatas0             64  [0:63]
    RD_O26        : out std_logic; --  rdatas0             64  [0:63]
    RD_O25        : out std_logic; --  rdatas0             64  [0:63]
    RD_O24        : out std_logic; --  rdatas0             64  [0:63]
    RD_O23        : out std_logic; --  rdatas0             64  [0:63]
    RD_O22        : out std_logic; --  rdatas0             64  [0:63]
    RD_O21        : out std_logic; --  rdatas0             64  [0:63]
    RD_O20        : out std_logic; --  rdatas0             64  [0:63]
    RD_O19        : out std_logic; --  rdatas0             64  [0:63]
    RD_O18        : out std_logic; --  rdatas0             64  [0:63]
    RD_O17        : out std_logic; --  rdatas0             64  [0:63]
    RD_O16        : out std_logic; --  rdatas0             64  [0:63]
    RD_O15        : out std_logic; --  rdatas0             64  [0:63]
    RD_O14        : out std_logic; --  rdatas0             64  [0:63]
    RD_O13        : out std_logic; --  rdatas0             64  [0:63]
    RD_O12        : out std_logic; --  rdatas0             64  [0:63]
    RD_O11        : out std_logic; --  rdatas0             64  [0:63]
    RD_O10        : out std_logic; --  rdatas0             64  [0:63]
    RD_O9         : out std_logic; --  rdatas0             64  [0:63]
    RD_O8         : out std_logic; --  rdatas0             64  [0:63]
    RD_O7         : out std_logic; --  rdatas0             64  [0:63]
    RD_O6         : out std_logic; --  rdatas0             64  [0:63]
    RD_O5         : out std_logic; --  rdatas0             64  [0:63]
    RD_O4         : out std_logic; --  rdatas0             64  [0:63]
    RD_O3         : out std_logic; --  rdatas0             64  [0:63]
    RD_O2         : out std_logic; --  rdatas0             64  [0:63]
    RD_O1         : out std_logic; --  rdatas0             64  [0:63]

--    RDY_O3        : out std_logic; --  ready               3   [0:2]
--    RDY_O2        : out std_logic; --  ready               3   [0:2]
--    RDY_O1        : out std_logic; --  ready               3   [0:2]

    R_IDS_O8      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O7      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O6      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O5      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O4      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O3      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O2      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O1      : out std_logic; --  rids0               8   [0:7]

    R_LST_O       : out std_logic; --  rlasts0             1
    R_RDYM_O      : out std_logic; --  rreadym0            1
    R_RDYP_O      : out std_logic; --  rreadyp0            1

    R_RSP_O2      : out std_logic; --  rresps0             2   [0:1]
    R_RSP_O1      : out std_logic; --  rresps0             2   [0:1]

    R_VD_O        : out std_logic; --  rvalids0            1
--    SCAN_E_O      : out std_logic; --  scan_en             1
--    SHF_DR_O      : out std_logic; --  shift_dr            1
--    SHOUT_O       : out std_logic; --  shout               1
    SWDO_O        : out std_logic; --  swdo                1
    SWDO_E_O      : out std_logic; --  swdoen              1
    TDO_O         : out std_logic; --  tdo                 1
--    TEST_E_O      : out std_logic; --  test_en             1
    T_CK_O        : out std_logic; --  traceclk            1
    T_CTL_O       : out std_logic; --  tracectl            1

    T_DATA_O32    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O31    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O30    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O29    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O28    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O27    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O26    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O25    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O24    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O23    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O22    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O21    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O20    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O19    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O18    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O17    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O16    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O15    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O14    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O13    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O12    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O11    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O10    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O9     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O8     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O7     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O6     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O5     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O4     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O3     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O2     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O1     : out std_logic; --  tracedata           32  [0:31]

--    UPD_DR_O      : out std_logic; --  update_dr           1

    W_DM_O64      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O63      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O62      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O61      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O60      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O59      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O58      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O57      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O56      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O55      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O54      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O53      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O52      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O51      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O50      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O49      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O48      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O47      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O46      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O45      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O44      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O43      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O42      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O41      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O40      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O39      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O38      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O37      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O36      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O35      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O34      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O33      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O32      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O31      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O30      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O29      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O28      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O27      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O26      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O25      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O24      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O23      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O22      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O21      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O20      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O19      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O18      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O17      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O16      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O15      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O14      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O13      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O12      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O11      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O10      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O9       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O8       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O7       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O6       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O5       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O4       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O3       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O2       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O1       : out std_logic; --  wdatam0             64  [0:63]

    W_DP_O32      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O31      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O30      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O29      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O28      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O27      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O26      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O25      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O24      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O23      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O22      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O21      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O20      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O19      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O18      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O17      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O16      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O15      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O14      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O13      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O12      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O11      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O10      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O9       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O8       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O7       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O6       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O5       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O4       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O3       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O2       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O1       : out std_logic; --  wdatap0             32  [0:31]

    W_IDM_O4      : out std_logic; --  widm0               4   [0:3]
    W_IDM_O3      : out std_logic; --  widm0               4   [0:3]
    W_IDM_O2      : out std_logic; --  widm0               4   [0:3]
    W_IDM_O1      : out std_logic; --  widm0               4   [0:3]

    W_IDP_O4      : out std_logic; --  widp0               4   [0:3]
    W_IDP_O3      : out std_logic; --  widp0               4   [0:3]
    W_IDP_O2      : out std_logic; --  widp0               4   [0:3]
    W_IDP_O1      : out std_logic; --  widp0               4   [0:3]

    W_LSTM_O      : out std_logic; --  wlastm0             1
    W_LSTP_O      : out std_logic; --  wlastp0             1
    W_RDY_O       : out std_logic; --  wreadys0            1

    W_SBM_O8      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O7      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O6      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O5      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O4      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O3      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O2      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O1      : out std_logic; --  wstrbm0             8   [0:7]

    W_SBP_O4      : out std_logic; --  wstrbp0             4   [0:3]
    W_SBP_O3      : out std_logic; --  wstrbp0             4   [0:3]
    W_SBP_O2      : out std_logic; --  wstrbp0             4   [0:3]
    W_SBP_O1      : out std_logic; --  wstrbp0             4   [0:3]

    W_VDM_O       : out std_logic; --  wvalidm0            1
    W_VDP_O       : out std_logic  --  wvalidp0            1
);
end NX_R5_L;

architecture NX_RTL of NX_R5_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_R5_L";
begin
end NX_RTL;

-- =================================================================================================
--   NX_R5_L_WRAP definition                                                            2019/04/09
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_R5_L_WRAP is
port (
            ------------------------------------------------------------------------
            -- CORTEXR5 PRIMARY INPUTS AND OUTPUTS
            ------------------------------------------------------------------------  
            ------------------------------------------------------------------------
            -- Global
            ------------------------------------------------------------------------
            CLKIN                  : in std_logic;
            nRESET0                : in std_logic;
            nSYSPORESET            : in std_logic;
            nCPUHALT0              : in std_logic;
            DBGNOCLKSTOP           : in std_logic;
            nCLKSTOPPED0           : out std_logic;
            nWFEPIPESTOPPED0       : out std_logic;
            nWFIPIPESTOPPED0       : out std_logic;
            EVENTI0                : in std_logic;
            EVENTO0                : out std_logic;
            ------------------------------------------------------------------------
            -- Configuration signals
            ------------------------------------------------------------------------
            VINITHI0               : in std_logic;        
            CFGEE                  : in std_logic;        
            CFGIE                  : in std_logic;        
            INITRAMA0              : in std_logic;        
            LOCZRAMA0              : in std_logic;        
            TEINIT                 : in std_logic;        
            CFGNMFI0               : in std_logic;        
            PARECCENRAM0           : in std_logic;        
            PARITYLEVEL            : in std_logic;        
            ERRENRAM0              : in std_logic;        
            GROUPID                : in std_logic_vector(3 downto 0);        
            INITPPX0               : in std_logic;        
            PPXBASE0               : in std_logic_vector(19 downto 0);        
            PPXSIZE0               : in std_logic_vector(4 downto 0);        
            PPVBASE0               : in std_logic_vector(19 downto 0);        
            PPVSIZE0               : in std_logic_vector(4 downto 0);        
            ------------------------------------------------------------------------
            -- Interrupt signals
            ------------------------------------------------------------------------
            nFIQ0          : in std_logic;        
            nIRQ0          : in std_logic;        
            nPMUIRQ0       : out std_logic;        
            ------------------------------------------------------------------------
            -- L2 interface signals - AXI Master Port
            ------------------------------------------------------------------------
            ACLKENM0       : in std_logic;       
            -- Write Address Channel
            AWADDRM0       : out std_logic_vector(31 downto 0);        
            AWBURSTM0      : out std_logic_vector(1 downto 0);        
            AWCACHEM0      : out std_logic_vector(3 downto 0);        
            AWIDM0         : out std_logic_vector(3 downto 0);        
            AWLENM0        : out std_logic_vector(3 downto 0);        
            AWLOCKM0       : out std_logic_vector(1 downto 0);        
            AWPROTM0       : out std_logic_vector(2 downto 0);        
            AWREADYM0      : in std_logic;        
            AWSIZEM0       : out std_logic_vector(2 downto 0);       
            AWINNERM0      : out std_logic_vector(3 downto 0);       
            AWSHAREM0      : out std_logic;       
            AWVALIDM0      : out std_logic;       
            -- Write Data Channel
            WDATAM0        : out std_logic_vector(63 downto 0);       
            WIDM0          : out std_logic_vector(3 downto 0);       
            WLASTM0        : out std_logic;       
            WREADYM0       : in std_logic;       
            WSTRBM0        : out std_logic_vector(7 downto 0);       
            WVALIDM0       : out std_logic;       
            -- Write response channel
            BIDM0           : in std_logic_vector(3 downto 0);       
            BREADYM0        : out std_logic;       
            BRESPM0         : in std_logic_vector(1 downto 0);       
            BVALIDM0        : in std_logic;       
            -- Read Address Channel
            ARADDRM0    : out std_logic_vector(31 downto 0);          
            ARBURSTM0   : out std_logic_vector(1 downto 0);          
            ARCACHEM0   : out std_logic_vector(3 downto 0);          
            ARIDM0      : out std_logic_vector(3 downto 0);          
            ARLENM0     : out std_logic_vector(3 downto 0);          
            ARLOCKM0    : out std_logic_vector(1 downto 0);          
            ARPROTM0    : out std_logic_vector(2 downto 0);          
            ARREADYM0   : in std_logic;          
            ARSIZEM0    : out std_logic_vector(2 downto 0);           
            ARINNERM0   : out std_logic_vector(3 downto 0);           
            ARSHAREM0   : out std_logic;           
            ARVALIDM0   : out std_logic;           
            -- Read Data Channel
            RDATAM0     : in std_logic_vector(63 downto 0);           
            RIDM0       : in std_logic_vector(3 downto 0);           
            RLASTM0     : in std_logic;           
            RREADYM0    : out std_logic;           
            RRESPM0     : in std_logic_vector(1 downto 0);           
            RVALIDM0    : in std_logic;           
            ------------------------------------------------------------------------
            -- L2 interface signals - AXI Slave Port
            ------------------------------------------------------------------------
            ACLKENS0    : in std_logic;           
            -- Write Address Channel
            AWADDRS0    : in std_logic_vector(31 downto 0);           
            AWBURSTS0   : in std_logic_vector(1 downto 0);           
            AWCACHES0   : in std_logic_vector(3 downto 0);           

            AWIDS0      : in std_logic_vector(7 downto 0);           
            AWLENS0     : in std_logic_vector(3 downto 0);           
            AWLOCKS0    : in std_logic_vector(1 downto 0);           
            AWPROTS0    : in std_logic_vector(2 downto 0);           
            AWREADYS0   : out std_logic;          
            AWSIZES0    : in std_logic_vector(2 downto 0);           
            AWVALIDS0   : in std_logic;           
            -- Write Data Channel
            WDATAS0     : in std_logic_vector(63 downto 0);           
            WIDS0       : in std_logic_vector(7 downto 0);           
            WLASTS0     : in std_logic;           
            WREADYS0    : out std_logic;           
            WSTRBS0     : in std_logic_vector(7 downto 0);          
            WVALIDS0    : in std_logic;           
            -- Write response channel
            BIDS0       : out std_logic_vector(7 downto 0);           
            BREADYS0    : in std_logic;           
            BRESPS0     : out std_logic_vector(1 downto 0);           
            BVALIDS0    : out std_logic;           
            -- Read Address Channel
            ARADDRS0    : in std_logic_vector(31 downto 0);           
            ARBURSTS0   : in std_logic_vector(1 downto 0);           
            ARCACHES0   : in std_logic_vector(3 downto 0);           
            ARIDS0      : in std_logic_vector(7 downto 0);           
            ARLENS0     : in std_logic_vector(3 downto 0);           
            ARLOCKS0    : in std_logic_vector(1 downto 0);           
            ARPROTS0    : in std_logic_vector(2 downto 0);           
            ARREADYS0   : out std_logic;           
            ARSIZES0    : in std_logic_vector(2 downto 0);           

            ARVALIDS0   : in std_logic;           
            -- Read Data Channel
            RDATAS0     : out std_logic_vector(63 downto 0);           
            RIDS0       : out std_logic_vector(7 downto 0);           
            RLASTS0     : out std_logic;           
            RREADYS0    : in std_logic;           
            RRESPS0     : out std_logic_vector(1 downto 0);           
            RVALIDS0    : out std_logic;           
            ------------------------------------------------------------------------
            -- L2 interface signals - AXI Peripheral Port
            ------------------------------------------------------------------------
            ACLKENP0     : in std_logic;          
            -- Write Address Channel
            AWIDP0       : out std_logic_vector(3 downto 0);          
            AWADDRP0     : out std_logic_vector(31 downto 0);          
            AWLENP0      : out std_logic_vector(3 downto 0);          
            AWSIZEP0     : out std_logic_vector(2 downto 0);          
            AWBURSTP0    : out std_logic_vector(1 downto 0);          
            AWLOCKP0     : out std_logic_vector(1 downto 0);          
            AWCACHEP0    : out std_logic_vector(3 downto 0);          
            AWPROTP0     : out std_logic_vector(2 downto 0);          
            AWVALIDP0    : out std_logic;          
            AWREADYP0    : in std_logic;          
            -- Write Data Channel
            WIDP0        : out std_logic_vector(3 downto 0);          
            WDATAP0      : out std_logic_vector(31 downto 0);          
            WSTRBP0      : out std_logic_vector(3 downto 0);          
            WLASTP0      : out std_logic;          
            WVALIDP0     : out std_logic;          
            WREADYP0     : in std_logic;          
            -- Write response channel
            BIDP0        : in std_logic_vector(3 downto 0);          
            BRESPP0      : in std_logic_vector(1 downto 0);          
            BVALIDP0     : in std_logic;          
            BREADYP0     : out std_logic;          
            -- Read Address Channel
            ARIDP0       : out std_logic_vector (3 downto 0);          
            ARADDRP0     : out std_logic_vector (31 downto 0);          
            ARLENP0      : out std_logic_vector (3 downto 0);          
            ARSIZEP0     : out std_logic_vector (2 downto 0);          
            ARBURSTP0    : out std_logic_vector (1 downto 0);          
            ARLOCKP0     : out std_logic_vector (1 downto 0);          
            ARCACHEP0    : out std_logic_vector (3 downto 0);          
            ARPROTP0     : out std_logic_vector (2 downto 0);          
            ARVALIDP0    : out std_logic;          
            ARREADYP0    : in std_logic;          
            -- Reainata Channel
            RIDP0        : in std_logic_vector(3 downto 0);          
            RDATAP0      : in std_logic_vector(31 downto 0);          
            RRESPP0      : in std_logic_vector(1 downto 0);          
            RLASTP0      : in std_logic;          
            RVALIDP0     : in std_logic;          
            RREADYP0     : out std_logic;          
       
            -- Debug Miscellaneous
            DBGEN0       : in std_logic;          
            NIDEN0       : in std_logic;          
            EDBGRQ0      : in std_logic;          
            DBGACK0      : out std_logic;          
            DBGRSTREQ0   : out std_logic;          

            COMMRX0      : out std_logic;          
            COMMTX0      : out std_logic;          

            DBGNOPWRDWN    : out std_logic;        
            DBGROMADDR     : in std_logic_vector(19 downto 0);        
            DBGROMADDRV    : in std_logic;        
            DBGSELFADDR0   : in std_logic_vector(19 downto 0);        
            DBGSELFADDRV0  : in std_logic;        
            ------------------------------------------------------------------------
            -- ETM Interface
            ------------------------------------------------------------------------
            nETMPORESET    : in std_logic;        
            ETMASICCTL0    : out std_logic_vector(7 downto 0);        
            ETMEN0         : out std_logic;        
            ETMEXTOUT0     : out std_logic_vector(1 downto 0);        
            ------------------------------------------------------------------------
            -- Validation
            ------------------------------------------------------------------------
            nVALIRQ0        : out std_logic;       
            nVALFIQ0        : out std_logic;       
            nVALRESET0      : out std_logic;       
       
            ------------------------------------------------------------------------
            -- FPU
            ------------------------------------------------------------------------
           FPIXC0           : out std_logic;      
           FPOFC0           : out std_logic;      
           FPUFC0           : out std_logic;      
           FPIOC0           : out std_logic;      
           FPDZC0           : out std_logic;      
           FPIDC0           : out std_logic;      
            ------------------------------------------------------------------------
            -- Coresight TPIU-Lite
            ------------------------------------------------------------------------
            ------------------------------------------------------------------------
            -- ATB Port
            ------------------------------------------------------------------------
            ATRESETn   : in std_logic;            
            ------------------------------------------------------------------------
            -- Trace Out Port
            ------------------------------------------------------------------------
            TRACECLK     : out std_logic;          
            TRACEDATA    : out std_logic_vector(31 downto 0);          
            TRACECTL     : out std_logic;          
            ------------------------------------------------------------------------
            -- Coresight DAP-Lite
            ------------------------------------------------------------------------
            ------------------------------------------------------------------------
            -- CoreSight DAP Ports
            ------------------------------------------------------------------------    
            PCLKSYS           : in std_logic;     
            PCLKENSYS         : in std_logic;     
            PRESETSYSn        : in std_logic;     
            PADDRSYS          : in std_logic_vector(28 downto 0);     
            PENABLESYS        : in std_logic;     
            PRDATASYS         : out std_logic_vector(31 downto 0);     
            PREADYSYS         : out std_logic;     
            PSELSYS           : in std_logic;     
            PSLVERRSYS        : out std_logic;     
            PWDATASYS         : in std_logic_vector(31 downto 0);     
            PWRITESYS         : in std_logic;     
       
            CDBGPWRUPACK       : in std_logic;    
            CDBGPWRUPREQ       : out std_logic;    
            CDBGRSTACK         : in std_logic;    
            CDBGRSTREQ         : out std_logic;    
            CSYSPWRUPACK       : in std_logic;    
            CSYSPWRUPREQ       : out std_logic;    
            DEVICEEN           : in std_logic;    
            JTAGNSW            : out std_logic;    
            nPOTRST            : in std_logic;    
            nTDOEN             : out std_logic;    
            nTRST              : in std_logic;    
            SWCLKTCK           : in std_logic;    
            SWDITMS            : in std_logic;    
            SWDO               : out std_logic;    
            SWDOEN             : out std_logic;    
            TDI                : in std_logic;    
            TDO                : out std_logic    

);
end NX_R5_L_WRAP;

architecture NX_RTL of NX_R5_L_WRAP is
begin

    inst_NX_R : NX_R5_L
    port map (
	-- Inputs
	  A_CKEM_I      =>  ACLKENM0
	, A_CKEP_I      =>  ACLKENP0
	, A_CKES_I      =>  ACLKENS0

	, AR_A_I32      =>  ARADDRS0(31)
	, AR_A_I31      =>  ARADDRS0(30)
	, AR_A_I30      =>  ARADDRS0(29)
	, AR_A_I29      =>  ARADDRS0(28)
	, AR_A_I28      =>  ARADDRS0(27)
	, AR_A_I27      =>  ARADDRS0(26)
	, AR_A_I26      =>  ARADDRS0(25)
	, AR_A_I25      =>  ARADDRS0(24)
	, AR_A_I24      =>  ARADDRS0(23)
	, AR_A_I23      =>  ARADDRS0(22)
	, AR_A_I22      =>  ARADDRS0(21)
	, AR_A_I21      =>  ARADDRS0(20)
	, AR_A_I20      =>  ARADDRS0(19)
	, AR_A_I19      =>  ARADDRS0(18)
	, AR_A_I18      =>  ARADDRS0(17)
	, AR_A_I17      =>  ARADDRS0(16)
	, AR_A_I16      =>  ARADDRS0(15)
	, AR_A_I15      =>  ARADDRS0(14)
	, AR_A_I14      =>  ARADDRS0(13)
	, AR_A_I13      =>  ARADDRS0(12)
	, AR_A_I12      =>  ARADDRS0(11)
	, AR_A_I11      =>  ARADDRS0(10)
	, AR_A_I10      =>  ARADDRS0(9)
	, AR_A_I9       =>  ARADDRS0(8)
	, AR_A_I8       =>  ARADDRS0(7)
	, AR_A_I7       =>  ARADDRS0(6)
	, AR_A_I6       =>  ARADDRS0(5)
	, AR_A_I5       =>  ARADDRS0(4)
	, AR_A_I4       =>  ARADDRS0(3)
	, AR_A_I3       =>  ARADDRS0(2)
	, AR_A_I2       =>  ARADDRS0(1)
	, AR_A_I1       =>  ARADDRS0(0)

	, AR_BU_I2      =>  ARBURSTS0(1)
	, AR_BU_I1      =>  ARBURSTS0(0)

	, AR_CH_I4      =>  ARCACHES0(3)
	, AR_CH_I3      =>  ARCACHES0(2)
	, AR_CH_I2      =>  ARCACHES0(1)
	, AR_CH_I1      =>  ARCACHES0(0)

	, AR_IDS_I8     =>  ARIDS0(7)
	, AR_IDS_I7     =>  ARIDS0(6)
	, AR_IDS_I6     =>  ARIDS0(5)
	, AR_IDS_I5     =>  ARIDS0(4)
	, AR_IDS_I4     =>  ARIDS0(3)
	, AR_IDS_I3     =>  ARIDS0(2)
	, AR_IDS_I2     =>  ARIDS0(1)
	, AR_IDS_I1     =>  ARIDS0(0)

	, AR_LE_I4      =>  ARLENS0(3)
	, AR_LE_I3      =>  ARLENS0(2)
	, AR_LE_I2      =>  ARLENS0(1)
	, AR_LE_I1      =>  ARLENS0(0)

	, AR_LK_I2      =>  ARLOCKS0(1)
	, AR_LK_I1      =>  ARLOCKS0(0)

	, AR_PR_I3      =>  ARPROTS0(2)
	, AR_PR_I2      =>  ARPROTS0(1)
	, AR_PR_I1      =>  ARPROTS0(0)

	, AR_RYM_I      =>  ARREADYM0
	, AR_RYP_I      =>  ARREADYP0

	, AR_SZ_I3      =>  ARSIZES0(2)
	, AR_SZ_I2      =>  ARSIZES0(1)
	, AR_SZ_I1      =>  ARSIZES0(0)

	, AR_VD_I       =>  ARVALIDS0
	, AT_RS_I       =>  ATRESETn

	, AW_A_I32      =>  AWADDRS0(31)
	, AW_A_I31      =>  AWADDRS0(30)
	, AW_A_I30      =>  AWADDRS0(29)
	, AW_A_I29      =>  AWADDRS0(28)
	, AW_A_I28      =>  AWADDRS0(27)
	, AW_A_I27      =>  AWADDRS0(26)
	, AW_A_I26      =>  AWADDRS0(25)
	, AW_A_I25      =>  AWADDRS0(24)
	, AW_A_I24      =>  AWADDRS0(23)
	, AW_A_I23      =>  AWADDRS0(22)
	, AW_A_I22      =>  AWADDRS0(21)
	, AW_A_I21      =>  AWADDRS0(20)
	, AW_A_I20      =>  AWADDRS0(19)
	, AW_A_I19      =>  AWADDRS0(18)
	, AW_A_I18      =>  AWADDRS0(17)
	, AW_A_I17      =>  AWADDRS0(16)
	, AW_A_I16      =>  AWADDRS0(15)
	, AW_A_I15      =>  AWADDRS0(14)
	, AW_A_I14      =>  AWADDRS0(13)
	, AW_A_I13      =>  AWADDRS0(12)
	, AW_A_I12      =>  AWADDRS0(11)
	, AW_A_I11      =>  AWADDRS0(10)
	, AW_A_I10      =>  AWADDRS0(9)
	, AW_A_I9       =>  AWADDRS0(8)
	, AW_A_I8       =>  AWADDRS0(7)
	, AW_A_I7       =>  AWADDRS0(6)
	, AW_A_I6       =>  AWADDRS0(5)
	, AW_A_I5       =>  AWADDRS0(4)
	, AW_A_I4       =>  AWADDRS0(3)
	, AW_A_I3       =>  AWADDRS0(2)
	, AW_A_I2       =>  AWADDRS0(1)
	, AW_A_I1       =>  AWADDRS0(0)

	, AW_BU_I2      =>  AWBURSTS0(1)
	, AW_BU_I1      =>  AWBURSTS0(0)

	, AW_CH_I4      =>  AWCACHES0(3)
	, AW_CH_I3      =>  AWCACHES0(2)
	, AW_CH_I2      =>  AWCACHES0(1)
	, AW_CH_I1      =>  AWCACHES0(0)

	, AW_IDS_I8     =>  AWIDS0(7)
	, AW_IDS_I7     =>  AWIDS0(6)
	, AW_IDS_I6     =>  AWIDS0(5)
	, AW_IDS_I5     =>  AWIDS0(4)
	, AW_IDS_I4     =>  AWIDS0(3)
	, AW_IDS_I3     =>  AWIDS0(2)
	, AW_IDS_I2     =>  AWIDS0(1)
	, AW_IDS_I1     =>  AWIDS0(0)

	, AW_LE_I4      =>  AWLENS0(3)
	, AW_LE_I3      =>  AWLENS0(2)
	, AW_LE_I2      =>  AWLENS0(1)
	, AW_LE_I1      =>  AWLENS0(0)

	, AW_LK_I2      =>  AWLOCKS0(1)
	, AW_LK_I1      =>  AWLOCKS0(0)

	, AW_PR_I3      =>  AWPROTS0(2)
	, AW_PR_I2      =>  AWPROTS0(1)
	, AW_PR_I1      =>  AWPROTS0(0)

	, AW_RYM_I      =>  AWREADYM0
	, AW_RYP_I      =>  AWREADYP0

	, AW_SZ_I3      =>  AWSIZES0(2)
	, AW_SZ_I2      =>  AWSIZES0(1)
	, AW_SZ_I1      =>  AWSIZES0(0)

	, AW_VD_I       =>  AWVALIDS0

	, B_IDM_I4      =>  BIDM0(3)
	, B_IDM_I3      =>  BIDM0(2)
	, B_IDM_I2      =>  BIDM0(1)
	, B_IDM_I1      =>  BIDM0(0)

	, B_IDP_I4      =>  BIDP0(3)
	, B_IDP_I3      =>  BIDP0(2)
	, B_IDP_I2      =>  BIDP0(1)
	, B_IDP_I1      =>  BIDP0(0)

	, B_RDY_I       =>  BREADYS0

	, B_RSPM_I2     =>  BRESPM0(1)
	, B_RSPM_I1     =>  BRESPM0(0)

	, B_RSPP_I2     =>  BRESPP0(1)
	, B_RSPP_I1     =>  BRESPP0(0)

	, B_VDM_I       =>  BVALIDM0
	, B_VDP_I       =>  BVALIDP0

--	, CAL_I5        =>  CAL_I(4)
--	, CAL_I4        =>  CAL_I(3)
--	, CAL_I3        =>  CAL_I(2)
--	, CAL_I2        =>  CAL_I(1)
--	, CAL_I1        =>  CAL_I(0)

	, CDB_PW_I      =>  CDBGPWRUPACK
	, CDB_RS_I      =>  CDBGRSTACK
	, CFG_EE_I      =>  CFGEE
	, CFG_IE_I      =>  CFGIE
	, CFG_NM_I      =>  CFGNMFI0
	, CK_I          =>  CLKIN
--	, CK_DR_I       =>  CK_DR_I
	, CS_PW_I       =>  CSYSPWRUPACK
	, DB_E_I        =>  DBGEN0
	, DB_NCK_I      =>  DBGNOCLKSTOP

	, DB_RA_I20     =>  DBGROMADDR(19)
	, DB_RA_I19     =>  DBGROMADDR(18)
	, DB_RA_I18     =>  DBGROMADDR(17)
	, DB_RA_I17     =>  DBGROMADDR(16)
	, DB_RA_I16     =>  DBGROMADDR(15)
	, DB_RA_I15     =>  DBGROMADDR(14)
	, DB_RA_I14     =>  DBGROMADDR(13)
	, DB_RA_I13     =>  DBGROMADDR(12)
	, DB_RA_I12     =>  DBGROMADDR(11)
	, DB_RA_I11     =>  DBGROMADDR(10)
	, DB_RA_I10     =>  DBGROMADDR(9)
	, DB_RA_I9      =>  DBGROMADDR(8)
	, DB_RA_I8      =>  DBGROMADDR(7)
	, DB_RA_I7      =>  DBGROMADDR(6)
	, DB_RA_I6      =>  DBGROMADDR(5)
	, DB_RA_I5      =>  DBGROMADDR(4)
	, DB_RA_I4      =>  DBGROMADDR(3)
	, DB_RA_I3      =>  DBGROMADDR(2)
	, DB_RA_I2      =>  DBGROMADDR(1)
	, DB_RA_I1      =>  DBGROMADDR(0)

	, DB_RAV_I      =>  DBGROMADDRV

	, DB_SA_I20     =>  DBGSELFADDR0(19)
	, DB_SA_I19     =>  DBGSELFADDR0(18)
	, DB_SA_I18     =>  DBGSELFADDR0(17)
	, DB_SA_I17     =>  DBGSELFADDR0(16)
	, DB_SA_I16     =>  DBGSELFADDR0(15)
	, DB_SA_I15     =>  DBGSELFADDR0(14)
	, DB_SA_I14     =>  DBGSELFADDR0(13)
	, DB_SA_I13     =>  DBGSELFADDR0(12)
	, DB_SA_I12     =>  DBGSELFADDR0(11)
	, DB_SA_I11     =>  DBGSELFADDR0(10)
	, DB_SA_I10     =>  DBGSELFADDR0(9)
	, DB_SA_I9      =>  DBGSELFADDR0(8)
	, DB_SA_I8      =>  DBGSELFADDR0(7)
	, DB_SA_I7      =>  DBGSELFADDR0(6)
	, DB_SA_I6      =>  DBGSELFADDR0(5)
	, DB_SA_I5      =>  DBGSELFADDR0(4)
	, DB_SA_I4      =>  DBGSELFADDR0(3)
	, DB_SA_I3      =>  DBGSELFADDR0(2)
	, DB_SA_I2      =>  DBGSELFADDR0(1)
	, DB_SA_I1      =>  DBGSELFADDR0(0)

	, DB_SAV_I      =>  DBGSELFADDRV0
	, DEV_E_I       =>  DEVICEEN

	, DFTS_I8       => '0' 
	, DFTS_I7       => '0' 
	, DFTS_I6       => '0' 
	, DFTS_I5       => '0' 
	, DFTS_I4       => '0' 
	, DFTS_I3       => '0' 
	, DFTS_I2       => '0' 
	, DFTS_I1       => '0' 

	, E_DB_I        =>  EDBGRQ0
	, ERR_R_I       =>  ERRENRAM0
	, EVENT_I       =>  EVENTI0

	, GID_I4        =>  GROUPID(3)
	, GID_I3        =>  GROUPID(2)
	, GID_I2        =>  GROUPID(1)
	, GID_I1        =>  GROUPID(0)

	, INIT_P_I      =>  INITPPX0
	, INIT_R_I      =>  INITRAMA0
	, LOC_R_I       =>  LOCZRAMA0
--	, LBK_E_I       =>  LBK_E_I
--	, LBK_MX_I      =>  LBK_MX_I

--	, MODE1_I3      =>  MODE1_I(2)
--	, MODE1_I2      =>  MODE1_I(1)
--	, MODE1_I1      =>  MODE1_I(0)

--	, MODE2_I3      =>  MODE2_I(2)
--	, MODE2_I2      =>  MODE2_I(1)
--	, MODE2_I1      =>  MODE2_I(0)

--	, MODE3_I3      =>  MODE3_I(2)
--	, MODE3_I2      =>  MODE3_I(1)
--	, MODE3_I1      =>  MODE3_I(0)

	, NCPUH_I       =>  nCPUHALT0
	, NET_RS_I      =>  nETMPORESET
	, N_FIQ_I       =>  nFIQ0
	, N_IDE_I       =>  NIDEN0
	, N_IRQ_I       =>  nIRQ0
	, N_PRS_I       =>  nPOTRST
	, N_RS_I        =>  nRESET0
	, N_SPRS_I      =>  nSYSPORESET
	, N_TRS_I       =>  nTRST

	, P_A_I29       =>  PADDRSYS(28)
	, P_A_I28       =>  PADDRSYS(27)
	, P_A_I27       =>  PADDRSYS(26)
	, P_A_I26       =>  PADDRSYS(25)
	, P_A_I25       =>  PADDRSYS(24)
	, P_A_I24       =>  PADDRSYS(23)
	, P_A_I23       =>  PADDRSYS(22)
	, P_A_I22       =>  PADDRSYS(21)
	, P_A_I21       =>  PADDRSYS(20)
	, P_A_I20       =>  PADDRSYS(19)
	, P_A_I19       =>  PADDRSYS(18)
	, P_A_I18       =>  PADDRSYS(17)
	, P_A_I17       =>  PADDRSYS(16)
	, P_A_I16       =>  PADDRSYS(15)
	, P_A_I15       =>  PADDRSYS(14)
	, P_A_I14       =>  PADDRSYS(13)
	, P_A_I13       =>  PADDRSYS(12)
	, P_A_I12       =>  PADDRSYS(11)
	, P_A_I11       =>  PADDRSYS(10)
	, P_A_I10       =>  PADDRSYS(9)
	, P_A_I9        =>  PADDRSYS(8)
	, P_A_I8        =>  PADDRSYS(7)
	, P_A_I7        =>  PADDRSYS(6)
	, P_A_I6        =>  PADDRSYS(5)
	, P_A_I5        =>  PADDRSYS(4)
	, P_A_I4        =>  PADDRSYS(3)
	, P_A_I3        =>  PADDRSYS(2)
	, P_A_I2        =>  PADDRSYS(1)
	, P_A_I1        =>  PADDRSYS(0)

	, P_ECC_I       =>  PARECCENRAM0
	, PLVL_I        =>  PARITYLEVEL
	, P_CK_E_I      =>  PCLKENSYS
	, P_CK_I        =>  PCLKSYS
	, P_E_I         =>  PENABLESYS

	, PPV_BS_I20    =>  PPVBASE0(19)
	, PPV_BS_I19    =>  PPVBASE0(18)
	, PPV_BS_I18    =>  PPVBASE0(17)
	, PPV_BS_I17    =>  PPVBASE0(16)
	, PPV_BS_I16    =>  PPVBASE0(15)
	, PPV_BS_I15    =>  PPVBASE0(14)
	, PPV_BS_I14    =>  PPVBASE0(13)
	, PPV_BS_I13    =>  PPVBASE0(12)
	, PPV_BS_I12    =>  PPVBASE0(11)
	, PPV_BS_I11    =>  PPVBASE0(10)
	, PPV_BS_I10    =>  PPVBASE0(9)
	, PPV_BS_I9     =>  PPVBASE0(8)
	, PPV_BS_I8     =>  PPVBASE0(7)
	, PPV_BS_I7     =>  PPVBASE0(6)
	, PPV_BS_I6     =>  PPVBASE0(5)
	, PPV_BS_I5     =>  PPVBASE0(4)
	, PPV_BS_I4     =>  PPVBASE0(3)
	, PPV_BS_I3     =>  PPVBASE0(2)
	, PPV_BS_I2     =>  PPVBASE0(1)
	, PPV_BS_I1     =>  PPVBASE0(0)

	, PPV_SZ_I5     =>  PPVSIZE0(4)
	, PPV_SZ_I4     =>  PPVSIZE0(3)
	, PPV_SZ_I3     =>  PPVSIZE0(2)
	, PPV_SZ_I2     =>  PPVSIZE0(1)
	, PPV_SZ_I1     =>  PPVSIZE0(0)

	, PPX_BS_I20    =>  PPXBASE0(19)
	, PPX_BS_I19    =>  PPXBASE0(18)
	, PPX_BS_I18    =>  PPXBASE0(17)
	, PPX_BS_I17    =>  PPXBASE0(16)
	, PPX_BS_I16    =>  PPXBASE0(15)
	, PPX_BS_I15    =>  PPXBASE0(14)
	, PPX_BS_I14    =>  PPXBASE0(13)
	, PPX_BS_I13    =>  PPXBASE0(12)
	, PPX_BS_I12    =>  PPXBASE0(11)
	, PPX_BS_I11    =>  PPXBASE0(10)
	, PPX_BS_I10    =>  PPXBASE0(9)
	, PPX_BS_I9     =>  PPXBASE0(8)
	, PPX_BS_I8     =>  PPXBASE0(7)
	, PPX_BS_I7     =>  PPXBASE0(6)
	, PPX_BS_I6     =>  PPXBASE0(5)
	, PPX_BS_I5     =>  PPXBASE0(4)
	, PPX_BS_I4     =>  PPXBASE0(3)
	, PPX_BS_I3     =>  PPXBASE0(2)
	, PPX_BS_I2     =>  PPXBASE0(1)
	, PPX_BS_I1     =>  PPXBASE0(0)

	, PPX_SZ_I5     =>  PPXSIZE0(4)
	, PPX_SZ_I4     =>  PPXSIZE0(3)
	, PPX_SZ_I3     =>  PPXSIZE0(2)
	, PPX_SZ_I2     =>  PPXSIZE0(1)
	, PPX_SZ_I1     =>  PPXSIZE0(0)

	, P_RS_I        =>  PRESETSYSn
	, P_SEL_I       =>  PSELSYS

	, PW_D_I32      =>  PWDATASYS(31)
	, PW_D_I31      =>  PWDATASYS(30)
	, PW_D_I30      =>  PWDATASYS(29)
	, PW_D_I29      =>  PWDATASYS(28)
	, PW_D_I28      =>  PWDATASYS(27)
	, PW_D_I27      =>  PWDATASYS(26)
	, PW_D_I26      =>  PWDATASYS(25)
	, PW_D_I25      =>  PWDATASYS(24)
	, PW_D_I24      =>  PWDATASYS(23)
	, PW_D_I23      =>  PWDATASYS(22)
	, PW_D_I22      =>  PWDATASYS(21)
	, PW_D_I21      =>  PWDATASYS(20)
	, PW_D_I20      =>  PWDATASYS(19)
	, PW_D_I19      =>  PWDATASYS(18)
	, PW_D_I18      =>  PWDATASYS(17)
	, PW_D_I17      =>  PWDATASYS(16)
	, PW_D_I16      =>  PWDATASYS(15)
	, PW_D_I15      =>  PWDATASYS(14)
	, PW_D_I14      =>  PWDATASYS(13)
	, PW_D_I13      =>  PWDATASYS(12)
	, PW_D_I12      =>  PWDATASYS(11)
	, PW_D_I11      =>  PWDATASYS(10)
	, PW_D_I10      =>  PWDATASYS(9)
	, PW_D_I9       =>  PWDATASYS(8)
	, PW_D_I8       =>  PWDATASYS(7)
	, PW_D_I7       =>  PWDATASYS(6)
	, PW_D_I6       =>  PWDATASYS(5)
	, PW_D_I5       =>  PWDATASYS(4)
	, PW_D_I4       =>  PWDATASYS(3)
	, PW_D_I3       =>  PWDATASYS(2)
	, PW_D_I2       =>  PWDATASYS(1)
	, PW_D_I1       =>  PWDATASYS(0)

	, PW_I          =>  PWRITESYS

	, RAMCTL_I8     =>  '0'
	, RAMCTL_I7     =>  '0'
	, RAMCTL_I6     =>  '0'
	, RAMCTL_I5     =>  '0'
	, RAMCTL_I4     =>  '0'
	, RAMCTL_I3     =>  '0'
	, RAMCTL_I2     =>  '0'
	, RAMCTL_I1     =>  '0'

	, R_DM_I64      =>  RDATAM0(63)
	, R_DM_I63      =>  RDATAM0(62)
	, R_DM_I62      =>  RDATAM0(61)
	, R_DM_I61      =>  RDATAM0(60)
	, R_DM_I60      =>  RDATAM0(59)
	, R_DM_I59      =>  RDATAM0(58)
	, R_DM_I58      =>  RDATAM0(57)
	, R_DM_I57      =>  RDATAM0(56)
	, R_DM_I56      =>  RDATAM0(55)
	, R_DM_I55      =>  RDATAM0(54)
	, R_DM_I54      =>  RDATAM0(53)
	, R_DM_I53      =>  RDATAM0(52)
	, R_DM_I52      =>  RDATAM0(51)
	, R_DM_I51      =>  RDATAM0(50)
	, R_DM_I50      =>  RDATAM0(49)
	, R_DM_I49      =>  RDATAM0(48)
	, R_DM_I48      =>  RDATAM0(47)
	, R_DM_I47      =>  RDATAM0(46)
	, R_DM_I46      =>  RDATAM0(45)
	, R_DM_I45      =>  RDATAM0(44)
	, R_DM_I44      =>  RDATAM0(43)
	, R_DM_I43      =>  RDATAM0(42)
	, R_DM_I42      =>  RDATAM0(41)
	, R_DM_I41      =>  RDATAM0(40)
	, R_DM_I40      =>  RDATAM0(39)
	, R_DM_I39      =>  RDATAM0(38)
	, R_DM_I38      =>  RDATAM0(37)
	, R_DM_I37      =>  RDATAM0(36)
	, R_DM_I36      =>  RDATAM0(35)
	, R_DM_I35      =>  RDATAM0(34)
	, R_DM_I34      =>  RDATAM0(33)
	, R_DM_I33      =>  RDATAM0(32)
	, R_DM_I32      =>  RDATAM0(31)
	, R_DM_I31      =>  RDATAM0(30)
	, R_DM_I30      =>  RDATAM0(29)
	, R_DM_I29      =>  RDATAM0(28)
	, R_DM_I28      =>  RDATAM0(27)
	, R_DM_I27      =>  RDATAM0(26)
	, R_DM_I26      =>  RDATAM0(25)
	, R_DM_I25      =>  RDATAM0(24)
	, R_DM_I24      =>  RDATAM0(23)
	, R_DM_I23      =>  RDATAM0(22)
	, R_DM_I22      =>  RDATAM0(21)
	, R_DM_I21      =>  RDATAM0(20)
	, R_DM_I20      =>  RDATAM0(19)
	, R_DM_I19      =>  RDATAM0(18)
	, R_DM_I18      =>  RDATAM0(17)
	, R_DM_I17      =>  RDATAM0(16)
	, R_DM_I16      =>  RDATAM0(15)
	, R_DM_I15      =>  RDATAM0(14)
	, R_DM_I14      =>  RDATAM0(13)
	, R_DM_I13      =>  RDATAM0(12)
	, R_DM_I12      =>  RDATAM0(11)
	, R_DM_I11      =>  RDATAM0(10)
	, R_DM_I10      =>  RDATAM0(9)
	, R_DM_I9       =>  RDATAM0(8)
	, R_DM_I8       =>  RDATAM0(7)
	, R_DM_I7       =>  RDATAM0(6)
	, R_DM_I6       =>  RDATAM0(5)
	, R_DM_I5       =>  RDATAM0(4)
	, R_DM_I4       =>  RDATAM0(3)
	, R_DM_I3       =>  RDATAM0(2)
	, R_DM_I2       =>  RDATAM0(1)
	, R_DM_I1       =>  RDATAM0(0)

	, R_DP_I32      =>  RDATAP0(31)
	, R_DP_I31      =>  RDATAP0(30)
	, R_DP_I30      =>  RDATAP0(29)
	, R_DP_I29      =>  RDATAP0(28)
	, R_DP_I28      =>  RDATAP0(27)
	, R_DP_I27      =>  RDATAP0(26)
	, R_DP_I26      =>  RDATAP0(25)
	, R_DP_I25      =>  RDATAP0(24)
	, R_DP_I24      =>  RDATAP0(23)
	, R_DP_I23      =>  RDATAP0(22)
	, R_DP_I22      =>  RDATAP0(21)
	, R_DP_I21      =>  RDATAP0(20)
	, R_DP_I20      =>  RDATAP0(19)
	, R_DP_I19      =>  RDATAP0(18)
	, R_DP_I18      =>  RDATAP0(17)
	, R_DP_I17      =>  RDATAP0(16)
	, R_DP_I16      =>  RDATAP0(15)
	, R_DP_I15      =>  RDATAP0(14)
	, R_DP_I14      =>  RDATAP0(13)
	, R_DP_I13      =>  RDATAP0(12)
	, R_DP_I12      =>  RDATAP0(11)
	, R_DP_I11      =>  RDATAP0(10)
	, R_DP_I10      =>  RDATAP0(9)
	, R_DP_I9       =>  RDATAP0(8)
	, R_DP_I8       =>  RDATAP0(7)
	, R_DP_I7       =>  RDATAP0(6)
	, R_DP_I6       =>  RDATAP0(5)
	, R_DP_I5       =>  RDATAP0(4)
	, R_DP_I4       =>  RDATAP0(3)
	, R_DP_I3       =>  RDATAP0(2)
	, R_DP_I2       =>  RDATAP0(1)
	, R_DP_I1       =>  RDATAP0(0)

--	, RDY_I3        =>  RDY_I(2)
--	, RDY_I2        =>  RDY_I(1)
--	, RDY_I1        =>  RDY_I(0)

	, R_IDM_I4      =>  RIDM0(3)
	, R_IDM_I3      =>  RIDM0(2)
	, R_IDM_I2      =>  RIDM0(1)
	, R_IDM_I1      =>  RIDM0(0)

	, R_IDP_I4      =>  RIDP0(3)
	, R_IDP_I3      =>  RIDP0(2)
	, R_IDP_I2      =>  RIDP0(1)
	, R_IDP_I1      =>  RIDP0(0)

	, R_LSTM_I      =>  RLASTM0
	, R_LSTP_I      =>  RLASTP0
	, R_RDY_I       =>  RREADYS0

	, R_RSPM_I2     =>  RRESPM0(1)
	, R_RSPM_I1     =>  RRESPM0(0)

	, R_RSPP_I2     =>  RRESPP0(1)
	, R_RSPP_I1     =>  RRESPP0(0)

	, RS_BYP_I      =>  '0'
	, R_VDM_I       =>  RVALIDM0
	, R_VDP_I       =>  RVALIDP0
	, SE_I          =>  '0'
	, SW_CK_I       =>  SWCLKTCK
	, SW_DI_I       =>  SWDITMS
	, T_DI_I        =>  TDI
	, TE_INI_I      =>  TEINIT
	, VINI_I        =>  VINITHI0

	, W_D_I64       =>  WDATAS0(63)
	, W_D_I63       =>  WDATAS0(62)
	, W_D_I62       =>  WDATAS0(61)
	, W_D_I61       =>  WDATAS0(60)
	, W_D_I60       =>  WDATAS0(59)
	, W_D_I59       =>  WDATAS0(58)
	, W_D_I58       =>  WDATAS0(57)
	, W_D_I57       =>  WDATAS0(56)
	, W_D_I56       =>  WDATAS0(55)
	, W_D_I55       =>  WDATAS0(54)
	, W_D_I54       =>  WDATAS0(53)
	, W_D_I53       =>  WDATAS0(52)
	, W_D_I52       =>  WDATAS0(51)
	, W_D_I51       =>  WDATAS0(50)
	, W_D_I50       =>  WDATAS0(49)
	, W_D_I49       =>  WDATAS0(48)
	, W_D_I48       =>  WDATAS0(47)
	, W_D_I47       =>  WDATAS0(46)
	, W_D_I46       =>  WDATAS0(45)
	, W_D_I45       =>  WDATAS0(44)
	, W_D_I44       =>  WDATAS0(43)
	, W_D_I43       =>  WDATAS0(42)
	, W_D_I42       =>  WDATAS0(41)
	, W_D_I41       =>  WDATAS0(40)
	, W_D_I40       =>  WDATAS0(39)
	, W_D_I39       =>  WDATAS0(38)
	, W_D_I38       =>  WDATAS0(37)
	, W_D_I37       =>  WDATAS0(36)
	, W_D_I36       =>  WDATAS0(35)
	, W_D_I35       =>  WDATAS0(34)
	, W_D_I34       =>  WDATAS0(33)
	, W_D_I33       =>  WDATAS0(32)
	, W_D_I32       =>  WDATAS0(31)
	, W_D_I31       =>  WDATAS0(30)
	, W_D_I30       =>  WDATAS0(29)
	, W_D_I29       =>  WDATAS0(28)
	, W_D_I28       =>  WDATAS0(27)
	, W_D_I27       =>  WDATAS0(26)
	, W_D_I26       =>  WDATAS0(25)
	, W_D_I25       =>  WDATAS0(24)
	, W_D_I24       =>  WDATAS0(23)
	, W_D_I23       =>  WDATAS0(22)
	, W_D_I22       =>  WDATAS0(21)
	, W_D_I21       =>  WDATAS0(20)
	, W_D_I20       =>  WDATAS0(19)
	, W_D_I19       =>  WDATAS0(18)
	, W_D_I18       =>  WDATAS0(17)
	, W_D_I17       =>  WDATAS0(16)
	, W_D_I16       =>  WDATAS0(15)
	, W_D_I15       =>  WDATAS0(14)
	, W_D_I14       =>  WDATAS0(13)
	, W_D_I13       =>  WDATAS0(12)
	, W_D_I12       =>  WDATAS0(11)
	, W_D_I11       =>  WDATAS0(10)
	, W_D_I10       =>  WDATAS0(9)
	, W_D_I9        =>  WDATAS0(8)
	, W_D_I8        =>  WDATAS0(7)
	, W_D_I7        =>  WDATAS0(6)
	, W_D_I6        =>  WDATAS0(5)
	, W_D_I5        =>  WDATAS0(4)
	, W_D_I4        =>  WDATAS0(3)
	, W_D_I3        =>  WDATAS0(2)
	, W_D_I2        =>  WDATAS0(1)
	, W_D_I1        =>  WDATAS0(0)

	, W_IDS_I8      =>  WIDS0(7)
	, W_IDS_I7      =>  WIDS0(6)
	, W_IDS_I6      =>  WIDS0(5)
	, W_IDS_I5      =>  WIDS0(4)
	, W_IDS_I4      =>  WIDS0(3)
	, W_IDS_I3      =>  WIDS0(2)
	, W_IDS_I2      =>  WIDS0(1)
	, W_IDS_I1      =>  WIDS0(0)

	, W_LST_I       =>  WLASTS0
	, W_RYM_I       =>  WREADYM0
	, W_RYP_I       =>  WREADYP0

	, W_SBS_I8      =>  WSTRBS0(7)
	, W_SBS_I7      =>  WSTRBS0(6)
	, W_SBS_I6      =>  WSTRBS0(5)
	, W_SBS_I5      =>  WSTRBS0(4)
	, W_SBS_I4      =>  WSTRBS0(3)
	, W_SBS_I3      =>  WSTRBS0(2)
	, W_SBS_I2      =>  WSTRBS0(1)
	, W_SBS_I1      =>  WSTRBS0(0)

	, W_VD_I        =>  WVALIDS0

        -- Outputs
	, AR_AM_O32     =>  ARADDRM0(31)
	, AR_AM_O31     =>  ARADDRM0(30)
	, AR_AM_O30     =>  ARADDRM0(29)
	, AR_AM_O29     =>  ARADDRM0(28)
	, AR_AM_O28     =>  ARADDRM0(27)
	, AR_AM_O27     =>  ARADDRM0(26)
	, AR_AM_O26     =>  ARADDRM0(25)
	, AR_AM_O25     =>  ARADDRM0(24)
	, AR_AM_O24     =>  ARADDRM0(23)
	, AR_AM_O23     =>  ARADDRM0(22)
	, AR_AM_O22     =>  ARADDRM0(21)
	, AR_AM_O21     =>  ARADDRM0(20)
	, AR_AM_O20     =>  ARADDRM0(19)
	, AR_AM_O19     =>  ARADDRM0(18)
	, AR_AM_O18     =>  ARADDRM0(17)
	, AR_AM_O17     =>  ARADDRM0(16)
	, AR_AM_O16     =>  ARADDRM0(15)
	, AR_AM_O15     =>  ARADDRM0(14)
	, AR_AM_O14     =>  ARADDRM0(13)
	, AR_AM_O13     =>  ARADDRM0(12)
	, AR_AM_O12     =>  ARADDRM0(11)
	, AR_AM_O11     =>  ARADDRM0(10)
	, AR_AM_O10     =>  ARADDRM0(9)
	, AR_AM_O9      =>  ARADDRM0(8)
	, AR_AM_O8      =>  ARADDRM0(7)
	, AR_AM_O7      =>  ARADDRM0(6)
	, AR_AM_O6      =>  ARADDRM0(5)
	, AR_AM_O5      =>  ARADDRM0(4)
	, AR_AM_O4      =>  ARADDRM0(3)
	, AR_AM_O3      =>  ARADDRM0(2)
	, AR_AM_O2      =>  ARADDRM0(1)
	, AR_AM_O1      =>  ARADDRM0(0)

	, AR_AP_O32     =>  ARADDRP0(31)
	, AR_AP_O31     =>  ARADDRP0(30)
	, AR_AP_O30     =>  ARADDRP0(29)
	, AR_AP_O29     =>  ARADDRP0(28)
	, AR_AP_O28     =>  ARADDRP0(27)
	, AR_AP_O27     =>  ARADDRP0(26)
	, AR_AP_O26     =>  ARADDRP0(25)
	, AR_AP_O25     =>  ARADDRP0(24)
	, AR_AP_O24     =>  ARADDRP0(23)
	, AR_AP_O23     =>  ARADDRP0(22)
	, AR_AP_O22     =>  ARADDRP0(21)
	, AR_AP_O21     =>  ARADDRP0(20)
	, AR_AP_O20     =>  ARADDRP0(19)
	, AR_AP_O19     =>  ARADDRP0(18)
	, AR_AP_O18     =>  ARADDRP0(17)
	, AR_AP_O17     =>  ARADDRP0(16)
	, AR_AP_O16     =>  ARADDRP0(15)
	, AR_AP_O15     =>  ARADDRP0(14)
	, AR_AP_O14     =>  ARADDRP0(13)
	, AR_AP_O13     =>  ARADDRP0(12)
	, AR_AP_O12     =>  ARADDRP0(11)
	, AR_AP_O11     =>  ARADDRP0(10)
	, AR_AP_O10     =>  ARADDRP0(9)
	, AR_AP_O9      =>  ARADDRP0(8)
	, AR_AP_O8      =>  ARADDRP0(7)
	, AR_AP_O7      =>  ARADDRP0(6)
	, AR_AP_O6      =>  ARADDRP0(5)
	, AR_AP_O5      =>  ARADDRP0(4)
	, AR_AP_O4      =>  ARADDRP0(3)
	, AR_AP_O3      =>  ARADDRP0(2)
	, AR_AP_O2      =>  ARADDRP0(1)
	, AR_AP_O1      =>  ARADDRP0(0)

	, AR_BUM_O2     =>  ARBURSTM0(1)
	, AR_BUM_O1     =>  ARBURSTM0(0)

	, AR_BUP_O2     =>  ARBURSTP0(1)
	, AR_BUP_O1     =>  ARBURSTP0(0)

	, AR_CHM_O4     =>  ARCACHEM0(3)
	, AR_CHM_O3     =>  ARCACHEM0(2)
	, AR_CHM_O2     =>  ARCACHEM0(1)
	, AR_CHM_O1     =>  ARCACHEM0(0)

	, AR_CHP_O4     =>  ARCACHEP0(3)
	, AR_CHP_O3     =>  ARCACHEP0(2)
	, AR_CHP_O2     =>  ARCACHEP0(1)
	, AR_CHP_O1     =>  ARCACHEP0(0)

	, AR_IDM_O4     =>  ARIDM0(3)
	, AR_IDM_O3     =>  ARIDM0(2)
	, AR_IDM_O2     =>  ARIDM0(1)
	, AR_IDM_O1     =>  ARIDM0(0)

	, AR_IDP_O4     =>  ARIDP0(3)
	, AR_IDP_O3     =>  ARIDP0(2)
	, AR_IDP_O2     =>  ARIDP0(1)
	, AR_IDP_O1     =>  ARIDP0(0)

	, AR_INM_O4     =>  ARINNERM0(3)
	, AR_INM_O3     =>  ARINNERM0(2)
	, AR_INM_O2     =>  ARINNERM0(1)
	, AR_INM_O1     =>  ARINNERM0(0)

	, AR_LEM_O4     =>  ARLENM0(3)
	, AR_LEM_O3     =>  ARLENM0(2)
	, AR_LEM_O2     =>  ARLENM0(1)
	, AR_LEM_O1     =>  ARLENM0(0)

	, AR_LEP_O4     =>  ARLENP0(3)
	, AR_LEP_O3     =>  ARLENP0(2)
	, AR_LEP_O2     =>  ARLENP0(1)
	, AR_LEP_O1     =>  ARLENP0(0)

	, AR_LKM_O2     =>  ARLOCKM0(1)
	, AR_LKM_O1     =>  ARLOCKM0(0)

	, AR_LKP_O2     =>  ARLOCKP0(1)
	, AR_LKP_O1     =>  ARLOCKP0(0)

	, AR_PRM_O3     =>  ARPROTM0(2)
	, AR_PRM_O2     =>  ARPROTM0(1)
	, AR_PRM_O1     =>  ARPROTM0(0)

	, AR_PRP_O3     =>  ARPROTP0(2)
	, AR_PRP_O2     =>  ARPROTP0(1)
	, AR_PRP_O1     =>  ARPROTP0(0)

	, AR_RDY_O      =>  ARREADYS0
	, AR_SHM_O      =>  ARSHAREM0

	, AR_SZM_O3     =>  ARSIZEM0(2)
	, AR_SZM_O2     =>  ARSIZEM0(1)
	, AR_SZM_O1     =>  ARSIZEM0(0)

	, AR_SZP_O3     =>  ARSIZEP0(2)
	, AR_SZP_O2     =>  ARSIZEP0(1)
	, AR_SZP_O1     =>  ARSIZEP0(0)

	, AR_VDM_O      =>  ARVALIDM0
	, AR_VDP_O      =>  ARVALIDP0

	, AW_AM_O32     =>  AWADDRM0(31)
	, AW_AM_O31     =>  AWADDRM0(30)
	, AW_AM_O30     =>  AWADDRM0(29)
	, AW_AM_O29     =>  AWADDRM0(28)
	, AW_AM_O28     =>  AWADDRM0(27)
	, AW_AM_O27     =>  AWADDRM0(26)
	, AW_AM_O26     =>  AWADDRM0(25)
	, AW_AM_O25     =>  AWADDRM0(24)
	, AW_AM_O24     =>  AWADDRM0(23)
	, AW_AM_O23     =>  AWADDRM0(22)
	, AW_AM_O22     =>  AWADDRM0(21)
	, AW_AM_O21     =>  AWADDRM0(20)
	, AW_AM_O20     =>  AWADDRM0(19)
	, AW_AM_O19     =>  AWADDRM0(18)
	, AW_AM_O18     =>  AWADDRM0(17)
	, AW_AM_O17     =>  AWADDRM0(16)
	, AW_AM_O16     =>  AWADDRM0(15)
	, AW_AM_O15     =>  AWADDRM0(14)
	, AW_AM_O14     =>  AWADDRM0(13)
	, AW_AM_O13     =>  AWADDRM0(12)
	, AW_AM_O12     =>  AWADDRM0(11)
	, AW_AM_O11     =>  AWADDRM0(10)
	, AW_AM_O10     =>  AWADDRM0(9)
	, AW_AM_O9      =>  AWADDRM0(8)
	, AW_AM_O8      =>  AWADDRM0(7)
	, AW_AM_O7      =>  AWADDRM0(6)
	, AW_AM_O6      =>  AWADDRM0(5)
	, AW_AM_O5      =>  AWADDRM0(4)
	, AW_AM_O4      =>  AWADDRM0(3)
	, AW_AM_O3      =>  AWADDRM0(2)
	, AW_AM_O2      =>  AWADDRM0(1)
	, AW_AM_O1      =>  AWADDRM0(0)

	, AW_AP_O32     =>  AWADDRP0(31)
	, AW_AP_O31     =>  AWADDRP0(30)
	, AW_AP_O30     =>  AWADDRP0(29)
	, AW_AP_O29     =>  AWADDRP0(28)
	, AW_AP_O28     =>  AWADDRP0(27)
	, AW_AP_O27     =>  AWADDRP0(26)
	, AW_AP_O26     =>  AWADDRP0(25)
	, AW_AP_O25     =>  AWADDRP0(24)
	, AW_AP_O24     =>  AWADDRP0(23)
	, AW_AP_O23     =>  AWADDRP0(22)
	, AW_AP_O22     =>  AWADDRP0(21)
	, AW_AP_O21     =>  AWADDRP0(20)
	, AW_AP_O20     =>  AWADDRP0(19)
	, AW_AP_O19     =>  AWADDRP0(18)
	, AW_AP_O18     =>  AWADDRP0(17)
	, AW_AP_O17     =>  AWADDRP0(16)
	, AW_AP_O16     =>  AWADDRP0(15)
	, AW_AP_O15     =>  AWADDRP0(14)
	, AW_AP_O14     =>  AWADDRP0(13)
	, AW_AP_O13     =>  AWADDRP0(12)
	, AW_AP_O12     =>  AWADDRP0(11)
	, AW_AP_O11     =>  AWADDRP0(10)
	, AW_AP_O10     =>  AWADDRP0(9)
	, AW_AP_O9      =>  AWADDRP0(8)
	, AW_AP_O8      =>  AWADDRP0(7)
	, AW_AP_O7      =>  AWADDRP0(6)
	, AW_AP_O6      =>  AWADDRP0(5)
	, AW_AP_O5      =>  AWADDRP0(4)
	, AW_AP_O4      =>  AWADDRP0(3)
	, AW_AP_O3      =>  AWADDRP0(2)
	, AW_AP_O2      =>  AWADDRP0(1)
	, AW_AP_O1      =>  AWADDRP0(0)

	, AW_BUM_O2     =>  AWBURSTM0(1)
	, AW_BUM_O1     =>  AWBURSTM0(0)

	, AW_BUP_O2     =>  AWBURSTP0(1)
	, AW_BUP_O1     =>  AWBURSTP0(0)

	, AW_CHM_O4     =>  AWCACHEM0(3)
	, AW_CHM_O3     =>  AWCACHEM0(2)
	, AW_CHM_O2     =>  AWCACHEM0(1)
	, AW_CHM_O1     =>  AWCACHEM0(0)

	, AW_CHP_O4     =>  AWCACHEP0(3)
	, AW_CHP_O3     =>  AWCACHEP0(2)
	, AW_CHP_O2     =>  AWCACHEP0(1)
	, AW_CHP_O1     =>  AWCACHEP0(0)

	, AW_IDM_O4     =>  AWIDM0(3)
	, AW_IDM_O3     =>  AWIDM0(2)
	, AW_IDM_O2     =>  AWIDM0(1)
	, AW_IDM_O1     =>  AWIDM0(0)

	, AW_IDP_O4     =>  AWIDP0(3)
	, AW_IDP_O3     =>  AWIDP0(2)
	, AW_IDP_O2     =>  AWIDP0(1)
	, AW_IDP_O1     =>  AWIDP0(0)

	, AW_INM_O4     =>  AWINNERM0(3)
	, AW_INM_O3     =>  AWINNERM0(2)
	, AW_INM_O2     =>  AWINNERM0(1)
	, AW_INM_O1     =>  AWINNERM0(0)

	, AW_LEM_O4     =>  AWLENM0(3)
	, AW_LEM_O3     =>  AWLENM0(2)
	, AW_LEM_O2     =>  AWLENM0(1)
	, AW_LEM_O1     =>  AWLENM0(0)

	, AW_LEP_O4     =>  AWLENP0(3)
	, AW_LEP_O3     =>  AWLENP0(2)
	, AW_LEP_O2     =>  AWLENP0(1)
	, AW_LEP_O1     =>  AWLENP0(0)

	, AW_LKM_O2     =>  AWLOCKM0(1)
	, AW_LKM_O1     =>  AWLOCKM0(0)

	, AW_LKP_O2     =>  AWLOCKP0(1)
	, AW_LKP_O1     =>  AWLOCKP0(0)

	, AW_PRM_O3     =>  AWPROTM0(2)
	, AW_PRM_O2     =>  AWPROTM0(1)
	, AW_PRM_O1     =>  AWPROTM0(0)

	, AW_PRP_O3     =>  AWPROTP0(2)
	, AW_PRP_O2     =>  AWPROTP0(1)
	, AW_PRP_O1     =>  AWPROTP0(0)

	, AW_RDY_O      =>  AWREADYS0
	, AW_SHM_O      =>  AWSHAREM0

	, AW_SZM_O3     =>  AWSIZEM0(2)
	, AW_SZM_O2     =>  AWSIZEM0(1)
	, AW_SZM_O1     =>  AWSIZEM0(0)

	, AW_SZP_O3     =>  AWSIZEP0(2)
	, AW_SZP_O2     =>  AWSIZEP0(1)
	, AW_SZP_O1     =>  AWSIZEP0(0)

	, AW_VDM_O      =>  AWVALIDM0
	, AW_VDP_O      =>  AWVALIDP0

	, B_IDS_O8      =>  BIDS0(7)
	, B_IDS_O7      =>  BIDS0(6)
	, B_IDS_O6      =>  BIDS0(5)
	, B_IDS_O5      =>  BIDS0(4)
	, B_IDS_O4      =>  BIDS0(3)
	, B_IDS_O3      =>  BIDS0(2)
	, B_IDS_O2      =>  BIDS0(1)
	, B_IDS_O1      =>  BIDS0(0)

	, B_RDYM_O      =>  BREADYM0
	, B_RDYP_O      =>  BREADYP0

	, B_RSP_O2      =>  BRESPS0(1)
	, B_RSP_O1      =>  BRESPS0(0)

	, B_VD_O        =>  BVALIDS0

	, CDB_PW_O      =>  CDBGPWRUPREQ
	, CDB_RS_O      =>  CDBGRSTREQ
	, COM_RX_O      =>  COMMRX0
	, COM_TX_O      =>  COMMTX0
	, CS_PW_O       =>  CSYSPWRUPREQ
	, DB_ACK_O      =>  DBGACK0
	, DB_NPD_O      =>  DBGNOPWRDWN
	, DB_RS_O       =>  DBGRSTREQ0

	, DFTS_O8       =>  open
	, DFTS_O7       =>  open
	, DFTS_O6       =>  open
	, DFTS_O5       =>  open
	, DFTS_O4       =>  open
	, DFTS_O3       =>  open
	, DFTS_O2       =>  open
	, DFTS_O1       =>  open

	, ET_ASC_O8     =>  ETMASICCTL0(7)
	, ET_ASC_O7     =>  ETMASICCTL0(6)
	, ET_ASC_O6     =>  ETMASICCTL0(5)
	, ET_ASC_O5     =>  ETMASICCTL0(4)
	, ET_ASC_O4     =>  ETMASICCTL0(3)
	, ET_ASC_O3     =>  ETMASICCTL0(2)
	, ET_ASC_O2     =>  ETMASICCTL0(1)
	, ET_ASC_O1     =>  ETMASICCTL0(0)

	, ET_E_O        =>  ETMEN0

	, ET_EXT_O2     =>  ETMEXTOUT0(1)
	, ET_EXT_O1     =>  ETMEXTOUT0(0)

	, EVENT_O       =>  EVENTO0
	, FP_DZC_O      =>  FPDZC0
	, FP_IDC_O      =>  FPIDC0
	, FP_IOC_O      =>  FPIOC0
	, FP_IXC_O      =>  FPIXC0
	, FP_OFC_O      =>  FPOFC0
	, FP_UFC_O      =>  FPUFC0
	, JTAG_O        =>  JTAGNSW


	, N_CKST_O      =>  nCLKSTOPPED0
	, N_PMU_O       =>  nPMUIRQ0
	, N_TDO_O       =>  nTDOEN
	, N_VFIQ_O      =>  nVALFIQ0
	, N_VIRQ_O      =>  nVALIRQ0
	, N_VRST_O      =>  nVALRESET0
	, N_EPST_O      =>  nWFEPIPESTOPPED0
	, N_IPST_O      =>  nWFIPIPESTOPPED0

	, P_RD_O32      =>  PRDATASYS(31)
	, P_RD_O31      =>  PRDATASYS(30)
	, P_RD_O30      =>  PRDATASYS(29)
	, P_RD_O29      =>  PRDATASYS(28)
	, P_RD_O28      =>  PRDATASYS(27)
	, P_RD_O27      =>  PRDATASYS(26)
	, P_RD_O26      =>  PRDATASYS(25)
	, P_RD_O25      =>  PRDATASYS(24)
	, P_RD_O24      =>  PRDATASYS(23)
	, P_RD_O23      =>  PRDATASYS(22)
	, P_RD_O22      =>  PRDATASYS(21)
	, P_RD_O21      =>  PRDATASYS(20)
	, P_RD_O20      =>  PRDATASYS(19)
	, P_RD_O19      =>  PRDATASYS(18)
	, P_RD_O18      =>  PRDATASYS(17)
	, P_RD_O17      =>  PRDATASYS(16)
	, P_RD_O16      =>  PRDATASYS(15)
	, P_RD_O15      =>  PRDATASYS(14)
	, P_RD_O14      =>  PRDATASYS(13)
	, P_RD_O13      =>  PRDATASYS(12)
	, P_RD_O12      =>  PRDATASYS(11)
	, P_RD_O11      =>  PRDATASYS(10)
	, P_RD_O10      =>  PRDATASYS(9)
	, P_RD_O9       =>  PRDATASYS(8)
	, P_RD_O8       =>  PRDATASYS(7)
	, P_RD_O7       =>  PRDATASYS(6)
	, P_RD_O6       =>  PRDATASYS(5)
	, P_RD_O5       =>  PRDATASYS(4)
	, P_RD_O4       =>  PRDATASYS(3)
	, P_RD_O3       =>  PRDATASYS(2)
	, P_RD_O2       =>  PRDATASYS(1)
	, P_RD_O1       =>  PRDATASYS(0)

	, P_RDY_O       =>  PREADYSYS
	, P_VER_O       =>  PSLVERRSYS

	, RD_O64        =>  RDATAS0(63)
	, RD_O63        =>  RDATAS0(62)
	, RD_O62        =>  RDATAS0(61)
	, RD_O61        =>  RDATAS0(60)
	, RD_O60        =>  RDATAS0(59)
	, RD_O59        =>  RDATAS0(58)
	, RD_O58        =>  RDATAS0(57)
	, RD_O57        =>  RDATAS0(56)
	, RD_O56        =>  RDATAS0(55)
	, RD_O55        =>  RDATAS0(54)
	, RD_O54        =>  RDATAS0(53)
	, RD_O53        =>  RDATAS0(52)
	, RD_O52        =>  RDATAS0(51)
	, RD_O51        =>  RDATAS0(50)
	, RD_O50        =>  RDATAS0(49)
	, RD_O49        =>  RDATAS0(48)
	, RD_O48        =>  RDATAS0(47)
	, RD_O47        =>  RDATAS0(46)
	, RD_O46        =>  RDATAS0(45)
	, RD_O45        =>  RDATAS0(44)
	, RD_O44        =>  RDATAS0(43)
	, RD_O43        =>  RDATAS0(42)
	, RD_O42        =>  RDATAS0(41)
	, RD_O41        =>  RDATAS0(40)
	, RD_O40        =>  RDATAS0(39)
	, RD_O39        =>  RDATAS0(38)
	, RD_O38        =>  RDATAS0(37)
	, RD_O37        =>  RDATAS0(36)
	, RD_O36        =>  RDATAS0(35)
	, RD_O35        =>  RDATAS0(34)
	, RD_O34        =>  RDATAS0(33)
	, RD_O33        =>  RDATAS0(32)
	, RD_O32        =>  RDATAS0(31)
	, RD_O31        =>  RDATAS0(30)
	, RD_O30        =>  RDATAS0(29)
	, RD_O29        =>  RDATAS0(28)
	, RD_O28        =>  RDATAS0(27)
	, RD_O27        =>  RDATAS0(26)
	, RD_O26        =>  RDATAS0(25)
	, RD_O25        =>  RDATAS0(24)
	, RD_O24        =>  RDATAS0(23)
	, RD_O23        =>  RDATAS0(22)
	, RD_O22        =>  RDATAS0(21)
	, RD_O21        =>  RDATAS0(20)
	, RD_O20        =>  RDATAS0(19)
	, RD_O19        =>  RDATAS0(18)
	, RD_O18        =>  RDATAS0(17)
	, RD_O17        =>  RDATAS0(16)
	, RD_O16        =>  RDATAS0(15)
	, RD_O15        =>  RDATAS0(14)
	, RD_O14        =>  RDATAS0(13)
	, RD_O13        =>  RDATAS0(12)
	, RD_O12        =>  RDATAS0(11)
	, RD_O11        =>  RDATAS0(10)
	, RD_O10        =>  RDATAS0(9)
	, RD_O9         =>  RDATAS0(8)
	, RD_O8         =>  RDATAS0(7)
	, RD_O7         =>  RDATAS0(6)
	, RD_O6         =>  RDATAS0(5)
	, RD_O5         =>  RDATAS0(4)
	, RD_O4         =>  RDATAS0(3)
	, RD_O3         =>  RDATAS0(2)
	, RD_O2         =>  RDATAS0(1)
	, RD_O1         =>  RDATAS0(0)



	, R_IDS_O8      =>  RIDS0(7)
	, R_IDS_O7      =>  RIDS0(6)
	, R_IDS_O6      =>  RIDS0(5)
	, R_IDS_O5      =>  RIDS0(4)
	, R_IDS_O4      =>  RIDS0(3)
	, R_IDS_O3      =>  RIDS0(2)
	, R_IDS_O2      =>  RIDS0(1)
	, R_IDS_O1      =>  RIDS0(0)

	, R_LST_O       =>  RLASTS0
	, R_RDYM_O      =>  RREADYM0
	, R_RDYP_O      =>  RREADYP0

	, R_RSP_O2      =>  RRESPS0(1)
	, R_RSP_O1      =>  RRESPS0(0)

	, R_VD_O        =>  RVALIDS0

	, SWDO_O        =>  SWDO
	, SWDO_E_O      =>  SWDOEN
	, TDO_O         =>  TDO
	, T_CK_O        =>  TRACECLK
	, T_CTL_O       =>  TRACECTL

	, T_DATA_O32    =>  TRACEDATA(31)
	, T_DATA_O31    =>  TRACEDATA(30)
	, T_DATA_O30    =>  TRACEDATA(29)
	, T_DATA_O29    =>  TRACEDATA(28)
	, T_DATA_O28    =>  TRACEDATA(27)
	, T_DATA_O27    =>  TRACEDATA(26)
	, T_DATA_O26    =>  TRACEDATA(25)
	, T_DATA_O25    =>  TRACEDATA(24)
	, T_DATA_O24    =>  TRACEDATA(23)
	, T_DATA_O23    =>  TRACEDATA(22)
	, T_DATA_O22    =>  TRACEDATA(21)
	, T_DATA_O21    =>  TRACEDATA(20)
	, T_DATA_O20    =>  TRACEDATA(19)
	, T_DATA_O19    =>  TRACEDATA(18)
	, T_DATA_O18    =>  TRACEDATA(17)
	, T_DATA_O17    =>  TRACEDATA(16)
	, T_DATA_O16    =>  TRACEDATA(15)
	, T_DATA_O15    =>  TRACEDATA(14)
	, T_DATA_O14    =>  TRACEDATA(13)
	, T_DATA_O13    =>  TRACEDATA(12)
	, T_DATA_O12    =>  TRACEDATA(11)
	, T_DATA_O11    =>  TRACEDATA(10)
	, T_DATA_O10    =>  TRACEDATA(9)
	, T_DATA_O9     =>  TRACEDATA(8)
	, T_DATA_O8     =>  TRACEDATA(7)
	, T_DATA_O7     =>  TRACEDATA(6)
	, T_DATA_O6     =>  TRACEDATA(5)
	, T_DATA_O5     =>  TRACEDATA(4)
	, T_DATA_O4     =>  TRACEDATA(3)
	, T_DATA_O3     =>  TRACEDATA(2)
	, T_DATA_O2     =>  TRACEDATA(1)
	, T_DATA_O1     =>  TRACEDATA(0)


	, W_DM_O64      =>  WDATAM0(63)
	, W_DM_O63      =>  WDATAM0(62)
	, W_DM_O62      =>  WDATAM0(61)
	, W_DM_O61      =>  WDATAM0(60)
	, W_DM_O60      =>  WDATAM0(59)
	, W_DM_O59      =>  WDATAM0(58)
	, W_DM_O58      =>  WDATAM0(57)
	, W_DM_O57      =>  WDATAM0(56)
	, W_DM_O56      =>  WDATAM0(55)
	, W_DM_O55      =>  WDATAM0(54)
	, W_DM_O54      =>  WDATAM0(53)
	, W_DM_O53      =>  WDATAM0(52)
	, W_DM_O52      =>  WDATAM0(51)
	, W_DM_O51      =>  WDATAM0(50)
	, W_DM_O50      =>  WDATAM0(49)
	, W_DM_O49      =>  WDATAM0(48)
	, W_DM_O48      =>  WDATAM0(47)
	, W_DM_O47      =>  WDATAM0(46)
	, W_DM_O46      =>  WDATAM0(45)
	, W_DM_O45      =>  WDATAM0(44)
	, W_DM_O44      =>  WDATAM0(43)
	, W_DM_O43      =>  WDATAM0(42)
	, W_DM_O42      =>  WDATAM0(41)
	, W_DM_O41      =>  WDATAM0(40)
	, W_DM_O40      =>  WDATAM0(39)
	, W_DM_O39      =>  WDATAM0(38)
	, W_DM_O38      =>  WDATAM0(37)
	, W_DM_O37      =>  WDATAM0(36)
	, W_DM_O36      =>  WDATAM0(35)
	, W_DM_O35      =>  WDATAM0(34)
	, W_DM_O34      =>  WDATAM0(33)
	, W_DM_O33      =>  WDATAM0(32)
	, W_DM_O32      =>  WDATAM0(31)
	, W_DM_O31      =>  WDATAM0(30)
	, W_DM_O30      =>  WDATAM0(29)
	, W_DM_O29      =>  WDATAM0(28)
	, W_DM_O28      =>  WDATAM0(27)
	, W_DM_O27      =>  WDATAM0(26)
	, W_DM_O26      =>  WDATAM0(25)
	, W_DM_O25      =>  WDATAM0(24)
	, W_DM_O24      =>  WDATAM0(23)
	, W_DM_O23      =>  WDATAM0(22)
	, W_DM_O22      =>  WDATAM0(21)
	, W_DM_O21      =>  WDATAM0(20)
	, W_DM_O20      =>  WDATAM0(19)
	, W_DM_O19      =>  WDATAM0(18)
	, W_DM_O18      =>  WDATAM0(17)
	, W_DM_O17      =>  WDATAM0(16)
	, W_DM_O16      =>  WDATAM0(15)
	, W_DM_O15      =>  WDATAM0(14)
	, W_DM_O14      =>  WDATAM0(13)
	, W_DM_O13      =>  WDATAM0(12)
	, W_DM_O12      =>  WDATAM0(11)
	, W_DM_O11      =>  WDATAM0(10)
	, W_DM_O10      =>  WDATAM0(9)
	, W_DM_O9       =>  WDATAM0(8)
	, W_DM_O8       =>  WDATAM0(7)
	, W_DM_O7       =>  WDATAM0(6)
	, W_DM_O6       =>  WDATAM0(5)
	, W_DM_O5       =>  WDATAM0(4)
	, W_DM_O4       =>  WDATAM0(3)
	, W_DM_O3       =>  WDATAM0(2)
	, W_DM_O2       =>  WDATAM0(1)
	, W_DM_O1       =>  WDATAM0(0)

	, W_DP_O32      =>  WDATAP0(31)
	, W_DP_O31      =>  WDATAP0(30)
	, W_DP_O30      =>  WDATAP0(29)
	, W_DP_O29      =>  WDATAP0(28)
	, W_DP_O28      =>  WDATAP0(27)
	, W_DP_O27      =>  WDATAP0(26)
	, W_DP_O26      =>  WDATAP0(25)
	, W_DP_O25      =>  WDATAP0(24)
	, W_DP_O24      =>  WDATAP0(23)
	, W_DP_O23      =>  WDATAP0(22)
	, W_DP_O22      =>  WDATAP0(21)
	, W_DP_O21      =>  WDATAP0(20)
	, W_DP_O20      =>  WDATAP0(19)
	, W_DP_O19      =>  WDATAP0(18)
	, W_DP_O18      =>  WDATAP0(17)
	, W_DP_O17      =>  WDATAP0(16)
	, W_DP_O16      =>  WDATAP0(15)
	, W_DP_O15      =>  WDATAP0(14)
	, W_DP_O14      =>  WDATAP0(13)
	, W_DP_O13      =>  WDATAP0(12)
	, W_DP_O12      =>  WDATAP0(11)
	, W_DP_O11      =>  WDATAP0(10)
	, W_DP_O10      =>  WDATAP0(9)
	, W_DP_O9       =>  WDATAP0(8)
	, W_DP_O8       =>  WDATAP0(7)
	, W_DP_O7       =>  WDATAP0(6)
	, W_DP_O6       =>  WDATAP0(5)
	, W_DP_O5       =>  WDATAP0(4)
	, W_DP_O4       =>  WDATAP0(3)
	, W_DP_O3       =>  WDATAP0(2)
	, W_DP_O2       =>  WDATAP0(1)
	, W_DP_O1       =>  WDATAP0(0)

	, W_IDM_O4      =>  WIDM0(3)
	, W_IDM_O3      =>  WIDM0(2)
	, W_IDM_O2      =>  WIDM0(1)
	, W_IDM_O1      =>  WIDM0(0)

	, W_IDP_O4      =>  WIDP0(3)
	, W_IDP_O3      =>  WIDP0(2)
	, W_IDP_O2      =>  WIDP0(1)
	, W_IDP_O1      =>  WIDP0(0)

	, W_LSTM_O      =>  WLASTM0
	, W_LSTP_O      =>  WLASTP0
	, W_RDY_O       =>  WREADYS0

	, W_SBM_O8      =>  WSTRBM0(7)
	, W_SBM_O7      =>  WSTRBM0(6)
	, W_SBM_O6      =>  WSTRBM0(5)
	, W_SBM_O5      =>  WSTRBM0(4)
	, W_SBM_O4      =>  WSTRBM0(3)
	, W_SBM_O3      =>  WSTRBM0(2)
	, W_SBM_O2      =>  WSTRBM0(1)
	, W_SBM_O1      =>  WSTRBM0(0)

	, W_SBP_O4      =>  WSTRBP0(3)
	, W_SBP_O3      =>  WSTRBP0(2)
	, W_SBP_O2      =>  WSTRBP0(1)
	, W_SBP_O1      =>  WSTRBP0(0)

	, W_VDM_O       =>  WVALIDM0
	, W_VDP_O       =>  WVALIDP0
);
end NX_RTL;
-- =================================================================================================
--   NX_HSSL_FULL_L declaration                                                          2019/06/20
-- =================================================================================================

-- NX_HSSL_FULL_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_HSSL_FULL_L is
generic (
   cfg_main_i : bit_vector( 33 downto 0) := (others => '0');
   cfg_tx0_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx0_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx1_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx1_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx2_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx2_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx3_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx3_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx4_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx4_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx5_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx5_i  : bit_vector(159 downto 0) := (others => '0');
   location   : string := ""
 );
port (
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ MAIN ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- Fabric Interface
   hssl_clk_user_i                       : in  std_logic;
   hssl_clk_ref_i                        : in  std_logic;
   hssl_clock_o                          : out std_logic;
   usr_com_tx_pma_pre_sign_i             : in  std_logic;
   usr_com_tx_pma_pre_en_i               : in  std_logic;
   usr_com_tx_pma_pre_input_sel_i        : in  std_logic_vector(3 downto 0);
   usr_com_tx_pma_main_sign_i            : in  std_logic;
   usr_com_rx_pma_m_eye_i                : in  std_logic;
   usr_com_tx_pma_main_en_i              : in  std_logic_vector(5 downto 0);
   usr_com_tx_pma_margin_sel_i           : in  std_logic_vector(3 downto 0);
   usr_com_tx_pma_margin_input_sel_i     : in  std_logic_vector(3 downto 0);
   usr_com_tx_pma_margin_sel_var_i       : in  std_logic_vector(4 downto 0);
   usr_com_tx_pma_margin_input_sel_var_i : in  std_logic_vector(4 downto 0);
   usr_com_tx_pma_post_en_i              : in  std_logic_vector(4 downto 0);
   usr_com_tx_pma_post_sign_i            : in  std_logic;
   usr_com_tx_pma_post_input_sel_i       : in  std_logic_vector(3 downto 0);
   usr_com_tx_pma_post_input_sel_var_i   : in  std_logic_vector(3 downto 0);
   usr_com_rx_pma_ctle_cap_i             : in  std_logic_vector(3 downto 0);
   usr_com_rx_pma_ctle_resp_i            : in  std_logic_vector(3 downto 0);
   usr_com_rx_pma_ctle_resn_i            : in  std_logic_vector(3 downto 0);
   usr_com_ctrl_tx_sel_i                 : in  std_logic_vector(5 downto 0);
   usr_com_ctrl_rx_sel_i                 : in  std_logic_vector(5 downto 0);
   usr_pll_pma_rst_n_i                   : in  std_logic;
   usr_main_rst_n_i                      : in  std_logic;
   usr_calibrate_pma_res_p1_i            : in  std_logic_vector(7 downto 0);
   usr_calibrate_pma_res_n2_i            : in  std_logic_vector(7 downto 0);
   usr_calibrate_pma_res_n3_i            : in  std_logic_vector(7 downto 0);
   usr_calibrate_pma_res_p4_i            : in  std_logic_vector(7 downto 0);
   usr_calibrate_pma_sel_i               : in  std_logic_vector(3 downto 0);
   usr_calibrate_pma_en_i                : in  std_logic;
   usr_pcs_ctrl_pll_lock_en_i            : in  std_logic;
   usr_pcs_ctrl_ovs_en_i                 : in  std_logic;
   usr_main_test_i                       : in  std_logic_vector(7 downto 0);
   usr_pll_lock_o                        : out std_logic;
   usr_calibrate_pma_out_o               : out std_logic;
   usr_main_test_o                       : out std_logic_vector(7 downto 0);
   pma_clk_ext_i                         : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 0 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx0_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_replace_en_i        : in  std_logic;
   usr_tx0_rst_n_i                  : in  std_logic;
   usr_tx0_pma_clk_en_i             : in  std_logic;
   usr_tx0_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx0_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx0_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx0_busy_o                   : out std_logic;
   pma_tx0_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx0_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx0_ctrl_dscr_en_i         : in  std_logic;
   usr_rx0_ctrl_dec_en_i          : in  std_logic;
   usr_rx0_ctrl_align_en_i        : in  std_logic;
   usr_rx0_ctrl_align_sync_i      : in  std_logic;
   usr_rx0_ctrl_replace_en_i      : in  std_logic;
   usr_rx0_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx0_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx0_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx0_rst_n_i                : in  std_logic;
   usr_rx0_pma_cdr_rst_i          : in  std_logic;
   usr_rx0_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx0_pma_pll_rst_n_i        : in  std_logic;
   usr_rx0_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx0_pma_loss_of_signal_o   : out std_logic;
   usr_rx0_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_char_is_aligned_o : out std_logic;
   usr_rx0_busy_o                 : out std_logic;
   usr_rx0_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx0_pll_lock_o             : out std_logic;
   pma_rx0_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 1 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx1_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_replace_en_i        : in  std_logic;
   usr_tx1_rst_n_i                  : in  std_logic;
   usr_tx1_pma_clk_en_i             : in  std_logic;
   usr_tx1_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx1_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx1_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx1_busy_o                   : out std_logic;
   pma_tx1_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx1_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx1_ctrl_dscr_en_i         : in  std_logic;
   usr_rx1_ctrl_dec_en_i          : in  std_logic;
   usr_rx1_ctrl_align_en_i        : in  std_logic;
   usr_rx1_ctrl_align_sync_i      : in  std_logic;
   usr_rx1_ctrl_replace_en_i      : in  std_logic;
   usr_rx1_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx1_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx1_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx1_rst_n_i                : in  std_logic;
   usr_rx1_pma_cdr_rst_i          : in  std_logic;
   usr_rx1_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx1_pma_pll_rst_n_i        : in  std_logic;
   usr_rx1_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx1_pma_loss_of_signal_o   : out std_logic;
   usr_rx1_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_char_is_aligned_o : out std_logic;
   usr_rx1_busy_o                 : out std_logic;
   usr_rx1_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx1_pll_lock_o             : out std_logic;
   pma_rx1_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 2 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx2_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_replace_en_i        : in  std_logic;
   usr_tx2_rst_n_i                  : in  std_logic;
   usr_tx2_pma_clk_en_i             : in  std_logic;
   usr_tx2_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx2_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx2_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx2_busy_o                   : out std_logic;
   pma_tx2_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx2_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx2_ctrl_dscr_en_i         : in  std_logic;
   usr_rx2_ctrl_dec_en_i          : in  std_logic;
   usr_rx2_ctrl_align_en_i        : in  std_logic;
   usr_rx2_ctrl_align_sync_i      : in  std_logic;
   usr_rx2_ctrl_replace_en_i      : in  std_logic;
   usr_rx2_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx2_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx2_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx2_rst_n_i                : in  std_logic;
   usr_rx2_pma_cdr_rst_i          : in  std_logic;
   usr_rx2_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx2_pma_pll_rst_n_i        : in  std_logic;
   usr_rx2_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx2_pma_loss_of_signal_o   : out std_logic;
   usr_rx2_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_char_is_aligned_o : out std_logic;
   usr_rx2_busy_o                 : out std_logic;
   usr_rx2_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx2_pll_lock_o             : out std_logic;
   pma_rx2_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 3 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx3_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_replace_en_i        : in  std_logic;
   usr_tx3_rst_n_i                  : in  std_logic;
   usr_tx3_pma_clk_en_i             : in  std_logic;
   usr_tx3_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx3_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx3_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx3_busy_o                   : out std_logic;
   pma_tx3_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx3_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx3_ctrl_dscr_en_i         : in  std_logic;
   usr_rx3_ctrl_dec_en_i          : in  std_logic;
   usr_rx3_ctrl_align_en_i        : in  std_logic;
   usr_rx3_ctrl_align_sync_i      : in  std_logic;
   usr_rx3_ctrl_replace_en_i      : in  std_logic;
   usr_rx3_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx3_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx3_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx3_rst_n_i                : in  std_logic;
   usr_rx3_pma_cdr_rst_i          : in  std_logic;
   usr_rx3_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx3_pma_pll_rst_n_i        : in  std_logic;
   usr_rx3_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx3_pma_loss_of_signal_o   : out std_logic;
   usr_rx3_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_char_is_aligned_o : out std_logic;
   usr_rx3_busy_o                 : out std_logic;
   usr_rx3_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx3_pll_lock_o             : out std_logic;
   pma_rx3_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 4 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx4_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_replace_en_i        : in  std_logic;
   usr_tx4_rst_n_i                  : in  std_logic;
   usr_tx4_pma_clk_en_i             : in  std_logic;
   usr_tx4_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx4_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx4_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx4_busy_o                   : out std_logic;
   pma_tx4_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx4_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx4_ctrl_dscr_en_i         : in  std_logic;
   usr_rx4_ctrl_dec_en_i          : in  std_logic;
   usr_rx4_ctrl_align_en_i        : in  std_logic;
   usr_rx4_ctrl_align_sync_i      : in  std_logic;
   usr_rx4_ctrl_replace_en_i      : in  std_logic;
   usr_rx4_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx4_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx4_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx4_rst_n_i                : in  std_logic;
   usr_rx4_pma_cdr_rst_i          : in  std_logic;
   usr_rx4_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx4_pma_pll_rst_n_i        : in  std_logic;
   usr_rx4_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx4_pma_loss_of_signal_o   : out std_logic;
   usr_rx4_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_char_is_aligned_o : out std_logic;
   usr_rx4_busy_o                 : out std_logic;
   usr_rx4_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx4_pll_lock_o             : out std_logic;
   pma_rx4_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 5 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx5_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_replace_en_i        : in  std_logic;
   usr_tx5_rst_n_i                  : in  std_logic;
   usr_tx5_pma_clk_en_i             : in  std_logic;
   usr_tx5_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx5_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx5_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx5_busy_o                   : out std_logic;
   pma_tx5_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx5_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx5_ctrl_dscr_en_i         : in  std_logic;
   usr_rx5_ctrl_dec_en_i          : in  std_logic;
   usr_rx5_ctrl_align_en_i        : in  std_logic;
   usr_rx5_ctrl_align_sync_i      : in  std_logic;
   usr_rx5_ctrl_replace_en_i      : in  std_logic;
   usr_rx5_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx5_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx5_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx5_rst_n_i                : in  std_logic;
   usr_rx5_pma_cdr_rst_i          : in  std_logic;
   usr_rx5_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx5_pma_pll_rst_n_i        : in  std_logic;
   usr_rx5_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx5_pma_loss_of_signal_o   : out std_logic;
   usr_rx5_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_char_is_aligned_o : out std_logic;
   usr_rx5_busy_o                 : out std_logic;
   usr_rx5_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx5_pll_lock_o             : out std_logic;
   pma_rx5_i                      : in  std_logic
);
end NX_HSSL_FULL_L;
--#}}}#

-- =================================================================================================
--   NX_CTX_L definition                                                                2018/11/30
-- =================================================================================================

-- NX_CTX_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_CTX_L is
 generic (
     pma_clk_pos          : bit := '0';
     pcs_protocol_size    : bit := '0';
     pcs_8b_scr_sel       : bit := '0';
     pcs_scr_init         : bit_vector(16 downto 0) := (others => '0');
     pcs_scr_bypass       : bit := '0';
     pcs_sync_supported   : bit := '0';
     pcs_replace_bypass   : bit := '0';
     pcs_enc_bypass       : bit := '0';
     pcs_loopback         : bit := '0';
     pcs_polarity         : bit := '0';
     pcs_esistream_fsm_en : bit := '0';
     test                 : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc   : bit := '0';
     pcs_bypass_usr_cdc   : bit := '0';
     pma_loopback         : bit := '0';
     location             : string := ""
 );
port (
    ENC_E_I1 : in  std_logic;
    ENC_E_I2 : in  std_logic;
    ENC_E_I3 : in  std_logic;
    ENC_E_I4 : in  std_logic;
    ENC_E_I5 : in  std_logic;
    ENC_E_I6 : in  std_logic;
    ENC_E_I7 : in  std_logic;
    ENC_E_I8 : in  std_logic;

    CH_K_I1  : in  std_logic;
    CH_K_I2  : in  std_logic;
    CH_K_I3  : in  std_logic;
    CH_K_I4  : in  std_logic;
    CH_K_I5  : in  std_logic;
    CH_K_I6  : in  std_logic;
    CH_K_I7  : in  std_logic;
    CH_K_I8  : in  std_logic;

    SCR_E_I1 : in  std_logic;
    SCR_E_I2 : in  std_logic;
    SCR_E_I3 : in  std_logic;
    SCR_E_I4 : in  std_logic;
    SCR_E_I5 : in  std_logic;
    SCR_E_I6 : in  std_logic;
    SCR_E_I7 : in  std_logic;
    SCR_E_I8 : in  std_logic;

    EOMF_I1  : in  std_logic;
    EOMF_I2  : in  std_logic;
    EOMF_I3  : in  std_logic;
    EOMF_I4  : in  std_logic;
    EOMF_I5  : in  std_logic;
    EOMF_I6  : in  std_logic;
    EOMF_I7  : in  std_logic;
    EOMF_I8  : in  std_logic;

    EOF_I1   : in  std_logic;
    EOF_I2   : in  std_logic;
    EOF_I3   : in  std_logic;
    EOF_I4   : in  std_logic;
    EOF_I5   : in  std_logic;
    EOF_I6   : in  std_logic;
    EOF_I7   : in  std_logic;
    EOF_I8   : in  std_logic;

    REP_E_I  : in  std_logic;
    RST_N_I  : in  std_logic;

    TST_I1   : in  std_logic;
    TST_I2   : in  std_logic;
    TST_I3   : in  std_logic;
    TST_I4   : in  std_logic;

    DATA_I1  : in  std_logic;
    DATA_I2  : in  std_logic;
    DATA_I3  : in  std_logic;
    DATA_I4  : in  std_logic;
    DATA_I5  : in  std_logic;
    DATA_I6  : in  std_logic;
    DATA_I7  : in  std_logic;
    DATA_I8  : in  std_logic;
    DATA_I9  : in  std_logic;
    DATA_I10 : in  std_logic;
    DATA_I11 : in  std_logic;
    DATA_I12 : in  std_logic;
    DATA_I13 : in  std_logic;
    DATA_I14 : in  std_logic;
    DATA_I15 : in  std_logic;
    DATA_I16 : in  std_logic;
    DATA_I17 : in  std_logic;
    DATA_I18 : in  std_logic;
    DATA_I19 : in  std_logic;
    DATA_I20 : in  std_logic;
    DATA_I21 : in  std_logic;
    DATA_I22 : in  std_logic;
    DATA_I23 : in  std_logic;
    DATA_I24 : in  std_logic;
    DATA_I25 : in  std_logic;
    DATA_I26 : in  std_logic;
    DATA_I27 : in  std_logic;
    DATA_I28 : in  std_logic;
    DATA_I29 : in  std_logic;
    DATA_I30 : in  std_logic;
    DATA_I31 : in  std_logic;
    DATA_I32 : in  std_logic;
    DATA_I33 : in  std_logic;
    DATA_I34 : in  std_logic;
    DATA_I35 : in  std_logic;
    DATA_I36 : in  std_logic;
    DATA_I37 : in  std_logic;
    DATA_I38 : in  std_logic;
    DATA_I39 : in  std_logic;
    DATA_I40 : in  std_logic;
    DATA_I41 : in  std_logic;
    DATA_I42 : in  std_logic;
    DATA_I43 : in  std_logic;
    DATA_I44 : in  std_logic;
    DATA_I45 : in  std_logic;
    DATA_I46 : in  std_logic;
    DATA_I47 : in  std_logic;
    DATA_I48 : in  std_logic;
    DATA_I49 : in  std_logic;
    DATA_I50 : in  std_logic;
    DATA_I51 : in  std_logic;
    DATA_I52 : in  std_logic;
    DATA_I53 : in  std_logic;
    DATA_I54 : in  std_logic;
    DATA_I55 : in  std_logic;
    DATA_I56 : in  std_logic;
    DATA_I57 : in  std_logic;
    DATA_I58 : in  std_logic;
    DATA_I59 : in  std_logic;
    DATA_I60 : in  std_logic;
    DATA_I61 : in  std_logic;
    DATA_I62 : in  std_logic;
    DATA_I63 : in  std_logic;
    DATA_I64 : in  std_logic;

    TST_O1   : out std_logic;
    TST_O2   : out std_logic;
    TST_O3   : out std_logic;
    TST_O4   : out std_logic;

    BUSY_O   : out std_logic;
    CLK_E_I  : in  std_logic;

    LINK     : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);

    TX_O     : out std_logic
);
end NX_CTX_L;

architecture NX_RTL of NX_CTX_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CTX_L";
    attribute NX_USE of LINK: signal is "LINK";
begin
end NX_RTL;
--#}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_CRX_L definition                                                                2018/11/30
-- =================================================================================================

-- NX_CRX_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_CRX_L is
 generic (
     test                         : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc           : bit := '0';
     pcs_bypass_usr_cdc           : bit := '0';
     pcs_debug_en                 : bit := '0';
     pcs_fsm_watchdog_en          : bit := '0';
     pma_clk_pos                  : bit := '0';
     pcs_protocol_size            : bit := '0';
     pcs_loopback                 : bit := '0';
     pcs_polarity                 : bit := '0';
     pcs_p_comma_en               : bit := '0';
     pcs_p_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_m_comma_en               : bit := '0';
     pcs_m_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_comma_mask               : bit_vector(9 downto 0) := (others => '0');
     pcs_nb_comma_bef_realign     : bit_vector(1 downto 0) := (others => '0');
     pcs_align_bypass             : bit := '0';
     pcs_dec_bypass               : bit := '0';
     pcs_el_buff_max_comp         : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_diff_bef_comp    : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_only_one_skp     : bit := '0';
     pcs_el_buff_underflow_handle : bit := '0';
     pcs_el_buff_skp_seq_size     : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_char_0       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_1       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_2       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_3       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_size  : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_header_0     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_1     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_2     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_3     : bit_vector(8 downto 0) := (others => '0');
     pcs_buffers_use_cdc          : bit := '0';
     pcs_buffers_bypass           : bit := '0';
     pcs_sync_supported           : bit := '0';
     pcs_replace_bypass           : bit := '0';
     pcs_dscr_bypass              : bit := '0';
     pcs_8b_dscr_sel              : bit := '0';
     pcs_fsm_sel                  : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divf_en_n            : bit := '0';
     pma_pll_divm_en_n            : bit := '0';
     pma_pll_divn_en_n            : bit := '0';
     pma_cdr_cp                   : bit_vector(3 downto 0) := (others => '0');
     pma_ctrl_term                : bit_vector(5 downto 0) := (others => '0');
     pma_pll_cpump_n              : bit_vector(2 downto 0) := (others => '0');
     pma_pll_divf                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divm                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divn                 : bit := '0';
     pma_loopback                 : bit := '0';
     location                     : string := ""
 );
port (
    DSCR_E_I  : in  std_logic;
    DEC_E_I   : in  std_logic;
    ALIGN_E_I : in  std_logic;
    ALIGN_S_I : in  std_logic;
    REP_E_I   : in  std_logic;
    BUF_R_I   : in  std_logic;

    OVS_BS_I1 : in  std_logic;
    OVS_BS_I2 : in  std_logic;

    BUF_FE_I  : in  std_logic;
    RST_N_I   : in  std_logic;
    CDR_R_I   : in  std_logic;
    CKG_RN_I  : in  std_logic;
    PLL_RN_I  : in  std_logic;

    TST_I1    : in  std_logic;
    TST_I2    : in  std_logic;
    TST_I3    : in  std_logic;
    TST_I4    : in  std_logic;

    LOS_O     : out std_logic;

    DATA_O1   : out std_logic;
    DATA_O2   : out std_logic;
    DATA_O3   : out std_logic;
    DATA_O4   : out std_logic;
    DATA_O5   : out std_logic;
    DATA_O6   : out std_logic;
    DATA_O7   : out std_logic;
    DATA_O8   : out std_logic;
    DATA_O9   : out std_logic;
    DATA_O10  : out std_logic;
    DATA_O11  : out std_logic;
    DATA_O12  : out std_logic;
    DATA_O13  : out std_logic;
    DATA_O14  : out std_logic;
    DATA_O15  : out std_logic;
    DATA_O16  : out std_logic;
    DATA_O17  : out std_logic;
    DATA_O18  : out std_logic;
    DATA_O19  : out std_logic;
    DATA_O20  : out std_logic;
    DATA_O21  : out std_logic;
    DATA_O22  : out std_logic;
    DATA_O23  : out std_logic;
    DATA_O24  : out std_logic;
    DATA_O25  : out std_logic;
    DATA_O26  : out std_logic;
    DATA_O27  : out std_logic;
    DATA_O28  : out std_logic;
    DATA_O29  : out std_logic;
    DATA_O30  : out std_logic;
    DATA_O31  : out std_logic;
    DATA_O32  : out std_logic;
    DATA_O33  : out std_logic;
    DATA_O34  : out std_logic;
    DATA_O35  : out std_logic;
    DATA_O36  : out std_logic;
    DATA_O37  : out std_logic;
    DATA_O38  : out std_logic;
    DATA_O39  : out std_logic;
    DATA_O40  : out std_logic;
    DATA_O41  : out std_logic;
    DATA_O42  : out std_logic;
    DATA_O43  : out std_logic;
    DATA_O44  : out std_logic;
    DATA_O45  : out std_logic;
    DATA_O46  : out std_logic;
    DATA_O47  : out std_logic;
    DATA_O48  : out std_logic;
    DATA_O49  : out std_logic;
    DATA_O50  : out std_logic;
    DATA_O51  : out std_logic;
    DATA_O52  : out std_logic;
    DATA_O53  : out std_logic;
    DATA_O54  : out std_logic;
    DATA_O55  : out std_logic;
    DATA_O56  : out std_logic;
    DATA_O57  : out std_logic;
    DATA_O58  : out std_logic;
    DATA_O59  : out std_logic;
    DATA_O60  : out std_logic;
    DATA_O61  : out std_logic;
    DATA_O62  : out std_logic;
    DATA_O63  : out std_logic;
    DATA_O64  : out std_logic;

    CH_COM_O1 : out std_logic;
    CH_COM_O2 : out std_logic;
    CH_COM_O3 : out std_logic;
    CH_COM_O4 : out std_logic;
    CH_COM_O5 : out std_logic;
    CH_COM_O6 : out std_logic;
    CH_COM_O7 : out std_logic;
    CH_COM_O8 : out std_logic;

    CH_K_O1   : out std_logic;
    CH_K_O2   : out std_logic;
    CH_K_O3   : out std_logic;
    CH_K_O4   : out std_logic;
    CH_K_O5   : out std_logic;
    CH_K_O6   : out std_logic;
    CH_K_O7   : out std_logic;
    CH_K_O8   : out std_logic;

    NIT_O1    : out std_logic;
    NIT_O2    : out std_logic;
    NIT_O3    : out std_logic;
    NIT_O4    : out std_logic;
    NIT_O5    : out std_logic;
    NIT_O6    : out std_logic;
    NIT_O7    : out std_logic;
    NIT_O8    : out std_logic;

    D_ERR_O1  : out std_logic;
    D_ERR_O2  : out std_logic;
    D_ERR_O3  : out std_logic;
    D_ERR_O4  : out std_logic;
    D_ERR_O5  : out std_logic;
    D_ERR_O6  : out std_logic;
    D_ERR_O7  : out std_logic;
    D_ERR_O8  : out std_logic;

    CH_A_O1   : out std_logic;
    CH_A_O2   : out std_logic;
    CH_A_O3   : out std_logic;
    CH_A_O4   : out std_logic;
    CH_A_O5   : out std_logic;
    CH_A_O6   : out std_logic;
    CH_A_O7   : out std_logic;
    CH_A_O8   : out std_logic;

    CH_F_O1   : out std_logic;
    CH_F_O2   : out std_logic;
    CH_F_O3   : out std_logic;
    CH_F_O4   : out std_logic;
    CH_F_O5   : out std_logic;
    CH_F_O6   : out std_logic;
    CH_F_O7   : out std_logic;
    CH_F_O8   : out std_logic;

    ALIGN_O   : out std_logic;
    BUSY_O    : out std_logic;

    TST_O1    : out std_logic;
    TST_O2    : out std_logic;
    TST_O3    : out std_logic;
    TST_O4    : out std_logic;
    TST_O5    : out std_logic;
    TST_O6    : out std_logic;
    TST_O7    : out std_logic;
    TST_O8    : out std_logic;

    LOCK_O    : out std_logic;

    LINK      : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);

    RX_I      : in  std_logic
);
end NX_CRX_L;

architecture NX_RTL of NX_CRX_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CRX_L";
    attribute NX_USE of LINK: signal is "LINK";
begin
end NX_RTL;
--#}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_PMA_L definition                                                                2018/11/30
-- =================================================================================================

-- NX_PMA_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_PMA_L is
 generic (
     main_test                   : bit_vector(7 downto 0) := (others => '0');
     rx_pma_half_step            : bit := '0';
     pll_pma_int_data_len        : bit := '0';
     pll_pma_cpump_n             : bit_vector(2 downto 0) := (others => '0');
     pll_pma_divf                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divm                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divn                : bit := '0';
     pll_pma_lvds_mux            : bit := '0';
     pll_pma_mux_ckref           : bit := '0';
     pll_pma_divf_en_n           : bit := '0';
     pll_pma_divm_en_n           : bit := '0';
     pll_pma_divn_en_n           : bit := '0';
     main_clk_to_fabric_div_mode : bit := '0';
     main_clk_to_fabric_div_en   : bit := '0';
     main_clk_to_fabric_sel      : bit := '0';
     main_use_only_usr_clock     : bit := '0';
     main_use_pcs_clk_2          : bit := '0';
     pcs_word_len                : bit_vector(1 downto 0) := (others => '0');
     pcs_ovs_mode                : bit := '0';
     pcs_pll_lock_count          : bit_vector(2 downto 0) := (others => '0');
     location                    : string := ""
 );
port (
    CLK_USER_I  : in  std_logic;
    CLK_REF_I   : in  std_logic;
--    CLK_I1      : in  std_logic;
--    CLK_I2      : in  std_logic;
--    CLK_I3      : in  std_logic;
--    CLK_I4      : in  std_logic;
--    CLK_I5      : in  std_logic;
--    CLK_I6      : in  std_logic;
--    CLK_I7      : in  std_logic;
--    CLK_I8      : in  std_logic;

    PRE_SG_I    : in  std_logic;
    PRE_EN_I    : in  std_logic;

    PRE_IS_I1   : in  std_logic;
    PRE_IS_I2   : in  std_logic;
    PRE_IS_I3   : in  std_logic;
    PRE_IS_I4   : in  std_logic;

    MAIN_SG_I   : in  std_logic;

    MAIN_EN_I1  : in  std_logic;
    MAIN_EN_I2  : in  std_logic;
    MAIN_EN_I3  : in  std_logic;
    MAIN_EN_I4  : in  std_logic;
    MAIN_EN_I5  : in  std_logic;
    MAIN_EN_I6  : in  std_logic;

    MARG_S_I1   : in  std_logic;
    MARG_S_I2   : in  std_logic;
    MARG_S_I3   : in  std_logic;
    MARG_S_I4   : in  std_logic;

    MARG_IS_I1  : in  std_logic;
    MARG_IS_I2  : in  std_logic;
    MARG_IS_I3  : in  std_logic;
    MARG_IS_I4  : in  std_logic;

    MARG_SV_I1  : in  std_logic;
    MARG_SV_I2  : in  std_logic;
    MARG_SV_I3  : in  std_logic;
    MARG_SV_I4  : in  std_logic;
    MARG_SV_I5  : in  std_logic;

    MARG_ISV_I1 : in  std_logic;
    MARG_ISV_I2 : in  std_logic;
    MARG_ISV_I3 : in  std_logic;
    MARG_ISV_I4 : in  std_logic;
    MARG_ISV_I5 : in  std_logic;

    POST_EN_I1  : in  std_logic;
    POST_EN_I2  : in  std_logic;
    POST_EN_I3  : in  std_logic;
    POST_EN_I4  : in  std_logic;
    POST_EN_I5  : in  std_logic;

    POST_SG_I   : in  std_logic;

    POST_IS_I1  : in  std_logic;
    POST_IS_I2  : in  std_logic;
    POST_IS_I3  : in  std_logic;
    POST_IS_I4  : in  std_logic;

    POST_ISV_I1 : in  std_logic;
    POST_ISV_I2 : in  std_logic;
    POST_ISV_I3 : in  std_logic;
    POST_ISV_I4 : in  std_logic;

    TX_SEL_I1   : in  std_logic;
    TX_SEL_I2   : in  std_logic;
    TX_SEL_I3   : in  std_logic;
    TX_SEL_I4   : in  std_logic;
    TX_SEL_I5   : in  std_logic;
    TX_SEL_I6   : in  std_logic;

    CT_CAP_I1   : in  std_logic;
    CT_CAP_I2   : in  std_logic;
    CT_CAP_I3   : in  std_logic;
    CT_CAP_I4   : in  std_logic;

    CT_RESP_I1  : in  std_logic;
    CT_RESP_I2  : in  std_logic;
    CT_RESP_I3  : in  std_logic;
    CT_RESP_I4  : in  std_logic;

    CT_RESN_I1  : in  std_logic;
    CT_RESN_I2  : in  std_logic;
    CT_RESN_I3  : in  std_logic;
    CT_RESN_I4  : in  std_logic;

    M_EYE_I     : in  std_logic;

    RX_SEL_I1   : in  std_logic;
    RX_SEL_I2   : in  std_logic;
    RX_SEL_I3   : in  std_logic;
    RX_SEL_I4   : in  std_logic;
    RX_SEL_I5   : in  std_logic;
    RX_SEL_I6   : in  std_logic;

    PLL_RN_I    : in  std_logic;
    RST_N_I     : in  std_logic;

    CAL_1P_I1   : in  std_logic;
    CAL_1P_I2   : in  std_logic;
    CAL_1P_I3   : in  std_logic;
    CAL_1P_I4   : in  std_logic;
    CAL_1P_I5   : in  std_logic;
    CAL_1P_I6   : in  std_logic;
    CAL_1P_I7   : in  std_logic;
    CAL_1P_I8   : in  std_logic;

    CAL_2N_I1   : in  std_logic;
    CAL_2N_I2   : in  std_logic;
    CAL_2N_I3   : in  std_logic;
    CAL_2N_I4   : in  std_logic;
    CAL_2N_I5   : in  std_logic;
    CAL_2N_I6   : in  std_logic;
    CAL_2N_I7   : in  std_logic;
    CAL_2N_I8   : in  std_logic;

    CAL_3N_I1   : in  std_logic;
    CAL_3N_I2   : in  std_logic;
    CAL_3N_I3   : in  std_logic;
    CAL_3N_I4   : in  std_logic;
    CAL_3N_I5   : in  std_logic;
    CAL_3N_I6   : in  std_logic;
    CAL_3N_I7   : in  std_logic;
    CAL_3N_I8   : in  std_logic;

    CAL_4P_I1   : in  std_logic;
    CAL_4P_I2   : in  std_logic;
    CAL_4P_I3   : in  std_logic;
    CAL_4P_I4   : in  std_logic;
    CAL_4P_I5   : in  std_logic;
    CAL_4P_I6   : in  std_logic;
    CAL_4P_I7   : in  std_logic;
    CAL_4P_I8   : in  std_logic;

    CAL_SEL_I1  : in  std_logic;
    CAL_SEL_I2  : in  std_logic;
    CAL_SEL_I3  : in  std_logic;
    CAL_SEL_I4  : in  std_logic;

    CAL_E_I     : in  std_logic;
    LOCK_E_I    : in  std_logic;
    OVS_E_I     : in  std_logic;

    TST_I1      : in  std_logic;
    TST_I2      : in  std_logic;
    TST_I3      : in  std_logic;
    TST_I4      : in  std_logic;
    TST_I5      : in  std_logic;
    TST_I6      : in  std_logic;
    TST_I7      : in  std_logic;
    TST_I8      : in  std_logic;

    CLK_O       : out std_logic;
    LOCK_O      : out std_logic;
    CAL_O       : out std_logic;

    TST_O1      : out std_logic;
    TST_O2      : out std_logic;
    TST_O3      : out std_logic;
    TST_O4      : out std_logic;
    TST_O5      : out std_logic;
    TST_O6      : out std_logic;
    TST_O7      : out std_logic;
    TST_O8      : out std_logic;

    LINK_TX0    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX1    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX2    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX3    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX4    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX5    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_RX0    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX1    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX2    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX3    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX4    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX5    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);

    CLK_EXT_I   : in  std_logic
);
end NX_PMA_L;

architecture NX_RTL of NX_PMA_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_PMA_L";
    attribute NX_USE of LINK_TX0: signal is "LINK";
    attribute NX_USE of LINK_TX1: signal is "LINK";
    attribute NX_USE of LINK_TX2: signal is "LINK";
    attribute NX_USE of LINK_TX3: signal is "LINK";
    attribute NX_USE of LINK_TX4: signal is "LINK";
    attribute NX_USE of LINK_TX5: signal is "LINK";
    attribute NX_USE of LINK_RX0: signal is "LINK";
    attribute NX_USE of LINK_RX1: signal is "LINK";
    attribute NX_USE of LINK_RX2: signal is "LINK";
    attribute NX_USE of LINK_RX3: signal is "LINK";
    attribute NX_USE of LINK_RX4: signal is "LINK";
    attribute NX_USE of LINK_RX5: signal is "LINK";
begin
end NX_RTL;
--#}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_HSSL_FULL_L definition                                                           2019/06/20
-- =================================================================================================

-- NX_HSSL_FULL_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

architecture NX_RTL of NX_HSSL_FULL_L is

signal LINK_RX0 : std_logic_vector(CRX_LINK_SIZE-1 downto 0);
signal LINK_RX1 : std_logic_vector(CRX_LINK_SIZE-1 downto 0);
signal LINK_RX2 : std_logic_vector(CRX_LINK_SIZE-1 downto 0);
signal LINK_RX3 : std_logic_vector(CRX_LINK_SIZE-1 downto 0);
signal LINK_RX4 : std_logic_vector(CRX_LINK_SIZE-1 downto 0);
signal LINK_RX5 : std_logic_vector(CRX_LINK_SIZE-1 downto 0);
signal LINK_TX0 : std_logic_vector(CTX_LINK_SIZE-1 downto 0);
signal LINK_TX1 : std_logic_vector(CTX_LINK_SIZE-1 downto 0);
signal LINK_TX2 : std_logic_vector(CTX_LINK_SIZE-1 downto 0);
signal LINK_TX3 : std_logic_vector(CTX_LINK_SIZE-1 downto 0);
signal LINK_TX4 : std_logic_vector(CTX_LINK_SIZE-1 downto 0);
signal LINK_TX5 : std_logic_vector(CTX_LINK_SIZE-1 downto 0);

-- component NX_CTX_L#{{{#
component NX_CTX_L
 generic (
     pma_clk_pos          : bit := '0';
     pcs_protocol_size    : bit := '0';
     pcs_8b_scr_sel       : bit := '0';
     pcs_scr_init         : bit_vector(16 downto 0) := (others => '0');
     pcs_scr_bypass       : bit := '0';
     pcs_sync_supported   : bit := '0';
     pcs_replace_bypass   : bit := '0';
     pcs_loopback         : bit := '0';
     pcs_enc_bypass       : bit := '0';
     pcs_polarity         : bit := '0';
     pcs_esistream_fsm_en : bit := '0';
     test                 : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc   : bit := '0';
     pcs_bypass_usr_cdc   : bit := '0';
     pma_loopback         : bit := '0';
     location             : string := ""
 );
port (
    ENC_E_I1 : in  std_logic;
    ENC_E_I2 : in  std_logic;
    ENC_E_I3 : in  std_logic;
    ENC_E_I4 : in  std_logic;
    ENC_E_I5 : in  std_logic;
    ENC_E_I6 : in  std_logic;
    ENC_E_I7 : in  std_logic;
    ENC_E_I8 : in  std_logic;

    CH_K_I1  : in  std_logic;
    CH_K_I2  : in  std_logic;
    CH_K_I3  : in  std_logic;
    CH_K_I4  : in  std_logic;
    CH_K_I5  : in  std_logic;
    CH_K_I6  : in  std_logic;
    CH_K_I7  : in  std_logic;
    CH_K_I8  : in  std_logic;

    SCR_E_I1 : in  std_logic;
    SCR_E_I2 : in  std_logic;
    SCR_E_I3 : in  std_logic;
    SCR_E_I4 : in  std_logic;
    SCR_E_I5 : in  std_logic;
    SCR_E_I6 : in  std_logic;
    SCR_E_I7 : in  std_logic;
    SCR_E_I8 : in  std_logic;

    EOMF_I1  : in  std_logic;
    EOMF_I2  : in  std_logic;
    EOMF_I3  : in  std_logic;
    EOMF_I4  : in  std_logic;
    EOMF_I5  : in  std_logic;
    EOMF_I6  : in  std_logic;
    EOMF_I7  : in  std_logic;
    EOMF_I8  : in  std_logic;

    EOF_I1   : in  std_logic;
    EOF_I2   : in  std_logic;
    EOF_I3   : in  std_logic;
    EOF_I4   : in  std_logic;
    EOF_I5   : in  std_logic;
    EOF_I6   : in  std_logic;
    EOF_I7   : in  std_logic;
    EOF_I8   : in  std_logic;

    REP_E_I  : in  std_logic;
    RST_N_I  : in  std_logic;

    TST_I1   : in  std_logic;
    TST_I2   : in  std_logic;
    TST_I3   : in  std_logic;
    TST_I4   : in  std_logic;

    DATA_I1  : in  std_logic;
    DATA_I2  : in  std_logic;
    DATA_I3  : in  std_logic;
    DATA_I4  : in  std_logic;
    DATA_I5  : in  std_logic;
    DATA_I6  : in  std_logic;
    DATA_I7  : in  std_logic;
    DATA_I8  : in  std_logic;
    DATA_I9  : in  std_logic;
    DATA_I10 : in  std_logic;
    DATA_I11 : in  std_logic;
    DATA_I12 : in  std_logic;
    DATA_I13 : in  std_logic;
    DATA_I14 : in  std_logic;
    DATA_I15 : in  std_logic;
    DATA_I16 : in  std_logic;
    DATA_I17 : in  std_logic;
    DATA_I18 : in  std_logic;
    DATA_I19 : in  std_logic;
    DATA_I20 : in  std_logic;
    DATA_I21 : in  std_logic;
    DATA_I22 : in  std_logic;
    DATA_I23 : in  std_logic;
    DATA_I24 : in  std_logic;
    DATA_I25 : in  std_logic;
    DATA_I26 : in  std_logic;
    DATA_I27 : in  std_logic;
    DATA_I28 : in  std_logic;
    DATA_I29 : in  std_logic;
    DATA_I30 : in  std_logic;
    DATA_I31 : in  std_logic;
    DATA_I32 : in  std_logic;
    DATA_I33 : in  std_logic;
    DATA_I34 : in  std_logic;
    DATA_I35 : in  std_logic;
    DATA_I36 : in  std_logic;
    DATA_I37 : in  std_logic;
    DATA_I38 : in  std_logic;
    DATA_I39 : in  std_logic;
    DATA_I40 : in  std_logic;
    DATA_I41 : in  std_logic;
    DATA_I42 : in  std_logic;
    DATA_I43 : in  std_logic;
    DATA_I44 : in  std_logic;
    DATA_I45 : in  std_logic;
    DATA_I46 : in  std_logic;
    DATA_I47 : in  std_logic;
    DATA_I48 : in  std_logic;
    DATA_I49 : in  std_logic;
    DATA_I50 : in  std_logic;
    DATA_I51 : in  std_logic;
    DATA_I52 : in  std_logic;
    DATA_I53 : in  std_logic;
    DATA_I54 : in  std_logic;
    DATA_I55 : in  std_logic;
    DATA_I56 : in  std_logic;
    DATA_I57 : in  std_logic;
    DATA_I58 : in  std_logic;
    DATA_I59 : in  std_logic;
    DATA_I60 : in  std_logic;
    DATA_I61 : in  std_logic;
    DATA_I62 : in  std_logic;
    DATA_I63 : in  std_logic;
    DATA_I64 : in  std_logic;

    TST_O1   : out std_logic;
    TST_O2   : out std_logic;
    TST_O3   : out std_logic;
    TST_O4   : out std_logic;

    BUSY_O   : out std_logic;
    CLK_E_I  : in  std_logic;

    LINK     : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);

    TX_O     : out std_logic
);
end component;
--#}}}#

-- component NX_CRX_L#{{{#
component NX_CRX_L
 generic (
     test                         : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc           : bit := '0';
     pcs_bypass_usr_cdc           : bit := '0';
     pcs_debug_en                 : bit := '0';
     pcs_fsm_watchdog_en          : bit := '0';
     pma_clk_pos                  : bit := '0';
     pcs_protocol_size            : bit := '0';
     pcs_loopback                 : bit := '0';
     pcs_polarity                 : bit := '0';
     pcs_p_comma_en               : bit := '0';
     pcs_p_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_m_comma_en               : bit := '0';
     pcs_m_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_comma_mask               : bit_vector(9 downto 0) := (others => '0');
     pcs_nb_comma_bef_realign     : bit_vector(1 downto 0) := (others => '0');
     pcs_align_bypass             : bit := '0';
     pcs_dec_bypass               : bit := '0';
     pcs_el_buff_max_comp         : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_diff_bef_comp    : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_only_one_skp     : bit := '0';
     pcs_el_buff_underflow_handle : bit := '0';
     pcs_el_buff_skp_seq_size     : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_char_0       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_1       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_2       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_3       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_size  : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_header_0     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_1     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_2     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_3     : bit_vector(8 downto 0) := (others => '0');
     pcs_buffers_use_cdc          : bit := '0';
     pcs_buffers_bypass           : bit := '0';
     pcs_sync_supported           : bit := '0';
     pcs_replace_bypass           : bit := '0';
     pcs_dscr_bypass              : bit := '0';
     pcs_8b_dscr_sel              : bit := '0';
     pcs_fsm_sel                  : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divf_en_n            : bit := '0';
     pma_pll_divm_en_n            : bit := '0';
     pma_pll_divn_en_n            : bit := '0';
     pma_cdr_cp                   : bit_vector(3 downto 0) := (others => '0');
     pma_ctrl_term                : bit_vector(5 downto 0) := (others => '0');
     pma_pll_cpump_n              : bit_vector(2 downto 0) := (others => '0');
     pma_pll_divf                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divm                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divn                 : bit := '0';
     pma_loopback                 : bit := '0';
     location                     : string := ""
 );
port (
    DSCR_E_I  : in  std_logic;
    DEC_E_I   : in  std_logic;
    ALIGN_E_I : in  std_logic;
    ALIGN_S_I : in  std_logic;
    REP_E_I   : in  std_logic;
    BUF_R_I   : in  std_logic;

    OVS_BS_I1 : in  std_logic;
    OVS_BS_I2 : in  std_logic;

    BUF_FE_I  : in  std_logic;
    RST_N_I   : in  std_logic;
    CDR_R_I   : in  std_logic;
    CKG_RN_I  : in  std_logic;
    PLL_RN_I  : in  std_logic;

    TST_I1    : in  std_logic;
    TST_I2    : in  std_logic;
    TST_I3    : in  std_logic;
    TST_I4    : in  std_logic;

    LOS_O     : out std_logic;

    DATA_O1   : out std_logic;
    DATA_O2   : out std_logic;
    DATA_O3   : out std_logic;
    DATA_O4   : out std_logic;
    DATA_O5   : out std_logic;
    DATA_O6   : out std_logic;
    DATA_O7   : out std_logic;
    DATA_O8   : out std_logic;
    DATA_O9   : out std_logic;
    DATA_O10  : out std_logic;
    DATA_O11  : out std_logic;
    DATA_O12  : out std_logic;
    DATA_O13  : out std_logic;
    DATA_O14  : out std_logic;
    DATA_O15  : out std_logic;
    DATA_O16  : out std_logic;
    DATA_O17  : out std_logic;
    DATA_O18  : out std_logic;
    DATA_O19  : out std_logic;
    DATA_O20  : out std_logic;
    DATA_O21  : out std_logic;
    DATA_O22  : out std_logic;
    DATA_O23  : out std_logic;
    DATA_O24  : out std_logic;
    DATA_O25  : out std_logic;
    DATA_O26  : out std_logic;
    DATA_O27  : out std_logic;
    DATA_O28  : out std_logic;
    DATA_O29  : out std_logic;
    DATA_O30  : out std_logic;
    DATA_O31  : out std_logic;
    DATA_O32  : out std_logic;
    DATA_O33  : out std_logic;
    DATA_O34  : out std_logic;
    DATA_O35  : out std_logic;
    DATA_O36  : out std_logic;
    DATA_O37  : out std_logic;
    DATA_O38  : out std_logic;
    DATA_O39  : out std_logic;
    DATA_O40  : out std_logic;
    DATA_O41  : out std_logic;
    DATA_O42  : out std_logic;
    DATA_O43  : out std_logic;
    DATA_O44  : out std_logic;
    DATA_O45  : out std_logic;
    DATA_O46  : out std_logic;
    DATA_O47  : out std_logic;
    DATA_O48  : out std_logic;
    DATA_O49  : out std_logic;
    DATA_O50  : out std_logic;
    DATA_O51  : out std_logic;
    DATA_O52  : out std_logic;
    DATA_O53  : out std_logic;
    DATA_O54  : out std_logic;
    DATA_O55  : out std_logic;
    DATA_O56  : out std_logic;
    DATA_O57  : out std_logic;
    DATA_O58  : out std_logic;
    DATA_O59  : out std_logic;
    DATA_O60  : out std_logic;
    DATA_O61  : out std_logic;
    DATA_O62  : out std_logic;
    DATA_O63  : out std_logic;
    DATA_O64  : out std_logic;

    CH_COM_O1 : out std_logic;
    CH_COM_O2 : out std_logic;
    CH_COM_O3 : out std_logic;
    CH_COM_O4 : out std_logic;
    CH_COM_O5 : out std_logic;
    CH_COM_O6 : out std_logic;
    CH_COM_O7 : out std_logic;
    CH_COM_O8 : out std_logic;

    CH_K_O1   : out std_logic;
    CH_K_O2   : out std_logic;
    CH_K_O3   : out std_logic;
    CH_K_O4   : out std_logic;
    CH_K_O5   : out std_logic;
    CH_K_O6   : out std_logic;
    CH_K_O7   : out std_logic;
    CH_K_O8   : out std_logic;

    NIT_O1    : out std_logic;
    NIT_O2    : out std_logic;
    NIT_O3    : out std_logic;
    NIT_O4    : out std_logic;
    NIT_O5    : out std_logic;
    NIT_O6    : out std_logic;
    NIT_O7    : out std_logic;
    NIT_O8    : out std_logic;

    D_ERR_O1  : out std_logic;
    D_ERR_O2  : out std_logic;
    D_ERR_O3  : out std_logic;
    D_ERR_O4  : out std_logic;
    D_ERR_O5  : out std_logic;
    D_ERR_O6  : out std_logic;
    D_ERR_O7  : out std_logic;
    D_ERR_O8  : out std_logic;

    CH_A_O1   : out std_logic;
    CH_A_O2   : out std_logic;
    CH_A_O3   : out std_logic;
    CH_A_O4   : out std_logic;
    CH_A_O5   : out std_logic;
    CH_A_O6   : out std_logic;
    CH_A_O7   : out std_logic;
    CH_A_O8   : out std_logic;
    CH_F_O1   : out std_logic;
    CH_F_O2   : out std_logic;
    CH_F_O3   : out std_logic;
    CH_F_O4   : out std_logic;
    CH_F_O5   : out std_logic;
    CH_F_O6   : out std_logic;
    CH_F_O7   : out std_logic;
    CH_F_O8   : out std_logic;

    ALIGN_O   : out std_logic;
    BUSY_O    : out std_logic;

    TST_O1    : out std_logic;
    TST_O2    : out std_logic;
    TST_O3    : out std_logic;
    TST_O4    : out std_logic;
    TST_O5    : out std_logic;
    TST_O6    : out std_logic;
    TST_O7    : out std_logic;
    TST_O8    : out std_logic;

    LOCK_O    : out std_logic;

    LINK      : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);

    RX_I      : in  std_logic
);
end component;
--#}}}#

-- component NX_PMA_L#{{{#
component NX_PMA_L
 generic (
     main_test                   : bit_vector(7 downto 0) := (others => '0');
     rx_pma_half_step            : bit := '0';
     pll_pma_int_data_len        : bit := '0';
     pll_pma_cpump_n             : bit_vector(2 downto 0) := (others => '0');
     pll_pma_divf                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divm                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divn                : bit := '0';
     pll_pma_lvds_mux            : bit := '0';
     pll_pma_mux_ckref           : bit := '0';
     pll_pma_divf_en_n           : bit := '0';
     pll_pma_divm_en_n           : bit := '0';
     pll_pma_divn_en_n           : bit := '0';
     main_clk_to_fabric_div_mode : bit := '0';
     main_clk_to_fabric_div_en   : bit := '0';
     main_clk_to_fabric_sel      : bit := '0';
     main_use_only_usr_clock     : bit := '0';
     main_use_pcs_clk_2          : bit := '0';
     pcs_word_len                : bit_vector(1 downto 0) := (others => '0');
     pcs_ovs_mode                : bit := '0';
     pcs_pll_lock_count          : bit_vector(2 downto 0) := (others => '0');
     location                    : string := ""
 );
port (
    CLK_USER_I  : in  std_logic;
    CLK_REF_I   : in  std_logic;
--    CLK_I1      : in  std_logic;
--    CLK_I2      : in  std_logic;
--    CLK_I3      : in  std_logic;
--    CLK_I4      : in  std_logic;
--    CLK_I5      : in  std_logic;
--    CLK_I6      : in  std_logic;
--    CLK_I7      : in  std_logic;
--    CLK_I8      : in  std_logic;

    PRE_SG_I    : in  std_logic;
    PRE_EN_I    : in  std_logic;

    PRE_IS_I1   : in  std_logic;
    PRE_IS_I2   : in  std_logic;
    PRE_IS_I3   : in  std_logic;
    PRE_IS_I4   : in  std_logic;

    MAIN_SG_I   : in  std_logic;

    MAIN_EN_I1  : in  std_logic;
    MAIN_EN_I2  : in  std_logic;
    MAIN_EN_I3  : in  std_logic;
    MAIN_EN_I4  : in  std_logic;
    MAIN_EN_I5  : in  std_logic;
    MAIN_EN_I6  : in  std_logic;

    MARG_S_I1   : in  std_logic;
    MARG_S_I2   : in  std_logic;
    MARG_S_I3   : in  std_logic;
    MARG_S_I4   : in  std_logic;

    MARG_IS_I1  : in  std_logic;
    MARG_IS_I2  : in  std_logic;
    MARG_IS_I3  : in  std_logic;
    MARG_IS_I4  : in  std_logic;

    MARG_SV_I1  : in  std_logic;
    MARG_SV_I2  : in  std_logic;
    MARG_SV_I3  : in  std_logic;
    MARG_SV_I4  : in  std_logic;
    MARG_SV_I5  : in  std_logic;

    MARG_ISV_I1 : in  std_logic;
    MARG_ISV_I2 : in  std_logic;
    MARG_ISV_I3 : in  std_logic;
    MARG_ISV_I4 : in  std_logic;
    MARG_ISV_I5 : in  std_logic;

    POST_EN_I1  : in  std_logic;
    POST_EN_I2  : in  std_logic;
    POST_EN_I3  : in  std_logic;
    POST_EN_I4  : in  std_logic;
    POST_EN_I5  : in  std_logic;

    POST_SG_I   : in  std_logic;

    POST_IS_I1  : in  std_logic;
    POST_IS_I2  : in  std_logic;
    POST_IS_I3  : in  std_logic;
    POST_IS_I4  : in  std_logic;

    POST_ISV_I1 : in  std_logic;
    POST_ISV_I2 : in  std_logic;
    POST_ISV_I3 : in  std_logic;
    POST_ISV_I4 : in  std_logic;

    TX_SEL_I1   : in  std_logic;
    TX_SEL_I2   : in  std_logic;
    TX_SEL_I3   : in  std_logic;
    TX_SEL_I4   : in  std_logic;
    TX_SEL_I5   : in  std_logic;
    TX_SEL_I6   : in  std_logic;

    CT_CAP_I1   : in  std_logic;
    CT_CAP_I2   : in  std_logic;
    CT_CAP_I3   : in  std_logic;
    CT_CAP_I4   : in  std_logic;

    CT_RESP_I1  : in  std_logic;
    CT_RESP_I2  : in  std_logic;
    CT_RESP_I3  : in  std_logic;
    CT_RESP_I4  : in  std_logic;

    CT_RESN_I1  : in  std_logic;
    CT_RESN_I2  : in  std_logic;
    CT_RESN_I3  : in  std_logic;
    CT_RESN_I4  : in  std_logic;

    M_EYE_I     : in  std_logic;

    RX_SEL_I1   : in  std_logic;
    RX_SEL_I2   : in  std_logic;
    RX_SEL_I3   : in  std_logic;
    RX_SEL_I4   : in  std_logic;
    RX_SEL_I5   : in  std_logic;
    RX_SEL_I6   : in  std_logic;

    PLL_RN_I    : in  std_logic;
    RST_N_I     : in  std_logic;

    CAL_1P_I1   : in  std_logic;
    CAL_1P_I2   : in  std_logic;
    CAL_1P_I3   : in  std_logic;
    CAL_1P_I4   : in  std_logic;
    CAL_1P_I5   : in  std_logic;
    CAL_1P_I6   : in  std_logic;
    CAL_1P_I7   : in  std_logic;
    CAL_1P_I8   : in  std_logic;

    CAL_2N_I1   : in  std_logic;
    CAL_2N_I2   : in  std_logic;
    CAL_2N_I3   : in  std_logic;
    CAL_2N_I4   : in  std_logic;
    CAL_2N_I5   : in  std_logic;
    CAL_2N_I6   : in  std_logic;
    CAL_2N_I7   : in  std_logic;
    CAL_2N_I8   : in  std_logic;

    CAL_3N_I1   : in  std_logic;
    CAL_3N_I2   : in  std_logic;
    CAL_3N_I3   : in  std_logic;
    CAL_3N_I4   : in  std_logic;
    CAL_3N_I5   : in  std_logic;
    CAL_3N_I6   : in  std_logic;
    CAL_3N_I7   : in  std_logic;
    CAL_3N_I8   : in  std_logic;

    CAL_4P_I1   : in  std_logic;
    CAL_4P_I2   : in  std_logic;
    CAL_4P_I3   : in  std_logic;
    CAL_4P_I4   : in  std_logic;
    CAL_4P_I5   : in  std_logic;
    CAL_4P_I6   : in  std_logic;
    CAL_4P_I7   : in  std_logic;
    CAL_4P_I8   : in  std_logic;

    CAL_SEL_I1  : in  std_logic;
    CAL_SEL_I2  : in  std_logic;
    CAL_SEL_I3  : in  std_logic;
    CAL_SEL_I4  : in  std_logic;

    CAL_E_I     : in  std_logic;
    LOCK_E_I    : in  std_logic;
    OVS_E_I     : in  std_logic;

    TST_I1      : in  std_logic;
    TST_I2      : in  std_logic;
    TST_I3      : in  std_logic;
    TST_I4      : in  std_logic;
    TST_I5      : in  std_logic;
    TST_I6      : in  std_logic;
    TST_I7      : in  std_logic;
    TST_I8      : in  std_logic;

    CLK_O       : out std_logic;
    LOCK_O      : out std_logic;
    CAL_O       : out std_logic;

    TST_O1      : out std_logic;
    TST_O2      : out std_logic;
    TST_O3      : out std_logic;
    TST_O4      : out std_logic;
    TST_O5      : out std_logic;
    TST_O6      : out std_logic;
    TST_O7      : out std_logic;
    TST_O8      : out std_logic;

    LINK_TX0    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX1    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX2    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX3    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX4    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_TX5    : inout std_logic_vector(CTX_LINK_SIZE-1 downto 0);
    LINK_RX0    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX1    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX2    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX3    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX4    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);
    LINK_RX5    : inout std_logic_vector(CRX_LINK_SIZE-1 downto 0);

    CLK_EXT_I   : in  std_logic
);
end component;
--#}}}#

begin

-- ctrl: NX_PMA_L#{{{#
ctrl: NX_PMA_L generic map (
    main_test                   => cfg_main_i(33 downto 26)
  , rx_pma_half_step            => cfg_main_i(25)
  , pll_pma_int_data_len        => cfg_main_i(24)
  , pll_pma_cpump_n             => cfg_main_i(23 downto 21)
  , pll_pma_divf                => cfg_main_i(20 downto 19)
  , pll_pma_divm                => cfg_main_i(18 downto 17)
  , pll_pma_divn                => cfg_main_i(16)
  , pll_pma_lvds_mux            => cfg_main_i(15)
  , pll_pma_mux_ckref           => cfg_main_i(14)
  , pll_pma_divf_en_n           => cfg_main_i(13)
  , pll_pma_divm_en_n           => cfg_main_i(12)
  , pll_pma_divn_en_n           => cfg_main_i(11)
  , main_clk_to_fabric_div_mode => cfg_main_i(10)
  , main_clk_to_fabric_div_en   => cfg_main_i(9)
  , main_clk_to_fabric_sel      => cfg_main_i(8)
  , main_use_only_usr_clock     => cfg_main_i(7)
  , main_use_pcs_clk_2          => cfg_main_i(6)
  , pcs_word_len                => cfg_main_i(5 downto 4)
  , pcs_ovs_mode                => cfg_main_i(3)
  , pcs_pll_lock_count          => cfg_main_i(2 downto 0)
  , location                    => location & ":COMMON1.PMA1"
 )
port map (
    CLK_USER_I  => hssl_clk_user_i
  , CLK_REF_I   => hssl_clk_ref_i
--    CLK_I1      => hssl_clock_i(0)
--  , CLK_I2      => hssl_clock_i(1)
--  , CLK_I3      => hssl_clock_i(2)
--  , CLK_I4      => hssl_clock_i(3)
--  , CLK_I5      => hssl_clock_i(4)
--  , CLK_I6      => hssl_clock_i(5)
--  , CLK_I7      => hssl_clock_i(6)
--  , CLK_I8      => hssl_clock_i(7)

  , PRE_SG_I    => usr_com_tx_pma_pre_sign_i
  , PRE_EN_I    => usr_com_tx_pma_pre_en_i

  , PRE_IS_I1   => usr_com_tx_pma_pre_input_sel_i(0)
  , PRE_IS_I2   => usr_com_tx_pma_pre_input_sel_i(1)
  , PRE_IS_I3   => usr_com_tx_pma_pre_input_sel_i(2)
  , PRE_IS_I4   => usr_com_tx_pma_pre_input_sel_i(3)

  , MAIN_SG_I   => usr_com_tx_pma_main_sign_i

  , MAIN_EN_I1  => usr_com_tx_pma_main_en_i(0)
  , MAIN_EN_I2  => usr_com_tx_pma_main_en_i(1)
  , MAIN_EN_I3  => usr_com_tx_pma_main_en_i(2)
  , MAIN_EN_I4  => usr_com_tx_pma_main_en_i(3)
  , MAIN_EN_I5  => usr_com_tx_pma_main_en_i(4)
  , MAIN_EN_I6  => usr_com_tx_pma_main_en_i(5)

  , MARG_S_I1   => usr_com_tx_pma_margin_sel_i(0)
  , MARG_S_I2   => usr_com_tx_pma_margin_sel_i(1)
  , MARG_S_I3   => usr_com_tx_pma_margin_sel_i(2)
  , MARG_S_I4   => usr_com_tx_pma_margin_sel_i(3)

  , MARG_IS_I1  => usr_com_tx_pma_margin_input_sel_i(0)
  , MARG_IS_I2  => usr_com_tx_pma_margin_input_sel_i(1)
  , MARG_IS_I3  => usr_com_tx_pma_margin_input_sel_i(2)
  , MARG_IS_I4  => usr_com_tx_pma_margin_input_sel_i(3)

  , MARG_SV_I1  => usr_com_tx_pma_margin_sel_var_i(0)
  , MARG_SV_I2  => usr_com_tx_pma_margin_sel_var_i(1)
  , MARG_SV_I3  => usr_com_tx_pma_margin_sel_var_i(2)
  , MARG_SV_I4  => usr_com_tx_pma_margin_sel_var_i(3)
  , MARG_SV_I5  => usr_com_tx_pma_margin_sel_var_i(4)

  , MARG_ISV_I1 => usr_com_tx_pma_margin_input_sel_var_i(0)
  , MARG_ISV_I2 => usr_com_tx_pma_margin_input_sel_var_i(1)
  , MARG_ISV_I3 => usr_com_tx_pma_margin_input_sel_var_i(2)
  , MARG_ISV_I4 => usr_com_tx_pma_margin_input_sel_var_i(3)
  , MARG_ISV_I5 => usr_com_tx_pma_margin_input_sel_var_i(4)

  , POST_EN_I1  => usr_com_tx_pma_post_en_i(0)
  , POST_EN_I2  => usr_com_tx_pma_post_en_i(1)
  , POST_EN_I3  => usr_com_tx_pma_post_en_i(2)
  , POST_EN_I4  => usr_com_tx_pma_post_en_i(3)
  , POST_EN_I5  => usr_com_tx_pma_post_en_i(4)

  , POST_SG_I   => usr_com_tx_pma_post_sign_i

  , POST_IS_I1  => usr_com_tx_pma_post_input_sel_i(0)
  , POST_IS_I2  => usr_com_tx_pma_post_input_sel_i(1)
  , POST_IS_I3  => usr_com_tx_pma_post_input_sel_i(2)
  , POST_IS_I4  => usr_com_tx_pma_post_input_sel_i(3)

  , POST_ISV_I1 => usr_com_tx_pma_post_input_sel_var_i(0)
  , POST_ISV_I2 => usr_com_tx_pma_post_input_sel_var_i(1)
  , POST_ISV_I3 => usr_com_tx_pma_post_input_sel_var_i(2)
  , POST_ISV_I4 => usr_com_tx_pma_post_input_sel_var_i(3)

  , TX_SEL_I1   => usr_com_ctrl_tx_sel_i(0)
  , TX_SEL_I2   => usr_com_ctrl_tx_sel_i(1)
  , TX_SEL_I3   => usr_com_ctrl_tx_sel_i(2)
  , TX_SEL_I4   => usr_com_ctrl_tx_sel_i(3)
  , TX_SEL_I5   => usr_com_ctrl_tx_sel_i(4)
  , TX_SEL_I6   => usr_com_ctrl_tx_sel_i(5)

  , CT_CAP_I1   => usr_com_rx_pma_ctle_cap_i(0)
  , CT_CAP_I2   => usr_com_rx_pma_ctle_cap_i(1)
  , CT_CAP_I3   => usr_com_rx_pma_ctle_cap_i(2)
  , CT_CAP_I4   => usr_com_rx_pma_ctle_cap_i(3)

  , CT_RESP_I1  => usr_com_rx_pma_ctle_resp_i(0)
  , CT_RESP_I2  => usr_com_rx_pma_ctle_resp_i(1)
  , CT_RESP_I3  => usr_com_rx_pma_ctle_resp_i(2)
  , CT_RESP_I4  => usr_com_rx_pma_ctle_resp_i(3)

  , CT_RESN_I1  => usr_com_rx_pma_ctle_resn_i(0)
  , CT_RESN_I2  => usr_com_rx_pma_ctle_resn_i(1)
  , CT_RESN_I3  => usr_com_rx_pma_ctle_resn_i(2)
  , CT_RESN_I4  => usr_com_rx_pma_ctle_resn_i(3)

  , M_EYE_I     => usr_com_rx_pma_m_eye_i

  , RX_SEL_I1   => usr_com_ctrl_rx_sel_i(0)
  , RX_SEL_I2   => usr_com_ctrl_rx_sel_i(1)
  , RX_SEL_I3   => usr_com_ctrl_rx_sel_i(2)
  , RX_SEL_I4   => usr_com_ctrl_rx_sel_i(3)
  , RX_SEL_I5   => usr_com_ctrl_rx_sel_i(4)
  , RX_SEL_I6   => usr_com_ctrl_rx_sel_i(5)

  , PLL_RN_I    => usr_pll_pma_rst_n_i
  , RST_N_I     => usr_main_rst_n_i

  , CAL_1P_I1   => usr_calibrate_pma_res_p1_i(0)
  , CAL_1P_I2   => usr_calibrate_pma_res_p1_i(1)
  , CAL_1P_I3   => usr_calibrate_pma_res_p1_i(2)
  , CAL_1P_I4   => usr_calibrate_pma_res_p1_i(3)
  , CAL_1P_I5   => usr_calibrate_pma_res_p1_i(4)
  , CAL_1P_I6   => usr_calibrate_pma_res_p1_i(5)
  , CAL_1P_I7   => usr_calibrate_pma_res_p1_i(6)
  , CAL_1P_I8   => usr_calibrate_pma_res_p1_i(7)

  , CAL_2N_I1   => usr_calibrate_pma_res_n2_i(0)
  , CAL_2N_I2   => usr_calibrate_pma_res_n2_i(1)
  , CAL_2N_I3   => usr_calibrate_pma_res_n2_i(2)
  , CAL_2N_I4   => usr_calibrate_pma_res_n2_i(3)
  , CAL_2N_I5   => usr_calibrate_pma_res_n2_i(4)
  , CAL_2N_I6   => usr_calibrate_pma_res_n2_i(5)
  , CAL_2N_I7   => usr_calibrate_pma_res_n2_i(6)
  , CAL_2N_I8   => usr_calibrate_pma_res_n2_i(7)

  , CAL_3N_I1   => usr_calibrate_pma_res_n3_i(0)
  , CAL_3N_I2   => usr_calibrate_pma_res_n3_i(1)
  , CAL_3N_I3   => usr_calibrate_pma_res_n3_i(2)
  , CAL_3N_I4   => usr_calibrate_pma_res_n3_i(3)
  , CAL_3N_I5   => usr_calibrate_pma_res_n3_i(4)
  , CAL_3N_I6   => usr_calibrate_pma_res_n3_i(5)
  , CAL_3N_I7   => usr_calibrate_pma_res_n3_i(6)
  , CAL_3N_I8   => usr_calibrate_pma_res_n3_i(7)

  , CAL_4P_I1   => usr_calibrate_pma_res_p4_i(0)
  , CAL_4P_I2   => usr_calibrate_pma_res_p4_i(1)
  , CAL_4P_I3   => usr_calibrate_pma_res_p4_i(2)
  , CAL_4P_I4   => usr_calibrate_pma_res_p4_i(3)
  , CAL_4P_I5   => usr_calibrate_pma_res_p4_i(4)
  , CAL_4P_I6   => usr_calibrate_pma_res_p4_i(5)
  , CAL_4P_I7   => usr_calibrate_pma_res_p4_i(6)
  , CAL_4P_I8   => usr_calibrate_pma_res_p4_i(7)

  , CAL_SEL_I1  => usr_calibrate_pma_sel_i(0)
  , CAL_SEL_I2  => usr_calibrate_pma_sel_i(1)
  , CAL_SEL_I3  => usr_calibrate_pma_sel_i(2)
  , CAL_SEL_I4  => usr_calibrate_pma_sel_i(3)

  , CAL_E_I     => usr_calibrate_pma_en_i
  , LOCK_E_I    => usr_pcs_ctrl_pll_lock_en_i
  , OVS_E_I     => usr_pcs_ctrl_ovs_en_i

  , TST_I1      => usr_main_test_i(0)
  , TST_I2      => usr_main_test_i(1)
  , TST_I3      => usr_main_test_i(2)
  , TST_I4      => usr_main_test_i(3)
  , TST_I5      => usr_main_test_i(4)
  , TST_I6      => usr_main_test_i(5)
  , TST_I7      => usr_main_test_i(6)
  , TST_I8      => usr_main_test_i(7)

  , CLK_O       => hssl_clock_o
  , LOCK_O      => usr_pll_lock_o
  , CAL_O       => usr_calibrate_pma_out_o

  , TST_O1      => usr_main_test_o(0)
  , TST_O2      => usr_main_test_o(1)
  , TST_O3      => usr_main_test_o(2)
  , TST_O4      => usr_main_test_o(3)
  , TST_O5      => usr_main_test_o(4)
  , TST_O6      => usr_main_test_o(5)
  , TST_O7      => usr_main_test_o(6)
  , TST_O8      => usr_main_test_o(7)

  , LINK_TX0    => LINK_TX0
  , LINK_TX1    => LINK_TX1
  , LINK_TX2    => LINK_TX2
  , LINK_TX3    => LINK_TX3
  , LINK_TX4    => LINK_TX4
  , LINK_TX5    => LINK_TX5
  , LINK_RX0    => LINK_RX0
  , LINK_RX1    => LINK_RX1
  , LINK_RX2    => LINK_RX2
  , LINK_RX3    => LINK_RX3
  , LINK_RX4    => LINK_RX4
  , LINK_RX5    => LINK_RX5

  , CLK_EXT_I   => pma_clk_ext_i
);
--#}}}#

-- txlane0: NX_CTX_L#{{{#
txlane0: NX_CTX_L generic map (
   pma_clk_pos          => cfg_tx0_i(31)
 , pcs_protocol_size    => cfg_tx0_i(30)
 , pcs_8b_scr_sel       => cfg_tx0_i(29)
 , pcs_scr_init         => cfg_tx0_i(28 downto 12)
 , pcs_scr_bypass       => cfg_tx0_i(11)
 , pcs_sync_supported   => cfg_tx0_i(10)
 , pcs_replace_bypass   => cfg_tx0_i(9)
 , pcs_enc_bypass       => cfg_tx0_i(8)
 , pcs_loopback         => cfg_tx0_i(7)
 , pcs_polarity         => cfg_tx0_i(6)
 , pcs_esistream_fsm_en => cfg_tx0_i(5)
 , test                 => cfg_tx0_i(4 downto 3)
 , pcs_bypass_pma_cdc   => cfg_tx0_i(2)
 , pcs_bypass_usr_cdc   => cfg_tx0_i(1)
 , pma_loopback         => cfg_tx0_i(0)
 , location             => location & ":CHANNEL1.CTX1"
 )
port map (
    ENC_E_I1 => usr_tx0_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx0_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx0_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx0_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx0_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx0_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx0_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx0_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx0_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx0_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx0_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx0_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx0_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx0_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx0_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx0_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx0_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx0_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx0_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx0_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx0_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx0_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx0_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx0_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx0_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx0_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx0_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx0_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx0_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx0_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx0_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx0_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx0_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx0_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx0_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx0_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx0_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx0_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx0_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx0_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx0_ctrl_replace_en_i
  , RST_N_I  => usr_tx0_rst_n_i

  , TST_I1   => usr_tx0_test_i(0)
  , TST_I2   => usr_tx0_test_i(1)
  , TST_I3   => usr_tx0_test_i(2)
  , TST_I4   => usr_tx0_test_i(3)

  , DATA_I1  => usr_tx0_data_i(0)
  , DATA_I2  => usr_tx0_data_i(1)
  , DATA_I3  => usr_tx0_data_i(2)
  , DATA_I4  => usr_tx0_data_i(3)
  , DATA_I5  => usr_tx0_data_i(4)
  , DATA_I6  => usr_tx0_data_i(5)
  , DATA_I7  => usr_tx0_data_i(6)
  , DATA_I8  => usr_tx0_data_i(7)
  , DATA_I9  => usr_tx0_data_i(8)
  , DATA_I10 => usr_tx0_data_i(9)
  , DATA_I11 => usr_tx0_data_i(10)
  , DATA_I12 => usr_tx0_data_i(11)
  , DATA_I13 => usr_tx0_data_i(12)
  , DATA_I14 => usr_tx0_data_i(13)
  , DATA_I15 => usr_tx0_data_i(14)
  , DATA_I16 => usr_tx0_data_i(15)
  , DATA_I17 => usr_tx0_data_i(16)
  , DATA_I18 => usr_tx0_data_i(17)
  , DATA_I19 => usr_tx0_data_i(18)
  , DATA_I20 => usr_tx0_data_i(19)
  , DATA_I21 => usr_tx0_data_i(20)
  , DATA_I22 => usr_tx0_data_i(21)
  , DATA_I23 => usr_tx0_data_i(22)
  , DATA_I24 => usr_tx0_data_i(23)
  , DATA_I25 => usr_tx0_data_i(24)
  , DATA_I26 => usr_tx0_data_i(25)
  , DATA_I27 => usr_tx0_data_i(26)
  , DATA_I28 => usr_tx0_data_i(27)
  , DATA_I29 => usr_tx0_data_i(28)
  , DATA_I30 => usr_tx0_data_i(29)
  , DATA_I31 => usr_tx0_data_i(30)
  , DATA_I32 => usr_tx0_data_i(31)
  , DATA_I33 => usr_tx0_data_i(32)
  , DATA_I34 => usr_tx0_data_i(33)
  , DATA_I35 => usr_tx0_data_i(34)
  , DATA_I36 => usr_tx0_data_i(35)
  , DATA_I37 => usr_tx0_data_i(36)
  , DATA_I38 => usr_tx0_data_i(37)
  , DATA_I39 => usr_tx0_data_i(38)
  , DATA_I40 => usr_tx0_data_i(39)
  , DATA_I41 => usr_tx0_data_i(40)
  , DATA_I42 => usr_tx0_data_i(41)
  , DATA_I43 => usr_tx0_data_i(42)
  , DATA_I44 => usr_tx0_data_i(43)
  , DATA_I45 => usr_tx0_data_i(44)
  , DATA_I46 => usr_tx0_data_i(45)
  , DATA_I47 => usr_tx0_data_i(46)
  , DATA_I48 => usr_tx0_data_i(47)
  , DATA_I49 => usr_tx0_data_i(48)
  , DATA_I50 => usr_tx0_data_i(49)
  , DATA_I51 => usr_tx0_data_i(50)
  , DATA_I52 => usr_tx0_data_i(51)
  , DATA_I53 => usr_tx0_data_i(52)
  , DATA_I54 => usr_tx0_data_i(53)
  , DATA_I55 => usr_tx0_data_i(54)
  , DATA_I56 => usr_tx0_data_i(55)
  , DATA_I57 => usr_tx0_data_i(56)
  , DATA_I58 => usr_tx0_data_i(57)
  , DATA_I59 => usr_tx0_data_i(58)
  , DATA_I60 => usr_tx0_data_i(59)
  , DATA_I61 => usr_tx0_data_i(60)
  , DATA_I62 => usr_tx0_data_i(61)
  , DATA_I63 => usr_tx0_data_i(62)
  , DATA_I64 => usr_tx0_data_i(63)

  , TST_O1   => usr_tx0_test_o(0)
  , TST_O2   => usr_tx0_test_o(1)
  , TST_O3   => usr_tx0_test_o(2)
  , TST_O4   => usr_tx0_test_o(3)

  , BUSY_O   => usr_tx0_busy_o
  , CLK_E_I  => usr_tx0_pma_clk_en_i

  , LINK     => LINK_TX0

  , TX_O     => pma_tx0_o
);
--#}}}#

-- rxlane0: NX_CRX_L#{{{#
rxlane0: NX_CRX_L generic map (
    test                         => cfg_rx0_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx0_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx0_i(156)
  , pcs_debug_en                 => cfg_rx0_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx0_i(154)
  , pma_clk_pos                  => cfg_rx0_i(153)
  , pcs_protocol_size            => cfg_rx0_i(152)
  , pcs_loopback                 => cfg_rx0_i(151)
  , pcs_polarity                 => cfg_rx0_i(150)
  , pcs_p_comma_en               => cfg_rx0_i(149)
  , pcs_p_comma_val              => cfg_rx0_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx0_i(138)
  , pcs_m_comma_val              => cfg_rx0_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx0_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx0_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx0_i(115)
  , pcs_dec_bypass               => cfg_rx0_i(114)
  , pcs_el_buff_max_comp         => cfg_rx0_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx0_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx0_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx0_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx0_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx0_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx0_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx0_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx0_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx0_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx0_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx0_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx0_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx0_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx0_i(29)
  , pcs_buffers_bypass           => cfg_rx0_i(28)
  , pcs_sync_supported           => cfg_rx0_i(27)
  , pcs_replace_bypass           => cfg_rx0_i(26)
  , pcs_dscr_bypass              => cfg_rx0_i(25)
  , pcs_8b_dscr_sel              => cfg_rx0_i(24)
  , pcs_fsm_sel                  => cfg_rx0_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx0_i(21)
  , pma_pll_divm_en_n            => cfg_rx0_i(20)
  , pma_pll_divn_en_n            => cfg_rx0_i(19)
  , pma_cdr_cp                   => cfg_rx0_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx0_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx0_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx0_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx0_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx0_i(1)
  , pma_loopback                 => cfg_rx0_i(0)
  , location                     => location & ":CHANNEL1.CRX1"
 )
port map (
    DSCR_E_I  => usr_rx0_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx0_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx0_ctrl_align_en_i
  , ALIGN_S_I => usr_rx0_ctrl_align_sync_i
  , REP_E_I   => usr_rx0_ctrl_replace_en_i
  , BUF_R_I   => usr_rx0_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx0_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx0_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx0_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx0_rst_n_i
  , CDR_R_I   => usr_rx0_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx0_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx0_pma_pll_rst_n_i

  , TST_I1    => usr_rx0_test_i(0)
  , TST_I2    => usr_rx0_test_i(1)
  , TST_I3    => usr_rx0_test_i(2)
  , TST_I4    => usr_rx0_test_i(3)

  , LOS_O     => usr_rx0_pma_loss_of_signal_o

  , DATA_O1   => usr_rx0_data_o(0)
  , DATA_O2   => usr_rx0_data_o(1)
  , DATA_O3   => usr_rx0_data_o(2)
  , DATA_O4   => usr_rx0_data_o(3)
  , DATA_O5   => usr_rx0_data_o(4)
  , DATA_O6   => usr_rx0_data_o(5)
  , DATA_O7   => usr_rx0_data_o(6)
  , DATA_O8   => usr_rx0_data_o(7)
  , DATA_O9   => usr_rx0_data_o(8)
  , DATA_O10  => usr_rx0_data_o(9)
  , DATA_O11  => usr_rx0_data_o(10)
  , DATA_O12  => usr_rx0_data_o(11)
  , DATA_O13  => usr_rx0_data_o(12)
  , DATA_O14  => usr_rx0_data_o(13)
  , DATA_O15  => usr_rx0_data_o(14)
  , DATA_O16  => usr_rx0_data_o(15)
  , DATA_O17  => usr_rx0_data_o(16)
  , DATA_O18  => usr_rx0_data_o(17)
  , DATA_O19  => usr_rx0_data_o(18)
  , DATA_O20  => usr_rx0_data_o(19)
  , DATA_O21  => usr_rx0_data_o(20)
  , DATA_O22  => usr_rx0_data_o(21)
  , DATA_O23  => usr_rx0_data_o(22)
  , DATA_O24  => usr_rx0_data_o(23)
  , DATA_O25  => usr_rx0_data_o(24)
  , DATA_O26  => usr_rx0_data_o(25)
  , DATA_O27  => usr_rx0_data_o(26)
  , DATA_O28  => usr_rx0_data_o(27)
  , DATA_O29  => usr_rx0_data_o(28)
  , DATA_O30  => usr_rx0_data_o(29)
  , DATA_O31  => usr_rx0_data_o(30)
  , DATA_O32  => usr_rx0_data_o(31)
  , DATA_O33  => usr_rx0_data_o(32)
  , DATA_O34  => usr_rx0_data_o(33)
  , DATA_O35  => usr_rx0_data_o(34)
  , DATA_O36  => usr_rx0_data_o(35)
  , DATA_O37  => usr_rx0_data_o(36)
  , DATA_O38  => usr_rx0_data_o(37)
  , DATA_O39  => usr_rx0_data_o(38)
  , DATA_O40  => usr_rx0_data_o(39)
  , DATA_O41  => usr_rx0_data_o(40)
  , DATA_O42  => usr_rx0_data_o(41)
  , DATA_O43  => usr_rx0_data_o(42)
  , DATA_O44  => usr_rx0_data_o(43)
  , DATA_O45  => usr_rx0_data_o(44)
  , DATA_O46  => usr_rx0_data_o(45)
  , DATA_O47  => usr_rx0_data_o(46)
  , DATA_O48  => usr_rx0_data_o(47)
  , DATA_O49  => usr_rx0_data_o(48)
  , DATA_O50  => usr_rx0_data_o(49)
  , DATA_O51  => usr_rx0_data_o(50)
  , DATA_O52  => usr_rx0_data_o(51)
  , DATA_O53  => usr_rx0_data_o(52)
  , DATA_O54  => usr_rx0_data_o(53)
  , DATA_O55  => usr_rx0_data_o(54)
  , DATA_O56  => usr_rx0_data_o(55)
  , DATA_O57  => usr_rx0_data_o(56)
  , DATA_O58  => usr_rx0_data_o(57)
  , DATA_O59  => usr_rx0_data_o(58)
  , DATA_O60  => usr_rx0_data_o(59)
  , DATA_O61  => usr_rx0_data_o(60)
  , DATA_O62  => usr_rx0_data_o(61)
  , DATA_O63  => usr_rx0_data_o(62)
  , DATA_O64  => usr_rx0_data_o(63)

  , CH_COM_O1 => usr_rx0_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx0_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx0_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx0_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx0_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx0_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx0_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx0_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx0_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx0_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx0_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx0_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx0_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx0_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx0_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx0_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx0_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx0_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx0_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx0_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx0_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx0_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx0_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx0_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx0_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx0_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx0_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx0_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx0_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx0_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx0_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx0_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx0_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx0_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx0_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx0_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx0_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx0_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx0_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx0_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx0_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx0_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx0_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx0_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx0_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx0_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx0_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx0_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx0_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx0_busy_o

  , TST_O1    => usr_rx0_test_o(0)
  , TST_O2    => usr_rx0_test_o(1)
  , TST_O3    => usr_rx0_test_o(2)
  , TST_O4    => usr_rx0_test_o(3)
  , TST_O5    => usr_rx0_test_o(4)
  , TST_O6    => usr_rx0_test_o(5)
  , TST_O7    => usr_rx0_test_o(6)
  , TST_O8    => usr_rx0_test_o(7)

  , LOCK_O    => usr_rx0_pll_lock_o

  , LINK      => LINK_RX0

  , RX_I      => pma_rx0_i
);
--#}}}#

-- txlane1: NX_CTX_L#{{{#
txlane1: NX_CTX_L generic map (
   pma_clk_pos          => cfg_tx1_i(31)
 , pcs_protocol_size    => cfg_tx1_i(30)
 , pcs_8b_scr_sel       => cfg_tx1_i(29)
 , pcs_scr_init         => cfg_tx1_i(28 downto 12)
 , pcs_scr_bypass       => cfg_tx1_i(11)
 , pcs_sync_supported   => cfg_tx1_i(10)
 , pcs_replace_bypass   => cfg_tx1_i(9)
 , pcs_enc_bypass       => cfg_tx1_i(8)
 , pcs_loopback         => cfg_tx1_i(7)
 , pcs_polarity         => cfg_tx1_i(6)
 , pcs_esistream_fsm_en => cfg_tx1_i(5)
 , test                 => cfg_tx1_i(4 downto 3)
 , pcs_bypass_pma_cdc   => cfg_tx1_i(2)
 , pcs_bypass_usr_cdc   => cfg_tx1_i(1)
 , pma_loopback         => cfg_tx1_i(0)
 , location             => location & ":CHANNEL2.CTX1"
 )
port map (
    ENC_E_I1 => usr_tx1_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx1_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx1_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx1_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx1_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx1_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx1_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx1_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx1_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx1_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx1_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx1_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx1_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx1_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx1_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx1_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx1_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx1_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx1_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx1_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx1_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx1_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx1_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx1_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx1_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx1_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx1_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx1_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx1_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx1_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx1_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx1_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx1_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx1_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx1_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx1_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx1_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx1_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx1_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx1_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx1_ctrl_replace_en_i
  , RST_N_I  => usr_tx1_rst_n_i

  , TST_I1   => usr_tx1_test_i(0)
  , TST_I2   => usr_tx1_test_i(1)
  , TST_I3   => usr_tx1_test_i(2)
  , TST_I4   => usr_tx1_test_i(3)

  , DATA_I1  => usr_tx1_data_i(0)
  , DATA_I2  => usr_tx1_data_i(1)
  , DATA_I3  => usr_tx1_data_i(2)
  , DATA_I4  => usr_tx1_data_i(3)
  , DATA_I5  => usr_tx1_data_i(4)
  , DATA_I6  => usr_tx1_data_i(5)
  , DATA_I7  => usr_tx1_data_i(6)
  , DATA_I8  => usr_tx1_data_i(7)
  , DATA_I9  => usr_tx1_data_i(8)
  , DATA_I10 => usr_tx1_data_i(9)
  , DATA_I11 => usr_tx1_data_i(10)
  , DATA_I12 => usr_tx1_data_i(11)
  , DATA_I13 => usr_tx1_data_i(12)
  , DATA_I14 => usr_tx1_data_i(13)
  , DATA_I15 => usr_tx1_data_i(14)
  , DATA_I16 => usr_tx1_data_i(15)
  , DATA_I17 => usr_tx1_data_i(16)
  , DATA_I18 => usr_tx1_data_i(17)
  , DATA_I19 => usr_tx1_data_i(18)
  , DATA_I20 => usr_tx1_data_i(19)
  , DATA_I21 => usr_tx1_data_i(20)
  , DATA_I22 => usr_tx1_data_i(21)
  , DATA_I23 => usr_tx1_data_i(22)
  , DATA_I24 => usr_tx1_data_i(23)
  , DATA_I25 => usr_tx1_data_i(24)
  , DATA_I26 => usr_tx1_data_i(25)
  , DATA_I27 => usr_tx1_data_i(26)
  , DATA_I28 => usr_tx1_data_i(27)
  , DATA_I29 => usr_tx1_data_i(28)
  , DATA_I30 => usr_tx1_data_i(29)
  , DATA_I31 => usr_tx1_data_i(30)
  , DATA_I32 => usr_tx1_data_i(31)
  , DATA_I33 => usr_tx1_data_i(32)
  , DATA_I34 => usr_tx1_data_i(33)
  , DATA_I35 => usr_tx1_data_i(34)
  , DATA_I36 => usr_tx1_data_i(35)
  , DATA_I37 => usr_tx1_data_i(36)
  , DATA_I38 => usr_tx1_data_i(37)
  , DATA_I39 => usr_tx1_data_i(38)
  , DATA_I40 => usr_tx1_data_i(39)
  , DATA_I41 => usr_tx1_data_i(40)
  , DATA_I42 => usr_tx1_data_i(41)
  , DATA_I43 => usr_tx1_data_i(42)
  , DATA_I44 => usr_tx1_data_i(43)
  , DATA_I45 => usr_tx1_data_i(44)
  , DATA_I46 => usr_tx1_data_i(45)
  , DATA_I47 => usr_tx1_data_i(46)
  , DATA_I48 => usr_tx1_data_i(47)
  , DATA_I49 => usr_tx1_data_i(48)
  , DATA_I50 => usr_tx1_data_i(49)
  , DATA_I51 => usr_tx1_data_i(50)
  , DATA_I52 => usr_tx1_data_i(51)
  , DATA_I53 => usr_tx1_data_i(52)
  , DATA_I54 => usr_tx1_data_i(53)
  , DATA_I55 => usr_tx1_data_i(54)
  , DATA_I56 => usr_tx1_data_i(55)
  , DATA_I57 => usr_tx1_data_i(56)
  , DATA_I58 => usr_tx1_data_i(57)
  , DATA_I59 => usr_tx1_data_i(58)
  , DATA_I60 => usr_tx1_data_i(59)
  , DATA_I61 => usr_tx1_data_i(60)
  , DATA_I62 => usr_tx1_data_i(61)
  , DATA_I63 => usr_tx1_data_i(62)
  , DATA_I64 => usr_tx1_data_i(63)

  , TST_O1   => usr_tx1_test_o(0)
  , TST_O2   => usr_tx1_test_o(1)
  , TST_O3   => usr_tx1_test_o(2)
  , TST_O4   => usr_tx1_test_o(3)

  , BUSY_O   => usr_tx1_busy_o
  , CLK_E_I  => usr_tx1_pma_clk_en_i

  , LINK     => LINK_TX1

  , TX_O     => pma_tx1_o
);
--#}}}#

-- rxlane1: NX_CRX_L#{{{#
rxlane1: NX_CRX_L generic map (
    test                         => cfg_rx1_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx1_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx1_i(156)
  , pcs_debug_en                 => cfg_rx1_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx1_i(154)
  , pma_clk_pos                  => cfg_rx1_i(153)
  , pcs_protocol_size            => cfg_rx1_i(152)
  , pcs_loopback                 => cfg_rx1_i(151)
  , pcs_polarity                 => cfg_rx1_i(150)
  , pcs_p_comma_en               => cfg_rx1_i(149)
  , pcs_p_comma_val              => cfg_rx1_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx1_i(138)
  , pcs_m_comma_val              => cfg_rx1_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx1_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx1_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx1_i(115)
  , pcs_dec_bypass               => cfg_rx1_i(114)
  , pcs_el_buff_max_comp         => cfg_rx1_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx1_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx1_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx1_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx1_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx1_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx1_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx1_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx1_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx1_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx1_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx1_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx1_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx1_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx1_i(29)
  , pcs_buffers_bypass           => cfg_rx1_i(28)
  , pcs_sync_supported           => cfg_rx1_i(27)
  , pcs_replace_bypass           => cfg_rx1_i(26)
  , pcs_dscr_bypass              => cfg_rx1_i(25)
  , pcs_8b_dscr_sel              => cfg_rx1_i(24)
  , pcs_fsm_sel                  => cfg_rx1_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx1_i(21)
  , pma_pll_divm_en_n            => cfg_rx1_i(20)
  , pma_pll_divn_en_n            => cfg_rx1_i(19)
  , pma_cdr_cp                   => cfg_rx1_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx1_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx1_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx1_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx1_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx1_i(1)
  , pma_loopback                 => cfg_rx1_i(0)
  , location                     => location & ":CHANNEL2.CRX1"
 )
port map (
    DSCR_E_I  => usr_rx1_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx1_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx1_ctrl_align_en_i
  , ALIGN_S_I => usr_rx1_ctrl_align_sync_i
  , REP_E_I   => usr_rx1_ctrl_replace_en_i
  , BUF_R_I   => usr_rx1_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx1_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx1_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx1_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx1_rst_n_i
  , CDR_R_I   => usr_rx1_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx1_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx1_pma_pll_rst_n_i

  , TST_I1    => usr_rx1_test_i(0)
  , TST_I2    => usr_rx1_test_i(1)
  , TST_I3    => usr_rx1_test_i(2)
  , TST_I4    => usr_rx1_test_i(3)

  , LOS_O     => usr_rx1_pma_loss_of_signal_o

  , DATA_O1   => usr_rx1_data_o(0)
  , DATA_O2   => usr_rx1_data_o(1)
  , DATA_O3   => usr_rx1_data_o(2)
  , DATA_O4   => usr_rx1_data_o(3)
  , DATA_O5   => usr_rx1_data_o(4)
  , DATA_O6   => usr_rx1_data_o(5)
  , DATA_O7   => usr_rx1_data_o(6)
  , DATA_O8   => usr_rx1_data_o(7)
  , DATA_O9   => usr_rx1_data_o(8)
  , DATA_O10  => usr_rx1_data_o(9)
  , DATA_O11  => usr_rx1_data_o(10)
  , DATA_O12  => usr_rx1_data_o(11)
  , DATA_O13  => usr_rx1_data_o(12)
  , DATA_O14  => usr_rx1_data_o(13)
  , DATA_O15  => usr_rx1_data_o(14)
  , DATA_O16  => usr_rx1_data_o(15)
  , DATA_O17  => usr_rx1_data_o(16)
  , DATA_O18  => usr_rx1_data_o(17)
  , DATA_O19  => usr_rx1_data_o(18)
  , DATA_O20  => usr_rx1_data_o(19)
  , DATA_O21  => usr_rx1_data_o(20)
  , DATA_O22  => usr_rx1_data_o(21)
  , DATA_O23  => usr_rx1_data_o(22)
  , DATA_O24  => usr_rx1_data_o(23)
  , DATA_O25  => usr_rx1_data_o(24)
  , DATA_O26  => usr_rx1_data_o(25)
  , DATA_O27  => usr_rx1_data_o(26)
  , DATA_O28  => usr_rx1_data_o(27)
  , DATA_O29  => usr_rx1_data_o(28)
  , DATA_O30  => usr_rx1_data_o(29)
  , DATA_O31  => usr_rx1_data_o(30)
  , DATA_O32  => usr_rx1_data_o(31)
  , DATA_O33  => usr_rx1_data_o(32)
  , DATA_O34  => usr_rx1_data_o(33)
  , DATA_O35  => usr_rx1_data_o(34)
  , DATA_O36  => usr_rx1_data_o(35)
  , DATA_O37  => usr_rx1_data_o(36)
  , DATA_O38  => usr_rx1_data_o(37)
  , DATA_O39  => usr_rx1_data_o(38)
  , DATA_O40  => usr_rx1_data_o(39)
  , DATA_O41  => usr_rx1_data_o(40)
  , DATA_O42  => usr_rx1_data_o(41)
  , DATA_O43  => usr_rx1_data_o(42)
  , DATA_O44  => usr_rx1_data_o(43)
  , DATA_O45  => usr_rx1_data_o(44)
  , DATA_O46  => usr_rx1_data_o(45)
  , DATA_O47  => usr_rx1_data_o(46)
  , DATA_O48  => usr_rx1_data_o(47)
  , DATA_O49  => usr_rx1_data_o(48)
  , DATA_O50  => usr_rx1_data_o(49)
  , DATA_O51  => usr_rx1_data_o(50)
  , DATA_O52  => usr_rx1_data_o(51)
  , DATA_O53  => usr_rx1_data_o(52)
  , DATA_O54  => usr_rx1_data_o(53)
  , DATA_O55  => usr_rx1_data_o(54)
  , DATA_O56  => usr_rx1_data_o(55)
  , DATA_O57  => usr_rx1_data_o(56)
  , DATA_O58  => usr_rx1_data_o(57)
  , DATA_O59  => usr_rx1_data_o(58)
  , DATA_O60  => usr_rx1_data_o(59)
  , DATA_O61  => usr_rx1_data_o(60)
  , DATA_O62  => usr_rx1_data_o(61)
  , DATA_O63  => usr_rx1_data_o(62)
  , DATA_O64  => usr_rx1_data_o(63)

  , CH_COM_O1 => usr_rx1_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx1_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx1_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx1_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx1_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx1_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx1_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx1_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx1_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx1_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx1_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx1_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx1_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx1_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx1_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx1_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx1_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx1_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx1_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx1_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx1_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx1_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx1_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx1_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx1_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx1_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx1_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx1_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx1_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx1_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx1_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx1_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx1_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx1_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx1_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx1_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx1_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx1_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx1_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx1_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx1_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx1_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx1_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx1_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx1_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx1_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx1_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx1_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx1_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx1_busy_o

  , TST_O1    => usr_rx1_test_o(0)
  , TST_O2    => usr_rx1_test_o(1)
  , TST_O3    => usr_rx1_test_o(2)
  , TST_O4    => usr_rx1_test_o(3)
  , TST_O5    => usr_rx1_test_o(4)
  , TST_O6    => usr_rx1_test_o(5)
  , TST_O7    => usr_rx1_test_o(6)
  , TST_O8    => usr_rx1_test_o(7)

  , LOCK_O    => usr_rx1_pll_lock_o

  , LINK      => LINK_RX1

  , RX_I      => pma_rx1_i
);
--#}}}#

-- txlane2: NX_CTX_L#{{{#
txlane2: NX_CTX_L generic map (
   pma_clk_pos          => cfg_tx2_i(31)
 , pcs_protocol_size    => cfg_tx2_i(30)
 , pcs_8b_scr_sel       => cfg_tx2_i(29)
 , pcs_scr_init         => cfg_tx2_i(28 downto 12)
 , pcs_scr_bypass       => cfg_tx2_i(11)
 , pcs_sync_supported   => cfg_tx2_i(10)
 , pcs_replace_bypass   => cfg_tx2_i(9)
 , pcs_enc_bypass       => cfg_tx2_i(8)
 , pcs_loopback         => cfg_tx2_i(7)
 , pcs_polarity         => cfg_tx2_i(6)
 , pcs_esistream_fsm_en => cfg_tx2_i(5)
 , test                 => cfg_tx2_i(4 downto 3)
 , pcs_bypass_pma_cdc   => cfg_tx2_i(2)
 , pcs_bypass_usr_cdc   => cfg_tx2_i(1)
 , pma_loopback         => cfg_tx2_i(0)
 , location             => location & ":CHANNEL3.CTX1"
 )
port map (
    ENC_E_I1 => usr_tx2_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx2_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx2_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx2_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx2_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx2_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx2_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx2_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx2_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx2_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx2_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx2_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx2_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx2_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx2_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx2_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx2_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx2_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx2_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx2_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx2_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx2_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx2_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx2_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx2_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx2_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx2_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx2_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx2_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx2_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx2_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx2_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx2_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx2_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx2_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx2_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx2_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx2_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx2_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx2_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx2_ctrl_replace_en_i
  , RST_N_I  => usr_tx2_rst_n_i

  , TST_I1   => usr_tx2_test_i(0)
  , TST_I2   => usr_tx2_test_i(1)
  , TST_I3   => usr_tx2_test_i(2)
  , TST_I4   => usr_tx2_test_i(3)

  , DATA_I1  => usr_tx2_data_i(0)
  , DATA_I2  => usr_tx2_data_i(1)
  , DATA_I3  => usr_tx2_data_i(2)
  , DATA_I4  => usr_tx2_data_i(3)
  , DATA_I5  => usr_tx2_data_i(4)
  , DATA_I6  => usr_tx2_data_i(5)
  , DATA_I7  => usr_tx2_data_i(6)
  , DATA_I8  => usr_tx2_data_i(7)
  , DATA_I9  => usr_tx2_data_i(8)
  , DATA_I10 => usr_tx2_data_i(9)
  , DATA_I11 => usr_tx2_data_i(10)
  , DATA_I12 => usr_tx2_data_i(11)
  , DATA_I13 => usr_tx2_data_i(12)
  , DATA_I14 => usr_tx2_data_i(13)
  , DATA_I15 => usr_tx2_data_i(14)
  , DATA_I16 => usr_tx2_data_i(15)
  , DATA_I17 => usr_tx2_data_i(16)
  , DATA_I18 => usr_tx2_data_i(17)
  , DATA_I19 => usr_tx2_data_i(18)
  , DATA_I20 => usr_tx2_data_i(19)
  , DATA_I21 => usr_tx2_data_i(20)
  , DATA_I22 => usr_tx2_data_i(21)
  , DATA_I23 => usr_tx2_data_i(22)
  , DATA_I24 => usr_tx2_data_i(23)
  , DATA_I25 => usr_tx2_data_i(24)
  , DATA_I26 => usr_tx2_data_i(25)
  , DATA_I27 => usr_tx2_data_i(26)
  , DATA_I28 => usr_tx2_data_i(27)
  , DATA_I29 => usr_tx2_data_i(28)
  , DATA_I30 => usr_tx2_data_i(29)
  , DATA_I31 => usr_tx2_data_i(30)
  , DATA_I32 => usr_tx2_data_i(31)
  , DATA_I33 => usr_tx2_data_i(32)
  , DATA_I34 => usr_tx2_data_i(33)
  , DATA_I35 => usr_tx2_data_i(34)
  , DATA_I36 => usr_tx2_data_i(35)
  , DATA_I37 => usr_tx2_data_i(36)
  , DATA_I38 => usr_tx2_data_i(37)
  , DATA_I39 => usr_tx2_data_i(38)
  , DATA_I40 => usr_tx2_data_i(39)
  , DATA_I41 => usr_tx2_data_i(40)
  , DATA_I42 => usr_tx2_data_i(41)
  , DATA_I43 => usr_tx2_data_i(42)
  , DATA_I44 => usr_tx2_data_i(43)
  , DATA_I45 => usr_tx2_data_i(44)
  , DATA_I46 => usr_tx2_data_i(45)
  , DATA_I47 => usr_tx2_data_i(46)
  , DATA_I48 => usr_tx2_data_i(47)
  , DATA_I49 => usr_tx2_data_i(48)
  , DATA_I50 => usr_tx2_data_i(49)
  , DATA_I51 => usr_tx2_data_i(50)
  , DATA_I52 => usr_tx2_data_i(51)
  , DATA_I53 => usr_tx2_data_i(52)
  , DATA_I54 => usr_tx2_data_i(53)
  , DATA_I55 => usr_tx2_data_i(54)
  , DATA_I56 => usr_tx2_data_i(55)
  , DATA_I57 => usr_tx2_data_i(56)
  , DATA_I58 => usr_tx2_data_i(57)
  , DATA_I59 => usr_tx2_data_i(58)
  , DATA_I60 => usr_tx2_data_i(59)
  , DATA_I61 => usr_tx2_data_i(60)
  , DATA_I62 => usr_tx2_data_i(61)
  , DATA_I63 => usr_tx2_data_i(62)
  , DATA_I64 => usr_tx2_data_i(63)

  , TST_O1   => usr_tx2_test_o(0)
  , TST_O2   => usr_tx2_test_o(1)
  , TST_O3   => usr_tx2_test_o(2)
  , TST_O4   => usr_tx2_test_o(3)

  , BUSY_O   => usr_tx2_busy_o
  , CLK_E_I  => usr_tx2_pma_clk_en_i

  , LINK     => LINK_TX2

  , TX_O     => pma_tx2_o
);
--#}}}#

-- rxlane2: NX_CRX_L#{{{#
rxlane2: NX_CRX_L generic map (
    test                         => cfg_rx2_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx2_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx2_i(156)
  , pcs_debug_en                 => cfg_rx2_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx2_i(154)
  , pma_clk_pos                  => cfg_rx2_i(153)
  , pcs_protocol_size            => cfg_rx2_i(152)
  , pcs_loopback                 => cfg_rx2_i(151)
  , pcs_polarity                 => cfg_rx2_i(150)
  , pcs_p_comma_en               => cfg_rx2_i(149)
  , pcs_p_comma_val              => cfg_rx2_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx2_i(138)
  , pcs_m_comma_val              => cfg_rx2_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx2_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx2_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx2_i(115)
  , pcs_dec_bypass               => cfg_rx2_i(114)
  , pcs_el_buff_max_comp         => cfg_rx2_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx2_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx2_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx2_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx2_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx2_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx2_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx2_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx2_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx2_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx2_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx2_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx2_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx2_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx2_i(29)
  , pcs_buffers_bypass           => cfg_rx2_i(28)
  , pcs_sync_supported           => cfg_rx2_i(27)
  , pcs_replace_bypass           => cfg_rx2_i(26)
  , pcs_dscr_bypass              => cfg_rx2_i(25)
  , pcs_8b_dscr_sel              => cfg_rx2_i(24)
  , pcs_fsm_sel                  => cfg_rx2_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx2_i(21)
  , pma_pll_divm_en_n            => cfg_rx2_i(20)
  , pma_pll_divn_en_n            => cfg_rx2_i(19)
  , pma_cdr_cp                   => cfg_rx2_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx2_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx2_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx2_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx2_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx2_i(1)
  , pma_loopback                 => cfg_rx2_i(0)
  , location                     => location & ":CHANNEL3.CRX1"
 )
port map (
    DSCR_E_I  => usr_rx2_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx2_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx2_ctrl_align_en_i
  , ALIGN_S_I => usr_rx2_ctrl_align_sync_i
  , REP_E_I   => usr_rx2_ctrl_replace_en_i
  , BUF_R_I   => usr_rx2_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx2_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx2_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx2_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx2_rst_n_i
  , CDR_R_I   => usr_rx2_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx2_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx2_pma_pll_rst_n_i

  , TST_I1    => usr_rx2_test_i(0)
  , TST_I2    => usr_rx2_test_i(1)
  , TST_I3    => usr_rx2_test_i(2)
  , TST_I4    => usr_rx2_test_i(3)

  , LOS_O     => usr_rx2_pma_loss_of_signal_o

  , DATA_O1   => usr_rx2_data_o(0)
  , DATA_O2   => usr_rx2_data_o(1)
  , DATA_O3   => usr_rx2_data_o(2)
  , DATA_O4   => usr_rx2_data_o(3)
  , DATA_O5   => usr_rx2_data_o(4)
  , DATA_O6   => usr_rx2_data_o(5)
  , DATA_O7   => usr_rx2_data_o(6)
  , DATA_O8   => usr_rx2_data_o(7)
  , DATA_O9   => usr_rx2_data_o(8)
  , DATA_O10  => usr_rx2_data_o(9)
  , DATA_O11  => usr_rx2_data_o(10)
  , DATA_O12  => usr_rx2_data_o(11)
  , DATA_O13  => usr_rx2_data_o(12)
  , DATA_O14  => usr_rx2_data_o(13)
  , DATA_O15  => usr_rx2_data_o(14)
  , DATA_O16  => usr_rx2_data_o(15)
  , DATA_O17  => usr_rx2_data_o(16)
  , DATA_O18  => usr_rx2_data_o(17)
  , DATA_O19  => usr_rx2_data_o(18)
  , DATA_O20  => usr_rx2_data_o(19)
  , DATA_O21  => usr_rx2_data_o(20)
  , DATA_O22  => usr_rx2_data_o(21)
  , DATA_O23  => usr_rx2_data_o(22)
  , DATA_O24  => usr_rx2_data_o(23)
  , DATA_O25  => usr_rx2_data_o(24)
  , DATA_O26  => usr_rx2_data_o(25)
  , DATA_O27  => usr_rx2_data_o(26)
  , DATA_O28  => usr_rx2_data_o(27)
  , DATA_O29  => usr_rx2_data_o(28)
  , DATA_O30  => usr_rx2_data_o(29)
  , DATA_O31  => usr_rx2_data_o(30)
  , DATA_O32  => usr_rx2_data_o(31)
  , DATA_O33  => usr_rx2_data_o(32)
  , DATA_O34  => usr_rx2_data_o(33)
  , DATA_O35  => usr_rx2_data_o(34)
  , DATA_O36  => usr_rx2_data_o(35)
  , DATA_O37  => usr_rx2_data_o(36)
  , DATA_O38  => usr_rx2_data_o(37)
  , DATA_O39  => usr_rx2_data_o(38)
  , DATA_O40  => usr_rx2_data_o(39)
  , DATA_O41  => usr_rx2_data_o(40)
  , DATA_O42  => usr_rx2_data_o(41)
  , DATA_O43  => usr_rx2_data_o(42)
  , DATA_O44  => usr_rx2_data_o(43)
  , DATA_O45  => usr_rx2_data_o(44)
  , DATA_O46  => usr_rx2_data_o(45)
  , DATA_O47  => usr_rx2_data_o(46)
  , DATA_O48  => usr_rx2_data_o(47)
  , DATA_O49  => usr_rx2_data_o(48)
  , DATA_O50  => usr_rx2_data_o(49)
  , DATA_O51  => usr_rx2_data_o(50)
  , DATA_O52  => usr_rx2_data_o(51)
  , DATA_O53  => usr_rx2_data_o(52)
  , DATA_O54  => usr_rx2_data_o(53)
  , DATA_O55  => usr_rx2_data_o(54)
  , DATA_O56  => usr_rx2_data_o(55)
  , DATA_O57  => usr_rx2_data_o(56)
  , DATA_O58  => usr_rx2_data_o(57)
  , DATA_O59  => usr_rx2_data_o(58)
  , DATA_O60  => usr_rx2_data_o(59)
  , DATA_O61  => usr_rx2_data_o(60)
  , DATA_O62  => usr_rx2_data_o(61)
  , DATA_O63  => usr_rx2_data_o(62)
  , DATA_O64  => usr_rx2_data_o(63)

  , CH_COM_O1 => usr_rx2_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx2_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx2_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx2_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx2_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx2_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx2_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx2_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx2_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx2_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx2_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx2_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx2_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx2_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx2_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx2_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx2_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx2_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx2_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx2_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx2_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx2_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx2_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx2_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx2_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx2_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx2_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx2_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx2_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx2_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx2_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx2_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx2_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx2_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx2_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx2_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx2_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx2_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx2_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx2_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx2_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx2_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx2_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx2_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx2_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx2_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx2_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx2_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx2_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx2_busy_o

  , TST_O1    => usr_rx2_test_o(0)
  , TST_O2    => usr_rx2_test_o(1)
  , TST_O3    => usr_rx2_test_o(2)
  , TST_O4    => usr_rx2_test_o(3)
  , TST_O5    => usr_rx2_test_o(4)
  , TST_O6    => usr_rx2_test_o(5)
  , TST_O7    => usr_rx2_test_o(6)
  , TST_O8    => usr_rx2_test_o(7)

  , LOCK_O    => usr_rx2_pll_lock_o

  , LINK      => LINK_RX2

  , RX_I      => pma_rx2_i
);
--#}}}#

-- txlane3: NX_CTX_L#{{{#
txlane3: NX_CTX_L generic map (
     pma_clk_pos          => cfg_tx3_i(31)
  ,  pcs_protocol_size    => cfg_tx3_i(30)
  ,  pcs_8b_scr_sel       => cfg_tx3_i(29)
  ,  pcs_scr_init         => cfg_tx3_i(28 downto 12)
  ,  pcs_scr_bypass       => cfg_tx3_i(11)
  ,  pcs_sync_supported   => cfg_tx3_i(10)
  ,  pcs_replace_bypass   => cfg_tx3_i(9)
  ,  pcs_enc_bypass       => cfg_tx3_i(8)
  ,  pcs_loopback         => cfg_tx3_i(7)
  ,  pcs_polarity         => cfg_tx3_i(6)
  ,  pcs_esistream_fsm_en => cfg_tx3_i(5)
  ,  test                 => cfg_tx3_i(4 downto 3)
  ,  pcs_bypass_pma_cdc   => cfg_tx3_i(2)
  ,  pcs_bypass_usr_cdc   => cfg_tx3_i(1)
  ,  pma_loopback         => cfg_tx3_i(0)
  ,  location             => location & ":CHANNEL4.CTX1"
 )
port map (
    ENC_E_I1 => usr_tx3_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx3_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx3_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx3_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx3_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx3_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx3_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx3_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx3_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx3_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx3_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx3_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx3_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx3_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx3_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx3_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx3_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx3_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx3_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx3_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx3_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx3_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx3_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx3_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx3_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx3_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx3_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx3_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx3_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx3_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx3_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx3_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx3_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx3_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx3_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx3_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx3_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx3_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx3_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx3_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx3_ctrl_replace_en_i
  , RST_N_I  => usr_tx3_rst_n_i

  , TST_I1   => usr_tx3_test_i(0)
  , TST_I2   => usr_tx3_test_i(1)
  , TST_I3   => usr_tx3_test_i(2)
  , TST_I4   => usr_tx3_test_i(3)

  , DATA_I1  => usr_tx3_data_i(0)
  , DATA_I2  => usr_tx3_data_i(1)
  , DATA_I3  => usr_tx3_data_i(2)
  , DATA_I4  => usr_tx3_data_i(3)
  , DATA_I5  => usr_tx3_data_i(4)
  , DATA_I6  => usr_tx3_data_i(5)
  , DATA_I7  => usr_tx3_data_i(6)
  , DATA_I8  => usr_tx3_data_i(7)
  , DATA_I9  => usr_tx3_data_i(8)
  , DATA_I10 => usr_tx3_data_i(9)
  , DATA_I11 => usr_tx3_data_i(10)
  , DATA_I12 => usr_tx3_data_i(11)
  , DATA_I13 => usr_tx3_data_i(12)
  , DATA_I14 => usr_tx3_data_i(13)
  , DATA_I15 => usr_tx3_data_i(14)
  , DATA_I16 => usr_tx3_data_i(15)
  , DATA_I17 => usr_tx3_data_i(16)
  , DATA_I18 => usr_tx3_data_i(17)
  , DATA_I19 => usr_tx3_data_i(18)
  , DATA_I20 => usr_tx3_data_i(19)
  , DATA_I21 => usr_tx3_data_i(20)
  , DATA_I22 => usr_tx3_data_i(21)
  , DATA_I23 => usr_tx3_data_i(22)
  , DATA_I24 => usr_tx3_data_i(23)
  , DATA_I25 => usr_tx3_data_i(24)
  , DATA_I26 => usr_tx3_data_i(25)
  , DATA_I27 => usr_tx3_data_i(26)
  , DATA_I28 => usr_tx3_data_i(27)
  , DATA_I29 => usr_tx3_data_i(28)
  , DATA_I30 => usr_tx3_data_i(29)
  , DATA_I31 => usr_tx3_data_i(30)
  , DATA_I32 => usr_tx3_data_i(31)
  , DATA_I33 => usr_tx3_data_i(32)
  , DATA_I34 => usr_tx3_data_i(33)
  , DATA_I35 => usr_tx3_data_i(34)
  , DATA_I36 => usr_tx3_data_i(35)
  , DATA_I37 => usr_tx3_data_i(36)
  , DATA_I38 => usr_tx3_data_i(37)
  , DATA_I39 => usr_tx3_data_i(38)
  , DATA_I40 => usr_tx3_data_i(39)
  , DATA_I41 => usr_tx3_data_i(40)
  , DATA_I42 => usr_tx3_data_i(41)
  , DATA_I43 => usr_tx3_data_i(42)
  , DATA_I44 => usr_tx3_data_i(43)
  , DATA_I45 => usr_tx3_data_i(44)
  , DATA_I46 => usr_tx3_data_i(45)
  , DATA_I47 => usr_tx3_data_i(46)
  , DATA_I48 => usr_tx3_data_i(47)
  , DATA_I49 => usr_tx3_data_i(48)
  , DATA_I50 => usr_tx3_data_i(49)
  , DATA_I51 => usr_tx3_data_i(50)
  , DATA_I52 => usr_tx3_data_i(51)
  , DATA_I53 => usr_tx3_data_i(52)
  , DATA_I54 => usr_tx3_data_i(53)
  , DATA_I55 => usr_tx3_data_i(54)
  , DATA_I56 => usr_tx3_data_i(55)
  , DATA_I57 => usr_tx3_data_i(56)
  , DATA_I58 => usr_tx3_data_i(57)
  , DATA_I59 => usr_tx3_data_i(58)
  , DATA_I60 => usr_tx3_data_i(59)
  , DATA_I61 => usr_tx3_data_i(60)
  , DATA_I62 => usr_tx3_data_i(61)
  , DATA_I63 => usr_tx3_data_i(62)
  , DATA_I64 => usr_tx3_data_i(63)

  , TST_O1   => usr_tx3_test_o(0)
  , TST_O2   => usr_tx3_test_o(1)
  , TST_O3   => usr_tx3_test_o(2)
  , TST_O4   => usr_tx3_test_o(3)

  , BUSY_O   => usr_tx3_busy_o
  , CLK_E_I  => usr_tx3_pma_clk_en_i

  , LINK     => LINK_TX3

  , TX_O     => pma_tx3_o
);
--#}}}#

-- rxlane3: NX_CRX_L#{{{#
rxlane3: NX_CRX_L generic map (
    test                         => cfg_rx3_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx3_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx3_i(156)
  , pcs_debug_en                 => cfg_rx3_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx3_i(154)
  , pma_clk_pos                  => cfg_rx3_i(153)
  , pcs_protocol_size            => cfg_rx3_i(152)
  , pcs_loopback                 => cfg_rx3_i(151)
  , pcs_polarity                 => cfg_rx3_i(150)
  , pcs_p_comma_en               => cfg_rx3_i(149)
  , pcs_p_comma_val              => cfg_rx3_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx3_i(138)
  , pcs_m_comma_val              => cfg_rx3_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx3_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx3_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx3_i(115)
  , pcs_dec_bypass               => cfg_rx3_i(114)
  , pcs_el_buff_max_comp         => cfg_rx3_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx3_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx3_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx3_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx3_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx3_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx3_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx3_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx3_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx3_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx3_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx3_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx3_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx3_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx3_i(29)
  , pcs_buffers_bypass           => cfg_rx3_i(28)
  , pcs_sync_supported           => cfg_rx3_i(27)
  , pcs_replace_bypass           => cfg_rx3_i(26)
  , pcs_dscr_bypass              => cfg_rx3_i(25)
  , pcs_8b_dscr_sel              => cfg_rx3_i(24)
  , pcs_fsm_sel                  => cfg_rx3_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx3_i(21)
  , pma_pll_divm_en_n            => cfg_rx3_i(20)
  , pma_pll_divn_en_n            => cfg_rx3_i(19)
  , pma_cdr_cp                   => cfg_rx3_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx3_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx3_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx3_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx3_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx3_i(1)
  , pma_loopback                 => cfg_rx3_i(0)
  , location                     => location & ":CHANNEL4.CRX1"
 )
port map (
    DSCR_E_I  => usr_rx3_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx3_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx3_ctrl_align_en_i
  , ALIGN_S_I => usr_rx3_ctrl_align_sync_i
  , REP_E_I   => usr_rx3_ctrl_replace_en_i
  , BUF_R_I   => usr_rx3_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx3_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx3_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx3_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx3_rst_n_i
  , CDR_R_I   => usr_rx3_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx3_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx3_pma_pll_rst_n_i

  , TST_I1    => usr_rx3_test_i(0)
  , TST_I2    => usr_rx3_test_i(1)
  , TST_I3    => usr_rx3_test_i(2)
  , TST_I4    => usr_rx3_test_i(3)

  , LOS_O     => usr_rx3_pma_loss_of_signal_o

  , DATA_O1   => usr_rx3_data_o(0)
  , DATA_O2   => usr_rx3_data_o(1)
  , DATA_O3   => usr_rx3_data_o(2)
  , DATA_O4   => usr_rx3_data_o(3)
  , DATA_O5   => usr_rx3_data_o(4)
  , DATA_O6   => usr_rx3_data_o(5)
  , DATA_O7   => usr_rx3_data_o(6)
  , DATA_O8   => usr_rx3_data_o(7)
  , DATA_O9   => usr_rx3_data_o(8)
  , DATA_O10  => usr_rx3_data_o(9)
  , DATA_O11  => usr_rx3_data_o(10)
  , DATA_O12  => usr_rx3_data_o(11)
  , DATA_O13  => usr_rx3_data_o(12)
  , DATA_O14  => usr_rx3_data_o(13)
  , DATA_O15  => usr_rx3_data_o(14)
  , DATA_O16  => usr_rx3_data_o(15)
  , DATA_O17  => usr_rx3_data_o(16)
  , DATA_O18  => usr_rx3_data_o(17)
  , DATA_O19  => usr_rx3_data_o(18)
  , DATA_O20  => usr_rx3_data_o(19)
  , DATA_O21  => usr_rx3_data_o(20)
  , DATA_O22  => usr_rx3_data_o(21)
  , DATA_O23  => usr_rx3_data_o(22)
  , DATA_O24  => usr_rx3_data_o(23)
  , DATA_O25  => usr_rx3_data_o(24)
  , DATA_O26  => usr_rx3_data_o(25)
  , DATA_O27  => usr_rx3_data_o(26)
  , DATA_O28  => usr_rx3_data_o(27)
  , DATA_O29  => usr_rx3_data_o(28)
  , DATA_O30  => usr_rx3_data_o(29)
  , DATA_O31  => usr_rx3_data_o(30)
  , DATA_O32  => usr_rx3_data_o(31)
  , DATA_O33  => usr_rx3_data_o(32)
  , DATA_O34  => usr_rx3_data_o(33)
  , DATA_O35  => usr_rx3_data_o(34)
  , DATA_O36  => usr_rx3_data_o(35)
  , DATA_O37  => usr_rx3_data_o(36)
  , DATA_O38  => usr_rx3_data_o(37)
  , DATA_O39  => usr_rx3_data_o(38)
  , DATA_O40  => usr_rx3_data_o(39)
  , DATA_O41  => usr_rx3_data_o(40)
  , DATA_O42  => usr_rx3_data_o(41)
  , DATA_O43  => usr_rx3_data_o(42)
  , DATA_O44  => usr_rx3_data_o(43)
  , DATA_O45  => usr_rx3_data_o(44)
  , DATA_O46  => usr_rx3_data_o(45)
  , DATA_O47  => usr_rx3_data_o(46)
  , DATA_O48  => usr_rx3_data_o(47)
  , DATA_O49  => usr_rx3_data_o(48)
  , DATA_O50  => usr_rx3_data_o(49)
  , DATA_O51  => usr_rx3_data_o(50)
  , DATA_O52  => usr_rx3_data_o(51)
  , DATA_O53  => usr_rx3_data_o(52)
  , DATA_O54  => usr_rx3_data_o(53)
  , DATA_O55  => usr_rx3_data_o(54)
  , DATA_O56  => usr_rx3_data_o(55)
  , DATA_O57  => usr_rx3_data_o(56)
  , DATA_O58  => usr_rx3_data_o(57)
  , DATA_O59  => usr_rx3_data_o(58)
  , DATA_O60  => usr_rx3_data_o(59)
  , DATA_O61  => usr_rx3_data_o(60)
  , DATA_O62  => usr_rx3_data_o(61)
  , DATA_O63  => usr_rx3_data_o(62)
  , DATA_O64  => usr_rx3_data_o(63)

  , CH_COM_O1 => usr_rx3_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx3_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx3_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx3_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx3_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx3_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx3_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx3_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx3_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx3_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx3_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx3_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx3_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx3_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx3_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx3_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx3_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx3_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx3_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx3_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx3_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx3_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx3_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx3_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx3_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx3_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx3_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx3_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx3_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx3_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx3_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx3_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx3_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx3_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx3_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx3_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx3_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx3_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx3_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx3_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx3_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx3_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx3_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx3_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx3_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx3_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx3_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx3_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx3_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx3_busy_o

  , TST_O1    => usr_rx3_test_o(0)
  , TST_O2    => usr_rx3_test_o(1)
  , TST_O3    => usr_rx3_test_o(2)
  , TST_O4    => usr_rx3_test_o(3)
  , TST_O5    => usr_rx3_test_o(4)
  , TST_O6    => usr_rx3_test_o(5)
  , TST_O7    => usr_rx3_test_o(6)
  , TST_O8    => usr_rx3_test_o(7)

  , LOCK_O    => usr_rx3_pll_lock_o

  , LINK      => LINK_RX3

  , RX_I      => pma_rx3_i
);
--#}}}#

-- txlane4: NX_CTX_L#{{{#
txlane4: NX_CTX_L generic map (
     pma_clk_pos          => cfg_tx4_i(31)
  ,  pcs_protocol_size    => cfg_tx4_i(30)
  ,  pcs_8b_scr_sel       => cfg_tx4_i(29)
  ,  pcs_scr_init         => cfg_tx4_i(28 downto 12)
  ,  pcs_scr_bypass       => cfg_tx4_i(11)
  ,  pcs_sync_supported   => cfg_tx4_i(10)
  ,  pcs_replace_bypass   => cfg_tx4_i(9)
  ,  pcs_enc_bypass       => cfg_tx4_i(8)
  ,  pcs_loopback         => cfg_tx4_i(7)
  ,  pcs_polarity         => cfg_tx4_i(6)
  ,  pcs_esistream_fsm_en => cfg_tx4_i(5)
  ,  test                 => cfg_tx4_i(4 downto 3)
  ,  pcs_bypass_pma_cdc   => cfg_tx4_i(2)
  ,  pcs_bypass_usr_cdc   => cfg_tx4_i(1)
  ,  pma_loopback         => cfg_tx4_i(0)
  ,  location             => location & ":CHANNEL5.CTX1"
 )
port map (
    ENC_E_I1 => usr_tx4_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx4_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx4_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx4_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx4_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx4_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx4_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx4_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx4_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx4_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx4_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx4_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx4_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx4_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx4_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx4_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx4_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx4_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx4_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx4_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx4_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx4_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx4_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx4_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx4_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx4_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx4_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx4_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx4_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx4_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx4_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx4_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx4_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx4_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx4_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx4_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx4_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx4_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx4_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx4_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx4_ctrl_replace_en_i
  , RST_N_I  => usr_tx4_rst_n_i

  , TST_I1   => usr_tx4_test_i(0)
  , TST_I2   => usr_tx4_test_i(1)
  , TST_I3   => usr_tx4_test_i(2)
  , TST_I4   => usr_tx4_test_i(3)

  , DATA_I1  => usr_tx4_data_i(0)
  , DATA_I2  => usr_tx4_data_i(1)
  , DATA_I3  => usr_tx4_data_i(2)
  , DATA_I4  => usr_tx4_data_i(3)
  , DATA_I5  => usr_tx4_data_i(4)
  , DATA_I6  => usr_tx4_data_i(5)
  , DATA_I7  => usr_tx4_data_i(6)
  , DATA_I8  => usr_tx4_data_i(7)
  , DATA_I9  => usr_tx4_data_i(8)
  , DATA_I10 => usr_tx4_data_i(9)
  , DATA_I11 => usr_tx4_data_i(10)
  , DATA_I12 => usr_tx4_data_i(11)
  , DATA_I13 => usr_tx4_data_i(12)
  , DATA_I14 => usr_tx4_data_i(13)
  , DATA_I15 => usr_tx4_data_i(14)
  , DATA_I16 => usr_tx4_data_i(15)
  , DATA_I17 => usr_tx4_data_i(16)
  , DATA_I18 => usr_tx4_data_i(17)
  , DATA_I19 => usr_tx4_data_i(18)
  , DATA_I20 => usr_tx4_data_i(19)
  , DATA_I21 => usr_tx4_data_i(20)
  , DATA_I22 => usr_tx4_data_i(21)
  , DATA_I23 => usr_tx4_data_i(22)
  , DATA_I24 => usr_tx4_data_i(23)
  , DATA_I25 => usr_tx4_data_i(24)
  , DATA_I26 => usr_tx4_data_i(25)
  , DATA_I27 => usr_tx4_data_i(26)
  , DATA_I28 => usr_tx4_data_i(27)
  , DATA_I29 => usr_tx4_data_i(28)
  , DATA_I30 => usr_tx4_data_i(29)
  , DATA_I31 => usr_tx4_data_i(30)
  , DATA_I32 => usr_tx4_data_i(31)
  , DATA_I33 => usr_tx4_data_i(32)
  , DATA_I34 => usr_tx4_data_i(33)
  , DATA_I35 => usr_tx4_data_i(34)
  , DATA_I36 => usr_tx4_data_i(35)
  , DATA_I37 => usr_tx4_data_i(36)
  , DATA_I38 => usr_tx4_data_i(37)
  , DATA_I39 => usr_tx4_data_i(38)
  , DATA_I40 => usr_tx4_data_i(39)
  , DATA_I41 => usr_tx4_data_i(40)
  , DATA_I42 => usr_tx4_data_i(41)
  , DATA_I43 => usr_tx4_data_i(42)
  , DATA_I44 => usr_tx4_data_i(43)
  , DATA_I45 => usr_tx4_data_i(44)
  , DATA_I46 => usr_tx4_data_i(45)
  , DATA_I47 => usr_tx4_data_i(46)
  , DATA_I48 => usr_tx4_data_i(47)
  , DATA_I49 => usr_tx4_data_i(48)
  , DATA_I50 => usr_tx4_data_i(49)
  , DATA_I51 => usr_tx4_data_i(50)
  , DATA_I52 => usr_tx4_data_i(51)
  , DATA_I53 => usr_tx4_data_i(52)
  , DATA_I54 => usr_tx4_data_i(53)
  , DATA_I55 => usr_tx4_data_i(54)
  , DATA_I56 => usr_tx4_data_i(55)
  , DATA_I57 => usr_tx4_data_i(56)
  , DATA_I58 => usr_tx4_data_i(57)
  , DATA_I59 => usr_tx4_data_i(58)
  , DATA_I60 => usr_tx4_data_i(59)
  , DATA_I61 => usr_tx4_data_i(60)
  , DATA_I62 => usr_tx4_data_i(61)
  , DATA_I63 => usr_tx4_data_i(62)
  , DATA_I64 => usr_tx4_data_i(63)

  , TST_O1   => usr_tx4_test_o(0)
  , TST_O2   => usr_tx4_test_o(1)
  , TST_O3   => usr_tx4_test_o(2)
  , TST_O4   => usr_tx4_test_o(3)

  , BUSY_O   => usr_tx4_busy_o
  , CLK_E_I  => usr_tx4_pma_clk_en_i

  , LINK     => LINK_TX4

  , TX_O     => pma_tx4_o
);
--#}}}#

-- rxlane4: NX_CRX_L#{{{#
rxlane4: NX_CRX_L generic map (
    test                         => cfg_rx4_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx4_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx4_i(156)
  , pcs_debug_en                 => cfg_rx4_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx4_i(154)
  , pma_clk_pos                  => cfg_rx4_i(153)
  , pcs_protocol_size            => cfg_rx4_i(152)
  , pcs_loopback                 => cfg_rx4_i(151)
  , pcs_polarity                 => cfg_rx4_i(150)
  , pcs_p_comma_en               => cfg_rx4_i(149)
  , pcs_p_comma_val              => cfg_rx4_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx4_i(138)
  , pcs_m_comma_val              => cfg_rx4_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx4_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx4_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx4_i(115)
  , pcs_dec_bypass               => cfg_rx4_i(114)
  , pcs_el_buff_max_comp         => cfg_rx4_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx4_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx4_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx4_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx4_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx4_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx4_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx4_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx4_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx4_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx4_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx4_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx4_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx4_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx4_i(29)
  , pcs_buffers_bypass           => cfg_rx4_i(28)
  , pcs_sync_supported           => cfg_rx4_i(27)
  , pcs_replace_bypass           => cfg_rx4_i(26)
  , pcs_dscr_bypass              => cfg_rx4_i(25)
  , pcs_8b_dscr_sel              => cfg_rx4_i(24)
  , pcs_fsm_sel                  => cfg_rx4_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx4_i(21)
  , pma_pll_divm_en_n            => cfg_rx4_i(20)
  , pma_pll_divn_en_n            => cfg_rx4_i(19)
  , pma_cdr_cp                   => cfg_rx4_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx4_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx4_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx4_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx4_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx4_i(1)
  , pma_loopback                 => cfg_rx4_i(0)
  , location                     => location & ":CHANNEL5.CRX1"
 )
port map (
    DSCR_E_I  => usr_rx4_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx4_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx4_ctrl_align_en_i
  , ALIGN_S_I => usr_rx4_ctrl_align_sync_i
  , REP_E_I   => usr_rx4_ctrl_replace_en_i
  , BUF_R_I   => usr_rx4_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx4_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx4_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx4_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx4_rst_n_i
  , CDR_R_I   => usr_rx4_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx4_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx4_pma_pll_rst_n_i

  , TST_I1    => usr_rx4_test_i(0)
  , TST_I2    => usr_rx4_test_i(1)
  , TST_I3    => usr_rx4_test_i(2)
  , TST_I4    => usr_rx4_test_i(3)

  , LOS_O     => usr_rx4_pma_loss_of_signal_o

  , DATA_O1   => usr_rx4_data_o(0)
  , DATA_O2   => usr_rx4_data_o(1)
  , DATA_O3   => usr_rx4_data_o(2)
  , DATA_O4   => usr_rx4_data_o(3)
  , DATA_O5   => usr_rx4_data_o(4)
  , DATA_O6   => usr_rx4_data_o(5)
  , DATA_O7   => usr_rx4_data_o(6)
  , DATA_O8   => usr_rx4_data_o(7)
  , DATA_O9   => usr_rx4_data_o(8)
  , DATA_O10  => usr_rx4_data_o(9)
  , DATA_O11  => usr_rx4_data_o(10)
  , DATA_O12  => usr_rx4_data_o(11)
  , DATA_O13  => usr_rx4_data_o(12)
  , DATA_O14  => usr_rx4_data_o(13)
  , DATA_O15  => usr_rx4_data_o(14)
  , DATA_O16  => usr_rx4_data_o(15)
  , DATA_O17  => usr_rx4_data_o(16)
  , DATA_O18  => usr_rx4_data_o(17)
  , DATA_O19  => usr_rx4_data_o(18)
  , DATA_O20  => usr_rx4_data_o(19)
  , DATA_O21  => usr_rx4_data_o(20)
  , DATA_O22  => usr_rx4_data_o(21)
  , DATA_O23  => usr_rx4_data_o(22)
  , DATA_O24  => usr_rx4_data_o(23)
  , DATA_O25  => usr_rx4_data_o(24)
  , DATA_O26  => usr_rx4_data_o(25)
  , DATA_O27  => usr_rx4_data_o(26)
  , DATA_O28  => usr_rx4_data_o(27)
  , DATA_O29  => usr_rx4_data_o(28)
  , DATA_O30  => usr_rx4_data_o(29)
  , DATA_O31  => usr_rx4_data_o(30)
  , DATA_O32  => usr_rx4_data_o(31)
  , DATA_O33  => usr_rx4_data_o(32)
  , DATA_O34  => usr_rx4_data_o(33)
  , DATA_O35  => usr_rx4_data_o(34)
  , DATA_O36  => usr_rx4_data_o(35)
  , DATA_O37  => usr_rx4_data_o(36)
  , DATA_O38  => usr_rx4_data_o(37)
  , DATA_O39  => usr_rx4_data_o(38)
  , DATA_O40  => usr_rx4_data_o(39)
  , DATA_O41  => usr_rx4_data_o(40)
  , DATA_O42  => usr_rx4_data_o(41)
  , DATA_O43  => usr_rx4_data_o(42)
  , DATA_O44  => usr_rx4_data_o(43)
  , DATA_O45  => usr_rx4_data_o(44)
  , DATA_O46  => usr_rx4_data_o(45)
  , DATA_O47  => usr_rx4_data_o(46)
  , DATA_O48  => usr_rx4_data_o(47)
  , DATA_O49  => usr_rx4_data_o(48)
  , DATA_O50  => usr_rx4_data_o(49)
  , DATA_O51  => usr_rx4_data_o(50)
  , DATA_O52  => usr_rx4_data_o(51)
  , DATA_O53  => usr_rx4_data_o(52)
  , DATA_O54  => usr_rx4_data_o(53)
  , DATA_O55  => usr_rx4_data_o(54)
  , DATA_O56  => usr_rx4_data_o(55)
  , DATA_O57  => usr_rx4_data_o(56)
  , DATA_O58  => usr_rx4_data_o(57)
  , DATA_O59  => usr_rx4_data_o(58)
  , DATA_O60  => usr_rx4_data_o(59)
  , DATA_O61  => usr_rx4_data_o(60)
  , DATA_O62  => usr_rx4_data_o(61)
  , DATA_O63  => usr_rx4_data_o(62)
  , DATA_O64  => usr_rx4_data_o(63)

  , CH_COM_O1 => usr_rx4_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx4_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx4_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx4_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx4_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx4_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx4_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx4_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx4_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx4_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx4_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx4_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx4_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx4_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx4_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx4_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx4_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx4_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx4_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx4_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx4_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx4_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx4_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx4_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx4_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx4_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx4_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx4_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx4_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx4_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx4_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx4_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx4_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx4_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx4_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx4_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx4_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx4_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx4_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx4_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx4_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx4_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx4_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx4_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx4_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx4_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx4_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx4_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx4_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx4_busy_o

  , TST_O1    => usr_rx4_test_o(0)
  , TST_O2    => usr_rx4_test_o(1)
  , TST_O3    => usr_rx4_test_o(2)
  , TST_O4    => usr_rx4_test_o(3)
  , TST_O5    => usr_rx4_test_o(4)
  , TST_O6    => usr_rx4_test_o(5)
  , TST_O7    => usr_rx4_test_o(6)
  , TST_O8    => usr_rx4_test_o(7)

  , LOCK_O    => usr_rx4_pll_lock_o

  , LINK      => LINK_RX4

  , RX_I      => pma_rx4_i
);
--#}}}#

-- txlane5: NX_CTX_L#{{{#
txlane5: NX_CTX_L generic map (
     pma_clk_pos          => cfg_tx5_i(31)
  ,  pcs_protocol_size    => cfg_tx5_i(30)
  ,  pcs_8b_scr_sel       => cfg_tx5_i(29)
  ,  pcs_scr_init         => cfg_tx5_i(28 downto 12)
  ,  pcs_scr_bypass       => cfg_tx5_i(11)
  ,  pcs_sync_supported   => cfg_tx5_i(10)
  ,  pcs_replace_bypass   => cfg_tx5_i(9)
  ,  pcs_enc_bypass       => cfg_tx5_i(8)
  ,  pcs_loopback         => cfg_tx5_i(7)
  ,  pcs_polarity         => cfg_tx5_i(6)
  ,  pcs_esistream_fsm_en => cfg_tx5_i(5)
  ,  test                 => cfg_tx5_i(4 downto 3)
  ,  pcs_bypass_pma_cdc   => cfg_tx5_i(2)
  ,  pcs_bypass_usr_cdc   => cfg_tx5_i(1)
  ,  pma_loopback         => cfg_tx5_i(0)
  ,  location             => location & ":CHANNEL6.CTX1"
 )
port map (
    ENC_E_I1 => usr_tx5_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx5_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx5_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx5_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx5_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx5_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx5_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx5_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx5_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx5_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx5_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx5_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx5_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx5_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx5_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx5_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx5_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx5_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx5_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx5_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx5_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx5_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx5_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx5_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx5_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx5_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx5_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx5_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx5_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx5_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx5_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx5_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx5_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx5_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx5_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx5_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx5_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx5_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx5_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx5_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx5_ctrl_replace_en_i
  , RST_N_I  => usr_tx5_rst_n_i

  , TST_I1   => usr_tx5_test_i(0)
  , TST_I2   => usr_tx5_test_i(1)
  , TST_I3   => usr_tx5_test_i(2)
  , TST_I4   => usr_tx5_test_i(3)

  , DATA_I1  => usr_tx5_data_i(0)
  , DATA_I2  => usr_tx5_data_i(1)
  , DATA_I3  => usr_tx5_data_i(2)
  , DATA_I4  => usr_tx5_data_i(3)
  , DATA_I5  => usr_tx5_data_i(4)
  , DATA_I6  => usr_tx5_data_i(5)
  , DATA_I7  => usr_tx5_data_i(6)
  , DATA_I8  => usr_tx5_data_i(7)
  , DATA_I9  => usr_tx5_data_i(8)
  , DATA_I10 => usr_tx5_data_i(9)
  , DATA_I11 => usr_tx5_data_i(10)
  , DATA_I12 => usr_tx5_data_i(11)
  , DATA_I13 => usr_tx5_data_i(12)
  , DATA_I14 => usr_tx5_data_i(13)
  , DATA_I15 => usr_tx5_data_i(14)
  , DATA_I16 => usr_tx5_data_i(15)
  , DATA_I17 => usr_tx5_data_i(16)
  , DATA_I18 => usr_tx5_data_i(17)
  , DATA_I19 => usr_tx5_data_i(18)
  , DATA_I20 => usr_tx5_data_i(19)
  , DATA_I21 => usr_tx5_data_i(20)
  , DATA_I22 => usr_tx5_data_i(21)
  , DATA_I23 => usr_tx5_data_i(22)
  , DATA_I24 => usr_tx5_data_i(23)
  , DATA_I25 => usr_tx5_data_i(24)
  , DATA_I26 => usr_tx5_data_i(25)
  , DATA_I27 => usr_tx5_data_i(26)
  , DATA_I28 => usr_tx5_data_i(27)
  , DATA_I29 => usr_tx5_data_i(28)
  , DATA_I30 => usr_tx5_data_i(29)
  , DATA_I31 => usr_tx5_data_i(30)
  , DATA_I32 => usr_tx5_data_i(31)
  , DATA_I33 => usr_tx5_data_i(32)
  , DATA_I34 => usr_tx5_data_i(33)
  , DATA_I35 => usr_tx5_data_i(34)
  , DATA_I36 => usr_tx5_data_i(35)
  , DATA_I37 => usr_tx5_data_i(36)
  , DATA_I38 => usr_tx5_data_i(37)
  , DATA_I39 => usr_tx5_data_i(38)
  , DATA_I40 => usr_tx5_data_i(39)
  , DATA_I41 => usr_tx5_data_i(40)
  , DATA_I42 => usr_tx5_data_i(41)
  , DATA_I43 => usr_tx5_data_i(42)
  , DATA_I44 => usr_tx5_data_i(43)
  , DATA_I45 => usr_tx5_data_i(44)
  , DATA_I46 => usr_tx5_data_i(45)
  , DATA_I47 => usr_tx5_data_i(46)
  , DATA_I48 => usr_tx5_data_i(47)
  , DATA_I49 => usr_tx5_data_i(48)
  , DATA_I50 => usr_tx5_data_i(49)
  , DATA_I51 => usr_tx5_data_i(50)
  , DATA_I52 => usr_tx5_data_i(51)
  , DATA_I53 => usr_tx5_data_i(52)
  , DATA_I54 => usr_tx5_data_i(53)
  , DATA_I55 => usr_tx5_data_i(54)
  , DATA_I56 => usr_tx5_data_i(55)
  , DATA_I57 => usr_tx5_data_i(56)
  , DATA_I58 => usr_tx5_data_i(57)
  , DATA_I59 => usr_tx5_data_i(58)
  , DATA_I60 => usr_tx5_data_i(59)
  , DATA_I61 => usr_tx5_data_i(60)
  , DATA_I62 => usr_tx5_data_i(61)
  , DATA_I63 => usr_tx5_data_i(62)
  , DATA_I64 => usr_tx5_data_i(63)

  , TST_O1   => usr_tx5_test_o(0)
  , TST_O2   => usr_tx5_test_o(1)
  , TST_O3   => usr_tx5_test_o(2)
  , TST_O4   => usr_tx5_test_o(3)

  , BUSY_O   => usr_tx5_busy_o
  , CLK_E_I  => usr_tx5_pma_clk_en_i

  , LINK     => LINK_TX5

  , TX_O     => pma_tx5_o
);
--#}}}#

-- rxlane5: NX_CRX_L#{{{#
rxlane5: NX_CRX_L generic map (
    test                         => cfg_rx5_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx5_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx5_i(156)
  , pcs_debug_en                 => cfg_rx5_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx5_i(154)
  , pma_clk_pos                  => cfg_rx5_i(153)
  , pcs_protocol_size            => cfg_rx5_i(152)
  , pcs_loopback                 => cfg_rx5_i(151)
  , pcs_polarity                 => cfg_rx5_i(150)
  , pcs_p_comma_en               => cfg_rx5_i(149)
  , pcs_p_comma_val              => cfg_rx5_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx5_i(138)
  , pcs_m_comma_val              => cfg_rx5_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx5_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx5_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx5_i(115)
  , pcs_dec_bypass               => cfg_rx5_i(114)
  , pcs_el_buff_max_comp         => cfg_rx5_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx5_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx5_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx5_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx5_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx5_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx5_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx5_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx5_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx5_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx5_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx5_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx5_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx5_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx5_i(29)
  , pcs_buffers_bypass           => cfg_rx5_i(28)
  , pcs_sync_supported           => cfg_rx5_i(27)
  , pcs_replace_bypass           => cfg_rx5_i(26)
  , pcs_dscr_bypass              => cfg_rx5_i(25)
  , pcs_8b_dscr_sel              => cfg_rx5_i(24)
  , pcs_fsm_sel                  => cfg_rx5_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx5_i(21)
  , pma_pll_divm_en_n            => cfg_rx5_i(20)
  , pma_pll_divn_en_n            => cfg_rx5_i(19)
  , pma_cdr_cp                   => cfg_rx5_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx5_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx5_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx5_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx5_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx5_i(1)
  , pma_loopback                 => cfg_rx5_i(0)
  , location                     => location & ":CHANNEL6.CRX1"
 )
port map (
    DSCR_E_I  => usr_rx5_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx5_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx5_ctrl_align_en_i
  , ALIGN_S_I => usr_rx5_ctrl_align_sync_i
  , REP_E_I   => usr_rx5_ctrl_replace_en_i
  , BUF_R_I   => usr_rx5_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx5_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx5_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx5_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx5_rst_n_i
  , CDR_R_I   => usr_rx5_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx5_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx5_pma_pll_rst_n_i

  , TST_I1    => usr_rx5_test_i(0)
  , TST_I2    => usr_rx5_test_i(1)
  , TST_I3    => usr_rx5_test_i(2)
  , TST_I4    => usr_rx5_test_i(3)

  , LOS_O     => usr_rx5_pma_loss_of_signal_o

  , DATA_O1   => usr_rx5_data_o(0)
  , DATA_O2   => usr_rx5_data_o(1)
  , DATA_O3   => usr_rx5_data_o(2)
  , DATA_O4   => usr_rx5_data_o(3)
  , DATA_O5   => usr_rx5_data_o(4)
  , DATA_O6   => usr_rx5_data_o(5)
  , DATA_O7   => usr_rx5_data_o(6)
  , DATA_O8   => usr_rx5_data_o(7)
  , DATA_O9   => usr_rx5_data_o(8)
  , DATA_O10  => usr_rx5_data_o(9)
  , DATA_O11  => usr_rx5_data_o(10)
  , DATA_O12  => usr_rx5_data_o(11)
  , DATA_O13  => usr_rx5_data_o(12)
  , DATA_O14  => usr_rx5_data_o(13)
  , DATA_O15  => usr_rx5_data_o(14)
  , DATA_O16  => usr_rx5_data_o(15)
  , DATA_O17  => usr_rx5_data_o(16)
  , DATA_O18  => usr_rx5_data_o(17)
  , DATA_O19  => usr_rx5_data_o(18)
  , DATA_O20  => usr_rx5_data_o(19)
  , DATA_O21  => usr_rx5_data_o(20)
  , DATA_O22  => usr_rx5_data_o(21)
  , DATA_O23  => usr_rx5_data_o(22)
  , DATA_O24  => usr_rx5_data_o(23)
  , DATA_O25  => usr_rx5_data_o(24)
  , DATA_O26  => usr_rx5_data_o(25)
  , DATA_O27  => usr_rx5_data_o(26)
  , DATA_O28  => usr_rx5_data_o(27)
  , DATA_O29  => usr_rx5_data_o(28)
  , DATA_O30  => usr_rx5_data_o(29)
  , DATA_O31  => usr_rx5_data_o(30)
  , DATA_O32  => usr_rx5_data_o(31)
  , DATA_O33  => usr_rx5_data_o(32)
  , DATA_O34  => usr_rx5_data_o(33)
  , DATA_O35  => usr_rx5_data_o(34)
  , DATA_O36  => usr_rx5_data_o(35)
  , DATA_O37  => usr_rx5_data_o(36)
  , DATA_O38  => usr_rx5_data_o(37)
  , DATA_O39  => usr_rx5_data_o(38)
  , DATA_O40  => usr_rx5_data_o(39)
  , DATA_O41  => usr_rx5_data_o(40)
  , DATA_O42  => usr_rx5_data_o(41)
  , DATA_O43  => usr_rx5_data_o(42)
  , DATA_O44  => usr_rx5_data_o(43)
  , DATA_O45  => usr_rx5_data_o(44)
  , DATA_O46  => usr_rx5_data_o(45)
  , DATA_O47  => usr_rx5_data_o(46)
  , DATA_O48  => usr_rx5_data_o(47)
  , DATA_O49  => usr_rx5_data_o(48)
  , DATA_O50  => usr_rx5_data_o(49)
  , DATA_O51  => usr_rx5_data_o(50)
  , DATA_O52  => usr_rx5_data_o(51)
  , DATA_O53  => usr_rx5_data_o(52)
  , DATA_O54  => usr_rx5_data_o(53)
  , DATA_O55  => usr_rx5_data_o(54)
  , DATA_O56  => usr_rx5_data_o(55)
  , DATA_O57  => usr_rx5_data_o(56)
  , DATA_O58  => usr_rx5_data_o(57)
  , DATA_O59  => usr_rx5_data_o(58)
  , DATA_O60  => usr_rx5_data_o(59)
  , DATA_O61  => usr_rx5_data_o(60)
  , DATA_O62  => usr_rx5_data_o(61)
  , DATA_O63  => usr_rx5_data_o(62)
  , DATA_O64  => usr_rx5_data_o(63)

  , CH_COM_O1 => usr_rx5_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx5_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx5_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx5_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx5_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx5_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx5_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx5_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx5_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx5_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx5_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx5_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx5_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx5_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx5_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx5_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx5_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx5_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx5_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx5_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx5_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx5_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx5_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx5_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx5_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx5_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx5_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx5_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx5_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx5_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx5_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx5_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx5_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx5_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx5_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx5_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx5_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx5_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx5_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx5_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx5_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx5_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx5_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx5_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx5_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx5_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx5_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx5_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx5_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx5_busy_o

  , TST_O1    => usr_rx5_test_o(0)
  , TST_O2    => usr_rx5_test_o(1)
  , TST_O3    => usr_rx5_test_o(2)
  , TST_O4    => usr_rx5_test_o(3)
  , TST_O5    => usr_rx5_test_o(4)
  , TST_O6    => usr_rx5_test_o(5)
  , TST_O7    => usr_rx5_test_o(6)
  , TST_O8    => usr_rx5_test_o(7)

  , LOCK_O    => usr_rx5_pll_lock_o

  , LINK      => LINK_RX5

  , RX_I      => pma_rx5_i
);
--#}}}#

end NX_RTL;
--#}}}#

