library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package nxPackage is

-- IOM

constant IOM_LINK_DES_CHAIN_IN          : integer := 0;
constant IOM_LINK_SER_FCK_FABRIC        : integer := 1;
constant IOM_LINK_CTCK_FABRIC           : integer := 2;
constant IOM_LINK_SPW_TX_SO             : integer := 3;
constant IOM_LINK_DES_FCK_FABRIC        : integer := 4;
constant IOM_LINK_SPW_TX_OUT_CONFIG     : integer := 5;
constant IOM_LINK_SER_WPTR              : integer := 6;
constant IOM_LINK_SER_SCK_IOM           : integer := 7;
constant IOM_LINK_FZ                    : integer := 8;
constant IOM_LINK_SPW_RX_RCK            : integer := 9;
constant IOM_LINK_SER_CHAIN_IN          : integer := 10;
constant IOM_LINK_SER_RPTR              : integer := 11;
constant IOM_LINK_DES_SCK_IOM           : integer := 12;
constant IOM_LINK_DELAY_VALUE_IN_LAST   : integer := 13;
constant IOM_LINK_DELAY_VALUE_IN_FIRST  : integer := 18;
constant IOM_LINK_SPW_RX_DI             : integer := 19;
constant IOM_LINK_DCK                   : integer := 20;
constant IOM_LINK_DWR                   : integer := 21;
constant IOM_LINK_DES_RPTR              : integer := 22;
constant IOM_LINK_SER_SCK_FABRIC        : integer := 23;
constant IOM_LINK_DELAY_SELECT_LAST     : integer := 24;
constant IOM_LINK_DELAY_SELECT_FIRST    : integer := 25;
constant IOM_LINK_SPW_RX_IN_CONFIG      : integer := 26;
constant IOM_LINK_DES_WPTR              : integer := 27;
constant IOM_LINK_DES_SCK_FABRIC        : integer := 28;
constant IOM_LINK_SPW_TX_DO             : integer := 29;
constant IOM_LINK_SPW_RX_DATA           : integer := 30;
constant IOM_LINK_DES_CHAIN_OUT         : integer := 31;
constant IOM_LINK_DELAY_VALUE_OUT_LAST  : integer := 32;
constant IOM_LINK_DELAY_VALUE_OUT_FIRST : integer := 37;
constant IOM_LINK_FLD                   : integer := 38;
constant IOM_LINK_SER_CHAIN_OUT         : integer := 39;
constant IOM_LINK_FLG                   : integer := 40;
constant IOM_LINK_SIZE                  : integer := 41;
constant IOM_LINK_OUTPUT_MAX            : integer := 29;

-- HSSL

constant CRX_LINK_SIZE                  : integer := 10;

constant CTX_LINK_SIZE                  : integer := 20;

component NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_LUT;

component NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFF;

component NX_BFF is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFF;

component NX_DFR is
generic (
    location   : string := "";
    iobname    : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    ring       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_DFR;

component NX_BFR is
generic (
    location   : string := "";
    iobname    : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    ring       : integer := 0
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BFR;

component NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    CI	: in std_logic := '0';
    CO	: out std_logic := '0';
    S1	: out std_logic := '0';
    S2	: out std_logic := '0';
    S3	: out std_logic := '0';
    S4	: out std_logic := '0'
);
end component NX_CY;

component NX_RFB_U_WRAP is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(17 downto 0) := (others => '0');
    O	: out std_logic_vector(17 downto 0) := (others => '0');
    RA	: in std_logic_vector(4 downto 0) := (others => '0');
    WA	: in std_logic_vector(4 downto 0) := (others => '0');
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0'
);
end component NX_RFB_U_WRAP;

component NX_RFBSP_U_WRAP is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(17 downto 0) := (others => '0');
    O	: out std_logic_vector(17 downto 0) := (others => '0');
    WA	: in std_logic_vector(4 downto 0) := (others => '0');
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0'
);
end component NX_RFBSP_U_WRAP;

component NX_RFB_U is
generic (
    mode     : integer := 0; -- 0: DPREG - 1: SPREG - 2: XRF_64x18 - 3: XRF_32x36 - 4: XRF_2R_1W
    wck_edge : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt : string := "" -- memory initial context
);
port (
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    I17	: in std_logic := '0';
    I18	: in std_logic := '0';
    I19	: in std_logic := '0';
    I20	: in std_logic := '0';
    I21	: in std_logic := '0';
    I22	: in std_logic := '0';
    I23	: in std_logic := '0';
    I24	: in std_logic := '0';
    I25	: in std_logic := '0';
    I26	: in std_logic := '0';
    I27	: in std_logic := '0';
    I28	: in std_logic := '0';
    I29	: in std_logic := '0';
    I30	: in std_logic := '0';
    I31	: in std_logic := '0';
    I32	: in std_logic := '0';
    I33	: in std_logic := '0';
    I34	: in std_logic := '0';
    I35	: in std_logic := '0';
    I36	: in std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    O17	: out std_logic := '0';
    O18	: out std_logic := '0';
    O19	: out std_logic := '0';
    O20	: out std_logic := '0';
    O21	: out std_logic := '0';
    O22	: out std_logic := '0';
    O23	: out std_logic := '0';
    O24	: out std_logic := '0';
    O25	: out std_logic := '0';
    O26	: out std_logic := '0';
    O27	: out std_logic := '0';
    O28	: out std_logic := '0';
    O29	: out std_logic := '0';
    O30	: out std_logic := '0';
    O31	: out std_logic := '0';
    O32	: out std_logic := '0';
    O33	: out std_logic := '0';
    O34	: out std_logic := '0';
    O35	: out std_logic := '0';
    O36	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RA6	: in std_logic := '0';
    RA7	: in std_logic := '0';
    RA8	: in std_logic := '0';
    RA9	: in std_logic := '0';
    RA10	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WA6	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0'
);
end component NX_RFB_U;

component NX_RFB is
generic (
    rck_edge  : bit := '0';   -- 0: read  clock rising edge - 1: read  clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RA6	: in std_logic := '0';
    RE	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WA6	: in std_logic := '0';
    WE	: in std_logic := '0'
);
end component NX_RFB;

component NX_XRFB_64x18 is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(17 downto 0) := (others => '0');
    O	: out std_logic_vector(17 downto 0) := (others => '0');
    RA	: in std_logic_vector(5 downto 0) := (others => '0');
    WA	: in std_logic_vector(5 downto 0) := (others => '0');
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0'
);
end component NX_XRFB_64x18;

component NX_XRFB_32x36 is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(35 downto 0) := (others => '0');
    O	: out std_logic_vector(35 downto 0) := (others => '0');
    RA	: in std_logic_vector(4 downto 0) := (others => '0');
    WA	: in std_logic_vector(4 downto 0) := (others => '0');
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0'
);
end component NX_XRFB_32x36;

component NX_XRFB_2R_1W is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(17 downto 0) := (others => '0');
    AO	: out std_logic_vector(17 downto 0) := (others => '0');
    BO	: out std_logic_vector(17 downto 0) := (others => '0');
    ARA	: in std_logic_vector(4 downto 0) := (others => '0');
    BRA	: in std_logic_vector(4 downto 0) := (others => '0');
    WA	: in std_logic_vector(4 downto 0) := (others => '0');
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0'
);
end component NX_XRFB_2R_1W;

component NX_CDC_U_2DFF is
generic (
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    use_adest_arst : bit := '0';
    use_bdest_arst : bit := '0'
);
port (
    CK1	: in std_logic := '0';
    CK2	: in std_logic := '0';
    ADRSTI	: in std_logic := '0';
    ADRSTO	: out std_logic := '0';
    AI	: in std_logic_vector(5 downto 0) := (others => '0');
    AO	: out std_logic_vector(5 downto 0) := (others => '0');
    BDRSTI	: in std_logic := '0';
    BDRSTO	: out std_logic := '0';
    BI	: in std_logic_vector(5 downto 0) := (others => '0');
    BO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_CDC_U_2DFF;

component NX_CDC_U_3DFF is
generic (
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0'
);
port (
    CK1	: in std_logic := '0';
    CK2	: in std_logic := '0';
    ASRSTI	: in std_logic := '0';
    ADRSTI	: in std_logic := '0';
    ASRSTO	: out std_logic := '0';
    ADRSTO	: out std_logic := '0';
    AI	: in std_logic_vector(5 downto 0) := (others => '0');
    AO	: out std_logic_vector(5 downto 0) := (others => '0');
    BSRSTI	: in std_logic := '0';
    BDRSTI	: in std_logic := '0';
    BSRSTO	: out std_logic := '0';
    BDRSTO	: out std_logic := '0';
    BI	: in std_logic_vector(5 downto 0) := (others => '0');
    BO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_CDC_U_3DFF;

component NX_CDC_U_FULL is
generic (
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0'
);
port (
    CK1	: in std_logic := '0';
    CK2	: in std_logic := '0';
    ASRSTI	: in std_logic := '0';
    ADRSTI	: in std_logic := '0';
    ASRSTO	: out std_logic := '0';
    ADRSTO	: out std_logic := '0';
    AI	: in std_logic_vector(5 downto 0) := (others => '0');
    AO	: out std_logic_vector(5 downto 0) := (others => '0');
    BSRSTI	: in std_logic := '0';
    BDRSTI	: in std_logic := '0';
    BSRSTO	: out std_logic := '0';
    BDRSTO	: out std_logic := '0';
    BI	: in std_logic_vector(5 downto 0) := (others => '0');
    BO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_CDC_U_FULL;

component NX_CDC_U_BIN2GRAY is
port (
    AI	: in std_logic_vector(5 downto 0) := (others => '0');
    AO	: out std_logic_vector(5 downto 0) := (others => '0');
    BI	: in std_logic_vector(5 downto 0) := (others => '0');
    BO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_CDC_U_BIN2GRAY;

component NX_CDC_U_GRAY2BIN is
port (
    AI	: in std_logic_vector(5 downto 0) := (others => '0');
    AO	: out std_logic_vector(5 downto 0) := (others => '0');
    BI	: in std_logic_vector(5 downto 0) := (others => '0');
    BO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_CDC_U_GRAY2BIN;

component NX_XCDC_U is
generic (
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1	: in std_logic := '0';
    CK2	: in std_logic := '0';
    ASRSTI	: in std_logic := '0';
    ADRSTI	: in std_logic := '0';
    ASRSTO	: out std_logic := '0';
    ADRSTO	: out std_logic := '0';
    AI	: in std_logic_vector(5 downto 0) := (others => '0');
    AO	: out std_logic_vector(5 downto 0) := (others => '0');
    BSRSTI	: in std_logic := '0';
    BDRSTI	: in std_logic := '0';
    BSRSTO	: out std_logic := '0';
    BDRSTO	: out std_logic := '0';
    BI	: in std_logic_vector(5 downto 0) := (others => '0');
    BO	: out std_logic_vector(5 downto 0) := (others => '0');
    CSRSTI	: in std_logic := '0';
    CDRSTI	: in std_logic := '0';
    CSRSTO	: out std_logic := '0';
    CDRSTO	: out std_logic := '0';
    CI	: in std_logic_vector(5 downto 0) := (others => '0');
    CO	: out std_logic_vector(5 downto 0) := (others => '0');
    DSRSTI	: in std_logic := '0';
    DDRSTI	: in std_logic := '0';
    DSRSTO	: out std_logic := '0';
    DDRSTO	: out std_logic := '0';
    DI	: in std_logic_vector(5 downto 0) := (others => '0');
    DO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_XCDC_U;

component NX_CDC_U is
generic (
    mode           : integer := 0; -- 0: 2DFF     
                                   -- 1: 3DFF     
                                   -- 2: bin2gray + 3DFF + gray2bin
                                   -- 3: bin2gray 
                                   -- 4: gray2bin 
                                   -- 5: XCDC
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1	: in std_logic := '0';
    CK2	: in std_logic := '0';
    ASRSTI	: in std_logic := '0';
    ADRSTI	: in std_logic := '0';
    ASRSTO	: out std_logic := '0';
    ADRSTO	: out std_logic := '0';
    AI1	: in std_logic := '0';
    AI2	: in std_logic := '0';
    AI3	: in std_logic := '0';
    AI4	: in std_logic := '0';
    AI5	: in std_logic := '0';
    AI6	: in std_logic := '0';
    AO1	: out std_logic := '0';
    AO2	: out std_logic := '0';
    AO3	: out std_logic := '0';
    AO4	: out std_logic := '0';
    AO5	: out std_logic := '0';
    AO6	: out std_logic := '0';
    BSRSTI	: in std_logic := '0';
    BDRSTI	: in std_logic := '0';
    BSRSTO	: out std_logic := '0';
    BDRSTO	: out std_logic := '0';
    BI1	: in std_logic := '0';
    BI2	: in std_logic := '0';
    BI3	: in std_logic := '0';
    BI4	: in std_logic := '0';
    BI5	: in std_logic := '0';
    BI6	: in std_logic := '0';
    BO1	: out std_logic := '0';
    BO2	: out std_logic := '0';
    BO3	: out std_logic := '0';
    BO4	: out std_logic := '0';
    BO5	: out std_logic := '0';
    BO6	: out std_logic := '0';
    CSRSTI	: in std_logic := '0';
    CDRSTI	: in std_logic := '0';
    CSRSTO	: out std_logic := '0';
    CDRSTO	: out std_logic := '0';
    CI1	: in std_logic := '0';
    CI2	: in std_logic := '0';
    CI3	: in std_logic := '0';
    CI4	: in std_logic := '0';
    CI5	: in std_logic := '0';
    CI6	: in std_logic := '0';
    CO1	: out std_logic := '0';
    CO2	: out std_logic := '0';
    CO3	: out std_logic := '0';
    CO4	: out std_logic := '0';
    CO5	: out std_logic := '0';
    CO6	: out std_logic := '0';
    DSRSTI	: in std_logic := '0';
    DDRSTI	: in std_logic := '0';
    DSRSTO	: out std_logic := '0';
    DDRSTO	: out std_logic := '0';
    DI1	: in std_logic := '0';
    DI2	: in std_logic := '0';
    DI3	: in std_logic := '0';
    DI4	: in std_logic := '0';
    DI5	: in std_logic := '0';
    DI6	: in std_logic := '0';
    DO1	: out std_logic := '0';
    DO2	: out std_logic := '0';
    DO3	: out std_logic := '0';
    DO4	: out std_logic := '0';
    DO5	: out std_logic := '0';
    DO6	: out std_logic := '0'
);
end component NX_CDC_U;

component NX_DPREG_U is
generic (
    position            : bit       := '0';      -- '0' : reg 0 , '1' reg 1
    mode                : integer   := 0;        --  0  : DPREG - 1: SPREG - 2: XRF_64x18 - 3: XRF_32x36 - 4: XRF_2R_1W
    mem_ctxt            : string    := "";       --       memory initial context
    cfg_spreg_i         : std_logic :='0'
);
port (
    raddr_i	: in std_logic_vector( 5 downto 0) := (others => '0');
    rdata_o	: out std_logic_vector(17 downto 0) := (others => '0');
    wclk_i	: in std_logic := '0';
    we_i	: in std_logic := '0';
    we_all_i	: in std_logic := '0';
    waddr_i	: in std_logic_vector( 5 downto 0) := (others => '0');
    wdata_i	: in std_logic_vector(17 downto 0) := (others => '0')
);
end component NX_DPREG_U;

component NX_FIFO is
generic (
    wck_edge       : bit := '0';
    rck_edge       : bit := '0';
    use_write_arst : bit := '0';
    use_read_arst  : bit := '0';
    read_addr_inv  : bit_vector(5 downto 0) := "000000"
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0';
    I	: in std_logic_vector(17 downto 0) := (others => '0');
    O	: out std_logic_vector(17 downto 0) := (others => '0');
    WRSTI	: in std_logic := '0';
    WAI	: in std_logic_vector(5 downto 0) := (others => '0');
    WAO	: out std_logic_vector(5 downto 0) := (others => '0');
    WEQ	: out std_logic := '0';
    RRSTI	: in std_logic := '0';
    RAI	: in std_logic_vector(5 downto 0) := (others => '0');
    RAO	: out std_logic_vector(5 downto 0) := (others => '0');
    REQ	: out std_logic := '0'
);
end component NX_FIFO;

component NX_XFIFO_64x18 is
generic (
    wck_edge       : bit := '0';
    rck_edge       : bit := '0';
    use_write_arst : bit := '0';
    use_read_arst  : bit := '0';
    read_addr_inv  : bit_vector(6 downto 0) := "0000000"
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0';
    I	: in std_logic_vector(17 downto 0) := (others => '0');
    O	: out std_logic_vector(17 downto 0) := (others => '0');
    WRSTI	: in std_logic := '0';
    WAI	: in std_logic_vector(6 downto 0) := (others => '0');
    WAO	: out std_logic_vector(6 downto 0) := (others => '0');
    WEQ	: out std_logic_vector(1 downto 0) := (others => '0');
    RRSTI	: in std_logic := '0';
    RAI	: in std_logic_vector(6 downto 0) := (others => '0');
    RAO	: out std_logic_vector(6 downto 0) := (others => '0');
    REQ	: out std_logic_vector(1 downto 0) := (others => '0')
);
end component NX_XFIFO_64x18;

component NX_XFIFO_32x36 is
generic (
    wck_edge       : bit := '0';
    rck_edge       : bit := '0';
    use_write_arst : bit := '0';
    use_read_arst  : bit := '0';
    read_addr_inv  : bit_vector(6 downto 0) := "0000000"
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0';
    I	: in std_logic_vector(35 downto 0) := (others => '0');
    O	: out std_logic_vector(35 downto 0) := (others => '0');
    WRSTI	: in std_logic := '0';
    WAI	: in std_logic_vector(5 downto 0) := (others => '0');
    WAO	: out std_logic_vector(5 downto 0) := (others => '0');
    WEQ	: out std_logic := '0';
    RRSTI	: in std_logic := '0';
    RAI	: in std_logic_vector(5 downto 0) := (others => '0');
    RAO	: out std_logic_vector(5 downto 0) := (others => '0');
    REQ	: out std_logic := '0'
);
end component NX_XFIFO_32x36;

component NX_FIFO_U is
generic (
    mode           : integer := 0; -- 0: DPREG - 1: XFIFO_64x18 - 2: XFIFO_32x36
    wck_edge       : bit := '0';
    rck_edge       : bit := '0';
    use_write_arst : bit := '0';
    use_read_arst  : bit := '0';
    read_addr_inv  : bit_vector(6 downto 0) := "0000000"
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEA	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    I17	: in std_logic := '0';
    I18	: in std_logic := '0';
    I19	: in std_logic := '0';
    I20	: in std_logic := '0';
    I21	: in std_logic := '0';
    I22	: in std_logic := '0';
    I23	: in std_logic := '0';
    I24	: in std_logic := '0';
    I25	: in std_logic := '0';
    I26	: in std_logic := '0';
    I27	: in std_logic := '0';
    I28	: in std_logic := '0';
    I29	: in std_logic := '0';
    I30	: in std_logic := '0';
    I31	: in std_logic := '0';
    I32	: in std_logic := '0';
    I33	: in std_logic := '0';
    I34	: in std_logic := '0';
    I35	: in std_logic := '0';
    I36	: in std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    O17	: out std_logic := '0';
    O18	: out std_logic := '0';
    O19	: out std_logic := '0';
    O20	: out std_logic := '0';
    O21	: out std_logic := '0';
    O22	: out std_logic := '0';
    O23	: out std_logic := '0';
    O24	: out std_logic := '0';
    O25	: out std_logic := '0';
    O26	: out std_logic := '0';
    O27	: out std_logic := '0';
    O28	: out std_logic := '0';
    O29	: out std_logic := '0';
    O30	: out std_logic := '0';
    O31	: out std_logic := '0';
    O32	: out std_logic := '0';
    O33	: out std_logic := '0';
    O34	: out std_logic := '0';
    O35	: out std_logic := '0';
    O36	: out std_logic := '0';
    WRSTI	: in std_logic := '0';
    WAI1	: in std_logic := '0';
    WAI2	: in std_logic := '0';
    WAI3	: in std_logic := '0';
    WAI4	: in std_logic := '0';
    WAI5	: in std_logic := '0';
    WAI6	: in std_logic := '0';
    WAI7	: in std_logic := '0';
    WAO1	: out std_logic := '0';
    WAO2	: out std_logic := '0';
    WAO3	: out std_logic := '0';
    WAO4	: out std_logic := '0';
    WAO5	: out std_logic := '0';
    WAO6	: out std_logic := '0';
    WAO7	: out std_logic := '0';
    WEQ1	: out std_logic := '0';
    WEQ2	: out std_logic := '0';
    RRSTI	: in std_logic := '0';
    RAI1	: in std_logic := '0';
    RAI2	: in std_logic := '0';
    RAI3	: in std_logic := '0';
    RAI4	: in std_logic := '0';
    RAI5	: in std_logic := '0';
    RAI6	: in std_logic := '0';
    RAI7	: in std_logic := '0';
    RAO1	: out std_logic := '0';
    RAO2	: out std_logic := '0';
    RAO3	: out std_logic := '0';
    RAO4	: out std_logic := '0';
    RAO5	: out std_logic := '0';
    RAO6	: out std_logic := '0';
    RAO7	: out std_logic := '0';
    REQ1	: out std_logic := '0';
    REQ2	: out std_logic := '0'
);
end component NX_FIFO_U;

component NX_DSP_U_TOP_DSP is
generic (
        -- Configuration signals
        -- Pipe mux
        cfg_pr_we_mux       : std_logic                    := '0';      -- 1
        cfg_pr_wez_mux      : std_logic                    := '0';      -- 2
        cfg_pr_rst_mux      : std_logic                    := '0';      -- 3
        cfg_pr_rstz_mux     : std_logic                    := '0';      -- 4
        cfg_pr_ovf_mux      : std_logic                    := '0';      -- 5
        cfg_pr_cyo_mux      : std_logic                    := '0';      -- 6
        cfg_pr_ccyo_mux     : std_logic                    := '0';      -- 7
        cfg_pr_z_mux        : std_logic                    := '0';      -- 8
        cfg_pr_cz_mux       : std_logic                    := '0';      -- 9
        cfg_pr_y_mux        : std_logic                    := '0';      -- 10
        cfg_pr_x_mux        : std_logic                    := '0';      -- 11
        cfg_pr_cyi_mux      : std_logic                    := '0';      -- 12
        cfg_pr_m_mux        : std_logic                    := '0';      -- 13
        cfg_pr_p_mux        : std_logic                    := '0';      -- 14
        cfg_pr_d_mux        : std_logic                    := '0';      -- 15
        cfg_pr_c_mux        : std_logic                    := '0';      -- 16
        cfg_pr_b_cas_mux    : std_logic_vector(1 downto 0) := "00";     -- 17
        cfg_pr_b_mux        : std_logic_vector(1 downto 0) := "00";     -- 18
        cfg_pr_a_cas_mux    : std_logic_vector(1 downto 0) := "00";     -- 19
        cfg_pr_a_mux        : std_logic_vector(1 downto 0) := "00";     -- 20
        -- Pipe reset
        cfg_pr_ovf_rst      : std_logic                    := '0';      -- 19
        cfg_pr_cyo_rst      : std_logic                    := '0';      -- 20
        cfg_pr_ccyo_rst     : std_logic                    := '0';      -- 21
        cfg_pr_z_rst        : std_logic                    := '0';      -- 22
        cfg_pr_cz_rst       : std_logic                    := '0';      -- 23
        cfg_pr_y_rst        : std_logic                    := '0';      -- 24
        cfg_pr_x_rst        : std_logic                    := '0';      -- 25
        cfg_pr_cyi_rst      : std_logic                    := '0';      -- 26
        cfg_pr_m_rst        : std_logic                    := '0';      -- 27
        cfg_pr_p_rst        : std_logic                    := '0';      -- 28
        cfg_pr_d_rst        : std_logic                    := '0';      -- 29
        cfg_pr_c_rst        : std_logic                    := '0';      -- 30
        cfg_pr_b_rst        : std_logic                    := '0';      -- 31
        cfg_pr_a_rst        : std_logic                    := '0';      -- 32
        -- cfg_pr_cz_init      : std_logic_vector(5 downto 0) := "000000"; -- 60
        -- Mode
        cfg_clk_inv         : std_logic                    := '0';      -- 32
        cfg_we_inv          : std_logic                    := '0';      -- 33
        cfg_wez_inv         : std_logic                    := '0';      -- 34
        cfg_rst_inv         : std_logic                    := '0';      -- 35
        cfg_rstz_inv        : std_logic                    := '0';      -- 36
        cfg_mux_we          : std_logic                    := '0';      -- 37
        cfg_mux_wez         : std_logic                    := '0';      -- 38
        cfg_mux_rst         : std_logic                    := '0';      -- 39
        cfg_mux_rstz        : std_logic                    := '0';      -- 40
        cfg_dyn_op_c        : std_logic                    := '0';      -- 41
        cfg_dyn_op_d        : std_logic                    := '0';      -- 42
        cfg_saturation_rank : std_logic_vector(5 downto 0) := "000000"; -- 43
        cfg_saturation_en   : std_logic                    := '0';      -- 44
        cfg_mux_ccyo        : std_logic                    := '0';      -- 45
        cfg_mux_z           : std_logic                    := '0';      -- 46
        cfg_mux_cz          : std_logic                    := '0';      -- 47
        cfg_mux_y           : std_logic                    := '0';      -- 48
        cfg_mux_x           : std_logic_vector(2 downto 0) := "000";    -- 49
        cfg_mux_ccyi        : std_logic                    := '0';      -- 50
        cfg_mux_cyi         : std_logic                    := '0';      -- 51
        cfg_mux_p           : std_logic                    := '0';      -- 52
        cfg_mux_b           : std_logic                    := '0';      -- 53
        cfg_mux_a           : std_logic                    := '0';      -- 54
        cfg_preAdder_op     : std_logic                    := '0';      -- 55
        cfg_alu_op          : std_logic                    := '0';      -- 56
        cfg_alu_inv_y       : std_logic                    := '0';      -- 57
        cfg_alu_inv_z       : std_logic                    := '0';      -- 58
        cfg_signed_mode     : std_logic                    := '0'       -- 59
    );
port (
        -- Inputs
        -- Global signals
    clk_i	: in std_logic := '0';
    rst_i	: in std_logic := '0';
    rstsys_i	: in std_logic := '0';
    rstz_i	: in std_logic := '0';
    rstzsys_i	: in std_logic := '0';
    we_i	: in std_logic := '1';
    wesys_i	: in std_logic := '1';
    wez_i	: in std_logic := '1';
    wezsys_i	: in std_logic := '1';
        -- Signals comming from FPGA network
    cy_i	: in std_logic := '0';
    a_i	: in std_logic_vector(23 downto 0) := (others => '0');
    b_i	: in std_logic_vector(17 downto 0) := (others => '0');
    c_i	: in std_logic_vector(35 downto 0) := (others => '0');
    d_i	: in std_logic_vector(17 downto 0) := (others => '0');
        -- Cascade signals comming from other DSP blocks
    ca_i	: in std_logic_vector(23 downto 0) := (others => '0');
    cb_i	: in std_logic_vector(17 downto 0) := (others => '0');
    cz_i	: in std_logic_vector(55 downto 0) := (others => '0');
    ccy_i	: in std_logic := '0';
        -- Signals going to FPGA network
    z_o	: out std_logic_vector(55 downto 0) := (others => '0');
    cy_42_o	: out std_logic := '0';
    cy_56_o	: out std_logic := '0';
    ovf_o	: out std_logic := '0';

        -- Cascade signals going to others DSP blocks
    ca_o	: out std_logic_vector(23 downto 0) := (others => '0');
    cb_o	: out std_logic_vector(17 downto 0) := (others => '0');
    ccz_o	: out std_logic_vector(55 downto 0) := (others => '0');
    ccy_o	: out std_logic := '0'
    );
end component NX_DSP_U_TOP_DSP;

component NX_DSP_U is
generic (
        std_mode    : string                  := "";                             -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
        raw_config0 : bit_vector(26 downto 0) := B"000000000000000000000000000"; -- Mux
        raw_config1 : bit_vector(23 downto 0) := B"000000000000000000000000";    -- Pipe Mux
        raw_config2 : bit_vector(13 downto 0) := B"00000000000000";              -- Pipe Reset
        raw_config3 : bit_vector(2 downto 0)  := B"000"                          -- ALU operation
    );
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    A5	: in std_logic := '0';
    A6	: in std_logic := '0';
    A7	: in std_logic := '0';
    A8	: in std_logic := '0';
    A9	: in std_logic := '0';
    A10	: in std_logic := '0';
    A11	: in std_logic := '0';
    A12	: in std_logic := '0';
    A13	: in std_logic := '0';
    A14	: in std_logic := '0';
    A15	: in std_logic := '0';
    A16	: in std_logic := '0';
    A17	: in std_logic := '0';
    A18	: in std_logic := '0';
    A19	: in std_logic := '0';
    A20	: in std_logic := '0';
    A21	: in std_logic := '0';
    A22	: in std_logic := '0';
    A23	: in std_logic := '0';
    A24	: in std_logic := '0';

    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    B5	: in std_logic := '0';
    B6	: in std_logic := '0';
    B7	: in std_logic := '0';
    B8	: in std_logic := '0';
    B9	: in std_logic := '0';
    B10	: in std_logic := '0';
    B11	: in std_logic := '0';
    B12	: in std_logic := '0';
    B13	: in std_logic := '0';
    B14	: in std_logic := '0';
    B15	: in std_logic := '0';
    B16	: in std_logic := '0';
    B17	: in std_logic := '0';
    B18	: in std_logic := '0';

    C1	: in std_logic := '0';
    C2	: in std_logic := '0';
    C3	: in std_logic := '0';
    C4	: in std_logic := '0';
    C5	: in std_logic := '0';
    C6	: in std_logic := '0';
    C7	: in std_logic := '0';
    C8	: in std_logic := '0';
    C9	: in std_logic := '0';
    C10	: in std_logic := '0';
    C11	: in std_logic := '0';
    C12	: in std_logic := '0';
    C13	: in std_logic := '0';
    C14	: in std_logic := '0';
    C15	: in std_logic := '0';
    C16	: in std_logic := '0';
    C17	: in std_logic := '0';
    C18	: in std_logic := '0';
    C19	: in std_logic := '0';
    C20	: in std_logic := '0';
    C21	: in std_logic := '0';
    C22	: in std_logic := '0';
    C23	: in std_logic := '0';
    C24	: in std_logic := '0';
    C25	: in std_logic := '0';
    C26	: in std_logic := '0';
    C27	: in std_logic := '0';
    C28	: in std_logic := '0';
    C29	: in std_logic := '0';
    C30	: in std_logic := '0';
    C31	: in std_logic := '0';
    C32	: in std_logic := '0';
    C33	: in std_logic := '0';
    C34	: in std_logic := '0';
    C35	: in std_logic := '0';
    C36	: in std_logic := '0';

    CAI1	: in std_logic := '0';
    CAI2	: in std_logic := '0';
    CAI3	: in std_logic := '0';
    CAI4	: in std_logic := '0';
    CAI5	: in std_logic := '0';
    CAI6	: in std_logic := '0';
    CAI7	: in std_logic := '0';
    CAI8	: in std_logic := '0';
    CAI9	: in std_logic := '0';
    CAI10	: in std_logic := '0';
    CAI11	: in std_logic := '0';
    CAI12	: in std_logic := '0';
    CAI13	: in std_logic := '0';
    CAI14	: in std_logic := '0';
    CAI15	: in std_logic := '0';
    CAI16	: in std_logic := '0';
    CAI17	: in std_logic := '0';
    CAI18	: in std_logic := '0';
    CAI19	: in std_logic := '0';
    CAI20	: in std_logic := '0';
    CAI21	: in std_logic := '0';
    CAI22	: in std_logic := '0';
    CAI23	: in std_logic := '0';
    CAI24	: in std_logic := '0';

    CAO1	: out std_logic := '0';
    CAO2	: out std_logic := '0';
    CAO3	: out std_logic := '0';
    CAO4	: out std_logic := '0';
    CAO5	: out std_logic := '0';
    CAO6	: out std_logic := '0';
    CAO7	: out std_logic := '0';
    CAO8	: out std_logic := '0';
    CAO9	: out std_logic := '0';
    CAO10	: out std_logic := '0';
    CAO11	: out std_logic := '0';
    CAO12	: out std_logic := '0';
    CAO13	: out std_logic := '0';
    CAO14	: out std_logic := '0';
    CAO15	: out std_logic := '0';
    CAO16	: out std_logic := '0';
    CAO17	: out std_logic := '0';
    CAO18	: out std_logic := '0';
    CAO19	: out std_logic := '0';
    CAO20	: out std_logic := '0';
    CAO21	: out std_logic := '0';
    CAO22	: out std_logic := '0';
    CAO23	: out std_logic := '0';
    CAO24	: out std_logic := '0';

    CBI1	: in std_logic := '0';
    CBI2	: in std_logic := '0';
    CBI3	: in std_logic := '0';
    CBI4	: in std_logic := '0';
    CBI5	: in std_logic := '0';
    CBI6	: in std_logic := '0';
    CBI7	: in std_logic := '0';
    CBI8	: in std_logic := '0';
    CBI9	: in std_logic := '0';
    CBI10	: in std_logic := '0';
    CBI11	: in std_logic := '0';
    CBI12	: in std_logic := '0';
    CBI13	: in std_logic := '0';
    CBI14	: in std_logic := '0';
    CBI15	: in std_logic := '0';
    CBI16	: in std_logic := '0';
    CBI17	: in std_logic := '0';
    CBI18	: in std_logic := '0';

    CBO1	: out std_logic := '0';
    CBO2	: out std_logic := '0';
    CBO3	: out std_logic := '0';
    CBO4	: out std_logic := '0';
    CBO5	: out std_logic := '0';
    CBO6	: out std_logic := '0';
    CBO7	: out std_logic := '0';
    CBO8	: out std_logic := '0';
    CBO9	: out std_logic := '0';
    CBO10	: out std_logic := '0';
    CBO11	: out std_logic := '0';
    CBO12	: out std_logic := '0';
    CBO13	: out std_logic := '0';
    CBO14	: out std_logic := '0';
    CBO15	: out std_logic := '0';
    CBO16	: out std_logic := '0';
    CBO17	: out std_logic := '0';
    CBO18	: out std_logic := '0';

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO43	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI1	: in std_logic := '0';
    CZI2	: in std_logic := '0';
    CZI3	: in std_logic := '0';
    CZI4	: in std_logic := '0';
    CZI5	: in std_logic := '0';
    CZI6	: in std_logic := '0';
    CZI7	: in std_logic := '0';
    CZI8	: in std_logic := '0';
    CZI9	: in std_logic := '0';
    CZI10	: in std_logic := '0';
    CZI11	: in std_logic := '0';
    CZI12	: in std_logic := '0';
    CZI13	: in std_logic := '0';
    CZI14	: in std_logic := '0';
    CZI15	: in std_logic := '0';
    CZI16	: in std_logic := '0';
    CZI17	: in std_logic := '0';
    CZI18	: in std_logic := '0';
    CZI19	: in std_logic := '0';
    CZI20	: in std_logic := '0';
    CZI21	: in std_logic := '0';
    CZI22	: in std_logic := '0';
    CZI23	: in std_logic := '0';
    CZI24	: in std_logic := '0';
    CZI25	: in std_logic := '0';
    CZI26	: in std_logic := '0';
    CZI27	: in std_logic := '0';
    CZI28	: in std_logic := '0';
    CZI29	: in std_logic := '0';
    CZI30	: in std_logic := '0';
    CZI31	: in std_logic := '0';
    CZI32	: in std_logic := '0';
    CZI33	: in std_logic := '0';
    CZI34	: in std_logic := '0';
    CZI35	: in std_logic := '0';
    CZI36	: in std_logic := '0';
    CZI37	: in std_logic := '0';
    CZI38	: in std_logic := '0';
    CZI39	: in std_logic := '0';
    CZI40	: in std_logic := '0';
    CZI41	: in std_logic := '0';
    CZI42	: in std_logic := '0';
    CZI43	: in std_logic := '0';
    CZI44	: in std_logic := '0';
    CZI45	: in std_logic := '0';
    CZI46	: in std_logic := '0';
    CZI47	: in std_logic := '0';
    CZI48	: in std_logic := '0';
    CZI49	: in std_logic := '0';
    CZI50	: in std_logic := '0';
    CZI51	: in std_logic := '0';
    CZI52	: in std_logic := '0';
    CZI53	: in std_logic := '0';
    CZI54	: in std_logic := '0';
    CZI55	: in std_logic := '0';
    CZI56	: in std_logic := '0';

    CZO1	: out std_logic := '0';
    CZO2	: out std_logic := '0';
    CZO3	: out std_logic := '0';
    CZO4	: out std_logic := '0';
    CZO5	: out std_logic := '0';
    CZO6	: out std_logic := '0';
    CZO7	: out std_logic := '0';
    CZO8	: out std_logic := '0';
    CZO9	: out std_logic := '0';
    CZO10	: out std_logic := '0';
    CZO11	: out std_logic := '0';
    CZO12	: out std_logic := '0';
    CZO13	: out std_logic := '0';
    CZO14	: out std_logic := '0';
    CZO15	: out std_logic := '0';
    CZO16	: out std_logic := '0';
    CZO17	: out std_logic := '0';
    CZO18	: out std_logic := '0';
    CZO19	: out std_logic := '0';
    CZO20	: out std_logic := '0';
    CZO21	: out std_logic := '0';
    CZO22	: out std_logic := '0';
    CZO23	: out std_logic := '0';
    CZO24	: out std_logic := '0';
    CZO25	: out std_logic := '0';
    CZO26	: out std_logic := '0';
    CZO27	: out std_logic := '0';
    CZO28	: out std_logic := '0';
    CZO29	: out std_logic := '0';
    CZO30	: out std_logic := '0';
    CZO31	: out std_logic := '0';
    CZO32	: out std_logic := '0';
    CZO33	: out std_logic := '0';
    CZO34	: out std_logic := '0';
    CZO35	: out std_logic := '0';
    CZO36	: out std_logic := '0';
    CZO37	: out std_logic := '0';
    CZO38	: out std_logic := '0';
    CZO39	: out std_logic := '0';
    CZO40	: out std_logic := '0';
    CZO41	: out std_logic := '0';
    CZO42	: out std_logic := '0';
    CZO43	: out std_logic := '0';
    CZO44	: out std_logic := '0';
    CZO45	: out std_logic := '0';
    CZO46	: out std_logic := '0';
    CZO47	: out std_logic := '0';
    CZO48	: out std_logic := '0';
    CZO49	: out std_logic := '0';
    CZO50	: out std_logic := '0';
    CZO51	: out std_logic := '0';
    CZO52	: out std_logic := '0';
    CZO53	: out std_logic := '0';
    CZO54	: out std_logic := '0';
    CZO55	: out std_logic := '0';
    CZO56	: out std_logic := '0';

    D1	: in std_logic := '0';
    D2	: in std_logic := '0';
    D3	: in std_logic := '0';
    D4	: in std_logic := '0';
    D5	: in std_logic := '0';
    D6	: in std_logic := '0';
    D7	: in std_logic := '0';
    D8	: in std_logic := '0';
    D9	: in std_logic := '0';
    D10	: in std_logic := '0';
    D11	: in std_logic := '0';
    D12	: in std_logic := '0';
    D13	: in std_logic := '0';
    D14	: in std_logic := '0';
    D15	: in std_logic := '0';
    D16	: in std_logic := '0';
    D17	: in std_logic := '0';
    D18	: in std_logic := '0';

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEZ	: in std_logic := '0';

    Z1	: out std_logic := '0';
    Z2	: out std_logic := '0';
    Z3	: out std_logic := '0';
    Z4	: out std_logic := '0';
    Z5	: out std_logic := '0';
    Z6	: out std_logic := '0';
    Z7	: out std_logic := '0';
    Z8	: out std_logic := '0';
    Z9	: out std_logic := '0';
    Z10	: out std_logic := '0';
    Z11	: out std_logic := '0';
    Z12	: out std_logic := '0';
    Z13	: out std_logic := '0';
    Z14	: out std_logic := '0';
    Z15	: out std_logic := '0';
    Z16	: out std_logic := '0';
    Z17	: out std_logic := '0';
    Z18	: out std_logic := '0';
    Z19	: out std_logic := '0';
    Z20	: out std_logic := '0';
    Z21	: out std_logic := '0';
    Z22	: out std_logic := '0';
    Z23	: out std_logic := '0';
    Z24	: out std_logic := '0';
    Z25	: out std_logic := '0';
    Z26	: out std_logic := '0';
    Z27	: out std_logic := '0';
    Z28	: out std_logic := '0';
    Z29	: out std_logic := '0';
    Z30	: out std_logic := '0';
    Z31	: out std_logic := '0';
    Z32	: out std_logic := '0';
    Z33	: out std_logic := '0';
    Z34	: out std_logic := '0';
    Z35	: out std_logic := '0';
    Z36	: out std_logic := '0';
    Z37	: out std_logic := '0';
    Z38	: out std_logic := '0';
    Z39	: out std_logic := '0';
    Z40	: out std_logic := '0';
    Z41	: out std_logic := '0';
    Z42	: out std_logic := '0';
    Z43	: out std_logic := '0';
    Z44	: out std_logic := '0';
    Z45	: out std_logic := '0';
    Z46	: out std_logic := '0';
    Z47	: out std_logic := '0';
    Z48	: out std_logic := '0';
    Z49	: out std_logic := '0';
    Z50	: out std_logic := '0';
    Z51	: out std_logic := '0';
    Z52	: out std_logic := '0';
    Z53	: out std_logic := '0';
    Z54	: out std_logic := '0';
    Z55	: out std_logic := '0';
    Z56	: out std_logic := '0'
    );
end component NX_DSP_U;

component NX_DSP_U_WRAP is
generic (
        std_mode    : string                  := "";
        raw_config0 : bit_vector(26 downto 0) := B"000000000000000000000000000"; -- Mux
        raw_config1 : bit_vector(23 downto 0) := B"000000000000000000000000";    -- Pipe Mux
        raw_config2 : bit_vector(13 downto 0) := B"00000000000000";              -- Pipe Reset
        raw_config3 : bit_vector(2 downto 0)  := B"000"                          -- ALU operation
    );
port (
    A	: in std_logic_vector(23 downto 0) := (others => '0');
    B	: in std_logic_vector(17 downto 0) := (others => '0');
    C	: in std_logic_vector(35 downto 0) := (others => '0');

    CAI	: in std_logic_vector(23 downto 0) := (others => '0');
    CAO	: out std_logic_vector(23 downto 0) := (others => '0');
    CBI	: in std_logic_vector(17 downto 0) := (others => '0');
    CBO	: out std_logic_vector(17 downto 0) := (others => '0');

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO43	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI	: in std_logic_vector(55 downto 0) := (others => '0');
    CZO	: out std_logic_vector(55 downto 0) := (others => '0');

    D	: in std_logic_vector(17 downto 0) := (others => '0');

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEZ	: in std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0')
    );
end component NX_DSP_U_WRAP;

component NX_DSP_U_SPLIT is
generic (
        -------------------------------------------------------------------------
        -- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
        ------------------------------------------------------------------------- 
        SIGNED_MODE        : bit                    := '0';
        INV_WE             : bit                    := '0';
        INV_WEZ            : bit                    := '0';
        INV_RST            : bit                    := '0';
        INV_RSTZ           : bit                    := '0';
        ALU_DYNAMIC_OP     : bit_vector(1 downto 0) := B"00";     -- "00" for Static,
        -- "-1" for Dynamic control from C
        -- "10" for Dynamic control from D
        SATURATION_RANK    : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB on Z and CZO result
        --(to define saturation and overflow)
        ENABLE_SATURATION  : bit                    := '0';       -- '0' for Disable,  '1' for Enable
        MUX_CCO            : bit                    := '0';       -- '0' for CC0 = ALU(42), '1' for CCO = ALU(56)
        MUX_Z              : bit                    := '0';       -- Select Z output. '0' for Y, '1' Saturation / ALU
        MUX_CZ             : bit                    := '0';       -- Select MUX_CZ input. '0' for CZI, '1' for CZO
        MUX_Y              : bit                    := '0';       -- Select ALU's Y input. '0' for MULT output, '1' for (B & A)
        MUX_X              : bit_vector(2 downto 0) := B"000";    -- Select MUX_X operation
        -- "000" for c[33:0]&d[41:34],
        -- "001" for C
        -- "010" for MUX_X[39:0]&C[15:0]
        -- "011" for MUX_X
        -- "100" for MUX_X >> 6
        -- "101" for MUX_X >> 12
        -- "110" for MUX_X >> 17
        -- "111" for MUX_X >> 18
        MUX_CCI            : bit                    := '0';       -- Select '1' input of CI mux. '0' for CCI, '1' for CO_feddback
        MUX_CI             : bit                    := '0';       -- Select input carry of ALU. '0' for CI, '1' for CCI/CO_feedback mux
        MUX_P              : bit                    := '0';       -- '1' for PRE_ADDER, '0' for B input
        MUX_B              : bit                    := '0';       -- '0' = B input, '1' = CBI input
        MUX_A              : bit                    := '0';       -- '0' = A input, '1' = CAI input
        PRE_ADDER_OP       : bit                    := '0';       -- '0' = Additon, '1' = Subraction

        -------------------------------------------------------------------------
        -- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
        -------------------------------------------------------------------------
        PR_WE_MUX          : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_WEZ_MUX         : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_RST_MUX         : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_RSTZ_MUX        : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_OV_MUX          : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_CO_MUX          : bit                    := '0';       -- Registered carry out (CO42 & CO56)
        PR_CCO_MUX         : bit                    := '0';       -- Registered cascade carry out
        PR_Z_MUX           : bit                    := '0';       -- Registered output
        PR_CZ_MUX          : bit                    := '0';       -- Registered cascade output
        PR_Y_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_X_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_CI_MUX          : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_MULT_MUX        : bit                    := '0';       -- No pipe reg  -- Register inside MULT
        PR_P_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
        PR_D_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_C_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_B_CASCADE_MUX   : bit_vector(1 downto 0) := B"00";     -- Number of pipe reg levels for CAO output. "-0" for 0 level, "01" for 1 level, "11" for 2 levels
        PR_B_MUX           : bit_vector(1 downto 0) := B"00";     -- Number of pipe reg levels on B input. "-0" for 0 level, "01" for 1 level, "11" for 2 levels
        PR_A_CASCADE_MUX   : bit_vector(1 downto 0) := B"00";     -- Number of pipe reg levels for CAO output. "-0" for 0 level, "01" for 1 level, "11" for 2 levels
        PR_A_MUX           : bit_vector(1 downto 0) := B"00";     -- Number of pipe reg levels on A input. "-0" for 0 level, "01" for 1 level, "11" for 2 levels
        -------------------------------------------------------------------------
        -- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
        -------------------------------------------------------------------------
        ENABLE_PR_OV_RST   : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_CO_RST   : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_CCO_RST  : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_Z_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_CZ_RST   : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_Y_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_X_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_CI_RST   : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_MULT_RST : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_P_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_D_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_C_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_B_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_A_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        -- PR_CZ_INIT         : bit_vector(5 downto 0) := B"000000"; -- Value of CZ's pipe register on reset

        -------------------------------------------------------------------------
        -- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
        -------------------------------------------------------------------------
        ALU_OP             : bit_vector(2 downto 0) := B"000"     -- ALU operation
        -- x+y+c    = "000"
        -- x-y-c    = "001"
        -- x-y+c-1  = "010"
        -- x+y-c+1  = "011"
        -- -x-y-c-1 = "100"
        -- -x+y+c-1 = "101"
        -- -x+y-c   = "110"
        -- -x-y+c-2 = "111"
    );
port (
    CK	: in std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';
    WEZ	: in std_logic := '0';

    CI	: in std_logic := '0';
    A	: in std_logic_vector(23 downto 0) := (others => '0');
    B	: in std_logic_vector(17 downto 0) := (others => '0');
    C	: in std_logic_vector(35 downto 0) := (others => '0');
    D	: in std_logic_vector(17 downto 0) := (others => '0');
    CAI	: in std_logic_vector(23 downto 0) := (others => '0');
    CBI	: in std_logic_vector(17 downto 0) := (others => '0');
    CZI	: in std_logic_vector(55 downto 0) := (others => '0');
    CCI	: in std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0');
    CO42	: out std_logic := '0';
    CO56	: out std_logic := '0';
    OVF	: out std_logic := '0';
    CAO	: out std_logic_vector(23 downto 0) := (others => '0');
    CBO	: out std_logic_vector(17 downto 0) := (others => '0');
    CZO	: out std_logic_vector(55 downto 0) := (others => '0');
    CCO	: out std_logic := '0'
    );
end component NX_DSP_U_SPLIT;

component NX_RAM is
generic (
    std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt     : string := ""; -- context initialization
    pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD
    -- For specific NG_LARGE Extended Features
    raw_l_enable : bit := '0';						-- EXT L Enable
    raw_l_extend : bit_vector( 3 downto 0) := B"0000"			-- EXT L
);
port (
    ACK	: in std_logic := '0';
    ACKC	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKC	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI1	: in std_logic := '0';
    AI2	: in std_logic := '0';
    AI3	: in std_logic := '0';
    AI4	: in std_logic := '0';
    AI5	: in std_logic := '0';
    AI6	: in std_logic := '0';
    AI7	: in std_logic := '0';
    AI8	: in std_logic := '0';
    AI9	: in std_logic := '0';
    AI10	: in std_logic := '0';
    AI11	: in std_logic := '0';
    AI12	: in std_logic := '0';
    AI13	: in std_logic := '0';
    AI14	: in std_logic := '0';
    AI15	: in std_logic := '0';
    AI16	: in std_logic := '0';

    AI17	: in std_logic := '0';
    AI18	: in std_logic := '0';
    AI19	: in std_logic := '0';
    AI20	: in std_logic := '0';
    AI21	: in std_logic := '0';
    AI22	: in std_logic := '0';
    AI23	: in std_logic := '0';
    AI24	: in std_logic := '0';

    BI1	: in std_logic := '0';
    BI2	: in std_logic := '0';
    BI3	: in std_logic := '0';
    BI4	: in std_logic := '0';
    BI5	: in std_logic := '0';
    BI6	: in std_logic := '0';
    BI7	: in std_logic := '0';
    BI8	: in std_logic := '0';
    BI9	: in std_logic := '0';
    BI10	: in std_logic := '0';
    BI11	: in std_logic := '0';
    BI12	: in std_logic := '0';
    BI13	: in std_logic := '0';
    BI14	: in std_logic := '0';
    BI15	: in std_logic := '0';
    BI16	: in std_logic := '0';

    BI17	: in std_logic := '0';
    BI18	: in std_logic := '0';
    BI19	: in std_logic := '0';
    BI20	: in std_logic := '0';
    BI21	: in std_logic := '0';
    BI22	: in std_logic := '0';
    BI23	: in std_logic := '0';
    BI24	: in std_logic := '0';

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO1	: out std_logic := '0';
    AO2	: out std_logic := '0';
    AO3	: out std_logic := '0';
    AO4	: out std_logic := '0';
    AO5	: out std_logic := '0';
    AO6	: out std_logic := '0';
    AO7	: out std_logic := '0';
    AO8	: out std_logic := '0';
    AO9	: out std_logic := '0';
    AO10	: out std_logic := '0';
    AO11	: out std_logic := '0';
    AO12	: out std_logic := '0';
    AO13	: out std_logic := '0';
    AO14	: out std_logic := '0';
    AO15	: out std_logic := '0';
    AO16	: out std_logic := '0';

    AO17	: out std_logic := '0';
    AO18	: out std_logic := '0';
    AO19	: out std_logic := '0';
    AO20	: out std_logic := '0';
    AO21	: out std_logic := '0';
    AO22	: out std_logic := '0';
    AO23	: out std_logic := '0';
    AO24	: out std_logic := '0';

    BO1	: out std_logic := '0';
    BO2	: out std_logic := '0';
    BO3	: out std_logic := '0';
    BO4	: out std_logic := '0';
    BO5	: out std_logic := '0';
    BO6	: out std_logic := '0';
    BO7	: out std_logic := '0';
    BO8	: out std_logic := '0';
    BO9	: out std_logic := '0';
    BO10	: out std_logic := '0';
    BO11	: out std_logic := '0';
    BO12	: out std_logic := '0';
    BO13	: out std_logic := '0';
    BO14	: out std_logic := '0';
    BO15	: out std_logic := '0';
    BO16	: out std_logic := '0';

    BO17	: out std_logic := '0';
    BO18	: out std_logic := '0';
    BO19	: out std_logic := '0';
    BO20	: out std_logic := '0';
    BO21	: out std_logic := '0';
    BO22	: out std_logic := '0';
    BO23	: out std_logic := '0';
    BO24	: out std_logic := '0';

    AA1	: in std_logic := '0';
    AA2	: in std_logic := '0';
    AA3	: in std_logic := '0';
    AA4	: in std_logic := '0';
    AA5	: in std_logic := '0';
    AA6	: in std_logic := '0';

    AA7	: in std_logic := '0';
    AA8	: in std_logic := '0';
    AA9	: in std_logic := '0';
    AA10	: in std_logic := '0';
    AA11	: in std_logic := '0';
    AA12	: in std_logic := '0';
    AA13	: in std_logic := '0';
    AA14	: in std_logic := '0';
    AA15	: in std_logic := '0';
    AA16	: in std_logic := '0';

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA1	: in std_logic := '0';
    BA2	: in std_logic := '0';
    BA3	: in std_logic := '0';
    BA4	: in std_logic := '0';
    BA5	: in std_logic := '0';
    BA6	: in std_logic := '0';

    BA7	: in std_logic := '0';
    BA8	: in std_logic := '0';
    BA9	: in std_logic := '0';
    BA10	: in std_logic := '0';
    BA11	: in std_logic := '0';
    BA12	: in std_logic := '0';
    BA13	: in std_logic := '0';
    BA14	: in std_logic := '0';
    BA15	: in std_logic := '0';
    BA16	: in std_logic := '0';

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM;

component NX_RAM_WRAP is
generic (
    std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt     : string := ""; -- context initialization
    pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD
    -- For specific NG_LARGE Extended Features
    raw_l_enable : bit := '0';						-- EXT L Enable
    raw_l_extend : bit_vector( 3 downto 0) := B"0000"			-- EXT L
);
port (
    ACK	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI	: in std_logic_vector(23 downto 0) := (others => '0');
    BI	: in std_logic_vector(23 downto 0) := (others => '0');

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO	: out std_logic_vector(23 downto 0) := (others => '0');
    BO	: out std_logic_vector(23 downto 0) := (others => '0');
    AA	: in std_logic_vector(15 downto 0) := (others => '0');

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA	: in std_logic_vector(15 downto 0) := (others => '0');

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM_WRAP;

component NX_ECC is
port (
    CKD	: in std_logic := '0';
    CHK	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0'
    );
end component NX_ECC;

-- beware following components are only intended for internal use. Do not try to instantiate them.
component NX_BUFFER is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BUFFER;

component NX_CSC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_CSC;

component NX_SCC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_SCC;

component NX_syn_tp is
port (
    I	: in std_logic := '0'
);
end component NX_syn_tp;

component NX_RB is
generic (
    -- input : EI to FO
    inputClk      : bit_vector( 1 downto 0) := B"00"; -- 00 = CK1, 01 = CK2, 10 = CK3 and 11 = CK4
    inputBypass   : bit_vector(23 downto 0) := B"000000000000000000000000"; -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
    inputContext  : string := ""; -- input context initialization
    -- output : FI to EO
    outputClk     : bit_vector( 1 downto 0) := B"00"; -- 00 = CK1, 01 = CK2, 10 = CK3 and 11 = CK4
    outputBypass  : bit_vector(23 downto 0) := B"000000000000000000000000";  -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
    outputContext : string := "" -- output context initialization
);
port (
    CK1	: in std_logic := '0';
    CK2	: in std_logic := '0';
    CK3	: in std_logic := '0';
    CK4	: in std_logic := '0';
    EI1	: in std_logic := '0';
    EI2	: in std_logic := '0';
    EI3	: in std_logic := '0';
    EI4	: in std_logic := '0';
    EI5	: in std_logic := '0';
    EI6	: in std_logic := '0';
    EI7	: in std_logic := '0';
    EI8	: in std_logic := '0';
    EI9	: in std_logic := '0';
    EI10	: in std_logic := '0';
    EI11	: in std_logic := '0';
    EI12	: in std_logic := '0';
    EI13	: in std_logic := '0';
    EI14	: in std_logic := '0';
    EI15	: in std_logic := '0';
    EI16	: in std_logic := '0';
    EI17	: in std_logic := '0';
    EI18	: in std_logic := '0';
    EI19	: in std_logic := '0';
    EI20	: in std_logic := '0';
    EI21	: in std_logic := '0';
    EI22	: in std_logic := '0';
    EI23	: in std_logic := '0';
    EI24	: in std_logic := '0';
    EI25	: in std_logic := '0';
    EI26	: in std_logic := '0';
    EI27	: in std_logic := '0';
    EI28	: in std_logic := '0';
    EI29	: in std_logic := '0';
    EI30	: in std_logic := '0';
    EI31	: in std_logic := '0';
    EI32	: in std_logic := '0';
    EI33	: in std_logic := '0';
    EI34	: in std_logic := '0';
    EI35	: in std_logic := '0';
    EI36	: in std_logic := '0';
    EI37	: in std_logic := '0';
    EI38	: in std_logic := '0';
    EI39	: in std_logic := '0';
    EI40	: in std_logic := '0';
    EI41	: in std_logic := '0';
    EI42	: in std_logic := '0';
    EI43	: in std_logic := '0';
    EI44	: in std_logic := '0';
    EI45	: in std_logic := '0';
    EI46	: in std_logic := '0';
    EI47	: in std_logic := '0';
    EI48	: in std_logic := '0';
    EI49	: in std_logic := '0';
    EI50	: in std_logic := '0';
    EI51	: in std_logic := '0';
    EI52	: in std_logic := '0';
    EI53	: in std_logic := '0';
    EI54	: in std_logic := '0';
    EI55	: in std_logic := '0';
    EI56	: in std_logic := '0';
    EI57	: in std_logic := '0';
    EI58	: in std_logic := '0';
    EI59	: in std_logic := '0';
    EI60	: in std_logic := '0';
    EI61	: in std_logic := '0';
    EI62	: in std_logic := '0';
    EI63	: in std_logic := '0';
    EI64	: in std_logic := '0';
    EI65	: in std_logic := '0';
    EI66	: in std_logic := '0';
    EI67	: in std_logic := '0';
    EI68	: in std_logic := '0';
    EI69	: in std_logic := '0';
    EI70	: in std_logic := '0';
    EI71	: in std_logic := '0';
    EI72	: in std_logic := '0';
    EI73	: in std_logic := '0';
    EI74	: in std_logic := '0';
    EI75	: in std_logic := '0';
    EI76	: in std_logic := '0';
    EI77	: in std_logic := '0';
    EI78	: in std_logic := '0';
    EI79	: in std_logic := '0';
    EI80	: in std_logic := '0';
    EI81	: in std_logic := '0';
    EI82	: in std_logic := '0';
    EI83	: in std_logic := '0';
    EI84	: in std_logic := '0';
    EI85	: in std_logic := '0';
    EI86	: in std_logic := '0';
    EI87	: in std_logic := '0';
    EI88	: in std_logic := '0';
    EI89	: in std_logic := '0';
    EI90	: in std_logic := '0';
    EI91	: in std_logic := '0';
    EI92	: in std_logic := '0';
    EI93	: in std_logic := '0';
    EI94	: in std_logic := '0';
    EI95	: in std_logic := '0';
    EI96	: in std_logic := '0';
    EI97	: in std_logic := '0';
    EI98	: in std_logic := '0';
    EI99	: in std_logic := '0';
    EI100	: in std_logic := '0';
    EI101	: in std_logic := '0';
    EI102	: in std_logic := '0';
    EI103	: in std_logic := '0';
    EI104	: in std_logic := '0';
    EI105	: in std_logic := '0';
    EI106	: in std_logic := '0';
    EI107	: in std_logic := '0';
    EI108	: in std_logic := '0';
    EI109	: in std_logic := '0';
    EI110	: in std_logic := '0';
    EI111	: in std_logic := '0';
    EI112	: in std_logic := '0';
    EI113	: in std_logic := '0';
    EI114	: in std_logic := '0';
    EI115	: in std_logic := '0';
    EI116	: in std_logic := '0';
    EI117	: in std_logic := '0';
    EI118	: in std_logic := '0';
    EI119	: in std_logic := '0';
    EI120	: in std_logic := '0';
    EI121	: in std_logic := '0';
    EI122	: in std_logic := '0';
    EI123	: in std_logic := '0';
    EI124	: in std_logic := '0';
    EI125	: in std_logic := '0';
    EI126	: in std_logic := '0';
    EI127	: in std_logic := '0';
    EI128	: in std_logic := '0';
    EI129	: in std_logic := '0';
    EI130	: in std_logic := '0';
    EI131	: in std_logic := '0';
    EI132	: in std_logic := '0';
    EI133	: in std_logic := '0';
    EI134	: in std_logic := '0';
    EI135	: in std_logic := '0';
    EI136	: in std_logic := '0';
    EI137	: in std_logic := '0';
    EI138	: in std_logic := '0';
    EI139	: in std_logic := '0';
    EI140	: in std_logic := '0';
    EI141	: in std_logic := '0';
    EI142	: in std_logic := '0';
    EI143	: in std_logic := '0';
    EI144	: in std_logic := '0';
    EI145	: in std_logic := '0';
    EI146	: in std_logic := '0';
    EI147	: in std_logic := '0';
    EI148	: in std_logic := '0';
    EI149	: in std_logic := '0';
    EI150	: in std_logic := '0';
    EI151	: in std_logic := '0';
    EI152	: in std_logic := '0';
    EI153	: in std_logic := '0';
    EI154	: in std_logic := '0';
    EI155	: in std_logic := '0';
    EI156	: in std_logic := '0';
    EI157	: in std_logic := '0';
    EI158	: in std_logic := '0';
    EI159	: in std_logic := '0';
    EI160	: in std_logic := '0';
    EI161	: in std_logic := '0';
    EI162	: in std_logic := '0';
    EI163	: in std_logic := '0';
    EI164	: in std_logic := '0';
    EI165	: in std_logic := '0';
    EI166	: in std_logic := '0';
    EI167	: in std_logic := '0';
    EI168	: in std_logic := '0';
    EI169	: in std_logic := '0';
    EI170	: in std_logic := '0';
    EI171	: in std_logic := '0';
    EI172	: in std_logic := '0';
    EI173	: in std_logic := '0';
    EI174	: in std_logic := '0';
    EI175	: in std_logic := '0';
    EI176	: in std_logic := '0';
    EI177	: in std_logic := '0';
    EI178	: in std_logic := '0';
    EI179	: in std_logic := '0';
    EI180	: in std_logic := '0';
    EI181	: in std_logic := '0';
    EI182	: in std_logic := '0';
    EI183	: in std_logic := '0';
    EI184	: in std_logic := '0';
    EI185	: in std_logic := '0';
    EI186	: in std_logic := '0';
    EI187	: in std_logic := '0';
    EI188	: in std_logic := '0';
    EI189	: in std_logic := '0';
    EI190	: in std_logic := '0';
    EI191	: in std_logic := '0';
    EI192	: in std_logic := '0';
    EO1	: out std_logic := '0';
    EO2	: out std_logic := '0';
    EO3	: out std_logic := '0';
    EO4	: out std_logic := '0';
    EO5	: out std_logic := '0';
    EO6	: out std_logic := '0';
    EO7	: out std_logic := '0';
    EO8	: out std_logic := '0';
    EO9	: out std_logic := '0';
    EO10	: out std_logic := '0';
    EO11	: out std_logic := '0';
    EO12	: out std_logic := '0';
    EO13	: out std_logic := '0';
    EO14	: out std_logic := '0';
    EO15	: out std_logic := '0';
    EO16	: out std_logic := '0';
    EO17	: out std_logic := '0';
    EO18	: out std_logic := '0';
    EO19	: out std_logic := '0';
    EO20	: out std_logic := '0';
    EO21	: out std_logic := '0';
    EO22	: out std_logic := '0';
    EO23	: out std_logic := '0';
    EO24	: out std_logic := '0';
    EO25	: out std_logic := '0';
    EO26	: out std_logic := '0';
    EO27	: out std_logic := '0';
    EO28	: out std_logic := '0';
    EO29	: out std_logic := '0';
    EO30	: out std_logic := '0';
    EO31	: out std_logic := '0';
    EO32	: out std_logic := '0';
    EO33	: out std_logic := '0';
    EO34	: out std_logic := '0';
    EO35	: out std_logic := '0';
    EO36	: out std_logic := '0';
    EO37	: out std_logic := '0';
    EO38	: out std_logic := '0';
    EO39	: out std_logic := '0';
    EO40	: out std_logic := '0';
    EO41	: out std_logic := '0';
    EO42	: out std_logic := '0';
    EO43	: out std_logic := '0';
    EO44	: out std_logic := '0';
    EO45	: out std_logic := '0';
    EO46	: out std_logic := '0';
    EO47	: out std_logic := '0';
    EO48	: out std_logic := '0';
    EO49	: out std_logic := '0';
    EO50	: out std_logic := '0';
    EO51	: out std_logic := '0';
    EO52	: out std_logic := '0';
    EO53	: out std_logic := '0';
    EO54	: out std_logic := '0';
    EO55	: out std_logic := '0';
    EO56	: out std_logic := '0';
    EO57	: out std_logic := '0';
    EO58	: out std_logic := '0';
    EO59	: out std_logic := '0';
    EO60	: out std_logic := '0';
    EO61	: out std_logic := '0';
    EO62	: out std_logic := '0';
    EO63	: out std_logic := '0';
    EO64	: out std_logic := '0';
    EO65	: out std_logic := '0';
    EO66	: out std_logic := '0';
    EO67	: out std_logic := '0';
    EO68	: out std_logic := '0';
    EO69	: out std_logic := '0';
    EO70	: out std_logic := '0';
    EO71	: out std_logic := '0';
    EO72	: out std_logic := '0';
    EO73	: out std_logic := '0';
    EO74	: out std_logic := '0';
    EO75	: out std_logic := '0';
    EO76	: out std_logic := '0';
    EO77	: out std_logic := '0';
    EO78	: out std_logic := '0';
    EO79	: out std_logic := '0';
    EO80	: out std_logic := '0';
    EO81	: out std_logic := '0';
    EO82	: out std_logic := '0';
    EO83	: out std_logic := '0';
    EO84	: out std_logic := '0';
    EO85	: out std_logic := '0';
    EO86	: out std_logic := '0';
    EO87	: out std_logic := '0';
    EO88	: out std_logic := '0';
    EO89	: out std_logic := '0';
    EO90	: out std_logic := '0';
    EO91	: out std_logic := '0';
    EO92	: out std_logic := '0';
    EO93	: out std_logic := '0';
    EO94	: out std_logic := '0';
    EO95	: out std_logic := '0';
    EO96	: out std_logic := '0';
    EO97	: out std_logic := '0';
    EO98	: out std_logic := '0';
    EO99	: out std_logic := '0';
    EO100	: out std_logic := '0';
    EO101	: out std_logic := '0';
    EO102	: out std_logic := '0';
    EO103	: out std_logic := '0';
    EO104	: out std_logic := '0';
    EO105	: out std_logic := '0';
    EO106	: out std_logic := '0';
    EO107	: out std_logic := '0';
    EO108	: out std_logic := '0';
    EO109	: out std_logic := '0';
    EO110	: out std_logic := '0';
    EO111	: out std_logic := '0';
    EO112	: out std_logic := '0';
    EO113	: out std_logic := '0';
    EO114	: out std_logic := '0';
    EO115	: out std_logic := '0';
    EO116	: out std_logic := '0';
    EO117	: out std_logic := '0';
    EO118	: out std_logic := '0';
    EO119	: out std_logic := '0';
    EO120	: out std_logic := '0';
    EO121	: out std_logic := '0';
    EO122	: out std_logic := '0';
    EO123	: out std_logic := '0';
    EO124	: out std_logic := '0';
    EO125	: out std_logic := '0';
    EO126	: out std_logic := '0';
    EO127	: out std_logic := '0';
    EO128	: out std_logic := '0';
    EO129	: out std_logic := '0';
    EO130	: out std_logic := '0';
    EO131	: out std_logic := '0';
    EO132	: out std_logic := '0';
    EO133	: out std_logic := '0';
    EO134	: out std_logic := '0';
    EO135	: out std_logic := '0';
    EO136	: out std_logic := '0';
    EO137	: out std_logic := '0';
    EO138	: out std_logic := '0';
    EO139	: out std_logic := '0';
    EO140	: out std_logic := '0';
    EO141	: out std_logic := '0';
    EO142	: out std_logic := '0';
    EO143	: out std_logic := '0';
    EO144	: out std_logic := '0';
    EO145	: out std_logic := '0';
    EO146	: out std_logic := '0';
    EO147	: out std_logic := '0';
    EO148	: out std_logic := '0';
    EO149	: out std_logic := '0';
    EO150	: out std_logic := '0';
    EO151	: out std_logic := '0';
    EO152	: out std_logic := '0';
    EO153	: out std_logic := '0';
    EO154	: out std_logic := '0';
    EO155	: out std_logic := '0';
    EO156	: out std_logic := '0';
    EO157	: out std_logic := '0';
    EO158	: out std_logic := '0';
    EO159	: out std_logic := '0';
    EO160	: out std_logic := '0';
    EO161	: out std_logic := '0';
    EO162	: out std_logic := '0';
    EO163	: out std_logic := '0';
    EO164	: out std_logic := '0';
    EO165	: out std_logic := '0';
    EO166	: out std_logic := '0';
    EO167	: out std_logic := '0';
    EO168	: out std_logic := '0';
    EO169	: out std_logic := '0';
    EO170	: out std_logic := '0';
    EO171	: out std_logic := '0';
    EO172	: out std_logic := '0';
    EO173	: out std_logic := '0';
    EO174	: out std_logic := '0';
    EO175	: out std_logic := '0';
    EO176	: out std_logic := '0';
    EO177	: out std_logic := '0';
    EO178	: out std_logic := '0';
    EO179	: out std_logic := '0';
    EO180	: out std_logic := '0';
    EO181	: out std_logic := '0';
    EO182	: out std_logic := '0';
    EO183	: out std_logic := '0';
    EO184	: out std_logic := '0';
    EO185	: out std_logic := '0';
    EO186	: out std_logic := '0';
    EO187	: out std_logic := '0';
    EO188	: out std_logic := '0';
    EO189	: out std_logic := '0';
    EO190	: out std_logic := '0';
    EO191	: out std_logic := '0';
    EO192	: out std_logic := '0';
    FI1	: in std_logic := '0';
    FI2	: in std_logic := '0';
    FI3	: in std_logic := '0';
    FI4	: in std_logic := '0';
    FI5	: in std_logic := '0';
    FI6	: in std_logic := '0';
    FI7	: in std_logic := '0';
    FI8	: in std_logic := '0';
    FI9	: in std_logic := '0';
    FI10	: in std_logic := '0';
    FI11	: in std_logic := '0';
    FI12	: in std_logic := '0';
    FI13	: in std_logic := '0';
    FI14	: in std_logic := '0';
    FI15	: in std_logic := '0';
    FI16	: in std_logic := '0';
    FI17	: in std_logic := '0';
    FI18	: in std_logic := '0';
    FI19	: in std_logic := '0';
    FI20	: in std_logic := '0';
    FI21	: in std_logic := '0';
    FI22	: in std_logic := '0';
    FI23	: in std_logic := '0';
    FI24	: in std_logic := '0';
    FI25	: in std_logic := '0';
    FI26	: in std_logic := '0';
    FI27	: in std_logic := '0';
    FI28	: in std_logic := '0';
    FI29	: in std_logic := '0';
    FI30	: in std_logic := '0';
    FI31	: in std_logic := '0';
    FI32	: in std_logic := '0';
    FI33	: in std_logic := '0';
    FI34	: in std_logic := '0';
    FI35	: in std_logic := '0';
    FI36	: in std_logic := '0';
    FI37	: in std_logic := '0';
    FI38	: in std_logic := '0';
    FI39	: in std_logic := '0';
    FI40	: in std_logic := '0';
    FI41	: in std_logic := '0';
    FI42	: in std_logic := '0';
    FI43	: in std_logic := '0';
    FI44	: in std_logic := '0';
    FI45	: in std_logic := '0';
    FI46	: in std_logic := '0';
    FI47	: in std_logic := '0';
    FI48	: in std_logic := '0';
    FI49	: in std_logic := '0';
    FI50	: in std_logic := '0';
    FI51	: in std_logic := '0';
    FI52	: in std_logic := '0';
    FI53	: in std_logic := '0';
    FI54	: in std_logic := '0';
    FI55	: in std_logic := '0';
    FI56	: in std_logic := '0';
    FI57	: in std_logic := '0';
    FI58	: in std_logic := '0';
    FI59	: in std_logic := '0';
    FI60	: in std_logic := '0';
    FI61	: in std_logic := '0';
    FI62	: in std_logic := '0';
    FI63	: in std_logic := '0';
    FI64	: in std_logic := '0';
    FI65	: in std_logic := '0';
    FI66	: in std_logic := '0';
    FI67	: in std_logic := '0';
    FI68	: in std_logic := '0';
    FI69	: in std_logic := '0';
    FI70	: in std_logic := '0';
    FI71	: in std_logic := '0';
    FI72	: in std_logic := '0';
    FI73	: in std_logic := '0';
    FI74	: in std_logic := '0';
    FI75	: in std_logic := '0';
    FI76	: in std_logic := '0';
    FI77	: in std_logic := '0';
    FI78	: in std_logic := '0';
    FI79	: in std_logic := '0';
    FI80	: in std_logic := '0';
    FI81	: in std_logic := '0';
    FI82	: in std_logic := '0';
    FI83	: in std_logic := '0';
    FI84	: in std_logic := '0';
    FI85	: in std_logic := '0';
    FI86	: in std_logic := '0';
    FI87	: in std_logic := '0';
    FI88	: in std_logic := '0';
    FI89	: in std_logic := '0';
    FI90	: in std_logic := '0';
    FI91	: in std_logic := '0';
    FI92	: in std_logic := '0';
    FI93	: in std_logic := '0';
    FI94	: in std_logic := '0';
    FI95	: in std_logic := '0';
    FI96	: in std_logic := '0';
    FI97	: in std_logic := '0';
    FI98	: in std_logic := '0';
    FI99	: in std_logic := '0';
    FI100	: in std_logic := '0';
    FI101	: in std_logic := '0';
    FI102	: in std_logic := '0';
    FI103	: in std_logic := '0';
    FI104	: in std_logic := '0';
    FI105	: in std_logic := '0';
    FI106	: in std_logic := '0';
    FI107	: in std_logic := '0';
    FI108	: in std_logic := '0';
    FI109	: in std_logic := '0';
    FI110	: in std_logic := '0';
    FI111	: in std_logic := '0';
    FI112	: in std_logic := '0';
    FI113	: in std_logic := '0';
    FI114	: in std_logic := '0';
    FI115	: in std_logic := '0';
    FI116	: in std_logic := '0';
    FI117	: in std_logic := '0';
    FI118	: in std_logic := '0';
    FI119	: in std_logic := '0';
    FI120	: in std_logic := '0';
    FI121	: in std_logic := '0';
    FI122	: in std_logic := '0';
    FI123	: in std_logic := '0';
    FI124	: in std_logic := '0';
    FI125	: in std_logic := '0';
    FI126	: in std_logic := '0';
    FI127	: in std_logic := '0';
    FI128	: in std_logic := '0';
    FI129	: in std_logic := '0';
    FI130	: in std_logic := '0';
    FI131	: in std_logic := '0';
    FI132	: in std_logic := '0';
    FI133	: in std_logic := '0';
    FI134	: in std_logic := '0';
    FI135	: in std_logic := '0';
    FI136	: in std_logic := '0';
    FI137	: in std_logic := '0';
    FI138	: in std_logic := '0';
    FI139	: in std_logic := '0';
    FI140	: in std_logic := '0';
    FI141	: in std_logic := '0';
    FI142	: in std_logic := '0';
    FI143	: in std_logic := '0';
    FI144	: in std_logic := '0';
    FI145	: in std_logic := '0';
    FI146	: in std_logic := '0';
    FI147	: in std_logic := '0';
    FI148	: in std_logic := '0';
    FI149	: in std_logic := '0';
    FI150	: in std_logic := '0';
    FI151	: in std_logic := '0';
    FI152	: in std_logic := '0';
    FI153	: in std_logic := '0';
    FI154	: in std_logic := '0';
    FI155	: in std_logic := '0';
    FI156	: in std_logic := '0';
    FI157	: in std_logic := '0';
    FI158	: in std_logic := '0';
    FI159	: in std_logic := '0';
    FI160	: in std_logic := '0';
    FI161	: in std_logic := '0';
    FI162	: in std_logic := '0';
    FI163	: in std_logic := '0';
    FI164	: in std_logic := '0';
    FI165	: in std_logic := '0';
    FI166	: in std_logic := '0';
    FI167	: in std_logic := '0';
    FI168	: in std_logic := '0';
    FI169	: in std_logic := '0';
    FI170	: in std_logic := '0';
    FI171	: in std_logic := '0';
    FI172	: in std_logic := '0';
    FI173	: in std_logic := '0';
    FI174	: in std_logic := '0';
    FI175	: in std_logic := '0';
    FI176	: in std_logic := '0';
    FI177	: in std_logic := '0';
    FI178	: in std_logic := '0';
    FI179	: in std_logic := '0';
    FI180	: in std_logic := '0';
    FI181	: in std_logic := '0';
    FI182	: in std_logic := '0';
    FI183	: in std_logic := '0';
    FI184	: in std_logic := '0';
    FI185	: in std_logic := '0';
    FI186	: in std_logic := '0';
    FI187	: in std_logic := '0';
    FI188	: in std_logic := '0';
    FI189	: in std_logic := '0';
    FI190	: in std_logic := '0';
    FI191	: in std_logic := '0';
    FI192	: in std_logic := '0';
    FO1	: out std_logic := '0';
    FO2	: out std_logic := '0';
    FO3	: out std_logic := '0';
    FO4	: out std_logic := '0';
    FO5	: out std_logic := '0';
    FO6	: out std_logic := '0';
    FO7	: out std_logic := '0';
    FO8	: out std_logic := '0';
    FO9	: out std_logic := '0';
    FO10	: out std_logic := '0';
    FO11	: out std_logic := '0';
    FO12	: out std_logic := '0';
    FO13	: out std_logic := '0';
    FO14	: out std_logic := '0';
    FO15	: out std_logic := '0';
    FO16	: out std_logic := '0';
    FO17	: out std_logic := '0';
    FO18	: out std_logic := '0';
    FO19	: out std_logic := '0';
    FO20	: out std_logic := '0';
    FO21	: out std_logic := '0';
    FO22	: out std_logic := '0';
    FO23	: out std_logic := '0';
    FO24	: out std_logic := '0';
    FO25	: out std_logic := '0';
    FO26	: out std_logic := '0';
    FO27	: out std_logic := '0';
    FO28	: out std_logic := '0';
    FO29	: out std_logic := '0';
    FO30	: out std_logic := '0';
    FO31	: out std_logic := '0';
    FO32	: out std_logic := '0';
    FO33	: out std_logic := '0';
    FO34	: out std_logic := '0';
    FO35	: out std_logic := '0';
    FO36	: out std_logic := '0';
    FO37	: out std_logic := '0';
    FO38	: out std_logic := '0';
    FO39	: out std_logic := '0';
    FO40	: out std_logic := '0';
    FO41	: out std_logic := '0';
    FO42	: out std_logic := '0';
    FO43	: out std_logic := '0';
    FO44	: out std_logic := '0';
    FO45	: out std_logic := '0';
    FO46	: out std_logic := '0';
    FO47	: out std_logic := '0';
    FO48	: out std_logic := '0';
    FO49	: out std_logic := '0';
    FO50	: out std_logic := '0';
    FO51	: out std_logic := '0';
    FO52	: out std_logic := '0';
    FO53	: out std_logic := '0';
    FO54	: out std_logic := '0';
    FO55	: out std_logic := '0';
    FO56	: out std_logic := '0';
    FO57	: out std_logic := '0';
    FO58	: out std_logic := '0';
    FO59	: out std_logic := '0';
    FO60	: out std_logic := '0';
    FO61	: out std_logic := '0';
    FO62	: out std_logic := '0';
    FO63	: out std_logic := '0';
    FO64	: out std_logic := '0';
    FO65	: out std_logic := '0';
    FO66	: out std_logic := '0';
    FO67	: out std_logic := '0';
    FO68	: out std_logic := '0';
    FO69	: out std_logic := '0';
    FO70	: out std_logic := '0';
    FO71	: out std_logic := '0';
    FO72	: out std_logic := '0';
    FO73	: out std_logic := '0';
    FO74	: out std_logic := '0';
    FO75	: out std_logic := '0';
    FO76	: out std_logic := '0';
    FO77	: out std_logic := '0';
    FO78	: out std_logic := '0';
    FO79	: out std_logic := '0';
    FO80	: out std_logic := '0';
    FO81	: out std_logic := '0';
    FO82	: out std_logic := '0';
    FO83	: out std_logic := '0';
    FO84	: out std_logic := '0';
    FO85	: out std_logic := '0';
    FO86	: out std_logic := '0';
    FO87	: out std_logic := '0';
    FO88	: out std_logic := '0';
    FO89	: out std_logic := '0';
    FO90	: out std_logic := '0';
    FO91	: out std_logic := '0';
    FO92	: out std_logic := '0';
    FO93	: out std_logic := '0';
    FO94	: out std_logic := '0';
    FO95	: out std_logic := '0';
    FO96	: out std_logic := '0';
    FO97	: out std_logic := '0';
    FO98	: out std_logic := '0';
    FO99	: out std_logic := '0';
    FO100	: out std_logic := '0';
    FO101	: out std_logic := '0';
    FO102	: out std_logic := '0';
    FO103	: out std_logic := '0';
    FO104	: out std_logic := '0';
    FO105	: out std_logic := '0';
    FO106	: out std_logic := '0';
    FO107	: out std_logic := '0';
    FO108	: out std_logic := '0';
    FO109	: out std_logic := '0';
    FO110	: out std_logic := '0';
    FO111	: out std_logic := '0';
    FO112	: out std_logic := '0';
    FO113	: out std_logic := '0';
    FO114	: out std_logic := '0';
    FO115	: out std_logic := '0';
    FO116	: out std_logic := '0';
    FO117	: out std_logic := '0';
    FO118	: out std_logic := '0';
    FO119	: out std_logic := '0';
    FO120	: out std_logic := '0';
    FO121	: out std_logic := '0';
    FO122	: out std_logic := '0';
    FO123	: out std_logic := '0';
    FO124	: out std_logic := '0';
    FO125	: out std_logic := '0';
    FO126	: out std_logic := '0';
    FO127	: out std_logic := '0';
    FO128	: out std_logic := '0';
    FO129	: out std_logic := '0';
    FO130	: out std_logic := '0';
    FO131	: out std_logic := '0';
    FO132	: out std_logic := '0';
    FO133	: out std_logic := '0';
    FO134	: out std_logic := '0';
    FO135	: out std_logic := '0';
    FO136	: out std_logic := '0';
    FO137	: out std_logic := '0';
    FO138	: out std_logic := '0';
    FO139	: out std_logic := '0';
    FO140	: out std_logic := '0';
    FO141	: out std_logic := '0';
    FO142	: out std_logic := '0';
    FO143	: out std_logic := '0';
    FO144	: out std_logic := '0';
    FO145	: out std_logic := '0';
    FO146	: out std_logic := '0';
    FO147	: out std_logic := '0';
    FO148	: out std_logic := '0';
    FO149	: out std_logic := '0';
    FO150	: out std_logic := '0';
    FO151	: out std_logic := '0';
    FO152	: out std_logic := '0';
    FO153	: out std_logic := '0';
    FO154	: out std_logic := '0';
    FO155	: out std_logic := '0';
    FO156	: out std_logic := '0';
    FO157	: out std_logic := '0';
    FO158	: out std_logic := '0';
    FO159	: out std_logic := '0';
    FO160	: out std_logic := '0';
    FO161	: out std_logic := '0';
    FO162	: out std_logic := '0';
    FO163	: out std_logic := '0';
    FO164	: out std_logic := '0';
    FO165	: out std_logic := '0';
    FO166	: out std_logic := '0';
    FO167	: out std_logic := '0';
    FO168	: out std_logic := '0';
    FO169	: out std_logic := '0';
    FO170	: out std_logic := '0';
    FO171	: out std_logic := '0';
    FO172	: out std_logic := '0';
    FO173	: out std_logic := '0';
    FO174	: out std_logic := '0';
    FO175	: out std_logic := '0';
    FO176	: out std_logic := '0';
    FO177	: out std_logic := '0';
    FO178	: out std_logic := '0';
    FO179	: out std_logic := '0';
    FO180	: out std_logic := '0';
    FO181	: out std_logic := '0';
    FO182	: out std_logic := '0';
    FO183	: out std_logic := '0';
    FO184	: out std_logic := '0';
    FO185	: out std_logic := '0';
    FO186	: out std_logic := '0';
    FO187	: out std_logic := '0';
    FO188	: out std_logic := '0';
    FO189	: out std_logic := '0';
    FO190	: out std_logic := '0';
    FO191	: out std_logic := '0';
    FO192	: out std_logic := '0'
);
end component NX_RB;

component NX_RB_WRAP is
generic (
    -- input : EI to FO
    inputClk      : bit_vector( 1 downto 0) := B"00"; -- 00 = CK[0], 01 = CK[1], 10 = CK[2] and 11 = CK[3]
    inputBypass   : bit_vector(23 downto 0) := B"000000000000000000000000"; -- 1 bypass active, LSB is bypass registers 0 to 7 ... MSB is bypass registers 183 to 191
    -- output : FI to EO
    inputContext  : string := ""; -- input context intialization
    outputClk     : bit_vector( 1 downto 0) := B"00"; -- 00 = CK[0], 01 = CK[1], 10 = CK[2] and 11 = CK[3]
    outputBypass  : bit_vector(23 downto 0) := B"000000000000000000000000";  -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
    outputContext : string := "" -- output context intialization
);
port (
    CK	: in std_logic_vector(  3 downto 0) := (others => '0');
    EI	: in std_logic_vector(191 downto 0) := (others => '0');
    EO	: out std_logic_vector(191 downto 0) := (others => '0');
    FI	: in std_logic_vector(191 downto 0) := (others => '0');
    FO	: out std_logic_vector(191 downto 0) := (others => '0')
);
end component NX_RB_WRAP;

component NX_BD is
generic (
    system: bit := '1'
);
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BD;


end nxPackage;
-- =================================================================================================
--   NX_LUT definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_LUT is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000" -- truthTable t15 ... t0
);
port (
    I1 : in  std_logic;
    I2 : in  std_logic;
    I3 : in  std_logic;
    I4 : in  std_logic;
    O  : out std_logic
);
end NX_LUT;

architecture NX_RTL of NX_LUT is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_LUT";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFF;

architecture NX_RTL of NX_DFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFF is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFF;

architecture NX_RTL of NX_BFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFF";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_DFR is
generic (
    location   : string := "";
    iobname    : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    ring       : integer := 0;
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_DFR;

architecture NX_RTL of NX_DFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_BFR is
generic (
    location   : string := "";
    iobname    : string := "";
    path       : integer := 0;
    mode       : integer := 0;
    ring       : integer := 0
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BFR;

architecture NX_RTL of NX_BFR is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BFR";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
rOS93e2u2k/U/7jE0qUdfQvMd9Q/gp31yFYzmQVyyN7Fgp+8FKoy+wWn1PJqZAgL
L//YM7nFy5lLJX6cN1gaBOR6mVwH/ELuKwNLW0970ZMtjir6RIcAF/1irD7221XL
Pdtn7JQ4dKuOLgX1Jfu4Qr552iE15YxcNvPOfuS0ZkSGpkR3Zy1AvOuiKQOfO9Um
7GUQofN5ug0JUu6s5BVI3fv/1NBwwCdJUbEWeGGZ3o0CZUPf0vYXVbhnKW6kwoUz
AlWcAOmRXmcLyfyoSBvI5FXqviS4iO3jgFtHKg1JZtUqRccH2MJkmsp0FH0R1OSx
GLVQB3lbHbBoGo94N9ADzA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7216)
`protect data_block
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
cM093QLcax43zb7nfHWkrA==
`protect end_protected

-- =================================================================================================
--   NX_CY definition                                                                   2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CY is
generic (
    add_carry  : integer := 0      -- 0: low - 1: high - 2: propagate
);
port (
    A1 : in  std_logic;
    A2 : in  std_logic;
    A3 : in  std_logic;
    A4 : in  std_logic;
    B1 : in  std_logic;
    B2 : in  std_logic;
    B3 : in  std_logic;
    B4 : in  std_logic;
    CI : in  std_logic;
    CO : out std_logic;
    S1 : out std_logic;
    S2 : out std_logic;
    S3 : out std_logic;
    S4 : out std_logic
);
end NX_CY;

architecture NX_RTL of NX_CY is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CY";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
eF4e8GK4kS1Nt/HMuywb+7gf3TRJ+HXC5/Sb/Gd9hpSPex1w5ugbeX9wZyJah0A8
IpOyBuq2pRorYR9jOOfarKqAyE9j13usYyMll4UP5VSXPO26/Y77NE33pJJy7ul5
c3/2tk5chaBXu+UFsjr9C/ZPeKzIpxzPSJ5UV4a97GTfgJ1VcNZ7E27FK1MQx+JY
8PMYwgbTum14J8qpRWjmSp00qrEuGEFdZ8H0eih/+fHZm/uCpG5eKvx+4FmO3SMC
vUahk235EX9eRJgr3zwsq99b13LAB8XbexDTx3d4auUe/Lring4q7ttNCXFPWPVq
MpWUjmy135q8p/tbOEvi3g==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2576)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_RFB_U_WRAP definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_U_WRAP is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK : in  std_logic;
    I   : in  std_logic_vector(17 downto 0);
    O   : out std_logic_vector(17 downto 0);
    RA  : in  std_logic_vector(4 downto 0);
    WA  : in  std_logic_vector(4 downto 0);
    WE  : in  std_logic;
    WEA : in  std_logic
);
end NX_RFB_U_WRAP;

architecture NX_RTL of NX_RFB_U_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_U
generic (
    mode     : integer := 0;
    wck_edge : bit := '0';
    mem_ctxt : string := ""
);
port (
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    I17  : in  std_logic;
    I18  : in  std_logic;
    I19  : in  std_logic;
    I20  : in  std_logic;
    I21  : in  std_logic;
    I22  : in  std_logic;
    I23  : in  std_logic;
    I24  : in  std_logic;
    I25  : in  std_logic;
    I26  : in  std_logic;
    I27  : in  std_logic;
    I28  : in  std_logic;
    I29  : in  std_logic;
    I30  : in  std_logic;
    I31  : in  std_logic;
    I32  : in  std_logic;
    I33  : in  std_logic;
    I34  : in  std_logic;
    I35  : in  std_logic;
    I36  : in  std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    O17  : out std_logic;
    O18  : out std_logic;
    O19  : out std_logic;
    O20  : out std_logic;
    O21  : out std_logic;
    O22  : out std_logic;
    O23  : out std_logic;
    O24  : out std_logic;
    O25  : out std_logic;
    O26  : out std_logic;
    O27  : out std_logic;
    O28  : out std_logic;
    O29  : out std_logic;
    O30  : out std_logic;
    O31  : out std_logic;
    O32  : out std_logic;
    O33  : out std_logic;
    O34  : out std_logic;
    O35  : out std_logic;
    O36  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RA7  : in  std_logic;
    RA8  : in  std_logic;
    RA9  : in  std_logic;
    RA10 : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE   : in  std_logic;
    WEA  : in  std_logic
);
end component NX_RFB_U;

begin

rfb: NX_RFB_U
generic map (
    mode      => 0, -- 0: DPREG
    wck_edge  => wck_edge,
    mem_ctxt  => mem_ctxt
)
port map (
    WCK  => WCK,
    I1   => I(0),
    I2   => I(1),
    I3   => I(2),
    I4   => I(3),
    I5   => I(4),
    I6   => I(5),
    I7   => I(6),
    I8   => I(7),
    I9   => I(8),
    I10  => I(9),
    I11  => I(10),
    I12  => I(11),
    I13  => I(12),
    I14  => I(13),
    I15  => I(14),
    I16  => I(15),
    I17  => I(16),
    I18  => I(17),
    I19  => '0',
    I20  => '0',
    I21  => '0',
    I22  => '0',
    I23  => '0',
    I24  => '0',
    I25  => '0',
    I26  => '0',
    I27  => '0',
    I28  => '0',
    I29  => '0',
    I30  => '0',
    I31  => '0',
    I32  => '0',
    I33  => '0',
    I34  => '0',
    I35  => '0',
    I36  => '0',
    O1   => O(0),
    O2   => O(1),
    O3   => O(2),
    O4   => O(3),
    O5   => O(4),
    O6   => O(5),
    O7   => O(6),
    O8   => O(7),
    O9   => O(8),
    O10  => O(9),
    O11  => O(10),
    O12  => O(11),
    O13  => O(12),
    O14  => O(13),
    O15  => O(14),
    O16  => O(15),
    O17  => O(16),
    O18  => O(17),
    O19  => OPEN,
    O20  => OPEN,
    O21  => OPEN,
    O22  => OPEN,
    O23  => OPEN,
    O24  => OPEN,
    O25  => OPEN,
    O26  => OPEN,
    O27  => OPEN,
    O28  => OPEN,
    O29  => OPEN,
    O30  => OPEN,
    O31  => OPEN,
    O32  => OPEN,
    O33  => OPEN,
    O34  => OPEN,
    O35  => OPEN,
    O36  => OPEN,
    RA1  => RA(0),
    RA2  => RA(1),
    RA3  => RA(2),
    RA4  => RA(3),
    RA5  => RA(4),
    RA6  => '0',
    RA7  => '0',
    RA8  => '0',
    RA9  => '0',
    RA10 => '0',
    WA1  => WA(0),
    WA2  => WA(1),
    WA3  => WA(2),
    WA4  => WA(3),
    WA5  => WA(4),
    WA6  => '0',
    WE   => WE,
    WEA  => WEA
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_RFBSP_U_WRAP definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFBSP_U_WRAP is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK : in  std_logic;
    I   : in  std_logic_vector(17 downto 0);
    O   : out std_logic_vector(17 downto 0);
    WA  : in  std_logic_vector(4 downto 0);
    WE  : in  std_logic;
    WEA : in  std_logic
);
end NX_RFBSP_U_WRAP;

architecture NX_RTL of NX_RFBSP_U_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_U
generic (
    mode     : integer := 0;
    wck_edge : bit := '0';
    mem_ctxt : string := ""
);
port (
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    I17  : in  std_logic;
    I18  : in  std_logic;
    I19  : in  std_logic;
    I20  : in  std_logic;
    I21  : in  std_logic;
    I22  : in  std_logic;
    I23  : in  std_logic;
    I24  : in  std_logic;
    I25  : in  std_logic;
    I26  : in  std_logic;
    I27  : in  std_logic;
    I28  : in  std_logic;
    I29  : in  std_logic;
    I30  : in  std_logic;
    I31  : in  std_logic;
    I32  : in  std_logic;
    I33  : in  std_logic;
    I34  : in  std_logic;
    I35  : in  std_logic;
    I36  : in  std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    O17  : out std_logic;
    O18  : out std_logic;
    O19  : out std_logic;
    O20  : out std_logic;
    O21  : out std_logic;
    O22  : out std_logic;
    O23  : out std_logic;
    O24  : out std_logic;
    O25  : out std_logic;
    O26  : out std_logic;
    O27  : out std_logic;
    O28  : out std_logic;
    O29  : out std_logic;
    O30  : out std_logic;
    O31  : out std_logic;
    O32  : out std_logic;
    O33  : out std_logic;
    O34  : out std_logic;
    O35  : out std_logic;
    O36  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RA7  : in  std_logic;
    RA8  : in  std_logic;
    RA9  : in  std_logic;
    RA10 : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE   : in  std_logic;
    WEA  : in  std_logic
);
end component NX_RFB_U;

begin

rfb: NX_RFB_U
generic map (
    mode      => 1, -- 1: SPREG
    wck_edge  => wck_edge,
    mem_ctxt  => mem_ctxt
)
port map (
    WCK  => WCK,
    I1   => I(0),
    I2   => I(1),
    I3   => I(2),
    I4   => I(3),
    I5   => I(4),
    I6   => I(5),
    I7   => I(6),
    I8   => I(7),
    I9   => I(8),
    I10  => I(9),
    I11  => I(10),
    I12  => I(11),
    I13  => I(12),
    I14  => I(13),
    I15  => I(14),
    I16  => I(15),
    I17  => I(16),
    I18  => I(17),
    I19  => '0',
    I20  => '0',
    I21  => '0',
    I22  => '0',
    I23  => '0',
    I24  => '0',
    I25  => '0',
    I26  => '0',
    I27  => '0',
    I28  => '0',
    I29  => '0',
    I30  => '0',
    I31  => '0',
    I32  => '0',
    I33  => '0',
    I34  => '0',
    I35  => '0',
    I36  => '0',
    O1   => O(0),
    O2   => O(1),
    O3   => O(2),
    O4   => O(3),
    O5   => O(4),
    O6   => O(5),
    O7   => O(6),
    O8   => O(7),
    O9   => O(8),
    O10  => O(9),
    O11  => O(10),
    O12  => O(11),
    O13  => O(12),
    O14  => O(13),
    O15  => O(14),
    O16  => O(15),
    O17  => O(16),
    O18  => O(17),
    O19  => OPEN,
    O20  => OPEN,
    O21  => OPEN,
    O22  => OPEN,
    O23  => OPEN,
    O24  => OPEN,
    O25  => OPEN,
    O26  => OPEN,
    O27  => OPEN,
    O28  => OPEN,
    O29  => OPEN,
    O30  => OPEN,
    O31  => OPEN,
    O32  => OPEN,
    O33  => OPEN,
    O34  => OPEN,
    O35  => OPEN,
    O36  => OPEN,
    RA1  => '0',
    RA2  => '0',
    RA3  => '0',
    RA4  => '0',
    RA5  => '0',
    RA6  => '0',
    RA7  => '0',
    RA8  => '0',
    RA9  => '0',
    RA10 => '0',
    WA1  => WA(0),
    WA2  => WA(1),
    WA3  => WA(2),
    WA4  => WA(3),
    WA5  => WA(4),
    WA6  => '0',
    WE   => WE,
    WEA  => WEA
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_RFB_U definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_U is
generic (
    mode     : integer := 0; -- 0: DPREG - 1: SPREG - 2: XRF_64x18 - 3: XRF_32x36 - 4: XRF_2R_1W
    wck_edge : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt : string := "" -- memory initial context
);
port (
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    I17  : in  std_logic;
    I18  : in  std_logic;
    I19  : in  std_logic;
    I20  : in  std_logic;
    I21  : in  std_logic;
    I22  : in  std_logic;
    I23  : in  std_logic;
    I24  : in  std_logic;
    I25  : in  std_logic;
    I26  : in  std_logic;
    I27  : in  std_logic;
    I28  : in  std_logic;
    I29  : in  std_logic;
    I30  : in  std_logic;
    I31  : in  std_logic;
    I32  : in  std_logic;
    I33  : in  std_logic;
    I34  : in  std_logic;
    I35  : in  std_logic;
    I36  : in  std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    O17  : out std_logic;
    O18  : out std_logic;
    O19  : out std_logic;
    O20  : out std_logic;
    O21  : out std_logic;
    O22  : out std_logic;
    O23  : out std_logic;
    O24  : out std_logic;
    O25  : out std_logic;
    O26  : out std_logic;
    O27  : out std_logic;
    O28  : out std_logic;
    O29  : out std_logic;
    O30  : out std_logic;
    O31  : out std_logic;
    O32  : out std_logic;
    O33  : out std_logic;
    O34  : out std_logic;
    O35  : out std_logic;
    O36  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RA7  : in  std_logic;
    RA8  : in  std_logic;
    RA9  : in  std_logic;
    RA10 : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE   : in  std_logic;
    WEA  : in  std_logic
);
end NX_RFB_U;

architecture NX_RTL of NX_RFB_U is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RFB_U";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RFB_U mode configuration
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;
use STD.textio.all;
use ieee.std_logic_textio.all;

package regfile_U_pkg is 
    
    constant cfg_nc_53downto50                       : std_logic_vector( 2 downto 0):=(others => '0');
    constant cfg_nc_45downto40                       : std_logic_vector( 5 downto 0):=(others => '0');
    constant cfg_test_en_i                           : std_logic_vector( 1 downto 0):=(others => '0');
                                                    
    -- DPREG Link Implementation                    
    constant Conf_2_REG_1RW_1RW_DPREG0_DPREG1        : std_logic_vector( 1 to 7 ):="0000000";
    constant Conf_2_REG_1R_1R_SPREG0_SPREG1          : std_logic_vector( 1 to 7 ):="1100000";
    constant Conf_1_REG_1RW_DEEPER                   : std_logic_vector( 1 to 7 ):="0011111";
    constant Conf_1_REG_1RW_WIDER                    : std_logic_vector( 1 to 7 ):="0001101";
    constant Conf_1_REG_2R_1W                        : std_logic_vector( 1 to 7 ):="0001100";

    function cfg_mode ( mode                         : integer; 
                        cfg_reg1_cdc_r2w_addrd_inv   : std_logic_vector( 5 downto 0);
                        cfg_reg1_cdc_addr_mask       : std_logic_vector( 5 downto 0);
                        cfg_reg1_addr_mask           : std_logic_vector( 4 downto 0);
                        cfg_reg0_addr_mask           : std_logic_vector( 4 downto 0);
                        cfg_reg0_cdc_addr_mask       : std_logic_vector( 5 downto 0);
                        wck_edge                     : std_logic;                      -- 0: write clock rising edge - 1: write clock falling edge
                        cfg_reg0_cdc_r2w_addrd_inv   : std_logic_vector( 5 downto 0)
                        
        ) return std_logic_vector;


end package regfile_U_pkg;

package body regfile_U_pkg is 

    function cfg_mode ( mode                         : integer; 
                        cfg_reg1_cdc_r2w_addrd_inv   : std_logic_vector( 5 downto 0);
                        cfg_reg1_cdc_addr_mask       : std_logic_vector( 5 downto 0);
                        cfg_reg1_addr_mask           : std_logic_vector( 4 downto 0);
                        cfg_reg0_addr_mask           : std_logic_vector( 4 downto 0);
                        cfg_reg0_cdc_addr_mask       : std_logic_vector( 5 downto 0);
                        wck_edge                     : std_logic;                     -- 0: write clock rising edge - 1: write clock falling edge
                        cfg_reg0_cdc_r2w_addrd_inv   : std_logic_vector( 5 downto 0)
                        
        ) return std_logic_vector is
        -- linked
        variable cfg_reg1_wdata_linked_i           : std_logic;
        variable cfg_reg1_waddr_linked_i           : std_logic;
        variable cfg_reg1_raddr_linked_i           : std_logic;
        variable cfg_reg1_cmd_linked_i             : std_logic;
        variable cfg_reg_linked_i                  : std_logic;
            
        --  cfg_reg0  
        variable cfg_reg0_clkrd_inv_i               : std_logic;
        variable cfg_reg0_clkwr_inv_i               : std_logic;
        variable cfg_reg0_cdc_clk_inv_i             : std_logic;
        variable cfg_reg0_spreg_i                   : std_logic;
        variable cfg_reg0_we_all_mask_i             : std_logic;
        variable cfg_reg0_we_mask_i                 : std_logic;
        variable cfg_reg0_addr_mask_i               : std_logic_vector( 4 downto 0);
        variable cfg_reg0_cdc_dpreg_fifo_i          : std_logic;
        variable cfg_reg0_cdc_w2r_arst_dest_sel_i   : std_logic;
        variable cfg_reg0_cdc_w2r_arst_src_sel_i    : std_logic;
        variable cfg_reg0_cdc_w2r_gray_linked_i     : std_logic;
        variable cfg_reg0_cdc_w2r_use_g2b_i         : std_logic;
        variable cfg_reg0_cdc_w2r_use_b2g_i         : std_logic;
        variable cfg_reg0_cdc_w2r_cdc_clk_i         : std_logic;
        variable cfg_reg0_cdc_w2r_use_reg_dest_i    : std_logic;
        variable cfg_reg0_cdc_w2r_use_reg_src_i     : std_logic;
        variable cfg_reg0_cdc_addr_mask_i           : std_logic_vector( 5 downto 0);
        variable cfg_reg0_cdc_r2w_addrd_inv_i       : std_logic_vector( 5 downto 0);
        variable cfg_reg0_cdc_r2w_arst_dest_sel_i   : std_logic;
        variable cfg_reg0_cdc_r2w_arst_src_sel_i    : std_logic;
        variable cfg_reg0_cdc_r2w_gray_linked_i     : std_logic;
        variable cfg_reg0_cdc_r2w_use_g2b_i         : std_logic;
        variable cfg_reg0_cdc_r2w_use_b2g_i         : std_logic;
        variable cfg_reg0_cdc_r2w_cdc_clk_i         : std_logic;
        variable cfg_reg0_cdc_r2w_use_reg_dest_i    : std_logic;
        variable cfg_reg0_cdc_r2w_use_reg_src_i     : std_logic;

        --  cfg_reg1  
        variable cfg_reg1_clkrd_inv_i               : std_logic;
        variable cfg_reg1_clkwr_inv_i               : std_logic;
        variable cfg_reg1_cdc_clk_inv_i             : std_logic;
        variable cfg_reg1_spreg_i                   : std_logic;
        variable cfg_reg1_we_all_mask_i             : std_logic;
        variable cfg_reg1_we_mask_i                 : std_logic;
        variable cfg_reg1_addr_mask_i               : std_logic_vector( 4 downto 0);
        variable cfg_reg1_cdc_dpreg_fifo_i          : std_logic;
        variable cfg_reg1_cdc_w2r_arst_dest_sel_i   : std_logic;
        variable cfg_reg1_cdc_w2r_arst_src_sel_i    : std_logic;
        constant cfg_reg1_cdc_w2r_gray_linked_i     : std_logic:='0'; --nc
        variable cfg_reg1_cdc_w2r_use_g2b_i         : std_logic;
        variable cfg_reg1_cdc_w2r_use_b2g_i         : std_logic;
        variable cfg_reg1_cdc_w2r_cdc_clk_i         : std_logic;
        variable cfg_reg1_cdc_w2r_use_reg_dest_i    : std_logic;
        variable cfg_reg1_cdc_w2r_use_reg_src_i     : std_logic;
        variable cfg_reg1_cdc_addr_mask_i           : std_logic_vector( 5 downto 0);
        variable cfg_reg1_cdc_r2w_addrd_inv_i       : std_logic_vector( 5 downto 0);
        variable cfg_reg1_cdc_r2w_arst_dest_sel_i   : std_logic;
        variable cfg_reg1_cdc_r2w_arst_src_sel_i    : std_logic;
       -- variable cfg_reg1_cdc_r2w_gray_linked_i     : std_logic;
        variable cfg_nc_90                          : std_logic;
        variable cfg_reg1_cdc_r2w_use_g2b_i         : std_logic;
        variable cfg_reg1_cdc_r2w_use_b2g_i         : std_logic;
        variable cfg_reg1_cdc_r2w_cdc_clk_i         : std_logic;
        variable cfg_reg1_cdc_r2w_use_reg_dest_i    : std_logic;
        variable cfg_reg1_cdc_r2w_use_reg_src_i     : std_logic;

        variable DPREG_link_implementation          : std_logic_vector(1 to 7);
        
        variable regfile_config                     : std_logic_vector( 95 downto 0);


        begin
            --  0  : DPREG0 - 1: SPREG - 2: XRF_64x18 - 3: XRF_32x36 - 4: XRF_2R_1W
            
            cfg_reg1_cdc_r2w_use_reg_src_i      := '0';
            cfg_reg1_cdc_r2w_use_reg_dest_i     := '0';
            cfg_reg1_cdc_r2w_use_b2g_i          := '0';
            cfg_reg1_cdc_r2w_use_g2b_i          := '0';
            cfg_nc_90                           := '0';
            
            cfg_reg1_cdc_r2w_addrd_inv_i        := cfg_reg1_cdc_r2w_addrd_inv_i when mode = 1 else "000000";
            cfg_reg1_cdc_addr_mask_i            := cfg_reg1_cdc_addr_mask       when mode = 1 else "000000";
            cfg_reg1_cdc_w2r_use_reg_dest_i     := '0';
            cfg_reg1_cdc_w2r_use_reg_src_i      := '0';
            cfg_reg1_cdc_w2r_use_b2g_i          := '0';
            cfg_reg1_cdc_w2r_use_g2b_i          := '0';
            --cfg_reg1_cdc_w2r_gray_linked_i      := '0' when mode = 1 else '0';
            
            cfg_reg1_cdc_dpreg_fifo_i           := '0';
            cfg_reg1_addr_mask_i                := cfg_reg1_addr_mask;-- when mode = 1 else "00000";
            cfg_reg1_we_mask_i                  := '0';
            cfg_reg1_we_all_mask_i              := '0';
            
            -- CDC RESET
            cfg_reg1_cdc_w2r_arst_src_sel_i     := '0';
            cfg_reg1_cdc_w2r_arst_dest_sel_i    := '0';
            cfg_reg1_cdc_r2w_arst_src_sel_i     := '0';
            cfg_reg1_cdc_r2w_arst_dest_sel_i    := '0';
            
            cfg_reg0_cdc_w2r_arst_dest_sel_i    := '0';
            cfg_reg0_cdc_w2r_arst_src_sel_i     := '0';
            cfg_reg0_cdc_r2w_arst_dest_sel_i    := '0';
            cfg_reg0_cdc_r2w_arst_src_sel_i     := '0';
            
            
            --cfg_nc_53downto50                   := '0' when mode = 1 else '0';
            --cfg_test_en_i                       := '0' when mode = 1 else '0';
            --cfg_nc_45downto40                   := '0' when mode = 1 else '0';
            
            -- Clock
            cfg_reg1_cdc_r2w_cdc_clk_i          := '0';
            cfg_reg1_cdc_w2r_cdc_clk_i          := '0';
            
            -- CLK INV
            cfg_reg1_clkwr_inv_i                := wck_edge;
            cfg_reg1_clkrd_inv_i                := wck_edge;
            cfg_reg0_clkrd_inv_i                := wck_edge;
            cfg_reg0_clkwr_inv_i                := wck_edge;
            cfg_reg0_cdc_clk_inv_i              := '0';
            cfg_reg1_cdc_clk_inv_i              := '0';
            
            --  0  : DPREG0 - 1: SPREG0 - 2: XRF_64x18 - 3: XRF_32x36 - 4: XRF_2R_1W - 
            DPREG_link_implementation           := -- Conf_2_REG_1R_1W               when mode =  else
                                                    Conf_2_REG_1RW_1RW_DPREG0_DPREG1 when mode = 0 else
                                                    Conf_2_REG_1R_1R_SPREG0_SPREG1   when mode = 1 else
                                                    Conf_1_REG_1RW_DEEPER            when mode = 2 else
                                                    Conf_1_REG_1RW_WIDER             when mode = 3 else
                                                    Conf_1_REG_2R_1W                 when mode = 4 else
                                                    (others => '0');
            
            -- DPREG link implementation
            cfg_reg0_spreg_i                    := DPREG_link_implementation(1);
            cfg_reg1_spreg_i                    := DPREG_link_implementation(2);
            cfg_reg_linked_i                    := DPREG_link_implementation(3);
            cfg_reg1_cmd_linked_i               := DPREG_link_implementation(4);
            cfg_reg1_waddr_linked_i             := DPREG_link_implementation(5);
            cfg_reg1_wdata_linked_i             := DPREG_link_implementation(6);
            cfg_reg1_raddr_linked_i             := DPREG_link_implementation(7);
            
            
            cfg_reg0_we_all_mask_i              := '0'; --'1' when mode = 10  else '0';
            cfg_reg0_we_mask_i                  := '0'; --'1' when mode = 10  else '0';
            cfg_reg0_addr_mask_i                := cfg_reg0_addr_mask when mode = 1 else "00000";
            cfg_reg0_cdc_dpreg_fifo_i           := '0';
            
            
            cfg_reg0_cdc_w2r_gray_linked_i      := '0';
            cfg_reg0_cdc_w2r_use_g2b_i          := '0';
            cfg_reg0_cdc_w2r_use_b2g_i          := '0';
            cfg_reg0_cdc_w2r_cdc_clk_i          := '0';
            cfg_reg0_cdc_w2r_use_reg_dest_i     := '0';
            cfg_reg0_cdc_w2r_use_reg_src_i      := '0';
            cfg_reg0_cdc_addr_mask_i            := cfg_reg0_cdc_addr_mask      when mode = 1 else "000000";
            cfg_reg0_cdc_r2w_addrd_inv_i        := cfg_reg0_cdc_r2w_addrd_inv  when mode = 1 else "000000";
            
            cfg_reg0_cdc_r2w_gray_linked_i      := '0';
            cfg_reg0_cdc_r2w_use_g2b_i          := '0';
            cfg_reg0_cdc_r2w_use_b2g_i          := '0';
            cfg_reg0_cdc_r2w_cdc_clk_i          := '0';
            cfg_reg0_cdc_r2w_use_reg_dest_i     := '0';
            cfg_reg0_cdc_r2w_use_reg_src_i      := '0';

         
        regfile_config(95)               := cfg_reg1_cdc_r2w_use_reg_src_i     ;  
        regfile_config(94)               := cfg_reg1_cdc_r2w_use_reg_dest_i    ;  
        regfile_config(93)               := cfg_reg1_cdc_r2w_cdc_clk_i         ;  
        regfile_config(92)               := cfg_reg1_cdc_r2w_use_b2g_i         ;  
        regfile_config(91)               := cfg_reg1_cdc_r2w_use_g2b_i         ;  
        regfile_config(90)               := cfg_nc_90                          ;  
        regfile_config(89)               := cfg_reg1_cdc_r2w_arst_src_sel_i    ;  
        regfile_config(88)               := cfg_reg1_cdc_r2w_arst_dest_sel_i   ;  
        regfile_config(87 downto 82)     := cfg_reg1_cdc_r2w_addrd_inv_i       ;  
        regfile_config(81 downto 76)     := cfg_reg1_cdc_addr_mask_i           ;  
        regfile_config(75)               := cfg_reg1_cdc_w2r_use_reg_dest_i    ;  
        regfile_config(74)               := cfg_reg1_cdc_w2r_use_reg_src_i     ;  
        regfile_config(73)               := cfg_reg1_cdc_w2r_cdc_clk_i         ;  
        regfile_config(72)               := cfg_reg1_cdc_w2r_use_b2g_i         ;  
        regfile_config(71)               := cfg_reg1_cdc_w2r_use_g2b_i         ;  
        regfile_config(70)               := cfg_reg1_cdc_w2r_gray_linked_i     ;  
        regfile_config(69)               := cfg_reg1_cdc_w2r_arst_src_sel_i    ;  
        regfile_config(68)               := cfg_reg1_cdc_w2r_arst_dest_sel_i   ;  
        regfile_config(67)               := cfg_reg1_cdc_dpreg_fifo_i          ;  
        regfile_config(66 downto 62)     := cfg_reg1_addr_mask_i               ;  
        regfile_config(61)               := cfg_reg1_we_mask_i                 ;  
        regfile_config(60)               := cfg_reg1_we_all_mask_i             ;  
        regfile_config(59)               := cfg_reg1_spreg_i                   ;  
        regfile_config(58)               := cfg_reg1_cdc_clk_inv_i             ;  
        regfile_config(57)               := cfg_reg1_clkwr_inv_i               ;  
        regfile_config(56)               := cfg_reg1_clkrd_inv_i               ;  
        regfile_config(55 downto 53)     := cfg_nc_53downto50                  ;  
        regfile_config(52)               := cfg_reg1_wdata_linked_i            ;  
        regfile_config(51)               := cfg_reg1_waddr_linked_i            ;  
        regfile_config(50)               := cfg_reg1_raddr_linked_i            ;  
        regfile_config(49)               := cfg_reg1_cmd_linked_i              ;  
        regfile_config(48 downto 47)     := cfg_test_en_i                      ;  
        regfile_config(46)               := cfg_reg_linked_i                   ;  
        regfile_config(45 downto 40)     := cfg_nc_45downto40                  ;  
        regfile_config(39)               := cfg_reg0_clkrd_inv_i               ;  
        regfile_config(38)               := cfg_reg0_clkwr_inv_i               ;  
        regfile_config(37)               := cfg_reg0_cdc_clk_inv_i             ;  
        regfile_config(36)               := cfg_reg0_spreg_i                   ;  
        regfile_config(35)               := cfg_reg0_we_all_mask_i             ;  
        regfile_config(34)               := cfg_reg0_we_mask_i                 ;  
        regfile_config(33 downto 29)     := cfg_reg0_addr_mask_i               ;  
        regfile_config(28)               := cfg_reg0_cdc_dpreg_fifo_i          ;  
        regfile_config(27)               := cfg_reg0_cdc_w2r_arst_dest_sel_i   ;  
        regfile_config(26)               := cfg_reg0_cdc_w2r_arst_src_sel_i    ;  
        regfile_config(25)               := cfg_reg0_cdc_w2r_gray_linked_i     ;  
        regfile_config(24)               := cfg_reg0_cdc_w2r_use_g2b_i         ;  
        regfile_config(23)               := cfg_reg0_cdc_w2r_use_b2g_i         ;  
        regfile_config(22)               := cfg_reg0_cdc_w2r_cdc_clk_i         ;  
        regfile_config(21)               := cfg_reg0_cdc_w2r_use_reg_dest_i    ;  
        regfile_config(20)               := cfg_reg0_cdc_w2r_use_reg_src_i     ;  
        regfile_config(19 downto 14)     := cfg_reg0_cdc_addr_mask_i           ;  
        regfile_config(13 downto  8)     := cfg_reg0_cdc_r2w_addrd_inv_i       ;  
        regfile_config( 7)               := cfg_reg0_cdc_r2w_arst_dest_sel_i   ;  
        regfile_config( 6)               := cfg_reg0_cdc_r2w_arst_src_sel_i    ;  
        regfile_config( 5)               := cfg_reg0_cdc_r2w_gray_linked_i     ;  
        regfile_config( 4)               := cfg_reg0_cdc_r2w_use_g2b_i         ;   
        regfile_config( 3)               := cfg_reg0_cdc_r2w_use_b2g_i         ;   
        regfile_config( 2)               := cfg_reg0_cdc_r2w_cdc_clk_i         ;   
        regfile_config( 1)               := cfg_reg0_cdc_r2w_use_reg_dest_i    ;   
        regfile_config( 0)               := cfg_reg0_cdc_r2w_use_reg_src_i     ;  
        
        return regfile_config(95 downto 0);
        
    end cfg_mode;    
    
end package body regfile_U_pkg;
----------------------------------------------------------------------------------------------------
`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
T6NKIux9wjapQfLzKxvKJpV9C9G2Uyl1OK2lgl+sjtQxbKQ+r8cwvy22JCEivrcj
1pgHe/FheF8sjoYcshV3Qmhyq5Uq72P4DRIj2ZfLFHqx1UwVvlf2cC3iWhkaXAMR
zpQuzxl72vTywgXVnVmxMq9hj7FplD8v2ZhEIpVA9BhfGQKEyVdcZ+lRu01ZAXoi
AKiTtihGOcXi0Oi84YR6T5WseS/RPPRGX1vNZgITUD4auwT8nuWecOzcHX8ekMcj
upMEio6P9MtgcMQQbgfPT358DS+xIn9iUsvk6J8phEZhmgF9Nln+KNQ0387PIkba
Teus/oNqH0qvKLM4KCLlYg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 27104)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_RFB (compatible) definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB is
generic (
    rck_edge  : bit := '0';   -- 0: read  clock rising edge - 1: read  clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE  : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE  : in  std_logic
);
end NX_RFB;

architecture NX_RTL of NX_RFB is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_U
generic (
    mode     : integer := 0;
    wck_edge : bit := '0';
    mem_ctxt : string := ""
);
port (
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    I17  : in  std_logic;
    I18  : in  std_logic;
    I19  : in  std_logic;
    I20  : in  std_logic;
    I21  : in  std_logic;
    I22  : in  std_logic;
    I23  : in  std_logic;
    I24  : in  std_logic;
    I25  : in  std_logic;
    I26  : in  std_logic;
    I27  : in  std_logic;
    I28  : in  std_logic;
    I29  : in  std_logic;
    I30  : in  std_logic;
    I31  : in  std_logic;
    I32  : in  std_logic;
    I33  : in  std_logic;
    I34  : in  std_logic;
    I35  : in  std_logic;
    I36  : in  std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    O17  : out std_logic;
    O18  : out std_logic;
    O19  : out std_logic;
    O20  : out std_logic;
    O21  : out std_logic;
    O22  : out std_logic;
    O23  : out std_logic;
    O24  : out std_logic;
    O25  : out std_logic;
    O26  : out std_logic;
    O27  : out std_logic;
    O28  : out std_logic;
    O29  : out std_logic;
    O30  : out std_logic;
    O31  : out std_logic;
    O32  : out std_logic;
    O33  : out std_logic;
    O34  : out std_logic;
    O35  : out std_logic;
    O36  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RA7  : in  std_logic;
    RA8  : in  std_logic;
    RA9  : in  std_logic;
    RA10 : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE   : in  std_logic;
    WEA  : in  std_logic
);
end component NX_RFB_U;

component NX_DFF is
generic (
    dff_edge   : bit := '0';
    dff_init   : bit := '0';
    dff_load   : bit := '0';
    dff_sync   : bit := '0';
    dff_ctxt   : std_logic := 'U'
);
port (
    I  : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end component NX_DFF;

signal D : std_logic_vector(15 downto 0);
signal Q : std_logic_vector(15 downto 0);

begin

rfb: NX_RFB_U
generic map (
    mode      => 2, -- 2: DPREG_64x18
    wck_edge  => wck_edge,
    mem_ctxt  => mem_ctxt
)
port map (
    WCK  => WCK,
    I1   => I1,
    I2   => I2,
    I3   => I3,
    I4   => I4,
    I5   => I5,
    I6   => I6,
    I7   => I7,
    I8   => I8,
    I9   => I9,
    I10  => I10,
    I11  => I11,
    I12  => I12,
    I13  => I13,
    I14  => I14,
    I15  => I15,
    I16  => I16,
    I17  => '0',
    I18  => '0',
    I19  => '0',
    I20  => '0',
    I21  => '0',
    I22  => '0',
    I23  => '0',
    I24  => '0',
    I25  => '0',
    I26  => '0',
    I27  => '0',
    I28  => '0',
    I29  => '0',
    I30  => '0',
    I31  => '0',
    I32  => '0',
    I33  => '0',
    I34  => '0',
    I35  => '0',
    I36  => '0',
    O1   => D(0),
    O2   => D(1),
    O3   => D(2),
    O4   => D(3),
    O5   => D(4),
    O6   => D(5),
    O7   => D(6),
    O8   => D(7),
    O9   => D(8),
    O10  => D(9),
    O11  => D(10),
    O12  => D(11),
    O13  => D(12),
    O14  => D(13),
    O15  => D(14),
    O16  => D(15),
    O17  => OPEN,
    O18  => OPEN,
    O19  => OPEN,
    O20  => OPEN,
    O21  => OPEN,
    O22  => OPEN,
    O23  => OPEN,
    O24  => OPEN,
    O25  => OPEN,
    O26  => OPEN,
    O27  => OPEN,
    O28  => OPEN,
    O29  => OPEN,
    O30  => OPEN,
    O31  => OPEN,
    O32  => OPEN,
    O33  => OPEN,
    O34  => OPEN,
    O35  => OPEN,
    O36  => OPEN,
    RA1  => RA1,
    RA2  => RA2,
    RA3  => RA3,
    RA4  => RA4,
    RA5  => RA5,
    RA6  => RA6,
    RA7  => '0',
    RA8  => '0',
    RA9  => '0',
    RA10 => '0',
    WA1  => WA1,
    WA2  => WA2,
    WA3  => WA3,
    WA4  => WA4,
    WA5  => WA5,
    WA6  => WA6,
    WE   => WE,
    WEA  => '0'
);

OUT_REG : for I in Q'range generate

    reg : NX_DFF
    generic map (
	dff_edge => rck_edge,
	dff_init => '0',
	dff_load => '1'
    )
    port map (
	CK => RCK,
	I  => D(I),
	L  => RE,
	R  => '0',
	O  => Q(I)
    );

end generate;

O1   <= Q(0);
O2   <= Q(1);
O3   <= Q(2);
O4   <= Q(3);
O5   <= Q(4);
O6   <= Q(5);
O7   <= Q(6);
O8   <= Q(7);
O9   <= Q(8);
O10  <= Q(9);
O11  <= Q(10);
O12  <= Q(11);
O13  <= Q(12);
O14  <= Q(13);
O15  <= Q(14);
O16  <= Q(15);

COR <= '0';
ERR <= '0';

end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_XRFB_64x18 definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_XRFB_64x18 is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK : in  std_logic;
    I   : in  std_logic_vector(17 downto 0);
    O   : out std_logic_vector(17 downto 0);
    RA  : in  std_logic_vector(5 downto 0);
    WA  : in  std_logic_vector(5 downto 0);
    WE  : in  std_logic;
    WEA : in  std_logic
);
end NX_XRFB_64x18;

architecture NX_RTL of NX_XRFB_64x18 is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_U
generic (
    mode     : integer := 0;
    wck_edge : bit := '0';
    mem_ctxt : string := ""
);
port (
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    I17  : in  std_logic;
    I18  : in  std_logic;
    I19  : in  std_logic;
    I20  : in  std_logic;
    I21  : in  std_logic;
    I22  : in  std_logic;
    I23  : in  std_logic;
    I24  : in  std_logic;
    I25  : in  std_logic;
    I26  : in  std_logic;
    I27  : in  std_logic;
    I28  : in  std_logic;
    I29  : in  std_logic;
    I30  : in  std_logic;
    I31  : in  std_logic;
    I32  : in  std_logic;
    I33  : in  std_logic;
    I34  : in  std_logic;
    I35  : in  std_logic;
    I36  : in  std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    O17  : out std_logic;
    O18  : out std_logic;
    O19  : out std_logic;
    O20  : out std_logic;
    O21  : out std_logic;
    O22  : out std_logic;
    O23  : out std_logic;
    O24  : out std_logic;
    O25  : out std_logic;
    O26  : out std_logic;
    O27  : out std_logic;
    O28  : out std_logic;
    O29  : out std_logic;
    O30  : out std_logic;
    O31  : out std_logic;
    O32  : out std_logic;
    O33  : out std_logic;
    O34  : out std_logic;
    O35  : out std_logic;
    O36  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RA7  : in  std_logic;
    RA8  : in  std_logic;
    RA9  : in  std_logic;
    RA10 : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE   : in  std_logic;
    WEA  : in  std_logic
);
end component NX_RFB_U;

begin

rfb: NX_RFB_U
generic map (
    mode      => 2, -- 2: DPREG_64x18
    wck_edge  => wck_edge,
    mem_ctxt  => mem_ctxt
)
port map (
    WCK  => WCK,
    I1   => I(0),
    I2   => I(1),
    I3   => I(2),
    I4   => I(3),
    I5   => I(4),
    I6   => I(5),
    I7   => I(6),
    I8   => I(7),
    I9   => I(8),
    I10  => I(9),
    I11  => I(10),
    I12  => I(11),
    I13  => I(12),
    I14  => I(13),
    I15  => I(14),
    I16  => I(15),
    I17  => I(16),
    I18  => I(17),
    I19  => '0',
    I20  => '0',
    I21  => '0',
    I22  => '0',
    I23  => '0',
    I24  => '0',
    I25  => '0',
    I26  => '0',
    I27  => '0',
    I28  => '0',
    I29  => '0',
    I30  => '0',
    I31  => '0',
    I32  => '0',
    I33  => '0',
    I34  => '0',
    I35  => '0',
    I36  => '0',
    O1   => O(0),
    O2   => O(1),
    O3   => O(2),
    O4   => O(3),
    O5   => O(4),
    O6   => O(5),
    O7   => O(6),
    O8   => O(7),
    O9   => O(8),
    O10  => O(9),
    O11  => O(10),
    O12  => O(11),
    O13  => O(12),
    O14  => O(13),
    O15  => O(14),
    O16  => O(15),
    O17  => O(16),
    O18  => O(17),
    O19  => OPEN,
    O20  => OPEN,
    O21  => OPEN,
    O22  => OPEN,
    O23  => OPEN,
    O24  => OPEN,
    O25  => OPEN,
    O26  => OPEN,
    O27  => OPEN,
    O28  => OPEN,
    O29  => OPEN,
    O30  => OPEN,
    O31  => OPEN,
    O32  => OPEN,
    O33  => OPEN,
    O34  => OPEN,
    O35  => OPEN,
    O36  => OPEN,
    RA1  => RA(0),
    RA2  => RA(1),
    RA3  => RA(2),
    RA4  => RA(3),
    RA5  => RA(4),
    RA6  => RA(5),
    RA7  => '0',
    RA8  => '0',
    RA9  => '0',
    RA10 => '0',
    WA1  => WA(0),
    WA2  => WA(1),
    WA3  => WA(2),
    WA4  => WA(3),
    WA5  => WA(4),
    WA6  => WA(5),
    WE   => WE,
    WEA  => WEA
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_XRFB_32x36 definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_XRFB_32x36 is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK : in  std_logic;
    I   : in  std_logic_vector(35 downto 0);
    O   : out std_logic_vector(35 downto 0);
    RA  : in  std_logic_vector(4 downto 0);
    WA  : in  std_logic_vector(4 downto 0);
    WE  : in  std_logic;
    WEA : in  std_logic
);
end NX_XRFB_32x36;

architecture NX_RTL of NX_XRFB_32x36 is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_U
generic (
    mode     : integer := 0;
    wck_edge : bit := '0';
    mem_ctxt : string := ""
);
port (
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    I17  : in  std_logic;
    I18  : in  std_logic;
    I19  : in  std_logic;
    I20  : in  std_logic;
    I21  : in  std_logic;
    I22  : in  std_logic;
    I23  : in  std_logic;
    I24  : in  std_logic;
    I25  : in  std_logic;
    I26  : in  std_logic;
    I27  : in  std_logic;
    I28  : in  std_logic;
    I29  : in  std_logic;
    I30  : in  std_logic;
    I31  : in  std_logic;
    I32  : in  std_logic;
    I33  : in  std_logic;
    I34  : in  std_logic;
    I35  : in  std_logic;
    I36  : in  std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    O17  : out std_logic;
    O18  : out std_logic;
    O19  : out std_logic;
    O20  : out std_logic;
    O21  : out std_logic;
    O22  : out std_logic;
    O23  : out std_logic;
    O24  : out std_logic;
    O25  : out std_logic;
    O26  : out std_logic;
    O27  : out std_logic;
    O28  : out std_logic;
    O29  : out std_logic;
    O30  : out std_logic;
    O31  : out std_logic;
    O32  : out std_logic;
    O33  : out std_logic;
    O34  : out std_logic;
    O35  : out std_logic;
    O36  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RA7  : in  std_logic;
    RA8  : in  std_logic;
    RA9  : in  std_logic;
    RA10 : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE   : in  std_logic;
    WEA  : in  std_logic
);
end component NX_RFB_U;

begin

rfb: NX_RFB_U
generic map (
    mode      => 3, -- 3: XRF_32x36
    wck_edge  => wck_edge,
    mem_ctxt  => mem_ctxt
)
port map (
    WCK  => WCK,
    I1   => I(0),
    I2   => I(1),
    I3   => I(2),
    I4   => I(3),
    I5   => I(4),
    I6   => I(5),
    I7   => I(6),
    I8   => I(7),
    I9   => I(8),
    I10  => I(9),
    I11  => I(10),
    I12  => I(11),
    I13  => I(12),
    I14  => I(13),
    I15  => I(14),
    I16  => I(15),
    I17  => I(16),
    I18  => I(17),
    I19  => I(18),
    I20  => I(19),
    I21  => I(20),
    I22  => I(21),
    I23  => I(22),
    I24  => I(23),
    I25  => I(24),
    I26  => I(25),
    I27  => I(26),
    I28  => I(27),
    I29  => I(28),
    I30  => I(29),
    I31  => I(30),
    I32  => I(31),
    I33  => I(32),
    I34  => I(33),
    I35  => I(34),
    I36  => I(35),
    O1   => O(0),
    O2   => O(1),
    O3   => O(2),
    O4   => O(3),
    O5   => O(4),
    O6   => O(5),
    O7   => O(6),
    O8   => O(7),
    O9   => O(8),
    O10  => O(9),
    O11  => O(10),
    O12  => O(11),
    O13  => O(12),
    O14  => O(13),
    O15  => O(14),
    O16  => O(15),
    O17  => O(16),
    O18  => O(17),
    O19  => O(18),
    O20  => O(19),
    O21  => O(20),
    O22  => O(21),
    O23  => O(22),
    O24  => O(23),
    O25  => O(24),
    O26  => O(25),
    O27  => O(26),
    O28  => O(27),
    O29  => O(28),
    O30  => O(29),
    O31  => O(30),
    O32  => O(31),
    O33  => O(32),
    O34  => O(33),
    O35  => O(34),
    O36  => O(35),
    RA1  => RA(0),
    RA2  => RA(1),
    RA3  => RA(2),
    RA4  => RA(3),
    RA5  => RA(4),
    RA6  => '0',
    RA7  => '0',
    RA8  => '0',
    RA9  => '0',
    RA10 => '0',
    WA1 => WA(0),
    WA2 => WA(1),
    WA3 => WA(2),
    WA4 => WA(3),
    WA5 => WA(4),
    WA6 => '0',
    WE  => WE,
    WEA => WEA
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_XRFB_2R_1W definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_XRFB_2R_1W is
generic (
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    WCK : in  std_logic;
    I   : in  std_logic_vector(17 downto 0);
    AO  : out std_logic_vector(17 downto 0);
    BO  : out std_logic_vector(17 downto 0);
    ARA : in  std_logic_vector(4 downto 0);
    BRA : in  std_logic_vector(4 downto 0);
    WA  : in  std_logic_vector(4 downto 0);
    WE  : in  std_logic;
    WEA : in  std_logic
);
end NX_XRFB_2R_1W;

architecture NX_RTL of NX_XRFB_2R_1W is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_U
generic (
    mode     : integer := 0;
    wck_edge : bit := '0';
    mem_ctxt : string := ""
);
port (
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    I17  : in  std_logic;
    I18  : in  std_logic;
    I19  : in  std_logic;
    I20  : in  std_logic;
    I21  : in  std_logic;
    I22  : in  std_logic;
    I23  : in  std_logic;
    I24  : in  std_logic;
    I25  : in  std_logic;
    I26  : in  std_logic;
    I27  : in  std_logic;
    I28  : in  std_logic;
    I29  : in  std_logic;
    I30  : in  std_logic;
    I31  : in  std_logic;
    I32  : in  std_logic;
    I33  : in  std_logic;
    I34  : in  std_logic;
    I35  : in  std_logic;
    I36  : in  std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    O17  : out std_logic;
    O18  : out std_logic;
    O19  : out std_logic;
    O20  : out std_logic;
    O21  : out std_logic;
    O22  : out std_logic;
    O23  : out std_logic;
    O24  : out std_logic;
    O25  : out std_logic;
    O26  : out std_logic;
    O27  : out std_logic;
    O28  : out std_logic;
    O29  : out std_logic;
    O30  : out std_logic;
    O31  : out std_logic;
    O32  : out std_logic;
    O33  : out std_logic;
    O34  : out std_logic;
    O35  : out std_logic;
    O36  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RA7  : in  std_logic;
    RA8  : in  std_logic;
    RA9  : in  std_logic;
    RA10 : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE   : in  std_logic;
    WEA  : in  std_logic
);
end component NX_RFB_U;

begin

rfb: NX_RFB_U
generic map (
    mode      => 4, -- 4: XRF_2R_1W
    wck_edge  => wck_edge,
    mem_ctxt  => mem_ctxt
)
port map (
    WCK  => WCK,
    I1   => I(0),
    I2   => I(1),
    I3   => I(2),
    I4   => I(3),
    I5   => I(4),
    I6   => I(5),
    I7   => I(6),
    I8   => I(7),
    I9   => I(8),
    I10  => I(9),
    I11  => I(10),
    I12  => I(11),
    I13  => I(12),
    I14  => I(13),
    I15  => I(14),
    I16  => I(15),
    I17  => I(16),
    I18  => I(17),
    I19  => '0',
    I20  => '0',
    I21  => '0',
    I22  => '0',
    I23  => '0',
    I24  => '0',
    I25  => '0',
    I26  => '0',
    I27  => '0',
    I28  => '0',
    I29  => '0',
    I30  => '0',
    I31  => '0',
    I32  => '0',
    I33  => '0',
    I34  => '0',
    I35  => '0',
    I36  => '0',
    O1   => AO(0),
    O2   => AO(1),
    O3   => AO(2),
    O4   => AO(3),
    O5   => AO(4),
    O6   => AO(5),
    O7   => AO(6),
    O8   => AO(7),
    O9   => AO(8),
    O10  => AO(9),
    O11  => AO(10),
    O12  => AO(11),
    O13  => AO(12),
    O14  => AO(13),
    O15  => AO(14),
    O16  => AO(15),
    O17  => AO(16),
    O18  => AO(17),
    O19  => BO(0),
    O20  => BO(1),
    O21  => BO(2),
    O22  => BO(3),
    O23  => BO(4),
    O24  => BO(5),
    O25  => BO(6),
    O26  => BO(7),
    O27  => BO(8),
    O28  => BO(9),
    O29  => BO(10),
    O30  => BO(11),
    O31  => BO(12),
    O32  => BO(13),
    O33  => BO(14),
    O34  => BO(15),
    O35  => BO(16),
    O36  => BO(17),
    RA1  => ARA(0),
    RA2  => ARA(1),
    RA3  => ARA(2),
    RA4  => ARA(3),
    RA5  => ARA(4),
    RA6  => BRA(0),
    RA7  => BRA(1),
    RA8  => BRA(2),
    RA9  => BRA(3),
    RA10 => BRA(4),
    WA1 => WA(0),
    WA2 => WA(1),
    WA3 => WA(2),
    WA4 => WA(3),
    WA5 => WA(4),
    WA6 => '0',
    WE  => WE,
    WEA => WEA
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_CDC_U_2DFF definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CDC_U_2DFF is
generic (
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    use_adest_arst : bit := '0';
    use_bdest_arst : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ADRSTI : in  std_logic;
    ADRSTO : out std_logic;
    AI     : in  std_logic_vector(5 downto 0);
    AO     : out std_logic_vector(5 downto 0);
    BDRSTI : in  std_logic;
    BDRSTO : out std_logic;
    BI     : in  std_logic_vector(5 downto 0);
    BO     : out std_logic_vector(5 downto 0)
);
end NX_CDC_U_2DFF;

architecture NX_RTL of NX_CDC_U_2DFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_CDC_U
generic (
    mode           : integer := 0;
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI1    : in  std_logic;
    AI2    : in  std_logic;
    AI3    : in  std_logic;
    AI4    : in  std_logic;
    AI5    : in  std_logic;
    AI6    : in  std_logic;
    AO1    : out std_logic;
    AO2    : out std_logic;
    AO3    : out std_logic;
    AO4    : out std_logic;
    AO5    : out std_logic;
    AO6    : out std_logic;
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI1    : in  std_logic;
    BI2    : in  std_logic;
    BI3    : in  std_logic;
    BI4    : in  std_logic;
    BI5    : in  std_logic;
    BI6    : in  std_logic;
    BO1    : out std_logic;
    BO2    : out std_logic;
    BO3    : out std_logic;
    BO4    : out std_logic;
    BO5    : out std_logic;
    BO6    : out std_logic;
    CSRSTI : in  std_logic;
    CDRSTI : in  std_logic;
    CSRSTO : out std_logic;
    CDRSTO : out std_logic;
    CI1    : in  std_logic;
    CI2    : in  std_logic;
    CI3    : in  std_logic;
    CI4    : in  std_logic;
    CI5    : in  std_logic;
    CI6    : in  std_logic;
    CO1    : out std_logic;
    CO2    : out std_logic;
    CO3    : out std_logic;
    CO4    : out std_logic;
    CO5    : out std_logic;
    CO6    : out std_logic;
    DSRSTI : in  std_logic;
    DDRSTI : in  std_logic;
    DSRSTO : out std_logic;
    DDRSTO : out std_logic;
    DI1    : in  std_logic;
    DI2    : in  std_logic;
    DI3    : in  std_logic;
    DI4    : in  std_logic;
    DI5    : in  std_logic;
    DI6    : in  std_logic;
    DO1    : out std_logic;
    DO2    : out std_logic;
    DO3    : out std_logic;
    DO4    : out std_logic;
    DO5    : out std_logic;
    DO6    : out std_logic
);
end component NX_CDC_U;

begin

cdc: NX_CDC_U
generic map (
    mode           => 0, -- 0: 2DFF
    ck0_edge       => ck0_edge,
    ck1_edge       => ck1_edge,
    ack_sel        => ack_sel,
    bck_sel        => bck_sel,
    cck_sel        => '0',
    dck_sel        => '0',
    use_asrc_arst  => '0',
    use_adest_arst => use_adest_arst,
    use_bsrc_arst  => '0',
    use_bdest_arst => use_bdest_arst,
    use_csrc_arst  => '0',
    use_cdest_arst => '0',
    use_dsrc_arst  => '0',
    use_ddest_arst => '0',
    link_BA        => '0',
    link_CB        => '0',
    link_DC        => '0'
)
port map (
    CK1    => CK1,
    CK2    => CK2,
    ASRSTI => '0',
    ADRSTI => ADRSTI,
    ASRSTO => OPEN,
    ADRSTO => ADRSTO,
    AI1    => AI(0),
    AI2    => AI(1),
    AI3    => AI(2),
    AI4    => AI(3),
    AI5    => AI(4),
    AI6    => AI(5),
    AO1    => AO(0),
    AO2    => AO(1),
    AO3    => AO(2),
    AO4    => AO(3),
    AO5    => AO(4),
    AO6    => AO(5),
    BSRSTI => '0',
    BDRSTI => BDRSTI,
    BSRSTO => OPEN,
    BDRSTO => BDRSTO,
    BI1    => BI(0),
    BI2    => BI(1),
    BI3    => BI(2),
    BI4    => BI(3),
    BI5    => BI(4),
    BI6    => BI(5),
    BO1    => BO(0),
    BO2    => BO(1),
    BO3    => BO(2),
    BO4    => BO(3),
    BO5    => BO(4),
    BO6    => BO(5),
    CSRSTI => '0',
    CDRSTI => '0',
    CSRSTO => OPEN,
    CDRSTO => OPEN,
    CI1    => '0',
    CI2    => '0',
    CI3    => '0',
    CI4    => '0',
    CI5    => '0',
    CI6    => '0',
    CO1    => OPEN,
    CO2    => OPEN,
    CO3    => OPEN,
    CO4    => OPEN,
    CO5    => OPEN,
    CO6    => OPEN,
    DSRSTI => '0',
    DDRSTI => '0',
    DSRSTO => OPEN,
    DDRSTO => OPEN,
    DI1    => '0',
    DI2    => '0',
    DI3    => '0',
    DI4    => '0',
    DI5    => '0',
    DI6    => '0',
    DO1    => OPEN,
    DO2    => OPEN,
    DO3    => OPEN,
    DO4    => OPEN,
    DO5    => OPEN,
    DO6    => OPEN
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_CDC_U_3DFF definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CDC_U_3DFF is
generic (
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI     : in  std_logic_vector(5 downto 0);
    AO     : out std_logic_vector(5 downto 0);
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI     : in  std_logic_vector(5 downto 0);
    BO     : out std_logic_vector(5 downto 0)
);
end NX_CDC_U_3DFF;

architecture NX_RTL of NX_CDC_U_3DFF is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_CDC_U
generic (
    mode           : integer := 0;
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI1    : in  std_logic;
    AI2    : in  std_logic;
    AI3    : in  std_logic;
    AI4    : in  std_logic;
    AI5    : in  std_logic;
    AI6    : in  std_logic;
    AO1    : out std_logic;
    AO2    : out std_logic;
    AO3    : out std_logic;
    AO4    : out std_logic;
    AO5    : out std_logic;
    AO6    : out std_logic;
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI1    : in  std_logic;
    BI2    : in  std_logic;
    BI3    : in  std_logic;
    BI4    : in  std_logic;
    BI5    : in  std_logic;
    BI6    : in  std_logic;
    BO1    : out std_logic;
    BO2    : out std_logic;
    BO3    : out std_logic;
    BO4    : out std_logic;
    BO5    : out std_logic;
    BO6    : out std_logic;
    CSRSTI : in  std_logic;
    CDRSTI : in  std_logic;
    CSRSTO : out std_logic;
    CDRSTO : out std_logic;
    CI1    : in  std_logic;
    CI2    : in  std_logic;
    CI3    : in  std_logic;
    CI4    : in  std_logic;
    CI5    : in  std_logic;
    CI6    : in  std_logic;
    CO1    : out std_logic;
    CO2    : out std_logic;
    CO3    : out std_logic;
    CO4    : out std_logic;
    CO5    : out std_logic;
    CO6    : out std_logic;
    DSRSTI : in  std_logic;
    DDRSTI : in  std_logic;
    DSRSTO : out std_logic;
    DDRSTO : out std_logic;
    DI1    : in  std_logic;
    DI2    : in  std_logic;
    DI3    : in  std_logic;
    DI4    : in  std_logic;
    DI5    : in  std_logic;
    DI6    : in  std_logic;
    DO1    : out std_logic;
    DO2    : out std_logic;
    DO3    : out std_logic;
    DO4    : out std_logic;
    DO5    : out std_logic;
    DO6    : out std_logic
);
end component NX_CDC_U;

begin

cdc: NX_CDC_U
generic map (
    mode           => 1, -- 1: 3DFF
    ck0_edge       => ck0_edge,
    ck1_edge       => ck1_edge,
    ack_sel        => ack_sel,
    bck_sel        => bck_sel,
    cck_sel        => '0',
    dck_sel        => '0',
    use_asrc_arst  => use_asrc_arst,
    use_adest_arst => use_adest_arst,
    use_bsrc_arst  => use_bsrc_arst,
    use_bdest_arst => use_bdest_arst,
    use_csrc_arst  => '0',
    use_cdest_arst => '0',
    use_dsrc_arst  => '0',
    use_ddest_arst => '0',
    link_BA        => '0',
    link_CB        => '0',
    link_DC        => '0'
)
port map (
    CK1    => CK1,
    CK2    => CK2,
    ASRSTI => ASRSTI,
    ADRSTI => ADRSTI,
    ASRSTO => ASRSTO,
    ADRSTO => ADRSTO,
    AI1    => AI(0),
    AI2    => AI(1),
    AI3    => AI(2),
    AI4    => AI(3),
    AI5    => AI(4),
    AI6    => AI(5),
    AO1    => AO(0),
    AO2    => AO(1),
    AO3    => AO(2),
    AO4    => AO(3),
    AO5    => AO(4),
    AO6    => AO(5),
    BSRSTI => BSRSTI,
    BDRSTI => BDRSTI,
    BSRSTO => BSRSTO,
    BDRSTO => BDRSTO,
    BI1    => BI(0),
    BI2    => BI(1),
    BI3    => BI(2),
    BI4    => BI(3),
    BI5    => BI(4),
    BI6    => BI(5),
    BO1    => BO(0),
    BO2    => BO(1),
    BO3    => BO(2),
    BO4    => BO(3),
    BO5    => BO(4),
    BO6    => BO(5),
    CSRSTI => '0',
    CDRSTI => '0',
    CSRSTO => OPEN,
    CDRSTO => OPEN,
    CI1    => '0',
    CI2    => '0',
    CI3    => '0',
    CI4    => '0',
    CI5    => '0',
    CI6    => '0',
    CO1    => OPEN,
    CO2    => OPEN,
    CO3    => OPEN,
    CO4    => OPEN,
    CO5    => OPEN,
    CO6    => OPEN,
    DSRSTI => '0',
    DDRSTI => '0',
    DSRSTO => OPEN,
    DDRSTO => OPEN,
    DI1    => '0',
    DI2    => '0',
    DI3    => '0',
    DI4    => '0',
    DI5    => '0',
    DI6    => '0',
    DO1    => OPEN,
    DO2    => OPEN,
    DO3    => OPEN,
    DO4    => OPEN,
    DO5    => OPEN,
    DO6    => OPEN
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_CDC_U_FULL definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CDC_U_FULL is
generic (
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI     : in  std_logic_vector(5 downto 0);
    AO     : out std_logic_vector(5 downto 0);
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI     : in  std_logic_vector(5 downto 0);
    BO     : out std_logic_vector(5 downto 0)
);
end NX_CDC_U_FULL;

architecture NX_RTL of NX_CDC_U_FULL is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_CDC_U
generic (
    mode           : integer := 0;
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI1    : in  std_logic;
    AI2    : in  std_logic;
    AI3    : in  std_logic;
    AI4    : in  std_logic;
    AI5    : in  std_logic;
    AI6    : in  std_logic;
    AO1    : out std_logic;
    AO2    : out std_logic;
    AO3    : out std_logic;
    AO4    : out std_logic;
    AO5    : out std_logic;
    AO6    : out std_logic;
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI1    : in  std_logic;
    BI2    : in  std_logic;
    BI3    : in  std_logic;
    BI4    : in  std_logic;
    BI5    : in  std_logic;
    BI6    : in  std_logic;
    BO1    : out std_logic;
    BO2    : out std_logic;
    BO3    : out std_logic;
    BO4    : out std_logic;
    BO5    : out std_logic;
    BO6    : out std_logic;
    CSRSTI : in  std_logic;
    CDRSTI : in  std_logic;
    CSRSTO : out std_logic;
    CDRSTO : out std_logic;
    CI1    : in  std_logic;
    CI2    : in  std_logic;
    CI3    : in  std_logic;
    CI4    : in  std_logic;
    CI5    : in  std_logic;
    CI6    : in  std_logic;
    CO1    : out std_logic;
    CO2    : out std_logic;
    CO3    : out std_logic;
    CO4    : out std_logic;
    CO5    : out std_logic;
    CO6    : out std_logic;
    DSRSTI : in  std_logic;
    DDRSTI : in  std_logic;
    DSRSTO : out std_logic;
    DDRSTO : out std_logic;
    DI1    : in  std_logic;
    DI2    : in  std_logic;
    DI3    : in  std_logic;
    DI4    : in  std_logic;
    DI5    : in  std_logic;
    DI6    : in  std_logic;
    DO1    : out std_logic;
    DO2    : out std_logic;
    DO3    : out std_logic;
    DO4    : out std_logic;
    DO5    : out std_logic;
    DO6    : out std_logic
);
end component NX_CDC_U;

begin

cdc: NX_CDC_U
generic map (
    mode           => 2, -- 2: bin2gray + 3DFF + gray2bin
    ck0_edge       => ck0_edge,
    ck1_edge       => ck1_edge,
    ack_sel        => ack_sel,
    bck_sel        => bck_sel,
    cck_sel        => '0',
    dck_sel        => '0',
    use_asrc_arst  => use_asrc_arst,
    use_adest_arst => use_adest_arst,
    use_bsrc_arst  => use_bsrc_arst,
    use_bdest_arst => use_bdest_arst,
    use_csrc_arst  => '0',
    use_cdest_arst => '0',
    use_dsrc_arst  => '0',
    use_ddest_arst => '0',
    link_BA        => '0',
    link_CB        => '0',
    link_DC        => '0'
)
port map (
    CK1    => CK1,
    CK2    => CK2,
    ASRSTI => ASRSTI,
    ADRSTI => ADRSTI,
    ASRSTO => ASRSTO,
    ADRSTO => ADRSTO,
    AI1    => AI(0),
    AI2    => AI(1),
    AI3    => AI(2),
    AI4    => AI(3),
    AI5    => AI(4),
    AI6    => AI(5),
    AO1    => AO(0),
    AO2    => AO(1),
    AO3    => AO(2),
    AO4    => AO(3),
    AO5    => AO(4),
    AO6    => AO(5),
    BSRSTI => BSRSTI,
    BDRSTI => BDRSTI,
    BSRSTO => BSRSTO,
    BDRSTO => BDRSTO,
    BI1    => BI(0),
    BI2    => BI(1),
    BI3    => BI(2),
    BI4    => BI(3),
    BI5    => BI(4),
    BI6    => BI(5),
    BO1    => BO(0),
    BO2    => BO(1),
    BO3    => BO(2),
    BO4    => BO(3),
    BO5    => BO(4),
    BO6    => BO(5),
    CSRSTI => '0',
    CDRSTI => '0',
    CSRSTO => OPEN,
    CDRSTO => OPEN,
    CI1    => '0',
    CI2    => '0',
    CI3    => '0',
    CI4    => '0',
    CI5    => '0',
    CI6    => '0',
    CO1    => OPEN,
    CO2    => OPEN,
    CO3    => OPEN,
    CO4    => OPEN,
    CO5    => OPEN,
    CO6    => OPEN,
    DSRSTI => '0',
    DDRSTI => '0',
    DSRSTO => OPEN,
    DDRSTO => OPEN,
    DI1    => '0',
    DI2    => '0',
    DI3    => '0',
    DI4    => '0',
    DI5    => '0',
    DI6    => '0',
    DO1    => OPEN,
    DO2    => OPEN,
    DO3    => OPEN,
    DO4    => OPEN,
    DO5    => OPEN,
    DO6    => OPEN
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_CDC_U_BIN2GRAY definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CDC_U_BIN2GRAY is
port (
    AI     : in  std_logic_vector(5 downto 0);
    AO     : out std_logic_vector(5 downto 0);
    BI     : in  std_logic_vector(5 downto 0);
    BO     : out std_logic_vector(5 downto 0)
);
end NX_CDC_U_BIN2GRAY;

architecture NX_RTL of NX_CDC_U_BIN2GRAY is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_CDC_U
generic (
    mode           : integer := 0;
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI1    : in  std_logic;
    AI2    : in  std_logic;
    AI3    : in  std_logic;
    AI4    : in  std_logic;
    AI5    : in  std_logic;
    AI6    : in  std_logic;
    AO1    : out std_logic;
    AO2    : out std_logic;
    AO3    : out std_logic;
    AO4    : out std_logic;
    AO5    : out std_logic;
    AO6    : out std_logic;
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI1    : in  std_logic;
    BI2    : in  std_logic;
    BI3    : in  std_logic;
    BI4    : in  std_logic;
    BI5    : in  std_logic;
    BI6    : in  std_logic;
    BO1    : out std_logic;
    BO2    : out std_logic;
    BO3    : out std_logic;
    BO4    : out std_logic;
    BO5    : out std_logic;
    BO6    : out std_logic;
    CSRSTI : in  std_logic;
    CDRSTI : in  std_logic;
    CSRSTO : out std_logic;
    CDRSTO : out std_logic;
    CI1    : in  std_logic;
    CI2    : in  std_logic;
    CI3    : in  std_logic;
    CI4    : in  std_logic;
    CI5    : in  std_logic;
    CI6    : in  std_logic;
    CO1    : out std_logic;
    CO2    : out std_logic;
    CO3    : out std_logic;
    CO4    : out std_logic;
    CO5    : out std_logic;
    CO6    : out std_logic;
    DSRSTI : in  std_logic;
    DDRSTI : in  std_logic;
    DSRSTO : out std_logic;
    DDRSTO : out std_logic;
    DI1    : in  std_logic;
    DI2    : in  std_logic;
    DI3    : in  std_logic;
    DI4    : in  std_logic;
    DI5    : in  std_logic;
    DI6    : in  std_logic;
    DO1    : out std_logic;
    DO2    : out std_logic;
    DO3    : out std_logic;
    DO4    : out std_logic;
    DO5    : out std_logic;
    DO6    : out std_logic
);
end component NX_CDC_U;

begin

cdc: NX_CDC_U
generic map (
    mode           => 3, -- 3: bin2gray
    ck0_edge       => '0',
    ck1_edge       => '0',
    ack_sel        => '0',
    bck_sel        => '0',
    cck_sel        => '0',
    dck_sel        => '0',
    use_asrc_arst  => '0',
    use_adest_arst => '0',
    use_bsrc_arst  => '0',
    use_bdest_arst => '0',
    use_csrc_arst  => '0',
    use_cdest_arst => '0',
    use_dsrc_arst  => '0',
    use_ddest_arst => '0',
    link_BA        => '0',
    link_CB        => '0',
    link_DC        => '0'
)
port map (
    CK1    => '0',
    CK2    => '0',
    ASRSTI => '0',
    ADRSTI => '0',
    ASRSTO => OPEN,
    ADRSTO => OPEN,
    AI1    => AI(0),
    AI2    => AI(1),
    AI3    => AI(2),
    AI4    => AI(3),
    AI5    => AI(4),
    AI6    => AI(5),
    AO1    => AO(0),
    AO2    => AO(1),
    AO3    => AO(2),
    AO4    => AO(3),
    AO5    => AO(4),
    AO6    => AO(5),
    BSRSTI => '0',
    BDRSTI => '0',
    BSRSTO => OPEN,
    BDRSTO => OPEN,
    BI1    => BI(0),
    BI2    => BI(1),
    BI3    => BI(2),
    BI4    => BI(3),
    BI5    => BI(4),
    BI6    => BI(5),
    BO1    => BO(0),
    BO2    => BO(1),
    BO3    => BO(2),
    BO4    => BO(3),
    BO5    => BO(4),
    BO6    => BO(5),
    CSRSTI => '0',
    CDRSTI => '0',
    CSRSTO => OPEN,
    CDRSTO => OPEN,
    CI1    => '0',
    CI2    => '0',
    CI3    => '0',
    CI4    => '0',
    CI5    => '0',
    CI6    => '0',
    CO1    => OPEN,
    CO2    => OPEN,
    CO3    => OPEN,
    CO4    => OPEN,
    CO5    => OPEN,
    CO6    => OPEN,
    DSRSTI => '0',
    DDRSTI => '0',
    DSRSTO => OPEN,
    DDRSTO => OPEN,
    DI1    => '0',
    DI2    => '0',
    DI3    => '0',
    DI4    => '0',
    DI5    => '0',
    DI6    => '0',
    DO1    => OPEN,
    DO2    => OPEN,
    DO3    => OPEN,
    DO4    => OPEN,
    DO5    => OPEN,
    DO6    => OPEN
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_CDC_U_GRAY2BIN definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CDC_U_GRAY2BIN is
port (
    AI : in  std_logic_vector(5 downto 0);
    AO : out std_logic_vector(5 downto 0);
    BI : in  std_logic_vector(5 downto 0);
    BO : out std_logic_vector(5 downto 0)
);
end NX_CDC_U_GRAY2BIN;

architecture NX_RTL of NX_CDC_U_GRAY2BIN is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_CDC_U
generic (
    mode           : integer := 0;
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI1    : in  std_logic;
    AI2    : in  std_logic;
    AI3    : in  std_logic;
    AI4    : in  std_logic;
    AI5    : in  std_logic;
    AI6    : in  std_logic;
    AO1    : out std_logic;
    AO2    : out std_logic;
    AO3    : out std_logic;
    AO4    : out std_logic;
    AO5    : out std_logic;
    AO6    : out std_logic;
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI1    : in  std_logic;
    BI2    : in  std_logic;
    BI3    : in  std_logic;
    BI4    : in  std_logic;
    BI5    : in  std_logic;
    BI6    : in  std_logic;
    BO1    : out std_logic;
    BO2    : out std_logic;
    BO3    : out std_logic;
    BO4    : out std_logic;
    BO5    : out std_logic;
    BO6    : out std_logic;
    CSRSTI : in  std_logic;
    CDRSTI : in  std_logic;
    CSRSTO : out std_logic;
    CDRSTO : out std_logic;
    CI1    : in  std_logic;
    CI2    : in  std_logic;
    CI3    : in  std_logic;
    CI4    : in  std_logic;
    CI5    : in  std_logic;
    CI6    : in  std_logic;
    CO1    : out std_logic;
    CO2    : out std_logic;
    CO3    : out std_logic;
    CO4    : out std_logic;
    CO5    : out std_logic;
    CO6    : out std_logic;
    DSRSTI : in  std_logic;
    DDRSTI : in  std_logic;
    DSRSTO : out std_logic;
    DDRSTO : out std_logic;
    DI1    : in  std_logic;
    DI2    : in  std_logic;
    DI3    : in  std_logic;
    DI4    : in  std_logic;
    DI5    : in  std_logic;
    DI6    : in  std_logic;
    DO1    : out std_logic;
    DO2    : out std_logic;
    DO3    : out std_logic;
    DO4    : out std_logic;
    DO5    : out std_logic;
    DO6    : out std_logic
);
end component NX_CDC_U;

begin

cdc: NX_CDC_U
generic map (
    mode           => 4, -- 4: gray2bin
    ck0_edge       => '0',
    ck1_edge       => '0',
    ack_sel        => '0',
    bck_sel        => '0',
    cck_sel        => '0',
    dck_sel        => '0',
    use_asrc_arst  => '0',
    use_adest_arst => '0',
    use_bsrc_arst  => '0',
    use_bdest_arst => '0',
    use_csrc_arst  => '0',
    use_cdest_arst => '0',
    use_dsrc_arst  => '0',
    use_ddest_arst => '0',
    link_BA        => '0',
    link_CB        => '0',
    link_DC        => '0'
)
port map (
    CK1    => '0',
    CK2    => '0',
    ASRSTI => '0',
    ADRSTI => '0',
    ASRSTO => OPEN,
    ADRSTO => OPEN,
    AI1    => AI(0),
    AI2    => AI(1),
    AI3    => AI(2),
    AI4    => AI(3),
    AI5    => AI(4),
    AI6    => AI(5),
    AO1    => AO(0),
    AO2    => AO(1),
    AO3    => AO(2),
    AO4    => AO(3),
    AO5    => AO(4),
    AO6    => AO(5),
    BSRSTI => '0',
    BDRSTI => '0',
    BSRSTO => OPEN,
    BDRSTO => OPEN,
    BI1    => BI(0),
    BI2    => BI(1),
    BI3    => BI(2),
    BI4    => BI(3),
    BI5    => BI(4),
    BI6    => BI(5),
    BO1    => BO(0),
    BO2    => BO(1),
    BO3    => BO(2),
    BO4    => BO(3),
    BO5    => BO(4),
    BO6    => BO(5),
    CSRSTI => '0',
    CDRSTI => '0',
    CSRSTO => OPEN,
    CDRSTO => OPEN,
    CI1    => '0',
    CI2    => '0',
    CI3    => '0',
    CI4    => '0',
    CI5    => '0',
    CI6    => '0',
    CO1    => OPEN,
    CO2    => OPEN,
    CO3    => OPEN,
    CO4    => OPEN,
    CO5    => OPEN,
    CO6    => OPEN,
    DSRSTI => '0',
    DDRSTI => '0',
    DSRSTO => OPEN,
    DDRSTO => OPEN,
    DI1    => '0',
    DI2    => '0',
    DI3    => '0',
    DI4    => '0',
    DI5    => '0',
    DI6    => '0',
    DO1    => OPEN,
    DO2    => OPEN,
    DO3    => OPEN,
    DO4    => OPEN,
    DO5    => OPEN,
    DO6    => OPEN
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_XCDC_U definition
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_XCDC_U is
generic (
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI     : in  std_logic_vector(5 downto 0);
    AO     : out std_logic_vector(5 downto 0);
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI     : in  std_logic_vector(5 downto 0);
    BO     : out std_logic_vector(5 downto 0);
    CSRSTI : in  std_logic;
    CDRSTI : in  std_logic;
    CSRSTO : out std_logic;
    CDRSTO : out std_logic;
    CI     : in  std_logic_vector(5 downto 0);
    CO     : out std_logic_vector(5 downto 0);
    DSRSTI : in  std_logic;
    DDRSTI : in  std_logic;
    DSRSTO : out std_logic;
    DDRSTO : out std_logic;
    DI     : in  std_logic_vector(5 downto 0);
    DO     : out std_logic_vector(5 downto 0)
);
end NX_XCDC_U;

architecture NX_RTL of NX_XCDC_U is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_CDC_U
generic (
    mode           : integer := 0;
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI1    : in  std_logic;
    AI2    : in  std_logic;
    AI3    : in  std_logic;
    AI4    : in  std_logic;
    AI5    : in  std_logic;
    AI6    : in  std_logic;
    AO1    : out std_logic;
    AO2    : out std_logic;
    AO3    : out std_logic;
    AO4    : out std_logic;
    AO5    : out std_logic;
    AO6    : out std_logic;
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI1    : in  std_logic;
    BI2    : in  std_logic;
    BI3    : in  std_logic;
    BI4    : in  std_logic;
    BI5    : in  std_logic;
    BI6    : in  std_logic;
    BO1    : out std_logic;
    BO2    : out std_logic;
    BO3    : out std_logic;
    BO4    : out std_logic;
    BO5    : out std_logic;
    BO6    : out std_logic;
    CSRSTI : in  std_logic;
    CDRSTI : in  std_logic;
    CSRSTO : out std_logic;
    CDRSTO : out std_logic;
    CI1    : in  std_logic;
    CI2    : in  std_logic;
    CI3    : in  std_logic;
    CI4    : in  std_logic;
    CI5    : in  std_logic;
    CI6    : in  std_logic;
    CO1    : out std_logic;
    CO2    : out std_logic;
    CO3    : out std_logic;
    CO4    : out std_logic;
    CO5    : out std_logic;
    CO6    : out std_logic;
    DSRSTI : in  std_logic;
    DDRSTI : in  std_logic;
    DSRSTO : out std_logic;
    DDRSTO : out std_logic;
    DI1    : in  std_logic;
    DI2    : in  std_logic;
    DI3    : in  std_logic;
    DI4    : in  std_logic;
    DI5    : in  std_logic;
    DI6    : in  std_logic;
    DO1    : out std_logic;
    DO2    : out std_logic;
    DO3    : out std_logic;
    DO4    : out std_logic;
    DO5    : out std_logic;
    DO6    : out std_logic
);
end component NX_CDC_U;

begin

cdc: NX_CDC_U
generic map (
    mode           => 5, -- 5: XCDC
    ck0_edge       => ck0_edge,
    ck1_edge       => ck1_edge,
    ack_sel        => ack_sel,
    bck_sel        => bck_sel,
    cck_sel        => cck_sel,
    dck_sel        => dck_sel,
    use_asrc_arst  => use_asrc_arst,
    use_adest_arst => use_adest_arst,
    use_bsrc_arst  => use_bsrc_arst,
    use_bdest_arst => use_bdest_arst,
    use_csrc_arst  => use_csrc_arst,
    use_cdest_arst => use_cdest_arst,
    use_dsrc_arst  => use_dsrc_arst,
    use_ddest_arst => use_ddest_arst,
    link_BA        => link_BA,
    link_CB        => link_CB,
    link_DC        => link_DC
)
port map (
    CK1    => CK1,
    CK2    => CK2,
    ASRSTI => ASRSTI,
    ADRSTI => ADRSTI,
    ASRSTO => ASRSTO,
    ADRSTO => ADRSTO,
    AI1    => AI(0),
    AI2    => AI(1),
    AI3    => AI(2),
    AI4    => AI(3),
    AI5    => AI(4),
    AI6    => AI(5),
    AO1    => AO(0),
    AO2    => AO(1),
    AO3    => AO(2),
    AO4    => AO(3),
    AO5    => AO(4),
    AO6    => AO(5),
    BSRSTI => BSRSTI,
    BDRSTI => BDRSTI,
    BSRSTO => BSRSTO,
    BDRSTO => BDRSTO,
    BI1    => BI(0),
    BI2    => BI(1),
    BI3    => BI(2),
    BI4    => BI(3),
    BI5    => BI(4),
    BI6    => BI(5),
    BO1    => BO(0),
    BO2    => BO(1),
    BO3    => BO(2),
    BO4    => BO(3),
    BO5    => BO(4),
    BO6    => BO(5),
    CSRSTI => CSRSTI,
    CDRSTI => CDRSTI,
    CSRSTO => CSRSTO,
    CDRSTO => CDRSTO,
    CI1    => CI(0),
    CI2    => CI(1),
    CI3    => CI(2),
    CI4    => CI(3),
    CI5    => CI(4),
    CI6    => CI(5),
    CO1    => CO(0),
    CO2    => CO(1),
    CO3    => CO(2),
    CO4    => CO(3),
    CO5    => CO(4),
    CO6    => CO(5),
    DSRSTI => DSRSTI,
    DDRSTI => DDRSTI,
    DSRSTO => DSRSTO,
    DDRSTO => DDRSTO,
    DI1    => DI(0),
    DI2    => DI(1),
    DI3    => DI(2),
    DI4    => DI(3),
    DI5    => DI(4),
    DI6    => DI(5),
    DO1    => DO(0),
    DO2    => DO(1),
    DO3    => DO(2),
    DO4    => DO(3),
    DO5    => DO(4),
    DO6    => DO(5)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_CDC_U definition
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_CDC_U is
generic (
    mode           : integer := 0; -- 0: 2DFF     
                                   -- 1: 3DFF     
                                   -- 2: bin2gray + 3DFF + gray2bin
                                   -- 3: bin2gray 
                                   -- 4: gray2bin 
                                   -- 5: XCDC
    ck0_edge       : bit := '0';
    ck1_edge       : bit := '0';
    ack_sel        : bit := '0';
    bck_sel        : bit := '0';
    cck_sel        : bit := '0';
    dck_sel        : bit := '0';
    use_asrc_arst  : bit := '0';
    use_adest_arst : bit := '0';
    use_bsrc_arst  : bit := '0';
    use_bdest_arst : bit := '0';
    use_csrc_arst  : bit := '0';
    use_cdest_arst : bit := '0';
    use_dsrc_arst  : bit := '0';
    use_ddest_arst : bit := '0';
    link_BA        : bit := '0';
    link_CB        : bit := '0';
    link_DC        : bit := '0'
);
port (
    CK1    : in  std_logic;
    CK2    : in  std_logic;
    ASRSTI : in  std_logic;
    ADRSTI : in  std_logic;
    ASRSTO : out std_logic;
    ADRSTO : out std_logic;
    AI1    : in  std_logic;
    AI2    : in  std_logic;
    AI3    : in  std_logic;
    AI4    : in  std_logic;
    AI5    : in  std_logic;
    AI6    : in  std_logic;
    AO1    : out std_logic;
    AO2    : out std_logic;
    AO3    : out std_logic;
    AO4    : out std_logic;
    AO5    : out std_logic;
    AO6    : out std_logic;
    BSRSTI : in  std_logic;
    BDRSTI : in  std_logic;
    BSRSTO : out std_logic;
    BDRSTO : out std_logic;
    BI1    : in  std_logic;
    BI2    : in  std_logic;
    BI3    : in  std_logic;
    BI4    : in  std_logic;
    BI5    : in  std_logic;
    BI6    : in  std_logic;
    BO1    : out std_logic;
    BO2    : out std_logic;
    BO3    : out std_logic;
    BO4    : out std_logic;
    BO5    : out std_logic;
    BO6    : out std_logic;
    CSRSTI : in  std_logic;
    CDRSTI : in  std_logic;
    CSRSTO : out std_logic;
    CDRSTO : out std_logic;
    CI1    : in  std_logic;
    CI2    : in  std_logic;
    CI3    : in  std_logic;
    CI4    : in  std_logic;
    CI5    : in  std_logic;
    CI6    : in  std_logic;
    CO1    : out std_logic;
    CO2    : out std_logic;
    CO3    : out std_logic;
    CO4    : out std_logic;
    CO5    : out std_logic;
    CO6    : out std_logic;
    DSRSTI : in  std_logic;
    DDRSTI : in  std_logic;
    DSRSTO : out std_logic;
    DDRSTO : out std_logic;
    DI1    : in  std_logic;
    DI2    : in  std_logic;
    DI3    : in  std_logic;
    DI4    : in  std_logic;
    DI5    : in  std_logic;
    DI6    : in  std_logic;
    DO1    : out std_logic;
    DO2    : out std_logic;
    DO3    : out std_logic;
    DO4    : out std_logic;
    DO5    : out std_logic;
    DO6    : out std_logic
);
end NX_CDC_U;

architecture NX_RTL of NX_CDC_U is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CDC_U";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------
-- =================================================================================================
--   NX_CDC_U mode configuration
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.std_logic_arith.all;
use STD.textio.all;
use ieee.std_logic_textio.all;

package regfile_CDC_U_pkg is 
    
    constant cfg_nc_53downto50                       : std_logic_vector( 2 downto 0):=(others => '0');
    constant cfg_nc_45downto40                       : std_logic_vector( 5 downto 0):=(others => '0');
    constant cfg_test_en_i                           : std_logic_vector( 1 downto 0):=(others => '0');
                                                    
    -- DPREG Link Implementation                    
    constant Conf_2_REG_1RW_1RW_DPREG0_DPREG1        : std_logic_vector( 1 to 7 ):="0000000";
    constant Conf_2_REG_1R_1R_SPREG0_SPREG1          : std_logic_vector( 1 to 7 ):="1100000";
    constant Conf_1_REG_1RW_DEEPER                   : std_logic_vector( 1 to 7 ):="0011111";
    constant Conf_1_REG_1RW_WIDER                    : std_logic_vector( 1 to 7 ):="0001101";
    constant Conf_1_REG_2R_1W                        : std_logic_vector( 1 to 7 ):="0001100";

    function cfg_mode ( mode                         : integer; 
                        ck0_edge                     : std_logic;
                        ck1_edge                     : std_logic;
                        ack_sel                      : std_logic;
                        bck_sel                      : std_logic;
                        cck_sel                      : std_logic;
                        dck_sel                      : std_logic;
                        use_asrc_arst                : std_logic;
                        use_adest_arst               : std_logic;    
                        use_bsrc_arst                : std_logic;  
                        use_bdest_arst               : std_logic;   
                        use_csrc_arst                : std_logic;
                        use_cdest_arst               : std_logic;
                        use_dsrc_arst                : std_logic;
                        use_ddest_arst               : std_logic;
                        link_BA                      : std_logic;
                        link_CB                      : std_logic;
                        link_DC                      : std_logic
                        
        ) return std_logic_vector;


end package regfile_CDC_U_pkg;

package body regfile_CDC_U_pkg is 

    function cfg_mode ( mode                         : integer; 
                        ck0_edge                     : std_logic;
                        ck1_edge                     : std_logic;
                        ack_sel                      : std_logic;
                        bck_sel                      : std_logic;
                        cck_sel                      : std_logic;
                        dck_sel                      : std_logic;
                        use_asrc_arst                : std_logic;
                        use_adest_arst               : std_logic;    
                        use_bsrc_arst                : std_logic;  
                        use_bdest_arst               : std_logic;   
                        use_csrc_arst                : std_logic;
                        use_cdest_arst               : std_logic;
                        use_dsrc_arst                : std_logic;
                        use_ddest_arst               : std_logic;
                        link_BA                      : std_logic;
                        link_CB                      : std_logic;
                        link_DC                      : std_logic
                        
        ) return std_logic_vector is
        -- linked
        variable cfg_reg1_wdata_linked_i           : std_logic;
        variable cfg_reg1_waddr_linked_i           : std_logic;
        variable cfg_reg1_raddr_linked_i           : std_logic;
        variable cfg_reg1_cmd_linked_i             : std_logic;
        variable cfg_reg_linked_i                  : std_logic;
            
        --  cfg_reg0  
        variable cfg_reg0_clkrd_inv_i               : std_logic;
        variable cfg_reg0_clkwr_inv_i               : std_logic;
        variable cfg_reg0_cdc_clk_inv_i             : std_logic;
        variable cfg_reg0_spreg_i                   : std_logic;
        variable cfg_reg0_we_all_mask_i             : std_logic;
        variable cfg_reg0_we_mask_i                 : std_logic;
        variable cfg_reg0_addr_mask_i               : std_logic_vector( 4 downto 0);
        variable cfg_reg0_cdc_dpreg_fifo_i          : std_logic;
        variable cfg_reg0_cdc_w2r_arst_dest_sel_i   : std_logic;
        variable cfg_reg0_cdc_w2r_arst_src_sel_i    : std_logic;
        variable cfg_reg0_cdc_w2r_gray_linked_i     : std_logic;
        variable cfg_reg0_cdc_w2r_use_g2b_i         : std_logic;
        variable cfg_reg0_cdc_w2r_use_b2g_i         : std_logic;
        variable cfg_reg0_cdc_w2r_cdc_clk_i         : std_logic;
        variable cfg_reg0_cdc_w2r_use_reg_dest_i    : std_logic;
        variable cfg_reg0_cdc_w2r_use_reg_src_i     : std_logic;
        variable cfg_reg0_cdc_addr_mask_i           : std_logic_vector( 5 downto 0);
        variable cfg_reg0_cdc_r2w_addrd_inv_i       : std_logic_vector( 5 downto 0);
        variable cfg_reg0_cdc_r2w_arst_dest_sel_i   : std_logic;
        variable cfg_reg0_cdc_r2w_arst_src_sel_i    : std_logic;
        variable cfg_reg0_cdc_r2w_gray_linked_i     : std_logic;
        variable cfg_reg0_cdc_r2w_use_g2b_i         : std_logic;
        variable cfg_reg0_cdc_r2w_use_b2g_i         : std_logic;
        variable cfg_reg0_cdc_r2w_cdc_clk_i         : std_logic;
        variable cfg_reg0_cdc_r2w_use_reg_dest_i    : std_logic;
        variable cfg_reg0_cdc_r2w_use_reg_src_i     : std_logic;

        --  cfg_reg1  
        variable cfg_reg1_clkrd_inv_i               : std_logic;
        variable cfg_reg1_clkwr_inv_i               : std_logic;
        variable cfg_reg1_cdc_clk_inv_i             : std_logic;
        variable cfg_reg1_spreg_i                   : std_logic;
        variable cfg_reg1_we_all_mask_i             : std_logic;
        variable cfg_reg1_we_mask_i                 : std_logic;
        variable cfg_reg1_addr_mask_i               : std_logic_vector( 4 downto 0);
        variable cfg_reg1_cdc_dpreg_fifo_i          : std_logic;
        variable cfg_reg1_cdc_w2r_arst_dest_sel_i   : std_logic;
        variable cfg_reg1_cdc_w2r_arst_src_sel_i    : std_logic;
        variable cfg_reg1_cdc_w2r_gray_linked_i     : std_logic;
        variable cfg_reg1_cdc_w2r_use_g2b_i         : std_logic;
        variable cfg_reg1_cdc_w2r_use_b2g_i         : std_logic;
        variable cfg_reg1_cdc_w2r_cdc_clk_i         : std_logic;
        variable cfg_reg1_cdc_w2r_use_reg_dest_i    : std_logic;
        variable cfg_reg1_cdc_w2r_use_reg_src_i     : std_logic;
        variable cfg_reg1_cdc_addr_mask_i           : std_logic_vector( 5 downto 0);
        variable cfg_reg1_cdc_r2w_addrd_inv_i       : std_logic_vector( 5 downto 0);
        variable cfg_reg1_cdc_r2w_arst_dest_sel_i   : std_logic;
        variable cfg_reg1_cdc_r2w_arst_src_sel_i    : std_logic;
       -- variable cfg_reg1_cdc_r2w_gray_linked_i     : std_logic;
        variable cfg_nc_90                          : std_logic;
        variable cfg_reg1_cdc_r2w_use_g2b_i         : std_logic;
        variable cfg_reg1_cdc_r2w_use_b2g_i         : std_logic;
        variable cfg_reg1_cdc_r2w_cdc_clk_i         : std_logic;
        variable cfg_reg1_cdc_r2w_use_reg_dest_i    : std_logic;
        variable cfg_reg1_cdc_r2w_use_reg_src_i     : std_logic;

        variable DPREG_link_implementation          : std_logic_vector(1 to 7);
        
        variable regfile_config                     : std_logic_vector( 95 downto 0);


        begin
        -- mode :
            -- 0: 2DFF      
            -- 1: 3DFF     
            -- 2: bin2gray + 3DFF + gray2bin
            -- 3: bin2gray 
            -- 4: gray2bin 
            -- 5: XCDC

            cfg_reg1_cdc_r2w_use_reg_src_i      := '1' when mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg1_cdc_r2w_use_reg_dest_i     := '1' when mode = 0 or mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg1_cdc_r2w_use_b2g_i          := '1' when mode = 2 or mode = 3 or mode = 5 else '0';
            cfg_reg1_cdc_r2w_use_g2b_i          := '1' when mode = 2 or mode = 4 or mode = 5 else '0';
            cfg_nc_90                           := '0';
            
            cfg_reg1_cdc_r2w_addrd_inv_i        := "000000";
            cfg_reg1_cdc_addr_mask_i            := "000000";
            cfg_reg1_cdc_w2r_use_reg_dest_i     := '1' when mode = 0 or mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg1_cdc_w2r_use_reg_src_i      := '1' when mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg1_cdc_w2r_use_b2g_i          := '1' when mode = 2 or mode = 3 or mode = 5 else '0';
            cfg_reg1_cdc_w2r_use_g2b_i          := '1' when mode = 2 or mode = 4 or mode = 5 else '0';
            cfg_reg1_cdc_w2r_gray_linked_i      :=  link_CB when mode = 5 else '0';
            
            cfg_reg1_cdc_dpreg_fifo_i           := '0';
            cfg_reg1_addr_mask_i                := (others => '0'); --cfg_reg1_addr_mask;-- when mode = 1 else "00000";
            cfg_reg1_we_mask_i                  := '0';
            cfg_reg1_we_all_mask_i              := '0';
            
            -- CDC RESET
            cfg_reg1_cdc_w2r_arst_src_sel_i     :=  use_asrc_arst when mode = 1 or mode = 2 else
                                                    use_bsrc_arst when mode = 5 else 
                                                    '0';
                                                    
            cfg_reg1_cdc_w2r_arst_dest_sel_i    := use_adest_arst when mode = 0 or mode = 1 or mode = 2 else
                                                   use_bdest_arst when mode = 5  else
                                                   '0';
            cfg_reg1_cdc_r2w_arst_src_sel_i     := use_bsrc_arst  when mode = 1 or mode = 2 else
                                                   use_dsrc_arst  when mode = 5   else 
                                                   '0';
                                                   
            cfg_reg1_cdc_r2w_arst_dest_sel_i    := use_bdest_arst when mode = 0 or mode = 1 or mode = 2 else
                                                   use_ddest_arst when mode = 5 else
                                                   '0';
            
            cfg_reg0_cdc_w2r_arst_dest_sel_i    := use_adest_arst when mode = 0 or mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg0_cdc_w2r_arst_src_sel_i     := use_asrc_arst  when mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg0_cdc_r2w_arst_dest_sel_i    := use_bdest_arst when mode = 0 or mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg0_cdc_r2w_arst_src_sel_i     := use_bsrc_arst  when mode = 1 or mode = 2 or mode = 5 else '0';
            
            
            --cfg_nc_53downto50                   := '0' when mode = 1 else '0';
            --cfg_test_en_i                       := '0' when mode = 1 else '0';
            --cfg_nc_45downto40                   := '0' when mode = 1 else '0';
            
            -- Clock
            cfg_reg1_cdc_r2w_cdc_clk_i          := '0';
            cfg_reg1_cdc_w2r_cdc_clk_i          := ack_sel when mode = 0 or mode = 1 or mode = 2 else
                                                   bck_sel when mode = 5                         else 
                                                   '0';
            
            -- CLK INV
            cfg_reg1_clkwr_inv_i                := '0';
            cfg_reg1_clkrd_inv_i                := '0';
            cfg_reg0_clkrd_inv_i                := '0';
            cfg_reg0_clkwr_inv_i                := '0';
            cfg_reg0_cdc_clk_inv_i              := ck0_edge when mode = 0 or mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg1_cdc_clk_inv_i              := ck1_edge when mode = 0 or mode = 1 or mode = 2 or mode = 5 else '0';
            
            -- -- 0: 2DFF     
               -- 1: 3DFF     
               -- 2: bin2gray + 3DFF + gray2bin
               -- 3: bin2gray 
               -- 4: gray2bin 
               -- 5: XCDC

            DPREG_link_implementation           := -- Conf_2_REG_1R_1W               when mode =  else
                                                    Conf_2_REG_1RW_1RW_DPREG0_DPREG1 when mode = 0 else
                                                    Conf_2_REG_1R_1R_SPREG0_SPREG1   when mode = 1 else
                                                    Conf_1_REG_1RW_DEEPER            when mode = 2 else
                                                    Conf_1_REG_1RW_WIDER             when mode = 3 else
                                                    Conf_1_REG_2R_1W                 when mode = 4 else
                                                    (others => '0');
            
            -- DPREG link implementation
            cfg_reg0_spreg_i                    := '0';
            cfg_reg1_spreg_i                    := '0';
            cfg_reg_linked_i                    := '0';
            cfg_reg1_cmd_linked_i               := '0';
            cfg_reg1_waddr_linked_i             := '0';
            cfg_reg1_wdata_linked_i             := '0';
            cfg_reg1_raddr_linked_i             := '0';
            
            
            cfg_reg0_we_all_mask_i              := '0'; 
            cfg_reg0_we_mask_i                  := '0'; 
            cfg_reg0_addr_mask_i                := "00000";
            cfg_reg0_cdc_dpreg_fifo_i           := '0';
            
            
            cfg_reg0_cdc_w2r_gray_linked_i      :=  link_BA when mode = 5 else '0';
            cfg_reg0_cdc_w2r_use_g2b_i          := '1' when mode = 2 or mode = 4 or mode = 5 else '0';
            cfg_reg0_cdc_w2r_use_b2g_i          := '1' when mode = 2 or mode = 3 or mode = 5 else '0';
            cfg_reg0_cdc_w2r_cdc_clk_i          := ack_sel when mode = 0 or mode = 1 or mode = 2  or mode = 5 else '0';
            cfg_reg0_cdc_w2r_use_reg_dest_i     := '1' when mode = 0 or mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg0_cdc_w2r_use_reg_src_i      := '1' when mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg0_cdc_addr_mask_i            := "000000";
            cfg_reg0_cdc_r2w_addrd_inv_i        := "000000";
            
            cfg_reg0_cdc_r2w_gray_linked_i      := link_DC when mode = 5 else '0';
            cfg_reg0_cdc_r2w_use_g2b_i          := '1' when mode = 2 or mode = 4 or mode = 5 else '0';
            cfg_reg0_cdc_r2w_use_b2g_i          := '1' when mode = 2 or mode = 3 or mode = 5 else '0';
            cfg_reg0_cdc_r2w_cdc_clk_i          := bck_sel when mode = 0 or mode = 1 or mode = 2  or mode = 5 else '0';
            cfg_reg0_cdc_r2w_use_reg_dest_i     := '1' when mode = 0 or mode = 1 or mode = 2 or mode = 5 else '0';
            cfg_reg0_cdc_r2w_use_reg_src_i      := '1' when mode = 1 or mode = 2 or mode = 5 else '0';

         
            regfile_config(95)               := cfg_reg1_cdc_r2w_use_reg_src_i     ;  
            regfile_config(94)               := cfg_reg1_cdc_r2w_use_reg_dest_i    ;  
            regfile_config(93)               := cfg_reg1_cdc_r2w_cdc_clk_i         ;  
            regfile_config(92)               := cfg_reg1_cdc_r2w_use_b2g_i         ;  
            regfile_config(91)               := cfg_reg1_cdc_r2w_use_g2b_i         ;  
            regfile_config(90)               := cfg_nc_90                          ;  
            regfile_config(89)               := cfg_reg1_cdc_r2w_arst_src_sel_i    ;  
            regfile_config(88)               := cfg_reg1_cdc_r2w_arst_dest_sel_i   ;  
            regfile_config(87 downto 82)     := cfg_reg1_cdc_r2w_addrd_inv_i       ;  
            regfile_config(81 downto 76)     := cfg_reg1_cdc_addr_mask_i           ;  
            regfile_config(75)               := cfg_reg1_cdc_w2r_use_reg_dest_i    ;  
            regfile_config(74)               := cfg_reg1_cdc_w2r_use_reg_src_i     ;  
            regfile_config(73)               := cfg_reg1_cdc_w2r_cdc_clk_i         ;  
            regfile_config(72)               := cfg_reg1_cdc_w2r_use_b2g_i         ;  
            regfile_config(71)               := cfg_reg1_cdc_w2r_use_g2b_i         ;  
            regfile_config(70)               := cfg_reg1_cdc_w2r_gray_linked_i     ;  
            regfile_config(69)               := cfg_reg1_cdc_w2r_arst_src_sel_i    ;  
            regfile_config(68)               := cfg_reg1_cdc_w2r_arst_dest_sel_i   ;  
            regfile_config(67)               := cfg_reg1_cdc_dpreg_fifo_i          ;  
            regfile_config(66 downto 62)     := cfg_reg1_addr_mask_i               ;  
            regfile_config(61)               := cfg_reg1_we_mask_i                 ;  
            regfile_config(60)               := cfg_reg1_we_all_mask_i             ;  
            regfile_config(59)               := cfg_reg1_spreg_i                   ;  
            regfile_config(58)               := cfg_reg1_cdc_clk_inv_i             ;  
            regfile_config(57)               := cfg_reg1_clkwr_inv_i               ;  
            regfile_config(56)               := cfg_reg1_clkrd_inv_i               ;  
            regfile_config(55 downto 53)     := cfg_nc_53downto50                  ;  
            regfile_config(52)               := cfg_reg1_wdata_linked_i            ;  
            regfile_config(51)               := cfg_reg1_waddr_linked_i            ;  
            regfile_config(50)               := cfg_reg1_raddr_linked_i            ;  
            regfile_config(49)               := cfg_reg1_cmd_linked_i              ;  
            regfile_config(48 downto 47)     := cfg_test_en_i                      ;  
            regfile_config(46)               := cfg_reg_linked_i                   ;  
            regfile_config(45 downto 40)     := cfg_nc_45downto40                  ;  
            regfile_config(39)               := cfg_reg0_clkrd_inv_i               ;  
            regfile_config(38)               := cfg_reg0_clkwr_inv_i               ;  
            regfile_config(37)               := cfg_reg0_cdc_clk_inv_i             ;  
            regfile_config(36)               := cfg_reg0_spreg_i                   ;  
            regfile_config(35)               := cfg_reg0_we_all_mask_i             ;  
            regfile_config(34)               := cfg_reg0_we_mask_i                 ;  
            regfile_config(33 downto 29)     := cfg_reg0_addr_mask_i               ;  
            regfile_config(28)               := cfg_reg0_cdc_dpreg_fifo_i          ;  
            regfile_config(27)               := cfg_reg0_cdc_w2r_arst_dest_sel_i   ;  
            regfile_config(26)               := cfg_reg0_cdc_w2r_arst_src_sel_i    ;  
            regfile_config(25)               := cfg_reg0_cdc_w2r_gray_linked_i     ;  
            regfile_config(24)               := cfg_reg0_cdc_w2r_use_g2b_i         ;  
            regfile_config(23)               := cfg_reg0_cdc_w2r_use_b2g_i         ;  
            regfile_config(22)               := cfg_reg0_cdc_w2r_cdc_clk_i         ;  
            regfile_config(21)               := cfg_reg0_cdc_w2r_use_reg_dest_i    ;  
            regfile_config(20)               := cfg_reg0_cdc_w2r_use_reg_src_i     ;  
            regfile_config(19 downto 14)     := cfg_reg0_cdc_addr_mask_i           ;  
            regfile_config(13 downto  8)     := cfg_reg0_cdc_r2w_addrd_inv_i       ;  
            regfile_config( 7)               := cfg_reg0_cdc_r2w_arst_dest_sel_i   ;  
            regfile_config( 6)               := cfg_reg0_cdc_r2w_arst_src_sel_i    ;  
            regfile_config( 5)               := cfg_reg0_cdc_r2w_gray_linked_i     ;  
            regfile_config( 4)               := cfg_reg0_cdc_r2w_use_g2b_i         ;   
            regfile_config( 3)               := cfg_reg0_cdc_r2w_use_b2g_i         ;   
            regfile_config( 2)               := cfg_reg0_cdc_r2w_cdc_clk_i         ;   
            regfile_config( 1)               := cfg_reg0_cdc_r2w_use_reg_dest_i    ;   
            regfile_config( 0)               := cfg_reg0_cdc_r2w_use_reg_src_i     ;  
            
            return regfile_config(95 downto 0);
        
    end cfg_mode;    
    
end package body regfile_CDC_U_pkg;
----------------------------------------------------------------------------------------------------
`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
TpSag0Mgy6vJZj6r494veRQpBcB7xd7PLHspigfm1fOrcig1ZWNZfyQvaBQluprc
nNXAHVJlUhZgh6QDzCyMmZ5IIXnSJEjFRb6gv70g5dz4cwsXh1gJsS99+7adjldi
KWu513E1Pz/d/pTtJtQ1b6nxwVlMcQ28AdXrDkVN+CJA4/NtTYe+jXhttvE4vV6R
XWrmRbQmuJmlD2dMQxXgp9nNH7f3iiFTCUQE2NsQVl7a9PFaHuZs/LHIKlN8YwSL
oAU/gnGqJeDx4cMDsncQg+OGtSknrFqn45QnmN0aHo75CCwaXeXlmeKD6T/aIAkO
lfUfQRHg+1wW3uHfUa91/Q==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 41936)
`protect data_block
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
nUCpq35qmrhyVdHsV0YabiNlU/Tdm8UqsyhINcbsXzNFLvIsuf2y+yNj9YTN6Nm5
JuIa/DKwrzh1BX7ZG/MSdLSyM52X005eaB9D7HL0q1oYj4co9sUzBTb6i40a+ozU
mQQ/xK/0kICoifsirQDFvQNIywYKunz5LAgYtuT5+n92XgOwcAt1y5lM5YIaUGT9
zIAKPTBfMOhsSG+jgHs/7JucHUJl9bl2PrKmZe7+pOw4JS0kLoBtbQEN3lUiJ+QF
HztzYc9Z6Y41ngX9EsA56f06Uad65cI284Krm0Ck1WeSKmpF73Tidq8zFh8uiCRb
oWDh7nNEUSC6/FEpptvphaWhg3va32G9KRSKaVOJO67kx+1t8QvVKZXOnI+he0B9
rQmZHF7sm1b9N7+94kZf0VQ402kqsuG88Y2yI4i/KjTZ7p0GGm/t/g+4Erq3LL4o
ZOl1speZqPELiT4vd0/mnYOpjp5vsq4VgOpZHw2YY/NxPYFdCsTY3ZD7eOlTX9QY
YENSkJJ6wODJThlTP6qRfDAIZQgejSo6qoXj3csub0rXPo8H2zCMtHiUDeJ/1UTe
yMIs3dm8rTCjUH6OLDBIyaRQRiv0Gqw30NgLpw5sHuNP5D7SV8jLJ0+2pLCZM62s
GiOJTBVzNO/qdn4f8icaBAZequV29g+/+jEChQeaj8fMT6HHNPX2Fh68GH81p+qG
R/FF3WJiKuebtH1/tthrW6rBcanDbTlH6CktVPYsineClg3oYdQJxdGNdQolX8WW
S4FuhTdaH7MF7uk2T2vc5AUZD4WGyQ4VG1nG90fZbaftNce0to4bifZYI+EqZMek
w95Ehac2yL93uH8T1eqDl5W/67CeMJ7ZSo8PEQo/i6q27DAbV4rVIlw5enMxBzEV
24QhI5Rjk8BQiLFIwNnMA5WDA7CMH5jvqvnwy0Jo9H6u17bYOCeiiVJ9uNWmlsW0
jXV/Cr2axsvYWyG2nD5fAiLiurvQsGPY3idAo1RjsVzzyPFJbxG1P1IUgbe3fzWb
v/d59pJE95WaSGJqLtcUWyIDv2A6g2PL/fz5CNRU78BFDcxBZvm8ZONWl53SR28M
LaA5hfC4qg0y/MCEGX3d8e3wMLNaKoHBGRqEowUlJu4kArr9R4SYAGSOWb8yyEU7
hbz8WZ/Slwy8mq3nhNdpWieon4r4C9xELndX1d1o//7Fs3PcekJXMx6jje0yHqpP
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
r5Cy5UkGpWfC1r8WTbA85nCgxStwOHss2Vl7RmX5L/LHnBIj6Q5YZ/p1ckQ3xetB
YuLB/7uns9Uy5zTwa/tlhybPIlFbD8xwVy/iTbEEZWW/ik7mAfsnSsIYGmLHeB9f
m4eey7e5it7k0NjlD7isXn1JjznvysgkKxejLoA9Z5Bs6C3jwPgZVEZJRo2WzTaW
FDibusGp0dZ3cobuI8w4AwuvG46D7DQFZ4AKimyH5WRB9H8svpYi+/IBNXaeyq6y
9a6HLIRpnisJg5fsWDpztSV2WgeommEoMcubIfbuYVRW8fmnLoHNgzwozwfsDrLV
hhpYxS0TLPLDZxPUz4H6pw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 59264)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
BYgXIb1OhXfVlpD1Eye46jlTZvAdUlO6NSOnoSI3S6uy2PLSvkpPE7THsYR0jZiM
mypIFi8efaezcLKxvupUgY3fjoTMikqjUp3w0TOha6R+f4p1HHT6oQZP1b1mcmnr
eblGBZ0If6Fea2Rq7BeVloiKr1AfxKFS7S0Kux0e0fTBlBri7MHYqVgZ1TkCv4BU
AidHhSbBpL98s1WmpAny9MMviB4XDbQDVkGHgmKZTw20PEWBl+ihde9lLqrwJSK/
P3qZJZZpWkBWN8CKGhC3vYCKWe1IqnobC0gRNO1I43ouHOcz9O7WJ2t9urBb0tYJ
jFqjGNbCqbvZuVnWKv6SeA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7152)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
F3iOlKOJCrIu1wRVeMauwfO8ZMiNrMYs9DbTcD4vtJO6GxnTN19DvpN52MHZTkoK
oQMnC1+ZTuyu6yWc/Nq9WmWYWxuKgsWfATHJh23H3ICPNKvtZu0oJQiRVnIERXbq
w8AJWokWNhAmtKFu4bwIjy00RdCL5img3hUBrw7WVEsxMW1togguaGLuoArtWKlg
DJ08SD3nFhRCB1UlG0praofIwHwXbj97zoIn4bnTLdpk4E4zk1g4+MYSxMpzY9EE
NQ50kDfKArftpY5EUFZllzcCLBWrGuLOSBkSdYyDDf4ftqyMZxUMHq/t8hLcD2LU
nKIUlrNbnf8PgkBuULcRug==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 4080)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Rf+MpnwmgyIVUWEWKbSuiUxfAYBjfS8ME+GywVI6vK6C40glF6RRfR6yvv4MYoQV
LR/Qu8KEI1Ettx2ftTt0U5rPY6yv6S/GT8oNHstW4Env8w4gQ34G4214SHy9nvwk
aSvq4MX8xlxuQZKGc/DGg7oML7725Nr2q6C/u/Jiws7MWvZlSP1FzO2P/aYnow0z
VdLMHj2uo9iajExd9bQf9XElBMgEZ7dg8rGQhttSHIw+ca+HNgL/kzGPA7WJoevF
rQuQtWHvhb4tBiWc8/KYvZZ7Un+2kmhD8Jd2XWTbDncu/0HGl1AtJntZkz4/5ZPI
Cq8eTpkfrTO9si0afoZdLQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 3408)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
DchCGGxsdKejho87Cvcg4zcWBZqVkmyiq2CN2oe9ducq2ndqcb9WSkCeEdQE36+Y
pcXLYa2b2WW9eLx3VHcPo7qzRB2bskRj7jDOpWFwI/sNhAM/4MACp3T2w9mAuZzK
QVBCPHhK/JAFseQmaCLAtQtHZPCNAl7c6Kj48l8e/1vq0h6UfJkLXcMX00JRyfGE
ct8IIU9B3oJlJzv15Uy3d+rFylf5oe2BpqFtyReTJRnGEfAUhFl8r2VqoKASQTVx
eHV0zkRxci+hd6Nwnbd5zhnr7WbdYDzA3HrK4ygVb1Yl1eTQE2tDjnyOAvrG380M
OAIMtFniRfkxhqrp8S+R7w==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 1712)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
kFUtCrrg+ni/bgJT86b9hQTHME2BBL/r4VKl0Q1jWYUhYCzW703AKb+eI3Nu0dKM
e5gFkok0kq+NRrsLymVDAdGj6vroAboMvIjyysdM+fP2OhXpFektYQFFFJ7EPpDX
39lRaEcNpyK86z+bfesO9xzd1nJJdVjQARM9cNOokAki8lhC8Y2C6wyBfHpM1dvk
AtHVH1UF4YGzG0iVpErZ5VgqR1JqWwDZg7yLzgqJKBSeqk0900+P1mbRQ+fHSRyU
hexcF5ag7lqC163DKN3ywJ6KtXglEwX8D0DIWdqvixfbPGNMZKXxi7cIE13bJXdX
Xzquw6gMaJpuBPdpNEXHOw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2784)
`protect data_block
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
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
o0te6GMwUnycGt4zhovQXLaKsig8hQv52HohQZK8vCQV5uUyC+JTfk8XBj094hOs
LF4itTgl4GPs2p66TDtL+VZ3jghvPrJ+Q8mbhvMHuqYA/lMbxleGRIWtz9yljO/i
GLItmhjhALNYxm6CcDpYu6VDLf68Rf7mA7hGGLdd8932m5IZFV8RYDP8KtcqLxsn
nowujycAs/NjWLa6SMGXmJspFU3TtESNI08C+jbvnIK/6e8XJq2SZOXjPsCDrrIe
OcOqd7+tKbryu1rzswS2FLMczWhs2bVY1NSEf/tiWVpab6kqBD/e458SSk1pFEdZ
pF8KTKOKkyXGJrIDWZxUHQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 976)
`protect data_block
80qTyXaR4PC/FPI/o9iqBCM3lEQRSLHnqTpLJVgO4jHrxsw+yAzrlbJKF6aTwIne
lrcMFNC65MdCF7g4CEB0FlwmobRJj3MI5tK4Vwe1xteNXdH5KnkTRlbqN04KOf+i
QkWv5sj+RD4X6QlIZwCQaYkpS5qe0UnmkM8HaSCCPr6K+mlfawQJl4fEwueSLFvO
FmVAf4WLT2a8UiVGHsLM+pL+LqM44BUnu3LRMhb9t9bahm3oBfS3Lx3zJrKdKXrN
0t3FlVHrr1raaF/7TaCzRhrUjuRWxMkl3QgFaTqlP5hftgW8gUaCEo6dowgtTUMb
NUkH/LcnOtC0H5Xc1hxLt9oUYa8KVzoPVZc2oa0R2LLFuaGbcVpB/tBEQG+kUwc1
GVroTWww+CZtAuXV2ILg9A4bfnP+yCNRs9nQUOAOZlpm9bIw5RQNJe7Z3jFgSu5S
9fnRVJHSF6tcp99NlUToOhE94J5BLfQN+EdAbeYi4hv3lIh/qA8C7HDXeh9Ig78u
JSYkvXPXY5dYVtIybgaBkt5dCa6xwApIeNG1/y2krHC5a3RooGTgy/Hcr4N+G7Kc
+NY8TLeUEX8Q79boAt3IATGPmHniEvU9nsPpTaHXzJS9tktfpFBKoeWZQR+obZxZ
VVzwvrEmQ9o/3BxztmTGh04GqLo3uUbBYEOqwbDd93D7kr2/K5gV05JVMBypdRyB
fQwjzW5bo+Rt+f9EPvjoEdHa6ZpPYmu4SDEaP1XjG+WSi0QnguCfeQ1SKeUKZJXE
X4JzXulFbQpkzSBB76diuOL+cHIOgQf/8og/lgWGdHpOMOw+yz2wizRmvShZitnE
TYpkjmjocRbxgRL1fQ28KJQambq0/RenaOOLVCGdym6MadtPqFjOh+0e0xxyj+Kx
Lh9m8CjrtL/Mls61ElyqpixzeHS81axFAZ+vXc/cgX+mA+rP+enitVD1pT0UcYHw
IK34UCQmXxcY3sZLbd/3LOVBRTubYgfZpWOIFpWJunU9b9dkzyZvwnUtFI9Zfu3H
rkPZ4ctcuO07xHYw12UERkxnYk+bD6+tVFp89OnHu0u74XoPGUlGReBJga6suMNa
2EXTVEQiZ7IOiSkX/27c2c6j8Fl8vYMJkZ2SUZxhpM9hF8IbUkJiBflZEku2Zwto
V/fXfBDdJg7G6kmhxDmDEkC9Eo22S6gomHSpTh2dMwcithKhtBa9ZPYKyKOu/66E
thqO/3Oyn4YiquId5sIPQ6yAhxzC4QX5fYTcoqTLhcDKetZHuInPnNxokZKEaKdm
CSCaXyptiAXazBM27gjEaA==
`protect end_protected

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Ttnwo5quwztvADuQj+2jW1EKTlh0JCbscM60sseNxmieoxrhz1yILBcCvROGjsAH
mfvQMqoekhTjgk1jJe3joirsmLp8aWaoJq+rGkFesqkiRvjM3ANpnn4dU8ELgcy/
dU25WzfKMshRgI3EJUraTqie4W6MzE0iJ0JhAu0XDKznLY9LUTX0b7fJo9piivH6
bYaOJlXmb5oyOKssAV8i0Ktxc2TdlxdQBAGVTJF/cQD8+7FswhhWt1/MJf6wnOT3
RTzQukwKqa2OjOWNIs9G1o3MWNqLOldEjkojkTvgF07+5HZVALc5iuuhS9VBEosJ
6bAZEBdrDnzYDSPudW/UDQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 48640)
`protect data_block
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
4FLHVpvB4xt+1+2X+V5Ggw==
`protect end_protected

-- =================================================================================================
--   NX_DSP_U definition                                                                2020/07/27
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_DSP_U is
    generic (
        std_mode    : string                  := "";                             -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
        raw_config0 : bit_vector(26 downto 0) := B"000000000000000000000000000"; -- Mux
        raw_config1 : bit_vector(23 downto 0) := B"000000000000000000000000";    -- Pipe Mux
        raw_config2 : bit_vector(13 downto 0) := B"00000000000000";              -- Pipe Reset
        raw_config3 : bit_vector(2 downto 0)  := B"000"                          -- ALU operation
    );
    port (
        A1    : in std_logic;
        A2    : in std_logic;
        A3    : in std_logic;
        A4    : in std_logic;
        A5    : in std_logic;
        A6    : in std_logic;
        A7    : in std_logic;
        A8    : in std_logic;
        A9    : in std_logic;
        A10   : in std_logic;
        A11   : in std_logic;
        A12   : in std_logic;
        A13   : in std_logic;
        A14   : in std_logic;
        A15   : in std_logic;
        A16   : in std_logic;
        A17   : in std_logic;
        A18   : in std_logic;
        A19   : in std_logic;
        A20   : in std_logic;
        A21   : in std_logic;
        A22   : in std_logic;
        A23   : in std_logic;
        A24   : in std_logic;

        B1    : in std_logic;
        B2    : in std_logic;
        B3    : in std_logic;
        B4    : in std_logic;
        B5    : in std_logic;
        B6    : in std_logic;
        B7    : in std_logic;
        B8    : in std_logic;
        B9    : in std_logic;
        B10   : in std_logic;
        B11   : in std_logic;
        B12   : in std_logic;
        B13   : in std_logic;
        B14   : in std_logic;
        B15   : in std_logic;
        B16   : in std_logic;
        B17   : in std_logic;
        B18   : in std_logic;

        C1    : in std_logic;
        C2    : in std_logic;
        C3    : in std_logic;
        C4    : in std_logic;
        C5    : in std_logic;
        C6    : in std_logic;
        C7    : in std_logic;
        C8    : in std_logic;
        C9    : in std_logic;
        C10   : in std_logic;
        C11   : in std_logic;
        C12   : in std_logic;
        C13   : in std_logic;
        C14   : in std_logic;
        C15   : in std_logic;
        C16   : in std_logic;
        C17   : in std_logic;
        C18   : in std_logic;
        C19   : in std_logic;
        C20   : in std_logic;
        C21   : in std_logic;
        C22   : in std_logic;
        C23   : in std_logic;
        C24   : in std_logic;
        C25   : in std_logic;
        C26   : in std_logic;
        C27   : in std_logic;
        C28   : in std_logic;
        C29   : in std_logic;
        C30   : in std_logic;
        C31   : in std_logic;
        C32   : in std_logic;
        C33   : in std_logic;
        C34   : in std_logic;
        C35   : in std_logic;
        C36   : in std_logic;

        CAI1  : in std_logic;
        CAI2  : in std_logic;
        CAI3  : in std_logic;
        CAI4  : in std_logic;
        CAI5  : in std_logic;
        CAI6  : in std_logic;
        CAI7  : in std_logic;
        CAI8  : in std_logic;
        CAI9  : in std_logic;
        CAI10 : in std_logic;
        CAI11 : in std_logic;
        CAI12 : in std_logic;
        CAI13 : in std_logic;
        CAI14 : in std_logic;
        CAI15 : in std_logic;
        CAI16 : in std_logic;
        CAI17 : in std_logic;
        CAI18 : in std_logic;
        CAI19 : in std_logic;
        CAI20 : in std_logic;
        CAI21 : in std_logic;
        CAI22 : in std_logic;
        CAI23 : in std_logic;
        CAI24 : in std_logic;

        CAO1  : out std_logic;
        CAO2  : out std_logic;
        CAO3  : out std_logic;
        CAO4  : out std_logic;
        CAO5  : out std_logic;
        CAO6  : out std_logic;
        CAO7  : out std_logic;
        CAO8  : out std_logic;
        CAO9  : out std_logic;
        CAO10 : out std_logic;
        CAO11 : out std_logic;
        CAO12 : out std_logic;
        CAO13 : out std_logic;
        CAO14 : out std_logic;
        CAO15 : out std_logic;
        CAO16 : out std_logic;
        CAO17 : out std_logic;
        CAO18 : out std_logic;
        CAO19 : out std_logic;
        CAO20 : out std_logic;
        CAO21 : out std_logic;
        CAO22 : out std_logic;
        CAO23 : out std_logic;
        CAO24 : out std_logic;

        CBI1  : in std_logic;
        CBI2  : in std_logic;
        CBI3  : in std_logic;
        CBI4  : in std_logic;
        CBI5  : in std_logic;
        CBI6  : in std_logic;
        CBI7  : in std_logic;
        CBI8  : in std_logic;
        CBI9  : in std_logic;
        CBI10 : in std_logic;
        CBI11 : in std_logic;
        CBI12 : in std_logic;
        CBI13 : in std_logic;
        CBI14 : in std_logic;
        CBI15 : in std_logic;
        CBI16 : in std_logic;
        CBI17 : in std_logic;
        CBI18 : in std_logic;

        CBO1  : out std_logic;
        CBO2  : out std_logic;
        CBO3  : out std_logic;
        CBO4  : out std_logic;
        CBO5  : out std_logic;
        CBO6  : out std_logic;
        CBO7  : out std_logic;
        CBO8  : out std_logic;
        CBO9  : out std_logic;
        CBO10 : out std_logic;
        CBO11 : out std_logic;
        CBO12 : out std_logic;
        CBO13 : out std_logic;
        CBO14 : out std_logic;
        CBO15 : out std_logic;
        CBO16 : out std_logic;
        CBO17 : out std_logic;
        CBO18 : out std_logic;

        CCI   : in std_logic;
        CCO   : out std_logic;
        CI    : in std_logic;
        CK    : in std_logic;
        CO43  : out std_logic;
        CO57  : out std_logic;

        CZI1  : in std_logic;
        CZI2  : in std_logic;
        CZI3  : in std_logic;
        CZI4  : in std_logic;
        CZI5  : in std_logic;
        CZI6  : in std_logic;
        CZI7  : in std_logic;
        CZI8  : in std_logic;
        CZI9  : in std_logic;
        CZI10 : in std_logic;
        CZI11 : in std_logic;
        CZI12 : in std_logic;
        CZI13 : in std_logic;
        CZI14 : in std_logic;
        CZI15 : in std_logic;
        CZI16 : in std_logic;
        CZI17 : in std_logic;
        CZI18 : in std_logic;
        CZI19 : in std_logic;
        CZI20 : in std_logic;
        CZI21 : in std_logic;
        CZI22 : in std_logic;
        CZI23 : in std_logic;
        CZI24 : in std_logic;
        CZI25 : in std_logic;
        CZI26 : in std_logic;
        CZI27 : in std_logic;
        CZI28 : in std_logic;
        CZI29 : in std_logic;
        CZI30 : in std_logic;
        CZI31 : in std_logic;
        CZI32 : in std_logic;
        CZI33 : in std_logic;
        CZI34 : in std_logic;
        CZI35 : in std_logic;
        CZI36 : in std_logic;
        CZI37 : in std_logic;
        CZI38 : in std_logic;
        CZI39 : in std_logic;
        CZI40 : in std_logic;
        CZI41 : in std_logic;
        CZI42 : in std_logic;
        CZI43 : in std_logic;
        CZI44 : in std_logic;
        CZI45 : in std_logic;
        CZI46 : in std_logic;
        CZI47 : in std_logic;
        CZI48 : in std_logic;
        CZI49 : in std_logic;
        CZI50 : in std_logic;
        CZI51 : in std_logic;
        CZI52 : in std_logic;
        CZI53 : in std_logic;
        CZI54 : in std_logic;
        CZI55 : in std_logic;
        CZI56 : in std_logic;

        CZO1  : out std_logic;
        CZO2  : out std_logic;
        CZO3  : out std_logic;
        CZO4  : out std_logic;
        CZO5  : out std_logic;
        CZO6  : out std_logic;
        CZO7  : out std_logic;
        CZO8  : out std_logic;
        CZO9  : out std_logic;
        CZO10 : out std_logic;
        CZO11 : out std_logic;
        CZO12 : out std_logic;
        CZO13 : out std_logic;
        CZO14 : out std_logic;
        CZO15 : out std_logic;
        CZO16 : out std_logic;
        CZO17 : out std_logic;
        CZO18 : out std_logic;
        CZO19 : out std_logic;
        CZO20 : out std_logic;
        CZO21 : out std_logic;
        CZO22 : out std_logic;
        CZO23 : out std_logic;
        CZO24 : out std_logic;
        CZO25 : out std_logic;
        CZO26 : out std_logic;
        CZO27 : out std_logic;
        CZO28 : out std_logic;
        CZO29 : out std_logic;
        CZO30 : out std_logic;
        CZO31 : out std_logic;
        CZO32 : out std_logic;
        CZO33 : out std_logic;
        CZO34 : out std_logic;
        CZO35 : out std_logic;
        CZO36 : out std_logic;
        CZO37 : out std_logic;
        CZO38 : out std_logic;
        CZO39 : out std_logic;
        CZO40 : out std_logic;
        CZO41 : out std_logic;
        CZO42 : out std_logic;
        CZO43 : out std_logic;
        CZO44 : out std_logic;
        CZO45 : out std_logic;
        CZO46 : out std_logic;
        CZO47 : out std_logic;
        CZO48 : out std_logic;
        CZO49 : out std_logic;
        CZO50 : out std_logic;
        CZO51 : out std_logic;
        CZO52 : out std_logic;
        CZO53 : out std_logic;
        CZO54 : out std_logic;
        CZO55 : out std_logic;
        CZO56 : out std_logic;

        D1    : in std_logic;
        D2    : in std_logic;
        D3    : in std_logic;
        D4    : in std_logic;
        D5    : in std_logic;
        D6    : in std_logic;
        D7    : in std_logic;
        D8    : in std_logic;
        D9    : in std_logic;
        D10   : in std_logic;
        D11   : in std_logic;
        D12   : in std_logic;
        D13   : in std_logic;
        D14   : in std_logic;
        D15   : in std_logic;
        D16   : in std_logic;
        D17   : in std_logic;
        D18   : in std_logic;

        OVF   : out std_logic;
        R     : in std_logic;
        RZ    : in std_logic;
        WE    : in std_logic;
        WEZ   : in std_logic;

        Z1    : out std_logic;
        Z2    : out std_logic;
        Z3    : out std_logic;
        Z4    : out std_logic;
        Z5    : out std_logic;
        Z6    : out std_logic;
        Z7    : out std_logic;
        Z8    : out std_logic;
        Z9    : out std_logic;
        Z10   : out std_logic;
        Z11   : out std_logic;
        Z12   : out std_logic;
        Z13   : out std_logic;
        Z14   : out std_logic;
        Z15   : out std_logic;
        Z16   : out std_logic;
        Z17   : out std_logic;
        Z18   : out std_logic;
        Z19   : out std_logic;
        Z20   : out std_logic;
        Z21   : out std_logic;
        Z22   : out std_logic;
        Z23   : out std_logic;
        Z24   : out std_logic;
        Z25   : out std_logic;
        Z26   : out std_logic;
        Z27   : out std_logic;
        Z28   : out std_logic;
        Z29   : out std_logic;
        Z30   : out std_logic;
        Z31   : out std_logic;
        Z32   : out std_logic;
        Z33   : out std_logic;
        Z34   : out std_logic;
        Z35   : out std_logic;
        Z36   : out std_logic;
        Z37   : out std_logic;
        Z38   : out std_logic;
        Z39   : out std_logic;
        Z40   : out std_logic;
        Z41   : out std_logic;
        Z42   : out std_logic;
        Z43   : out std_logic;
        Z44   : out std_logic;
        Z45   : out std_logic;
        Z46   : out std_logic;
        Z47   : out std_logic;
        Z48   : out std_logic;
        Z49   : out std_logic;
        Z50   : out std_logic;
        Z51   : out std_logic;
        Z52   : out std_logic;
        Z53   : out std_logic;
        Z54   : out std_logic;
        Z55   : out std_logic;
        Z56   : out std_logic
    );
end NX_DSP_U;

architecture NX_RTL of NX_DSP_U is
    attribute NX_TYPE           : string;
    attribute NX_TYPE of NX_RTL : architecture is "PHY";

    attribute NX_USE            : string;
    attribute NX_USE of NX_RTL  : architecture is "NX_DSP_U";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_U_WRAP definition                                                           2020/07/27
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;

entity NX_DSP_U_WRAP is
    generic (
        std_mode    : string                  := "";
        raw_config0 : bit_vector(26 downto 0) := B"000000000000000000000000000"; -- Mux
        raw_config1 : bit_vector(23 downto 0) := B"000000000000000000000000";    -- Pipe Mux
        raw_config2 : bit_vector(13 downto 0) := B"00000000000000";              -- Pipe Reset
        raw_config3 : bit_vector(2 downto 0)  := B"000"                          -- ALU operation
    );
    port (
        A    : in std_logic_vector(23 downto 0);
        B    : in std_logic_vector(17 downto 0);
        C    : in std_logic_vector(35 downto 0);

        CAI  : in std_logic_vector(23 downto 0);
        CAO  : out std_logic_vector(23 downto 0);
        CBI  : in std_logic_vector(17 downto 0);
        CBO  : out std_logic_vector(17 downto 0);

        CCI  : in std_logic;
        CCO  : out std_logic;
        CI   : in std_logic;
        CK   : in std_logic;
        CO43 : out std_logic;
        CO57 : out std_logic;

        CZI  : in std_logic_vector(55 downto 0);
        CZO  : out std_logic_vector(55 downto 0);

        D    : in std_logic_vector(17 downto 0);

        OVF  : out std_logic;
        R    : in std_logic;
        RZ   : in std_logic;
        WE   : in std_logic;
        WEZ  : in std_logic;

        Z    : out std_logic_vector(55 downto 0)
    );
end NX_DSP_U_WRAP;

-- architecture NXP_ARCH of NX_DSP_U_WRAP#{{{#
architecture NXP_ARCH of NX_DSP_U_WRAP is
    attribute NX_TYPE             : string;
    attribute NX_TYPE of NXP_ARCH : architecture is "WRAPPER";

    component NX_DSP_U
        generic (
            std_mode    : string                  := "";
            raw_config0 : bit_vector(26 downto 0) := B"000000000000000000000000000"; -- Mux
            raw_config1 : bit_vector(23 downto 0) := B"000000000000000000000000";    -- Pipe Mux
            raw_config2 : bit_vector(13 downto 0) := B"00000000000000";              -- Pipe Reset
            raw_config3 : bit_vector(2 downto 0)  := B"000"                          -- ALU operation
        );
        port (
            A1    : in std_logic;
            A2    : in std_logic;
            A3    : in std_logic;
            A4    : in std_logic;
            A5    : in std_logic;
            A6    : in std_logic;
            A7    : in std_logic;
            A8    : in std_logic;
            A9    : in std_logic;
            A10   : in std_logic;
            A11   : in std_logic;
            A12   : in std_logic;
            A13   : in std_logic;
            A14   : in std_logic;
            A15   : in std_logic;
            A16   : in std_logic;
            A17   : in std_logic;
            A18   : in std_logic;
            A19   : in std_logic;
            A20   : in std_logic;
            A21   : in std_logic;
            A22   : in std_logic;
            A23   : in std_logic;
            A24   : in std_logic;

            B1    : in std_logic;
            B2    : in std_logic;
            B3    : in std_logic;
            B4    : in std_logic;
            B5    : in std_logic;
            B6    : in std_logic;
            B7    : in std_logic;
            B8    : in std_logic;
            B9    : in std_logic;
            B10   : in std_logic;
            B11   : in std_logic;
            B12   : in std_logic;
            B13   : in std_logic;
            B14   : in std_logic;
            B15   : in std_logic;
            B16   : in std_logic;
            B17   : in std_logic;
            B18   : in std_logic;

            C1    : in std_logic;
            C2    : in std_logic;
            C3    : in std_logic;
            C4    : in std_logic;
            C5    : in std_logic;
            C6    : in std_logic;
            C7    : in std_logic;
            C8    : in std_logic;
            C9    : in std_logic;
            C10   : in std_logic;
            C11   : in std_logic;
            C12   : in std_logic;
            C13   : in std_logic;
            C14   : in std_logic;
            C15   : in std_logic;
            C16   : in std_logic;
            C17   : in std_logic;
            C18   : in std_logic;
            C19   : in std_logic;
            C20   : in std_logic;
            C21   : in std_logic;
            C22   : in std_logic;
            C23   : in std_logic;
            C24   : in std_logic;
            C25   : in std_logic;
            C26   : in std_logic;
            C27   : in std_logic;
            C28   : in std_logic;
            C29   : in std_logic;
            C30   : in std_logic;
            C31   : in std_logic;
            C32   : in std_logic;
            C33   : in std_logic;
            C34   : in std_logic;
            C35   : in std_logic;
            C36   : in std_logic;

            CAI1  : in std_logic;
            CAI2  : in std_logic;
            CAI3  : in std_logic;
            CAI4  : in std_logic;
            CAI5  : in std_logic;
            CAI6  : in std_logic;
            CAI7  : in std_logic;
            CAI8  : in std_logic;
            CAI9  : in std_logic;
            CAI10 : in std_logic;
            CAI11 : in std_logic;
            CAI12 : in std_logic;
            CAI13 : in std_logic;
            CAI14 : in std_logic;
            CAI15 : in std_logic;
            CAI16 : in std_logic;
            CAI17 : in std_logic;
            CAI18 : in std_logic;
            CAI19 : in std_logic;
            CAI20 : in std_logic;
            CAI21 : in std_logic;
            CAI22 : in std_logic;
            CAI23 : in std_logic;
            CAI24 : in std_logic;

            CAO1  : out std_logic;
            CAO2  : out std_logic;
            CAO3  : out std_logic;
            CAO4  : out std_logic;
            CAO5  : out std_logic;
            CAO6  : out std_logic;
            CAO7  : out std_logic;
            CAO8  : out std_logic;
            CAO9  : out std_logic;
            CAO10 : out std_logic;
            CAO11 : out std_logic;
            CAO12 : out std_logic;
            CAO13 : out std_logic;
            CAO14 : out std_logic;
            CAO15 : out std_logic;
            CAO16 : out std_logic;
            CAO17 : out std_logic;
            CAO18 : out std_logic;
            CAO19 : out std_logic;
            CAO20 : out std_logic;
            CAO21 : out std_logic;
            CAO22 : out std_logic;
            CAO23 : out std_logic;
            CAO24 : out std_logic;

            CBI1  : in std_logic;
            CBI2  : in std_logic;
            CBI3  : in std_logic;
            CBI4  : in std_logic;
            CBI5  : in std_logic;
            CBI6  : in std_logic;
            CBI7  : in std_logic;
            CBI8  : in std_logic;
            CBI9  : in std_logic;
            CBI10 : in std_logic;
            CBI11 : in std_logic;
            CBI12 : in std_logic;
            CBI13 : in std_logic;
            CBI14 : in std_logic;
            CBI15 : in std_logic;
            CBI16 : in std_logic;
            CBI17 : in std_logic;
            CBI18 : in std_logic;

            CBO1  : out std_logic;
            CBO2  : out std_logic;
            CBO3  : out std_logic;
            CBO4  : out std_logic;
            CBO5  : out std_logic;
            CBO6  : out std_logic;
            CBO7  : out std_logic;
            CBO8  : out std_logic;
            CBO9  : out std_logic;
            CBO10 : out std_logic;
            CBO11 : out std_logic;
            CBO12 : out std_logic;
            CBO13 : out std_logic;
            CBO14 : out std_logic;
            CBO15 : out std_logic;
            CBO16 : out std_logic;
            CBO17 : out std_logic;
            CBO18 : out std_logic;

            CCI   : in std_logic;
            CCO   : out std_logic;
            CI    : in std_logic;
            CK    : in std_logic;
            CO43  : out std_logic;
            CO57  : out std_logic;

            CZI1  : in std_logic;
            CZI2  : in std_logic;
            CZI3  : in std_logic;
            CZI4  : in std_logic;
            CZI5  : in std_logic;
            CZI6  : in std_logic;
            CZI7  : in std_logic;
            CZI8  : in std_logic;
            CZI9  : in std_logic;
            CZI10 : in std_logic;
            CZI11 : in std_logic;
            CZI12 : in std_logic;
            CZI13 : in std_logic;
            CZI14 : in std_logic;
            CZI15 : in std_logic;
            CZI16 : in std_logic;
            CZI17 : in std_logic;
            CZI18 : in std_logic;
            CZI19 : in std_logic;
            CZI20 : in std_logic;
            CZI21 : in std_logic;
            CZI22 : in std_logic;
            CZI23 : in std_logic;
            CZI24 : in std_logic;
            CZI25 : in std_logic;
            CZI26 : in std_logic;
            CZI27 : in std_logic;
            CZI28 : in std_logic;
            CZI29 : in std_logic;
            CZI30 : in std_logic;
            CZI31 : in std_logic;
            CZI32 : in std_logic;
            CZI33 : in std_logic;
            CZI34 : in std_logic;
            CZI35 : in std_logic;
            CZI36 : in std_logic;
            CZI37 : in std_logic;
            CZI38 : in std_logic;
            CZI39 : in std_logic;
            CZI40 : in std_logic;
            CZI41 : in std_logic;
            CZI42 : in std_logic;
            CZI43 : in std_logic;
            CZI44 : in std_logic;
            CZI45 : in std_logic;
            CZI46 : in std_logic;
            CZI47 : in std_logic;
            CZI48 : in std_logic;
            CZI49 : in std_logic;
            CZI50 : in std_logic;
            CZI51 : in std_logic;
            CZI52 : in std_logic;
            CZI53 : in std_logic;
            CZI54 : in std_logic;
            CZI55 : in std_logic;
            CZI56 : in std_logic;

            CZO1  : out std_logic;
            CZO2  : out std_logic;
            CZO3  : out std_logic;
            CZO4  : out std_logic;
            CZO5  : out std_logic;
            CZO6  : out std_logic;
            CZO7  : out std_logic;
            CZO8  : out std_logic;
            CZO9  : out std_logic;
            CZO10 : out std_logic;
            CZO11 : out std_logic;
            CZO12 : out std_logic;
            CZO13 : out std_logic;
            CZO14 : out std_logic;
            CZO15 : out std_logic;
            CZO16 : out std_logic;
            CZO17 : out std_logic;
            CZO18 : out std_logic;
            CZO19 : out std_logic;
            CZO20 : out std_logic;
            CZO21 : out std_logic;
            CZO22 : out std_logic;
            CZO23 : out std_logic;
            CZO24 : out std_logic;
            CZO25 : out std_logic;
            CZO26 : out std_logic;
            CZO27 : out std_logic;
            CZO28 : out std_logic;
            CZO29 : out std_logic;
            CZO30 : out std_logic;
            CZO31 : out std_logic;
            CZO32 : out std_logic;
            CZO33 : out std_logic;
            CZO34 : out std_logic;
            CZO35 : out std_logic;
            CZO36 : out std_logic;
            CZO37 : out std_logic;
            CZO38 : out std_logic;
            CZO39 : out std_logic;
            CZO40 : out std_logic;
            CZO41 : out std_logic;
            CZO42 : out std_logic;
            CZO43 : out std_logic;
            CZO44 : out std_logic;
            CZO45 : out std_logic;
            CZO46 : out std_logic;
            CZO47 : out std_logic;
            CZO48 : out std_logic;
            CZO49 : out std_logic;
            CZO50 : out std_logic;
            CZO51 : out std_logic;
            CZO52 : out std_logic;
            CZO53 : out std_logic;
            CZO54 : out std_logic;
            CZO55 : out std_logic;
            CZO56 : out std_logic;

            D1    : in std_logic;
            D2    : in std_logic;
            D3    : in std_logic;
            D4    : in std_logic;
            D5    : in std_logic;
            D6    : in std_logic;
            D7    : in std_logic;
            D8    : in std_logic;
            D9    : in std_logic;
            D10   : in std_logic;
            D11   : in std_logic;
            D12   : in std_logic;
            D13   : in std_logic;
            D14   : in std_logic;
            D15   : in std_logic;
            D16   : in std_logic;
            D17   : in std_logic;
            D18   : in std_logic;

            OVF   : out std_logic;
            R     : in std_logic;
            RZ    : in std_logic;
            WE    : in std_logic;
            WEZ   : in std_logic;

            Z1    : out std_logic;
            Z2    : out std_logic;
            Z3    : out std_logic;
            Z4    : out std_logic;
            Z5    : out std_logic;
            Z6    : out std_logic;
            Z7    : out std_logic;
            Z8    : out std_logic;
            Z9    : out std_logic;
            Z10   : out std_logic;
            Z11   : out std_logic;
            Z12   : out std_logic;
            Z13   : out std_logic;
            Z14   : out std_logic;
            Z15   : out std_logic;
            Z16   : out std_logic;
            Z17   : out std_logic;
            Z18   : out std_logic;
            Z19   : out std_logic;
            Z20   : out std_logic;
            Z21   : out std_logic;
            Z22   : out std_logic;
            Z23   : out std_logic;
            Z24   : out std_logic;
            Z25   : out std_logic;
            Z26   : out std_logic;
            Z27   : out std_logic;
            Z28   : out std_logic;
            Z29   : out std_logic;
            Z30   : out std_logic;
            Z31   : out std_logic;
            Z32   : out std_logic;
            Z33   : out std_logic;
            Z34   : out std_logic;
            Z35   : out std_logic;
            Z36   : out std_logic;
            Z37   : out std_logic;
            Z38   : out std_logic;
            Z39   : out std_logic;
            Z40   : out std_logic;
            Z41   : out std_logic;
            Z42   : out std_logic;
            Z43   : out std_logic;
            Z44   : out std_logic;
            Z45   : out std_logic;
            Z46   : out std_logic;
            Z47   : out std_logic;
            Z48   : out std_logic;
            Z49   : out std_logic;
            Z50   : out std_logic;
            Z51   : out std_logic;
            Z52   : out std_logic;
            Z53   : out std_logic;
            Z54   : out std_logic;
            Z55   : out std_logic;
            Z56   : out std_logic
        );
    end component;

begin

    dsp : NX_DSP_U generic map(
        std_mode    => std_mode,
        raw_config0 => raw_config0,
        raw_config1 => raw_config1,
        raw_config2 => raw_config2,
        raw_config3 => raw_config3)
    port map(
        A1    => A(0),
        A2    => A(1),
        A3    => A(2),
        A4    => A(3),
        A5    => A(4),
        A6    => A(5),
        A7    => A(6),
        A8    => A(7),
        A9    => A(8),
        A10   => A(9),
        A11   => A(10),
        A12   => A(11),
        A13   => A(12),
        A14   => A(13),
        A15   => A(14),
        A16   => A(15),
        A17   => A(16),
        A18   => A(17),
        A19   => A(18),
        A20   => A(19),
        A21   => A(20),
        A22   => A(21),
        A23   => A(22),
        A24   => A(23),

        B1    => B(0),
        B2    => B(1),
        B3    => B(2),
        B4    => B(3),
        B5    => B(4),
        B6    => B(5),
        B7    => B(6),
        B8    => B(7),
        B9    => B(8),
        B10   => B(9),
        B11   => B(10),
        B12   => B(11),
        B13   => B(12),
        B14   => B(13),
        B15   => B(14),
        B16   => B(15),
        B17   => B(16),
        B18   => B(17),

        C1    => C(0),
        C2    => C(1),
        C3    => C(2),
        C4    => C(3),
        C5    => C(4),
        C6    => C(5),
        C7    => C(6),
        C8    => C(7),
        C9    => C(8),
        C10   => C(9),
        C11   => C(10),
        C12   => C(11),
        C13   => C(12),
        C14   => C(13),
        C15   => C(14),
        C16   => C(15),
        C17   => C(16),
        C18   => C(17),
        C19   => C(18),
        C20   => C(19),
        C21   => C(20),
        C22   => C(21),
        C23   => C(22),
        C24   => C(23),
        C25   => C(24),
        C26   => C(25),
        C27   => C(26),
        C28   => C(27),
        C29   => C(28),
        C30   => C(29),
        C31   => C(30),
        C32   => C(31),
        C33   => C(32),
        C34   => C(33),
        C35   => C(34),
        C36   => C(35),

        CAI1  => CAI(0),
        CAI2  => CAI(1),
        CAI3  => CAI(2),
        CAI4  => CAI(3),
        CAI5  => CAI(4),
        CAI6  => CAI(5),
        CAI7  => CAI(6),
        CAI8  => CAI(7),
        CAI9  => CAI(8),
        CAI10 => CAI(9),
        CAI11 => CAI(10),
        CAI12 => CAI(11),
        CAI13 => CAI(12),
        CAI14 => CAI(13),
        CAI15 => CAI(14),
        CAI16 => CAI(15),
        CAI17 => CAI(16),
        CAI18 => CAI(17),
        CAI19 => CAI(18),
        CAI20 => CAI(19),
        CAI21 => CAI(20),
        CAI22 => CAI(21),
        CAI23 => CAI(22),
        CAI24 => CAI(23),

        CAO1  => CAO(0),
        CAO2  => CAO(1),
        CAO3  => CAO(2),
        CAO4  => CAO(3),
        CAO5  => CAO(4),
        CAO6  => CAO(5),
        CAO7  => CAO(6),
        CAO8  => CAO(7),
        CAO9  => CAO(8),
        CAO10 => CAO(9),
        CAO11 => CAO(10),
        CAO12 => CAO(11),
        CAO13 => CAO(12),
        CAO14 => CAO(13),
        CAO15 => CAO(14),
        CAO16 => CAO(15),
        CAO17 => CAO(16),
        CAO18 => CAO(17),
        CAO19 => CAO(18),
        CAO20 => CAO(19),
        CAO21 => CAO(20),
        CAO22 => CAO(21),
        CAO23 => CAO(22),
        CAO24 => CAO(23),

        CBI1  => CBI(0),
        CBI2  => CBI(1),
        CBI3  => CBI(2),
        CBI4  => CBI(3),
        CBI5  => CBI(4),
        CBI6  => CBI(5),
        CBI7  => CBI(6),
        CBI8  => CBI(7),
        CBI9  => CBI(8),
        CBI10 => CBI(9),
        CBI11 => CBI(10),
        CBI12 => CBI(11),
        CBI13 => CBI(12),
        CBI14 => CBI(13),
        CBI15 => CBI(14),
        CBI16 => CBI(15),
        CBI17 => CBI(16),
        CBI18 => CBI(17),

        CBO1  => CBO(0),
        CBO2  => CBO(1),
        CBO3  => CBO(2),
        CBO4  => CBO(3),
        CBO5  => CBO(4),
        CBO6  => CBO(5),
        CBO7  => CBO(6),
        CBO8  => CBO(7),
        CBO9  => CBO(8),
        CBO10 => CBO(9),
        CBO11 => CBO(10),
        CBO12 => CBO(11),
        CBO13 => CBO(12),
        CBO14 => CBO(13),
        CBO15 => CBO(14),
        CBO16 => CBO(15),
        CBO17 => CBO(16),
        CBO18 => CBO(17),

        CCI   => CCI,
        CCO   => CCO,
        CI    => CI,
        CK    => CK,
        CO43  => CO43,
        CO57  => CO57,

        CZI1  => CZI(0),
        CZI2  => CZI(1),
        CZI3  => CZI(2),
        CZI4  => CZI(3),
        CZI5  => CZI(4),
        CZI6  => CZI(5),
        CZI7  => CZI(6),
        CZI8  => CZI(7),
        CZI9  => CZI(8),
        CZI10 => CZI(9),
        CZI11 => CZI(10),
        CZI12 => CZI(11),
        CZI13 => CZI(12),
        CZI14 => CZI(13),
        CZI15 => CZI(14),
        CZI16 => CZI(15),
        CZI17 => CZI(16),
        CZI18 => CZI(17),
        CZI19 => CZI(18),
        CZI20 => CZI(19),
        CZI21 => CZI(20),
        CZI22 => CZI(21),
        CZI23 => CZI(22),
        CZI24 => CZI(23),
        CZI25 => CZI(24),
        CZI26 => CZI(25),
        CZI27 => CZI(26),
        CZI28 => CZI(27),
        CZI29 => CZI(28),
        CZI30 => CZI(29),
        CZI31 => CZI(30),
        CZI32 => CZI(31),
        CZI33 => CZI(32),
        CZI34 => CZI(33),
        CZI35 => CZI(34),
        CZI36 => CZI(35),
        CZI37 => CZI(36),
        CZI38 => CZI(37),
        CZI39 => CZI(38),
        CZI40 => CZI(39),
        CZI41 => CZI(40),
        CZI42 => CZI(41),
        CZI43 => CZI(42),
        CZI44 => CZI(43),
        CZI45 => CZI(44),
        CZI46 => CZI(45),
        CZI47 => CZI(46),
        CZI48 => CZI(47),
        CZI49 => CZI(48),
        CZI50 => CZI(49),
        CZI51 => CZI(50),
        CZI52 => CZI(51),
        CZI53 => CZI(52),
        CZI54 => CZI(53),
        CZI55 => CZI(54),
        CZI56 => CZI(55),

        CZO1  => CZO(0),
        CZO2  => CZO(1),
        CZO3  => CZO(2),
        CZO4  => CZO(3),
        CZO5  => CZO(4),
        CZO6  => CZO(5),
        CZO7  => CZO(6),
        CZO8  => CZO(7),
        CZO9  => CZO(8),
        CZO10 => CZO(9),
        CZO11 => CZO(10),
        CZO12 => CZO(11),
        CZO13 => CZO(12),
        CZO14 => CZO(13),
        CZO15 => CZO(14),
        CZO16 => CZO(15),
        CZO17 => CZO(16),
        CZO18 => CZO(17),
        CZO19 => CZO(18),
        CZO20 => CZO(19),
        CZO21 => CZO(20),
        CZO22 => CZO(21),
        CZO23 => CZO(22),
        CZO24 => CZO(23),
        CZO25 => CZO(24),
        CZO26 => CZO(25),
        CZO27 => CZO(26),
        CZO28 => CZO(27),
        CZO29 => CZO(28),
        CZO30 => CZO(29),
        CZO31 => CZO(30),
        CZO32 => CZO(31),
        CZO33 => CZO(32),
        CZO34 => CZO(33),
        CZO35 => CZO(34),
        CZO36 => CZO(35),
        CZO37 => CZO(36),
        CZO38 => CZO(37),
        CZO39 => CZO(38),
        CZO40 => CZO(39),
        CZO41 => CZO(40),
        CZO42 => CZO(41),
        CZO43 => CZO(42),
        CZO44 => CZO(43),
        CZO45 => CZO(44),
        CZO46 => CZO(45),
        CZO47 => CZO(46),
        CZO48 => CZO(47),
        CZO49 => CZO(48),
        CZO50 => CZO(49),
        CZO51 => CZO(50),
        CZO52 => CZO(51),
        CZO53 => CZO(52),
        CZO54 => CZO(53),
        CZO55 => CZO(54),
        CZO56 => CZO(55),

        D1    => D(0),
        D2    => D(1),
        D3    => D(2),
        D4    => D(3),
        D5    => D(4),
        D6    => D(5),
        D7    => D(6),
        D8    => D(7),
        D9    => D(8),
        D10   => D(9),
        D11   => D(10),
        D12   => D(11),
        D13   => D(12),
        D14   => D(13),
        D15   => D(14),
        D16   => D(15),
        D17   => D(16),
        D18   => D(17),

        OVF   => OVF,
        R     => R,
        RZ    => RZ,
        WE    => WE,
        WEZ   => WEZ,

        Z1    => Z(0),
        Z2    => Z(1),
        Z3    => Z(2),
        Z4    => Z(3),
        Z5    => Z(4),
        Z6    => Z(5),
        Z7    => Z(6),
        Z8    => Z(7),
        Z9    => Z(8),
        Z10   => Z(9),
        Z11   => Z(10),
        Z12   => Z(11),
        Z13   => Z(12),
        Z14   => Z(13),
        Z15   => Z(14),
        Z16   => Z(15),
        Z17   => Z(16),
        Z18   => Z(17),
        Z19   => Z(18),
        Z20   => Z(19),
        Z21   => Z(20),
        Z22   => Z(21),
        Z23   => Z(22),
        Z24   => Z(23),
        Z25   => Z(24),
        Z26   => Z(25),
        Z27   => Z(26),
        Z28   => Z(27),
        Z29   => Z(28),
        Z30   => Z(29),
        Z31   => Z(30),
        Z32   => Z(31),
        Z33   => Z(32),
        Z34   => Z(33),
        Z35   => Z(34),
        Z36   => Z(35),
        Z37   => Z(36),
        Z38   => Z(37),
        Z39   => Z(38),
        Z40   => Z(39),
        Z41   => Z(40),
        Z42   => Z(41),
        Z43   => Z(42),
        Z44   => Z(43),
        Z45   => Z(44),
        Z46   => Z(45),
        Z47   => Z(46),
        Z48   => Z(47),
        Z49   => Z(48),
        Z50   => Z(49),
        Z51   => Z(50),
        Z52   => Z(51),
        Z53   => Z(52),
        Z54   => Z(53),
        Z55   => Z(54),
        Z56   => Z(55)
    );

end NXP_ARCH;
-- #}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_U_SPLIT definition                                                          2020/07/27
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.all;
use IEEE.STD_LOGIC_signed.all;

entity NX_DSP_U_SPLIT is
    generic (
        -------------------------------------------------------------------------
        -- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
        ------------------------------------------------------------------------- 
        SIGNED_MODE        : bit                    := '0';
        INV_WE             : bit                    := '0';
        INV_WEZ            : bit                    := '0';
        INV_RST            : bit                    := '0';
        INV_RSTZ           : bit                    := '0';
        ALU_DYNAMIC_OP     : bit_vector(1 downto 0) := B"00";     -- "00" for Static,
        -- "-1" for Dynamic control from C
        -- "10" for Dynamic control from D
        SATURATION_RANK    : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB on Z and CZO result
        --(to define saturation and overflow)
        ENABLE_SATURATION  : bit                    := '0';       -- '0' for Disable,  '1' for Enable
        MUX_CCO            : bit                    := '0';       -- '0' for CC0 = ALU(42), '1' for CCO = ALU(56)
        MUX_Z              : bit                    := '0';       -- Select Z output. '0' for Y, '1' Saturation / ALU
        MUX_CZ             : bit                    := '0';       -- Select MUX_CZ input. '0' for CZI, '1' for CZO
        MUX_Y              : bit                    := '0';       -- Select ALU's Y input. '0' for MULT output, '1' for (B & A)
        MUX_X              : bit_vector(2 downto 0) := B"000";    -- Select MUX_X operation
        -- "000" for c[33:0]&d[41:34],
        -- "001" for C
        -- "010" for MUX_X[39:0]&C[15:0]
        -- "011" for MUX_X
        -- "100" for MUX_X >> 6
        -- "101" for MUX_X >> 12
        -- "110" for MUX_X >> 17
        -- "111" for MUX_X >> 18
        MUX_CCI            : bit                    := '0';       -- Select '1' input of CI mux. '0' for CCI, '1' for CO_feddback
        MUX_CI             : bit                    := '0';       -- Select input carry of ALU. '0' for CI, '1' for CCI/CO_feedback mux
        MUX_P              : bit                    := '0';       -- '1' for PRE_ADDER, '0' for B input
        MUX_B              : bit                    := '0';       -- '0' = B input, '1' = CBI input
        MUX_A              : bit                    := '0';       -- '0' = A input, '1' = CAI input
        PRE_ADDER_OP       : bit                    := '0';       -- '0' = Additon, '1' = Subraction

        -------------------------------------------------------------------------
        -- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
        -------------------------------------------------------------------------
        PR_WE_MUX          : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_WEZ_MUX         : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_RST_MUX         : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_RSTZ_MUX        : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_OV_MUX          : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_CO_MUX          : bit                    := '0';       -- Registered carry out (CO42 & CO56)
        PR_CCO_MUX         : bit                    := '0';       -- Registered cascade carry out
        PR_Z_MUX           : bit                    := '0';       -- Registered output
        PR_CZ_MUX          : bit                    := '0';       -- Registered cascade output
        PR_Y_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_X_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_CI_MUX          : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_MULT_MUX        : bit                    := '0';       -- No pipe reg  -- Register inside MULT
        PR_P_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
        PR_D_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_C_MUX           : bit                    := '0';       -- '0' for No pipe reg, '1' for 1 pipe reg
        PR_B_CASCADE_MUX   : bit_vector(1 downto 0) := B"00";     -- Number of pipe reg levels for CAO output. "-0" for 0 level, "01" for 1 level, "11" for 2 levels
        PR_B_MUX           : bit_vector(1 downto 0) := B"00";     -- Number of pipe reg levels on B input. "-0" for 0 level, "01" for 1 level, "11" for 2 levels
        PR_A_CASCADE_MUX   : bit_vector(1 downto 0) := B"00";     -- Number of pipe reg levels for CAO output. "-0" for 0 level, "01" for 1 level, "11" for 2 levels
        PR_A_MUX           : bit_vector(1 downto 0) := B"00";     -- Number of pipe reg levels on A input. "-0" for 0 level, "01" for 1 level, "11" for 2 levels
        -------------------------------------------------------------------------
        -- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
        -------------------------------------------------------------------------
        ENABLE_PR_OV_RST   : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_CO_RST   : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_CCO_RST  : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_Z_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_CZ_RST   : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_Y_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_X_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_CI_RST   : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_MULT_RST : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_P_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_D_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_C_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_B_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        ENABLE_PR_A_RST    : bit                    := '0';       -- '0' for Disable, '1' for Enable 
        -- PR_CZ_INIT         : bit_vector(5 downto 0) := B"000000"; -- Value of CZ's pipe register on reset

        -------------------------------------------------------------------------
        -- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
        -------------------------------------------------------------------------
        ALU_OP             : bit_vector(2 downto 0) := B"000"     -- ALU operation
        -- x+y+c    = "000"
        -- x-y-c    = "001"
        -- x-y+c-1  = "010"
        -- x+y-c+1  = "011"
        -- -x-y-c-1 = "100"
        -- -x+y+c-1 = "101"
        -- -x+y-c   = "110"
        -- -x-y+c-2 = "111"
    );
    port (
        CK   : in std_logic;
        R    : in std_logic;
        RZ   : in std_logic;
        WE   : in std_logic;
        WEZ  : in std_logic;

        CI   : in std_logic; -- cy_i
        A    : in std_logic_vector(23 downto 0);
        B    : in std_logic_vector(17 downto 0);
        C    : in std_logic_vector(35 downto 0);
        D    : in std_logic_vector(17 downto 0);
        CAI  : in std_logic_vector(23 downto 0);
        CBI  : in std_logic_vector(17 downto 0);
        CZI  : in std_logic_vector(55 downto 0);
        CCI  : in std_logic; -- ccy_i

        Z    : out std_logic_vector(55 downto 0);
        CO42 : out std_logic; -- cy42_o
        CO56 : out std_logic; -- cy56_o
        OVF  : out std_logic;
        CAO  : out std_logic_vector(23 downto 0);
        CBO  : out std_logic_vector(17 downto 0);
        CZO  : out std_logic_vector(55 downto 0);
        CCO  : out std_logic -- ccy_o
    );
end NX_DSP_U_SPLIT;

-- architecture NX_RTL of NX_DSP_U_SPLIT#{{{#
architecture NX_RTL of NX_DSP_U_SPLIT is

    ----------------------------------------------------------
    -- Internal signals to be mapped to the NX_DSP_U component
    ----------------------------------------------------------
        signal A1                : std_logic := '0';
        signal A2                : std_logic := '0';
        signal A3                : std_logic := '0';
        signal A4                : std_logic := '0';
        signal A5                : std_logic := '0';
        signal A6                : std_logic := '0';
        signal A7                : std_logic := '0';
        signal A8                : std_logic := '0';
        signal A9                : std_logic := '0';
        signal A10               : std_logic := '0';
        signal A11               : std_logic := '0';
        signal A12               : std_logic := '0';
        signal A13               : std_logic := '0';
        signal A14               : std_logic := '0';
        signal A15               : std_logic := '0';
        signal A16               : std_logic := '0';
        signal A17               : std_logic := '0';
        signal A18               : std_logic := '0';
        signal A19               : std_logic := '0';
        signal A20               : std_logic := '0';
        signal A21               : std_logic := '0';
        signal A22               : std_logic := '0';
        signal A23               : std_logic := '0';
        signal A24               : std_logic := '0';

        signal B1                : std_logic := '0';
        signal B2                : std_logic := '0';
        signal B3                : std_logic := '0';
        signal B4                : std_logic := '0';
        signal B5                : std_logic := '0';
        signal B6                : std_logic := '0';
        signal B7                : std_logic := '0';
        signal B8                : std_logic := '0';
        signal B9                : std_logic := '0';
        signal B10               : std_logic := '0';
        signal B11               : std_logic := '0';
        signal B12               : std_logic := '0';
        signal B13               : std_logic := '0';
        signal B14               : std_logic := '0';
        signal B15               : std_logic := '0';
        signal B16               : std_logic := '0';
        signal B17               : std_logic := '0';
        signal B18               : std_logic := '0';

        signal C1                : std_logic := '0';
        signal C2                : std_logic := '0';
        signal C3                : std_logic := '0';
        signal C4                : std_logic := '0';
        signal C5                : std_logic := '0';
        signal C6                : std_logic := '0';
        signal C7                : std_logic := '0';
        signal C8                : std_logic := '0';
        signal C9                : std_logic := '0';
        signal C10               : std_logic := '0';
        signal C11               : std_logic := '0';
        signal C12               : std_logic := '0';
        signal C13               : std_logic := '0';
        signal C14               : std_logic := '0';
        signal C15               : std_logic := '0';
        signal C16               : std_logic := '0';
        signal C17               : std_logic := '0';
        signal C18               : std_logic := '0';
        signal C19               : std_logic := '0';
        signal C20               : std_logic := '0';
        signal C21               : std_logic := '0';
        signal C22               : std_logic := '0';
        signal C23               : std_logic := '0';
        signal C24               : std_logic := '0';
        signal C25               : std_logic := '0';
        signal C26               : std_logic := '0';
        signal C27               : std_logic := '0';
        signal C28               : std_logic := '0';
        signal C29               : std_logic := '0';
        signal C30               : std_logic := '0';
        signal C31               : std_logic := '0';
        signal C32               : std_logic := '0';
        signal C33               : std_logic := '0';
        signal C34               : std_logic := '0';
        signal C35               : std_logic := '0';
        signal C36               : std_logic := '0';

        signal CAI1              : std_logic := '0';
        signal CAI2              : std_logic := '0';
        signal CAI3              : std_logic := '0';
        signal CAI4              : std_logic := '0';
        signal CAI5              : std_logic := '0';
        signal CAI6              : std_logic := '0';
        signal CAI7              : std_logic := '0';
        signal CAI8              : std_logic := '0';
        signal CAI9              : std_logic := '0';
        signal CAI10             : std_logic := '0';
        signal CAI11             : std_logic := '0';
        signal CAI12             : std_logic := '0';
        signal CAI13             : std_logic := '0';
        signal CAI14             : std_logic := '0';
        signal CAI15             : std_logic := '0';
        signal CAI16             : std_logic := '0';
        signal CAI17             : std_logic := '0';
        signal CAI18             : std_logic := '0';
        signal CAI19             : std_logic := '0';
        signal CAI20             : std_logic := '0';
        signal CAI21             : std_logic := '0';
        signal CAI22             : std_logic := '0';
        signal CAI23             : std_logic := '0';
        signal CAI24             : std_logic := '0';

        signal CAO1              : std_logic := '0';
        signal CAO2              : std_logic := '0';
        signal CAO3              : std_logic := '0';
        signal CAO4              : std_logic := '0';
        signal CAO5              : std_logic := '0';
        signal CAO6              : std_logic := '0';
        signal CAO7              : std_logic := '0';
        signal CAO8              : std_logic := '0';
        signal CAO9              : std_logic := '0';
        signal CAO10             : std_logic := '0';
        signal CAO11             : std_logic := '0';
        signal CAO12             : std_logic := '0';
        signal CAO13             : std_logic := '0';
        signal CAO14             : std_logic := '0';
        signal CAO15             : std_logic := '0';
        signal CAO16             : std_logic := '0';
        signal CAO17             : std_logic := '0';
        signal CAO18             : std_logic := '0';
        signal CAO19             : std_logic := '0';
        signal CAO20             : std_logic := '0';
        signal CAO21             : std_logic := '0';
        signal CAO22             : std_logic := '0';
        signal CAO23             : std_logic := '0';
        signal CAO24             : std_logic := '0';

        signal CBI1              : std_logic := '0';
        signal CBI2              : std_logic := '0';
        signal CBI3              : std_logic := '0';
        signal CBI4              : std_logic := '0';
        signal CBI5              : std_logic := '0';
        signal CBI6              : std_logic := '0';
        signal CBI7              : std_logic := '0';
        signal CBI8              : std_logic := '0';
        signal CBI9              : std_logic := '0';
        signal CBI10             : std_logic := '0';
        signal CBI11             : std_logic := '0';
        signal CBI12             : std_logic := '0';
        signal CBI13             : std_logic := '0';
        signal CBI14             : std_logic := '0';
        signal CBI15             : std_logic := '0';
        signal CBI16             : std_logic := '0';
        signal CBI17             : std_logic := '0';
        signal CBI18             : std_logic := '0';

        signal CBO1              : std_logic := '0';
        signal CBO2              : std_logic := '0';
        signal CBO3              : std_logic := '0';
        signal CBO4              : std_logic := '0';
        signal CBO5              : std_logic := '0';
        signal CBO6              : std_logic := '0';
        signal CBO7              : std_logic := '0';
        signal CBO8              : std_logic := '0';
        signal CBO9              : std_logic := '0';
        signal CBO10             : std_logic := '0';
        signal CBO11             : std_logic := '0';
        signal CBO12             : std_logic := '0';
        signal CBO13             : std_logic := '0';
        signal CBO14             : std_logic := '0';
        signal CBO15             : std_logic := '0';
        signal CBO16             : std_logic := '0';
        signal CBO17             : std_logic := '0';
        signal CBO18             : std_logic := '0';

        signal CO43              : std_logic := '0';
        signal CO57              : std_logic := '0';

        signal CZI1              : std_logic := '0';
        signal CZI2              : std_logic := '0';
        signal CZI3              : std_logic := '0';
        signal CZI4              : std_logic := '0';
        signal CZI5              : std_logic := '0';
        signal CZI6              : std_logic := '0';
        signal CZI7              : std_logic := '0';
        signal CZI8              : std_logic := '0';
        signal CZI9              : std_logic := '0';
        signal CZI10             : std_logic := '0';
        signal CZI11             : std_logic := '0';
        signal CZI12             : std_logic := '0';
        signal CZI13             : std_logic := '0';
        signal CZI14             : std_logic := '0';
        signal CZI15             : std_logic := '0';
        signal CZI16             : std_logic := '0';
        signal CZI17             : std_logic := '0';
        signal CZI18             : std_logic := '0';
        signal CZI19             : std_logic := '0';
        signal CZI20             : std_logic := '0';
        signal CZI21             : std_logic := '0';
        signal CZI22             : std_logic := '0';
        signal CZI23             : std_logic := '0';
        signal CZI24             : std_logic := '0';
        signal CZI25             : std_logic := '0';
        signal CZI26             : std_logic := '0';
        signal CZI27             : std_logic := '0';
        signal CZI28             : std_logic := '0';
        signal CZI29             : std_logic := '0';
        signal CZI30             : std_logic := '0';
        signal CZI31             : std_logic := '0';
        signal CZI32             : std_logic := '0';
        signal CZI33             : std_logic := '0';
        signal CZI34             : std_logic := '0';
        signal CZI35             : std_logic := '0';
        signal CZI36             : std_logic := '0';
        signal CZI37             : std_logic := '0';
        signal CZI38             : std_logic := '0';
        signal CZI39             : std_logic := '0';
        signal CZI40             : std_logic := '0';
        signal CZI41             : std_logic := '0';
        signal CZI42             : std_logic := '0';
        signal CZI43             : std_logic := '0';
        signal CZI44             : std_logic := '0';
        signal CZI45             : std_logic := '0';
        signal CZI46             : std_logic := '0';
        signal CZI47             : std_logic := '0';
        signal CZI48             : std_logic := '0';
        signal CZI49             : std_logic := '0';
        signal CZI50             : std_logic := '0';
        signal CZI51             : std_logic := '0';
        signal CZI52             : std_logic := '0';
        signal CZI53             : std_logic := '0';
        signal CZI54             : std_logic := '0';
        signal CZI55             : std_logic := '0';
        signal CZI56             : std_logic := '0';

        signal CZO1              : std_logic := '0';
        signal CZO2              : std_logic := '0';
        signal CZO3              : std_logic := '0';
        signal CZO4              : std_logic := '0';
        signal CZO5              : std_logic := '0';
        signal CZO6              : std_logic := '0';
        signal CZO7              : std_logic := '0';
        signal CZO8              : std_logic := '0';
        signal CZO9              : std_logic := '0';
        signal CZO10             : std_logic := '0';
        signal CZO11             : std_logic := '0';
        signal CZO12             : std_logic := '0';
        signal CZO13             : std_logic := '0';
        signal CZO14             : std_logic := '0';
        signal CZO15             : std_logic := '0';
        signal CZO16             : std_logic := '0';
        signal CZO17             : std_logic := '0';
        signal CZO18             : std_logic := '0';
        signal CZO19             : std_logic := '0';
        signal CZO20             : std_logic := '0';
        signal CZO21             : std_logic := '0';
        signal CZO22             : std_logic := '0';
        signal CZO23             : std_logic := '0';
        signal CZO24             : std_logic := '0';
        signal CZO25             : std_logic := '0';
        signal CZO26             : std_logic := '0';
        signal CZO27             : std_logic := '0';
        signal CZO28             : std_logic := '0';
        signal CZO29             : std_logic := '0';
        signal CZO30             : std_logic := '0';
        signal CZO31             : std_logic := '0';
        signal CZO32             : std_logic := '0';
        signal CZO33             : std_logic := '0';
        signal CZO34             : std_logic := '0';
        signal CZO35             : std_logic := '0';
        signal CZO36             : std_logic := '0';
        signal CZO37             : std_logic := '0';
        signal CZO38             : std_logic := '0';
        signal CZO39             : std_logic := '0';
        signal CZO40             : std_logic := '0';
        signal CZO41             : std_logic := '0';
        signal CZO42             : std_logic := '0';
        signal CZO43             : std_logic := '0';
        signal CZO44             : std_logic := '0';
        signal CZO45             : std_logic := '0';
        signal CZO46             : std_logic := '0';
        signal CZO47             : std_logic := '0';
        signal CZO48             : std_logic := '0';
        signal CZO49             : std_logic := '0';
        signal CZO50             : std_logic := '0';
        signal CZO51             : std_logic := '0';
        signal CZO52             : std_logic := '0';
        signal CZO53             : std_logic := '0';
        signal CZO54             : std_logic := '0';
        signal CZO55             : std_logic := '0';
        signal CZO56             : std_logic := '0';

        signal D1                : std_logic := '0';
        signal D2                : std_logic := '0';
        signal D3                : std_logic := '0';
        signal D4                : std_logic := '0';
        signal D5                : std_logic := '0';
        signal D6                : std_logic := '0';
        signal D7                : std_logic := '0';
        signal D8                : std_logic := '0';
        signal D9                : std_logic := '0';
        signal D10               : std_logic := '0';
        signal D11               : std_logic := '0';
        signal D12               : std_logic := '0';
        signal D13               : std_logic := '0';
        signal D14               : std_logic := '0';
        signal D15               : std_logic := '0';
        signal D16               : std_logic := '0';
        signal D17               : std_logic := '0';
        signal D18               : std_logic := '0';

        signal Z1                : std_logic := '0';
        signal Z2                : std_logic := '0';
        signal Z3                : std_logic := '0';
        signal Z4                : std_logic := '0';
        signal Z5                : std_logic := '0';
        signal Z6                : std_logic := '0';
        signal Z7                : std_logic := '0';
        signal Z8                : std_logic := '0';
        signal Z9                : std_logic := '0';
        signal Z10               : std_logic := '0';
        signal Z11               : std_logic := '0';
        signal Z12               : std_logic := '0';
        signal Z13               : std_logic := '0';
        signal Z14               : std_logic := '0';
        signal Z15               : std_logic := '0';
        signal Z16               : std_logic := '0';
        signal Z17               : std_logic := '0';
        signal Z18               : std_logic := '0';
        signal Z19               : std_logic := '0';
        signal Z20               : std_logic := '0';
        signal Z21               : std_logic := '0';
        signal Z22               : std_logic := '0';
        signal Z23               : std_logic := '0';
        signal Z24               : std_logic := '0';
        signal Z25               : std_logic := '0';
        signal Z26               : std_logic := '0';
        signal Z27               : std_logic := '0';
        signal Z28               : std_logic := '0';
        signal Z29               : std_logic := '0';
        signal Z30               : std_logic := '0';
        signal Z31               : std_logic := '0';
        signal Z32               : std_logic := '0';
        signal Z33               : std_logic := '0';
        signal Z34               : std_logic := '0';
        signal Z35               : std_logic := '0';
        signal Z36               : std_logic := '0';
        signal Z37               : std_logic := '0';
        signal Z38               : std_logic := '0';
        signal Z39               : std_logic := '0';
        signal Z40               : std_logic := '0';
        signal Z41               : std_logic := '0';
        signal Z42               : std_logic := '0';
        signal Z43               : std_logic := '0';
        signal Z44               : std_logic := '0';
        signal Z45               : std_logic := '0';
        signal Z46               : std_logic := '0';
        signal Z47               : std_logic := '0';
        signal Z48               : std_logic := '0';
        signal Z49               : std_logic := '0';
        signal Z50               : std_logic := '0';
        signal Z51               : std_logic := '0';
        signal Z52               : std_logic := '0';
        signal Z53               : std_logic := '0';
        signal Z54               : std_logic := '0';
        signal Z55               : std_logic := '0';

    constant raw_config0_gen : bit_vector(26 downto 0)
    := INV_WE & INV_WEZ & INV_RST & INV_RSTZ & MUX_CCO & ALU_DYNAMIC_OP & SATURATION_RANK
     & ENABLE_SATURATION & MUX_Z & MUX_CCI & MUX_CI & MUX_Y & MUX_CZ & MUX_X & MUX_P
     & MUX_B & MUX_A & PRE_ADDER_OP & SIGNED_MODE;

    constant raw_config1_gen : bit_vector(23 downto 0)
    := PR_WE_MUX & PR_WEZ_MUX & PR_RST_MUX & PR_RSTZ_MUX & PR_OV_MUX & PR_CO_MUX & PR_CCO_MUX &
    PR_Z_MUX & PR_CZ_MUX & PR_Y_MUX & PR_X_MUX & PR_CI_MUX & PR_MULT_MUX & PR_P_MUX & PR_D_MUX &
    PR_C_MUX & PR_B_CASCADE_MUX & PR_B_MUX & PR_A_CASCADE_MUX & PR_A_MUX;

    constant raw_config2_gen : bit_vector(13 downto 0)
    := ENABLE_PR_OV_RST & ENABLE_PR_CO_RST & ENABLE_PR_CCO_RST & ENABLE_PR_Z_RST &ENABLE_PR_CZ_RST & 
    ENABLE_PR_MULT_RST &ENABLE_PR_Y_RST & ENABLE_PR_X_RST & ENABLE_PR_P_RST & ENABLE_PR_CI_RST & 
    ENABLE_PR_D_RST & ENABLE_PR_C_RST & ENABLE_PR_B_RST & ENABLE_PR_A_RST;

    constant raw_config3_gen : bit_vector(2 downto 0) := ALU_OP;
    ----------------------------------------------------------
    -- NX_DSP_U declaration
    ----------------------------------------------------------
    component NX_DSP_U
        generic (
            std_mode    : string                  := "";                             -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
            raw_config0 : bit_vector(26 downto 0) := B"000000000000000000000000000"; -- Mux
            raw_config1 : bit_vector(23 downto 0) := B"000000000000000000000000";    -- Pipe Mux
            raw_config2 : bit_vector(13 downto 0) := B"00000000000000";              -- Pipe Reset
            raw_config3 : bit_vector(2 downto 0)  := B"000"                          -- ALU operation
        );
        port (
            A1    : in std_logic  := '0';
            A2    : in std_logic  := '0';
            A3    : in std_logic  := '0';
            A4    : in std_logic  := '0';
            A5    : in std_logic  := '0';
            A6    : in std_logic  := '0';
            A7    : in std_logic  := '0';
            A8    : in std_logic  := '0';
            A9    : in std_logic  := '0';
            A10   : in std_logic  := '0';
            A11   : in std_logic  := '0';
            A12   : in std_logic  := '0';
            A13   : in std_logic  := '0';
            A14   : in std_logic  := '0';
            A15   : in std_logic  := '0';
            A16   : in std_logic  := '0';
            A17   : in std_logic  := '0';
            A18   : in std_logic  := '0';
            A19   : in std_logic  := '0';
            A20   : in std_logic  := '0';
            A21   : in std_logic  := '0';
            A22   : in std_logic  := '0';
            A23   : in std_logic  := '0';
            A24   : in std_logic  := '0';

            B1    : in std_logic  := '0';
            B2    : in std_logic  := '0';
            B3    : in std_logic  := '0';
            B4    : in std_logic  := '0';
            B5    : in std_logic  := '0';
            B6    : in std_logic  := '0';
            B7    : in std_logic  := '0';
            B8    : in std_logic  := '0';
            B9    : in std_logic  := '0';
            B10   : in std_logic  := '0';
            B11   : in std_logic  := '0';
            B12   : in std_logic  := '0';
            B13   : in std_logic  := '0';
            B14   : in std_logic  := '0';
            B15   : in std_logic  := '0';
            B16   : in std_logic  := '0';
            B17   : in std_logic  := '0';
            B18   : in std_logic  := '0';

            C1    : in std_logic  := '0';
            C2    : in std_logic  := '0';
            C3    : in std_logic  := '0';
            C4    : in std_logic  := '0';
            C5    : in std_logic  := '0';
            C6    : in std_logic  := '0';
            C7    : in std_logic  := '0';
            C8    : in std_logic  := '0';
            C9    : in std_logic  := '0';
            C10   : in std_logic  := '0';
            C11   : in std_logic  := '0';
            C12   : in std_logic  := '0';
            C13   : in std_logic  := '0';
            C14   : in std_logic  := '0';
            C15   : in std_logic  := '0';
            C16   : in std_logic  := '0';
            C17   : in std_logic  := '0';
            C18   : in std_logic  := '0';
            C19   : in std_logic  := '0';
            C20   : in std_logic  := '0';
            C21   : in std_logic  := '0';
            C22   : in std_logic  := '0';
            C23   : in std_logic  := '0';
            C24   : in std_logic  := '0';
            C25   : in std_logic  := '0';
            C26   : in std_logic  := '0';
            C27   : in std_logic  := '0';
            C28   : in std_logic  := '0';
            C29   : in std_logic  := '0';
            C30   : in std_logic  := '0';
            C31   : in std_logic  := '0';
            C32   : in std_logic  := '0';
            C33   : in std_logic  := '0';
            C34   : in std_logic  := '0';
            C35   : in std_logic  := '0';
            C36   : in std_logic  := '0';

            CAI1  : in std_logic  := '0';
            CAI2  : in std_logic  := '0';
            CAI3  : in std_logic  := '0';
            CAI4  : in std_logic  := '0';
            CAI5  : in std_logic  := '0';
            CAI6  : in std_logic  := '0';
            CAI7  : in std_logic  := '0';
            CAI8  : in std_logic  := '0';
            CAI9  : in std_logic  := '0';
            CAI10 : in std_logic  := '0';
            CAI11 : in std_logic  := '0';
            CAI12 : in std_logic  := '0';
            CAI13 : in std_logic  := '0';
            CAI14 : in std_logic  := '0';
            CAI15 : in std_logic  := '0';
            CAI16 : in std_logic  := '0';
            CAI17 : in std_logic  := '0';
            CAI18 : in std_logic  := '0';
            CAI19 : in std_logic  := '0';
            CAI20 : in std_logic  := '0';
            CAI21 : in std_logic  := '0';
            CAI22 : in std_logic  := '0';
            CAI23 : in std_logic  := '0';
            CAI24 : in std_logic  := '0';

            CAO1  : out std_logic := '0';
            CAO2  : out std_logic := '0';
            CAO3  : out std_logic := '0';
            CAO4  : out std_logic := '0';
            CAO5  : out std_logic := '0';
            CAO6  : out std_logic := '0';
            CAO7  : out std_logic := '0';
            CAO8  : out std_logic := '0';
            CAO9  : out std_logic := '0';
            CAO10 : out std_logic := '0';
            CAO11 : out std_logic := '0';
            CAO12 : out std_logic := '0';
            CAO13 : out std_logic := '0';
            CAO14 : out std_logic := '0';
            CAO15 : out std_logic := '0';
            CAO16 : out std_logic := '0';
            CAO17 : out std_logic := '0';
            CAO18 : out std_logic := '0';
            CAO19 : out std_logic := '0';
            CAO20 : out std_logic := '0';
            CAO21 : out std_logic := '0';
            CAO22 : out std_logic := '0';
            CAO23 : out std_logic := '0';
            CAO24 : out std_logic := '0';

            CBI1  : in std_logic  := '0';
            CBI2  : in std_logic  := '0';
            CBI3  : in std_logic  := '0';
            CBI4  : in std_logic  := '0';
            CBI5  : in std_logic  := '0';
            CBI6  : in std_logic  := '0';
            CBI7  : in std_logic  := '0';
            CBI8  : in std_logic  := '0';
            CBI9  : in std_logic  := '0';
            CBI10 : in std_logic  := '0';
            CBI11 : in std_logic  := '0';
            CBI12 : in std_logic  := '0';
            CBI13 : in std_logic  := '0';
            CBI14 : in std_logic  := '0';
            CBI15 : in std_logic  := '0';
            CBI16 : in std_logic  := '0';
            CBI17 : in std_logic  := '0';
            CBI18 : in std_logic  := '0';

            CBO1  : out std_logic := '0';
            CBO2  : out std_logic := '0';
            CBO3  : out std_logic := '0';
            CBO4  : out std_logic := '0';
            CBO5  : out std_logic := '0';
            CBO6  : out std_logic := '0';
            CBO7  : out std_logic := '0';
            CBO8  : out std_logic := '0';
            CBO9  : out std_logic := '0';
            CBO10 : out std_logic := '0';
            CBO11 : out std_logic := '0';
            CBO12 : out std_logic := '0';
            CBO13 : out std_logic := '0';
            CBO14 : out std_logic := '0';
            CBO15 : out std_logic := '0';
            CBO16 : out std_logic := '0';
            CBO17 : out std_logic := '0';
            CBO18 : out std_logic := '0';

            CCI   : in std_logic  := '0';
            CCO   : out std_logic := '0';
            CI    : in std_logic  := '0';
            CK    : in std_logic  := '0';
            CO43  : out std_logic := '0';
            CO57  : out std_logic := '0';

            CZI1  : in std_logic  := '0';
            CZI2  : in std_logic  := '0';
            CZI3  : in std_logic  := '0';
            CZI4  : in std_logic  := '0';
            CZI5  : in std_logic  := '0';
            CZI6  : in std_logic  := '0';
            CZI7  : in std_logic  := '0';
            CZI8  : in std_logic  := '0';
            CZI9  : in std_logic  := '0';
            CZI10 : in std_logic  := '0';
            CZI11 : in std_logic  := '0';
            CZI12 : in std_logic  := '0';
            CZI13 : in std_logic  := '0';
            CZI14 : in std_logic  := '0';
            CZI15 : in std_logic  := '0';
            CZI16 : in std_logic  := '0';
            CZI17 : in std_logic  := '0';
            CZI18 : in std_logic  := '0';
            CZI19 : in std_logic  := '0';
            CZI20 : in std_logic  := '0';
            CZI21 : in std_logic  := '0';
            CZI22 : in std_logic  := '0';
            CZI23 : in std_logic  := '0';
            CZI24 : in std_logic  := '0';
            CZI25 : in std_logic  := '0';
            CZI26 : in std_logic  := '0';
            CZI27 : in std_logic  := '0';
            CZI28 : in std_logic  := '0';
            CZI29 : in std_logic  := '0';
            CZI30 : in std_logic  := '0';
            CZI31 : in std_logic  := '0';
            CZI32 : in std_logic  := '0';
            CZI33 : in std_logic  := '0';
            CZI34 : in std_logic  := '0';
            CZI35 : in std_logic  := '0';
            CZI36 : in std_logic  := '0';
            CZI37 : in std_logic  := '0';
            CZI38 : in std_logic  := '0';
            CZI39 : in std_logic  := '0';
            CZI40 : in std_logic  := '0';
            CZI41 : in std_logic  := '0';
            CZI42 : in std_logic  := '0';
            CZI43 : in std_logic  := '0';
            CZI44 : in std_logic  := '0';
            CZI45 : in std_logic  := '0';
            CZI46 : in std_logic  := '0';
            CZI47 : in std_logic  := '0';
            CZI48 : in std_logic  := '0';
            CZI49 : in std_logic  := '0';
            CZI50 : in std_logic  := '0';
            CZI51 : in std_logic  := '0';
            CZI52 : in std_logic  := '0';
            CZI53 : in std_logic  := '0';
            CZI54 : in std_logic  := '0';
            CZI55 : in std_logic  := '0';
            CZI56 : in std_logic  := '0';

            CZO1  : out std_logic := '0';
            CZO2  : out std_logic := '0';
            CZO3  : out std_logic := '0';
            CZO4  : out std_logic := '0';
            CZO5  : out std_logic := '0';
            CZO6  : out std_logic := '0';
            CZO7  : out std_logic := '0';
            CZO8  : out std_logic := '0';
            CZO9  : out std_logic := '0';
            CZO10 : out std_logic := '0';
            CZO11 : out std_logic := '0';
            CZO12 : out std_logic := '0';
            CZO13 : out std_logic := '0';
            CZO14 : out std_logic := '0';
            CZO15 : out std_logic := '0';
            CZO16 : out std_logic := '0';
            CZO17 : out std_logic := '0';
            CZO18 : out std_logic := '0';
            CZO19 : out std_logic := '0';
            CZO20 : out std_logic := '0';
            CZO21 : out std_logic := '0';
            CZO22 : out std_logic := '0';
            CZO23 : out std_logic := '0';
            CZO24 : out std_logic := '0';
            CZO25 : out std_logic := '0';
            CZO26 : out std_logic := '0';
            CZO27 : out std_logic := '0';
            CZO28 : out std_logic := '0';
            CZO29 : out std_logic := '0';
            CZO30 : out std_logic := '0';
            CZO31 : out std_logic := '0';
            CZO32 : out std_logic := '0';
            CZO33 : out std_logic := '0';
            CZO34 : out std_logic := '0';
            CZO35 : out std_logic := '0';
            CZO36 : out std_logic := '0';
            CZO37 : out std_logic := '0';
            CZO38 : out std_logic := '0';
            CZO39 : out std_logic := '0';
            CZO40 : out std_logic := '0';
            CZO41 : out std_logic := '0';
            CZO42 : out std_logic := '0';
            CZO43 : out std_logic := '0';
            CZO44 : out std_logic := '0';
            CZO45 : out std_logic := '0';
            CZO46 : out std_logic := '0';
            CZO47 : out std_logic := '0';
            CZO48 : out std_logic := '0';
            CZO49 : out std_logic := '0';
            CZO50 : out std_logic := '0';
            CZO51 : out std_logic := '0';
            CZO52 : out std_logic := '0';
            CZO53 : out std_logic := '0';
            CZO54 : out std_logic := '0';
            CZO55 : out std_logic := '0';
            CZO56 : out std_logic := '0';

            D1    : in std_logic  := '0';
            D2    : in std_logic  := '0';
            D3    : in std_logic  := '0';
            D4    : in std_logic  := '0';
            D5    : in std_logic  := '0';
            D6    : in std_logic  := '0';
            D7    : in std_logic  := '0';
            D8    : in std_logic  := '0';
            D9    : in std_logic  := '0';
            D10   : in std_logic  := '0';
            D11   : in std_logic  := '0';
            D12   : in std_logic  := '0';
            D13   : in std_logic  := '0';
            D14   : in std_logic  := '0';
            D15   : in std_logic  := '0';
            D16   : in std_logic  := '0';
            D17   : in std_logic  := '0';
            D18   : in std_logic  := '0';

            OVF   : out std_logic := '0';
            R     : in std_logic  := '0';
            RZ    : in std_logic  := '0';
            WE    : in std_logic  := '0';
            WEZ   : in std_logic  := '0';

            Z1    : out std_logic := '0';
            Z2    : out std_logic := '0';
            Z3    : out std_logic := '0';
            Z4    : out std_logic := '0';
            Z5    : out std_logic := '0';
            Z6    : out std_logic := '0';
            Z7    : out std_logic := '0';
            Z8    : out std_logic := '0';
            Z9    : out std_logic := '0';
            Z10   : out std_logic := '0';
            Z11   : out std_logic := '0';
            Z12   : out std_logic := '0';
            Z13   : out std_logic := '0';
            Z14   : out std_logic := '0';
            Z15   : out std_logic := '0';
            Z16   : out std_logic := '0';
            Z17   : out std_logic := '0';
            Z18   : out std_logic := '0';
            Z19   : out std_logic := '0';
            Z20   : out std_logic := '0';
            Z21   : out std_logic := '0';
            Z22   : out std_logic := '0';
            Z23   : out std_logic := '0';
            Z24   : out std_logic := '0';
            Z25   : out std_logic := '0';
            Z26   : out std_logic := '0';
            Z27   : out std_logic := '0';
            Z28   : out std_logic := '0';
            Z29   : out std_logic := '0';
            Z30   : out std_logic := '0';
            Z31   : out std_logic := '0';
            Z32   : out std_logic := '0';
            Z33   : out std_logic := '0';
            Z34   : out std_logic := '0';
            Z35   : out std_logic := '0';
            Z36   : out std_logic := '0';
            Z37   : out std_logic := '0';
            Z38   : out std_logic := '0';
            Z39   : out std_logic := '0';
            Z40   : out std_logic := '0';
            Z41   : out std_logic := '0';
            Z42   : out std_logic := '0';
            Z43   : out std_logic := '0';
            Z44   : out std_logic := '0';
            Z45   : out std_logic := '0';
            Z46   : out std_logic := '0';
            Z47   : out std_logic := '0';
            Z48   : out std_logic := '0';
            Z49   : out std_logic := '0';
            Z50   : out std_logic := '0';
            Z51   : out std_logic := '0';
            Z52   : out std_logic := '0';
            Z53   : out std_logic := '0';
            Z54   : out std_logic := '0';
            Z55   : out std_logic := '0';
            Z56   : out std_logic := '0'
        );
    end component;

begin

    ----------------------------------------------------------
    -- Instantiation the NX_DSP_U component
    ----------------------------------------------------------
    DSP_INST : NX_DSP_U
    generic map(
        std_mode    => "",              -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
        raw_config0 => raw_config0_gen, -- MODE and MUXes
        raw_config1 => raw_config1_gen, -- Pipeline Registers
        raw_config2 => raw_config2_gen, -- Reset Enable for internal registers
        raw_config3 => raw_config3_gen  -- ALU modes
    )
    port map(
        A1    => A(0),
        A2    => A(1),
        A3    => A(2),
        A4    => A(3),
        A5    => A(4),
        A6    => A(5),
        A7    => A(6),
        A8    => A(7),
        A9    => A(8),
        A10   => A(9),
        A11   => A(10),
        A12   => A(11),
        A13   => A(12),
        A14   => A(13),
        A15   => A(14),
        A16   => A(15),
        A17   => A(16),
        A18   => A(17),
        A19   => A(18),
        A20   => A(19),
        A21   => A(20),
        A22   => A(21),
        A23   => A(22),
        A24   => A(23),

        B1    => B(0),
        B2    => B(1),
        B3    => B(2),
        B4    => B(3),
        B5    => B(4),
        B6    => B(5),
        B7    => B(6),
        B8    => B(7),
        B9    => B(8),
        B10   => B(9),
        B11   => B(10),
        B12   => B(11),
        B13   => B(12),
        B14   => B(13),
        B15   => B(14),
        B16   => B(15),
        B17   => B(16),
        B18   => B(17),

        C1    => C(0),
        C2    => C(1),
        C3    => C(2),
        C4    => C(3),
        C5    => C(4),
        C6    => C(5),
        C7    => C(6),
        C8    => C(7),
        C9    => C(8),
        C10   => C(9),
        C11   => C(10),
        C12   => C(11),
        C13   => C(12),
        C14   => C(13),
        C15   => C(14),
        C16   => C(15),
        C17   => C(16),
        C18   => C(17),
        C19   => C(18),
        C20   => C(19),
        C21   => C(20),
        C22   => C(21),
        C23   => C(22),
        C24   => C(23),
        C25   => C(24),
        C26   => C(25),
        C27   => C(26),
        C28   => C(27),
        C29   => C(28),
        C30   => C(29),
        C31   => C(30),
        C32   => C(31),
        C33   => C(32),
        C34   => C(33),
        C35   => C(34),
        C36   => C(35),

        CAI1  => CAI(0),
        CAI2  => CAI(1),
        CAI3  => CAI(2),
        CAI4  => CAI(3),
        CAI5  => CAI(4),
        CAI6  => CAI(5),
        CAI7  => CAI(6),
        CAI8  => CAI(7),
        CAI9  => CAI(8),
        CAI10 => CAI(9),
        CAI11 => CAI(10),
        CAI12 => CAI(11),
        CAI13 => CAI(12),
        CAI14 => CAI(13),
        CAI15 => CAI(14),
        CAI16 => CAI(15),
        CAI17 => CAI(16),
        CAI18 => CAI(17),
        CAI19 => CAI(18),
        CAI20 => CAI(19),
        CAI21 => CAI(20),
        CAI22 => CAI(21),
        CAI23 => CAI(22),
        CAI24 => CAI(23),

        CAO1  => CAO(0),
        CAO2  => CAO(1),
        CAO3  => CAO(2),
        CAO4  => CAO(3),
        CAO5  => CAO(4),
        CAO6  => CAO(5),
        CAO7  => CAO(6),
        CAO8  => CAO(7),
        CAO9  => CAO(8),
        CAO10 => CAO(9),
        CAO11 => CAO(10),
        CAO12 => CAO(11),
        CAO13 => CAO(12),
        CAO14 => CAO(13),
        CAO15 => CAO(14),
        CAO16 => CAO(15),
        CAO17 => CAO(16),
        CAO18 => CAO(17),
        CAO19 => CAO(18),
        CAO20 => CAO(19),
        CAO21 => CAO(20),
        CAO22 => CAO(21),
        CAO23 => CAO(22),
        CAO24 => CAO(23),

        CBI1  => CBI(0),
        CBI2  => CBI(1),
        CBI3  => CBI(2),
        CBI4  => CBI(3),
        CBI5  => CBI(4),
        CBI6  => CBI(5),
        CBI7  => CBI(6),
        CBI8  => CBI(7),
        CBI9  => CBI(8),
        CBI10 => CBI(9),
        CBI11 => CBI(10),
        CBI12 => CBI(11),
        CBI13 => CBI(12),
        CBI14 => CBI(13),
        CBI15 => CBI(14),
        CBI16 => CBI(15),
        CBI17 => CBI(16),
        CBI18 => CBI(17),

        CBO1  => CBO(0),
        CBO2  => CBO(1),
        CBO3  => CBO(2),
        CBO4  => CBO(3),
        CBO5  => CBO(4),
        CBO6  => CBO(5),
        CBO7  => CBO(6),
        CBO8  => CBO(7),
        CBO9  => CBO(8),
        CBO10 => CBO(9),
        CBO11 => CBO(10),
        CBO12 => CBO(11),
        CBO13 => CBO(12),
        CBO14 => CBO(13),
        CBO15 => CBO(14),
        CBO16 => CBO(15),
        CBO17 => CBO(16),
        CBO18 => CBO(17),

        CCI   => CCI,
        CCO   => CCO,
        CI    => CI,
        CK    => CK,
        CO43  => CO42,
        CO57  => CO56,

        CZI1  => CZI(0),
        CZI2  => CZI(1),
        CZI3  => CZI(2),
        CZI4  => CZI(3),
        CZI5  => CZI(4),
        CZI6  => CZI(5),
        CZI7  => CZI(6),
        CZI8  => CZI(7),
        CZI9  => CZI(8),
        CZI10 => CZI(9),
        CZI11 => CZI(10),
        CZI12 => CZI(11),
        CZI13 => CZI(12),
        CZI14 => CZI(13),
        CZI15 => CZI(14),
        CZI16 => CZI(15),
        CZI17 => CZI(16),
        CZI18 => CZI(17),
        CZI19 => CZI(18),
        CZI20 => CZI(19),
        CZI21 => CZI(20),
        CZI22 => CZI(21),
        CZI23 => CZI(22),
        CZI24 => CZI(23),
        CZI25 => CZI(24),
        CZI26 => CZI(25),
        CZI27 => CZI(26),
        CZI28 => CZI(27),
        CZI29 => CZI(28),
        CZI30 => CZI(29),
        CZI31 => CZI(30),
        CZI32 => CZI(31),
        CZI33 => CZI(32),
        CZI34 => CZI(33),
        CZI35 => CZI(34),
        CZI36 => CZI(35),
        CZI37 => CZI(36),
        CZI38 => CZI(37),
        CZI39 => CZI(38),
        CZI40 => CZI(39),
        CZI41 => CZI(40),
        CZI42 => CZI(41),
        CZI43 => CZI(42),
        CZI44 => CZI(43),
        CZI45 => CZI(44),
        CZI46 => CZI(45),
        CZI47 => CZI(46),
        CZI48 => CZI(47),
        CZI49 => CZI(48),
        CZI50 => CZI(49),
        CZI51 => CZI(50),
        CZI52 => CZI(51),
        CZI53 => CZI(52),
        CZI54 => CZI(53),
        CZI55 => CZI(54),
        CZI56 => CZI(55),

        CZO1  => CZO(0),
        CZO2  => CZO(1),
        CZO3  => CZO(2),
        CZO4  => CZO(3),
        CZO5  => CZO(4),
        CZO6  => CZO(5),
        CZO7  => CZO(6),
        CZO8  => CZO(7),
        CZO9  => CZO(8),
        CZO10 => CZO(9),
        CZO11 => CZO(10),
        CZO12 => CZO(11),
        CZO13 => CZO(12),
        CZO14 => CZO(13),
        CZO15 => CZO(14),
        CZO16 => CZO(15),
        CZO17 => CZO(16),
        CZO18 => CZO(17),
        CZO19 => CZO(18),
        CZO20 => CZO(19),
        CZO21 => CZO(20),
        CZO22 => CZO(21),
        CZO23 => CZO(22),
        CZO24 => CZO(23),
        CZO25 => CZO(24),
        CZO26 => CZO(25),
        CZO27 => CZO(26),
        CZO28 => CZO(27),
        CZO29 => CZO(28),
        CZO30 => CZO(29),
        CZO31 => CZO(30),
        CZO32 => CZO(31),
        CZO33 => CZO(32),
        CZO34 => CZO(33),
        CZO35 => CZO(34),
        CZO36 => CZO(35),
        CZO37 => CZO(36),
        CZO38 => CZO(37),
        CZO39 => CZO(38),
        CZO40 => CZO(39),
        CZO41 => CZO(40),
        CZO42 => CZO(41),
        CZO43 => CZO(42),
        CZO44 => CZO(43),
        CZO45 => CZO(44),
        CZO46 => CZO(45),
        CZO47 => CZO(46),
        CZO48 => CZO(47),
        CZO49 => CZO(48),
        CZO50 => CZO(49),
        CZO51 => CZO(50),
        CZO52 => CZO(51),
        CZO53 => CZO(52),
        CZO54 => CZO(53),
        CZO55 => CZO(54),
        CZO56 => CZO(55),

        D1    => D(0),
        D2    => D(1),
        D3    => D(2),
        D4    => D(3),
        D5    => D(4),
        D6    => D(5),
        D7    => D(6),
        D8    => D(7),
        D9    => D(8),
        D10   => D(9),
        D11   => D(10),
        D12   => D(11),
        D13   => D(12),
        D14   => D(13),
        D15   => D(14),
        D16   => D(15),
        D17   => D(16),
        D18   => D(17),

        OVF   => OVF,
        R     => R,
        RZ    => RZ,
        WE    => WE,

        Z1    => Z(0),
        Z2    => Z(1),
        Z3    => Z(2),
        Z4    => Z(3),
        Z5    => Z(4),
        Z6    => Z(5),
        Z7    => Z(6),
        Z8    => Z(7),
        Z9    => Z(8),
        Z10   => Z(9),
        Z11   => Z(10),
        Z12   => Z(11),
        Z13   => Z(12),
        Z14   => Z(13),
        Z15   => Z(14),
        Z16   => Z(15),
        Z17   => Z(16),
        Z18   => Z(17),
        Z19   => Z(18),
        Z20   => Z(19),
        Z21   => Z(20),
        Z22   => Z(21),
        Z23   => Z(22),
        Z24   => Z(23),
        Z25   => Z(24),
        Z26   => Z(25),
        Z27   => Z(26),
        Z28   => Z(27),
        Z29   => Z(28),
        Z30   => Z(29),
        Z31   => Z(30),
        Z32   => Z(31),
        Z33   => Z(32),
        Z34   => Z(33),
        Z35   => Z(34),
        Z36   => Z(35),
        Z37   => Z(36),
        Z38   => Z(37),
        Z39   => Z(38),
        Z40   => Z(39),
        Z41   => Z(40),
        Z42   => Z(41),
        Z43   => Z(42),
        Z44   => Z(43),
        Z45   => Z(44),
        Z46   => Z(45),
        Z47   => Z(46),
        Z48   => Z(47),
        Z49   => Z(48),
        Z50   => Z(49),
        Z51   => Z(50),
        Z52   => Z(51),
        Z53   => Z(52),
        Z54   => Z(53),
        Z55   => Z(54),
        Z56   => Z(55)
    );

end NX_RTL;
-- #}}}#

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
X848AWbG4l+87ls/89DXh17no07UO7iqR9Lfmey3DKmU+k4iEao5xVtD27YQPwAQ
FMGV61pwUiGOMp3A9bmxWh/WWaEmposiZV/WvZfK7kl+yVhAKbRcVURYKZGnzp9o
WFNIsOg8B0NDVd7DUIyTJKTmK8v0HOAkh5V96j4JAaFfQnC8QgoTYAHEelsnDYlG
2TUemGPE7S/fM+HTYpBp4ZVwm9Fmau8r2c9f2eoiQ78RaWfAMknwVhQaCMmGSeqG
INwvMCYT3WjZTUoAWRGOmT9UAXZiMQn94un2U9swTdrhLCMcCX4pRs6CTsozrnmD
idmwoyQ+Lw3mvigSoDvZOA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 34032)
`protect data_block
zw6s30p9Xd68DB9cmdHxb3wlErV1Ph7wiF0RAE42LkxG6K8PMlHDna4AJohS9XGu
jKdNhgflOQr7TaKZS/q7evpNDNf5upKSy0ePw74Z4etN0dSLVo2gqIX7SZqtMaS9
v5OrMsmSdhZJamHKXvuf28m1KFGb+VpACAf3bLpoGZhctbpKuAdls/rJCq00/TNK
nxkCURhgpTR0nFNVoHUMjLB4ZxsKJtran3lXdN+g66QXagpNUiUIbCxdYK6cQHwb
65byg2kfHPiLPZZIPlkvkDfA2/l/mxkdWWpmi6hRgI9pb72abMcP4ZpjBGwBitCO
MaJbyGILxGdxdwGkEu+iYPFCbkFOJRbPNXtmveYF4f9xPWzqvHAqmn9cUedvVKgs
DxjoqTKa7RjKdnyAmflJ3IDywaCC4c3GP2z8YwpEpYfDxPFUkB1rU7uAHS0jL9Qr
b1ls139gwxlamFNNY4Ho8hk0mPEXmZ/ZEMbmNv4RXnKVIALhR681NUlUzNmiuxsj
HW485Cg9DDNP404FJ//5HiRrKrgcVouBrDcO08kz6aHQtPp3E8htbd4FsTco+VrZ
LgEkbTlcBQak9illdcBK6mOvCCIDlHFXX0ss2Mubzz9e6KqpW6slrW1WT1FvpZ0m
VXXFoJHqJNXZHkA7vse5NKKOHpkB7BILrBnX4t7PBmPlKTZOQKyt0RG/ysYaDylU
5+tHtMJb745+WtxRZE7l6Op3GFketUBz83j7giOGW3ZGin5SXykuobuOu1DnIjLZ
lK0kTptmFbn2Ya7Pvfv26pwep8P8Fq4bnTO7zCRR7mFrM3QD5qFwyMvnnqINLUbw
T9YH04uo24lD/jJUpHfCjyuut+cey1vV9QDkaQXR7ltP7UQnzrSdbDjdayWvHSYn
0vxDjSQdfUPqJjycbzITJxsuloRLgMRXf3O1lt8F+E3GZoy1K9lawjfwu/kDDHlB
bO3B6zWK4nmkuL6FzOTmETwPCXiL7f96W19OMYJOPaxY2eNyyVIQSAja85D7vHfI
w4ikXzAimFJyHIMd0DNsYcaqQw2IH+9K9mqPXKI1myFhkTOSQDFvprNL2jrwuPk6
RYo36NzHn4gEcqWx4QyYfJw4Q33Vhp6Eq9mVL/+mEGizIqpa1N9RaNE4tekJhpuX
JVqumPkM+uoBNU9YMxV0StRb+pFKdFm3ZkW2u3tpf1tJml1z7hb1//QjDLwz3kEW
h0AFU7nytRGvxQj2s7dg3Cem5Vse1x3LNN2FtakD01SvwxnIaybxZC3skzhQBkgG
QEvZIgmNGNjB69ATdPnxr6paaoKmO6LVh5tK/ViLsLQ5/4G1oarOnhOuVcKl9ULR
/32suLsVEf6Gzz/JO7x3UrwwRn9VBASQBEO15GUTEJ9cISGcAlqZOnsQS1ww10Kv
Md6Bpfjv3hanysU4W4pEktje5Ac0OlEwUn3RtKaZwo1+JE9mwHqbQMIEwN69Fi7+
yd6luVdcV9bOzHRTxm45OUc0fttWBX2G4weMeFz9WsafsTcyDwj/ksLQyOGkKD97
R9BKFBKg2hb6R65tTAB/4QB9Ycl18srcE8dlB3Z/NMBT9474pW7nTNLz5ADx7w2/
lZ5a0v4n/ql+fYj6xH+S9EKD2bfOyJg3nzcez2SebpZ0I7zcIIigBvt/2Hy74Do0
Nkekhm3r99FbqHKkZ5MMmMPYcSETXy1nUWgmofua43AY399a9Zv9g/M/iw2wfCXv
zP69E5O+agqFtrxdTF5P+vSCp+TL7XLKzzPQR1uP0PqLjH6CO4YtPp2CqxztYIMI
MIx8O3NtwkgBWdbe+yk++vB1PSKuyij5Ax9EvF4/P3cRbk7ZdaVXXXZf9goVnxcA
zG6oJGQpNJ0pVIGrvHoaZkSi/FrTywWwdWMkaG+JvT7NkQimyHmdJqJik4QRQXve
n/pxPe/y6qr5eI2sUH6aRvInGhby/sG8eVh8xwfUCk813fVknykE7gfqrhrjiPTJ
DHf1iryUts/buOHTIz9rLV5fA75PcIgwhM1FqVqJrB5jbcbiiOP37rMmoogSibDM
7wl765cB5mro09ndTCqDN6tMt4c6Ma4rd6njeJTlsZqulYljFLhjFxjcXpunMWVt
WCG1p2PjY5oXlN0OhnrCahoQH8BSFekMRdnINZEusrHug/YHXbj4/h/0aD5QTx5a
4FJCIofASO8MjVRqEy/xyI8sWjNOvjKycd7JUPYXfj/RolLentynPXro2B4/tQs+
ZUpO11zBLHAHVh++eFyYnTvgWJRcUN1DnXszL3euUbsL3IVALxMTv6hEsoraITcA
CfPgrcwHzaaP6h2IoeUDtjmQR3hs/vdsvgA3Yefhs+wopl8iZAQoGscD9fBDWJ8S
U/BZfTIIgcoksRaRxi7mlUHKz952jKxVK4qI5kduzabaEgwUXDbwgEkW60hI3Nfw
WzxJDq1zA6FewN3z3hGh0lfygx1YYcUM0Hfpoi3VJEGfV+24DO9/Gb42Vzfhw2Kf
tbj7Uzo5B3g0qbP/okyIdhmW3gTK+fLea4T4RB+5Xuu7qk7532Llu2q6qroNPyN1
sSADL58Yl/ZEKO7b8fSmqXe+W6bTpJqEOUBKVXeeWfBAHr9f2MuPqXQOgJo0FiLs
xYHDvPAA9NPJ05lo1CNiNPbrkOoGeQR+808abM9bw/Nx3ygxOkcX/KBJyRWgvBsw
aH8fAyhGDP9+RGC00DgBhcNLSAywOy6KuLJSAXswkJCN4gEDIDKGQFlY3SoH0LLg
3cYwTve0TGL1ChohxiG9yCvJJt/DOgxCBu0WGrT7j+A7vVT7v+AP5N2mNhF5ty9o
HPjjXVw/iAfygC9mL/z7HIiW5w3SXq+lH94pT2uGGYpHKuirQKfUOfoN4JTPiJMQ
4LJXZVr+ZXebYTvqdeR7FTIL4gJrEw4+plS8TNbA6y7Oq6HDE9wDOa6Jw0XerNWL
YzYY9u9f6V2WP+boy3ZO+bJOOHGkajh7n6dH8iyY0dNWYOYyo2JEammKZ4BmIMnf
4tLSeSK7EbwkRYplADjiITRkhaG1NIScVOH9j1hyjv0QFzg1rjGOwTpfnFQyOE8P
et6iR3GurLVXf4Zpwgy0ukaMf8/c5kNiFWUJ4kFQ0zKd9DeQCWm6LjFWyR3+AYj7
KtQYHxndR7kateZIOnVSrc8DnqNc2vCLCwdTiWvyvZt0uWLe0M/nFPlVHIYOAidn
d4iM05nUoJNalW6IRbJzbxFjPTRSZUvzfUIBgqTNNKehO/7c+iq+JpJxWBj/QTu7
8We5l4/a/0jI6UWRSxiRqhf/d7yhe0nKMNiIdOKiZbm2iSMBGrVtT8Sd5JxRP/U9
2oWlPlnvq3J460WA8ZGnvJvFyAyLODQXVG2SgCZblM/HTtw801gj6PtthRQmA6gz
y0K7w5uuvxMsdQSRiRKhQQE1odL94RTLAYU0oIEvEE9JbmvA0TkIZV2pRVkNfHe9
CNIPj859N8/LKlSo0yfjDyXBWH+utmueod6n9ZdezKwP+flM0tozY77r+R0zTEgY
jQPwF7bjdnjPQ3jocaUflk2iWVSOBP8/pt5N84OtXw58BQ4SeQfZEISeQIvtcwdi
PzrOq3WpPQeLNxW4+No7ShMBYvMr4QaCN6/d3Zlu2aNAXNRVU1nRk+5LtqxOTpbk
SrPZ9XRcvQ8JWqOdj2sJ86Qq4U+AWOs3ulx+Atieh6Cr3KjpisDKg6ozXkEswRHo
9eJ88siQMcHGxi9s4lAbChoMLXCr5cQe9/7VUSLmnnWxxxF4f9V2OjK4o/v1or8E
8mZaXIhnpn5xKLZuIbMWAqC5GKfCXGEvveUmRaH47trxct5DaHIw94caJ9ymqLyQ
xB8PZsAqo+AhFJmD3nEzYeproQZkFPwdl2P5Iy/r1ilEh+rp+cJ+yqpA/z7MlGIf
OWra9eG61CUKEKsq7MRtSb/aE69DN7oYqHICYMyCCvm5yYlQwEnEZy2S9EL7lsZ2
7NnQpzcP16wUGHlQSDWe8z5Vgip1r28b6EC54p4dJEjipC+w0ZPIwb4gVmdL9RFp
61ETUy7dqCke9R/WjHDalx3lor9qI5m+tc4x1m2TMMwWGlqBlrnZ2GL5bCboB+m4
jt6JbIjK78oH39qbHYuDLWlM2mDL+fQbW5cX2E7JrIQs8/VnFGdk7w+SUfvjYLv/
XFZNz3WTapweHKPjgcOwSCjFOsCMLsPCDYMQouq5R64GyVn0+mFCAj+gv4f1w/wT
Pj+wl35XadrgDj7MJK6pR4fUZcSgdB1cay32OCPyvlnTVWgI/vIxyinnsrzkvD1O
LaNHjTBWOzLSzAePp7wleD6i++IcoQYTR58itmhI198IMchebZ1yMDAemdchch8H
BVGMVhgwFdwIeXpJi6oqXfDnyjqQvin9sVyHhTOqZdgXlEAccYE8VLwpgpsC5YEN
XXGaKtCRPEYni824TartEz85fHQdWqPny5D/b14Jr0bUOS8TIzvZUtsF+A712DgJ
+6W4oBJTEzw8u9THnMthoyxDu446C5ln5zmsB8Z2LOaA4M9917SheYyxaS2264nI
TWlqNQ+y9pH70p3HioRhn4L4wf/0FR65uwjHb1QSAt3y/EIyP4LZx12HTFfPftXa
9roEgFBgwnLBNHxwQD80XFQfNwnL1c/2bia31lJnYosypQdKkPHwFseF2zeo5r7+
nmaPq+GQXi7TkyUgbthkJru4rJ2UJAHWPZVsDVqf+AXze4kKdPj2i7SKKgrHlm+E
J7Zx+f7h4nmbQTnrXiVlSo6Ws0mJ2/SxHEBJf37t/qz93TN0wRKFoh5oxtOETYam
gNrUNMthQIEMDwZ5LppTYjcBb9kV1qx+fnbCcfE3yvodFbMMl6W2cff8/wTTnZMv
rQIlguJR6v0bAlTXA1P4Q6T+Kr1ILbLk/mk+sGVt3mNhWlddkmc9z6e8N95ZyUBJ
Bv014jNX2T+Y28D3ilnDJSLkKjfxJINVZBR2S8MwZUgTDxPgfBEF7g2TIr6w6K5D
75DZA0fAiXw3CBmaObYXW9RfG2u64GzQ3KPbRh/I8GzrFzGldA468lS7smuXIw3u
8XwPsAzYaxGln24trf2sGqRcC6b1n2SL/xJmyxYjWUCWRHyFEZ7iQJYqjBpB1iAN
tEEnFQNk+vY8gvqdkeHhyWEyd80iutBOTuSVbHWmfMcVrSAU0Wc6UqXRVziEWVdG
dMcn4iK5EUObRR9xVz9PNmppZfPjvdoQXUXqcHSVtd39DxIdq0TgnoB5D5HQ0DwP
r6vOpcNygBtQSYkyYqA4QQaoHh8VNIqrXy8YDlhUpj7eM+zdGXGC+90He3mFsvXE
NlEgljXm6i6zID1xPj9OWiKMtYqa//lENvs7wqNf0nFoRUW18gLuHImuEktsvYmo
uhBvLxn9uMBsarxpD2Rp+XqxGabAailkIWN3+aXftVnaUMb3+ytDZdHiZerokm8t
3HhC7JQH4aHRoyGb9AHxC2pPl/FyKibnxNQyo1iofm1oFCiuHsvkXK6Mpg2IBZCy
iqnrOpGoJc61U1tIfbqk+o7l8t3pti85RWhsmZQ99kqikVhtEs0wNli7LdJbnX9g
lhK0IW0Urvskmz0UZJYULW642Kt51YHG4MnIYsN2pPmjtuhnTERkozs37es62gaC
AWsbljUQtAfbR3j+Smfl6sD+RMHVB+GzBd1mCLsbikUkGWGhYVSo7sWnvbkfka/k
f0Mi7tDo5mWyhJc64CYsDizlNs3dTZLv5phR7dgLCCS3ZXvPjo5VQUpFNDoYUw/8
YHbggpwmIQ2KRJJbjwoLtYTDg6NeF5bE+GO+svuTg1V/sesBnIM4nruxaGcksPQi
LV3vv7C1tfniLA2P6NFdB2pCYYDchthysCj9CVIfPf32Jp71XIcX7xgdxS8SQRm4
PkU5oK5oMcmO8Kjkef8h1RlIN/XPHNyvgMFDqtcMu2rnOOXP43cF3uWrWYbitMq8
s4TEz7CP6dXWZBx50qBSn5U9J+bDtG/cuAB6DeunUSC83j3Ku2xcW1VhmklKtHl2
bgn4h9xlVceX1ucLnXYkbHIvlagNpHE4o6pO8cZxkouhcp+7R1fQukjQ4iWi+TyE
NKEfiUKOFTVhwOGTU6kOiwOwTkuWXgVK9DKKw7+DzPMNM3a4s9t5P5D59l8MPJr8
Ojo7+sy1KnwOXVbqFzdP30OFqRRS0CbW0xcnFepZeOUkdR+Ky+b4wasWxl8GUqJb
St9NMwQpqw1iI9gwTc2Nou7Ry+LsvlKA40KAoBFztqHdyaFLcxAq4FbYtPnHELgW
uvTLi72aw2iE+oP9nP802Ztm3fogIYU37wqDNEtjJIhyaBX3odt/qdzlJNT4Gljh
as0GVtyAODOd5OsScd0EyPjkrOcWq00rbo7WPd/8LqpWGSg98f6KBFbWxwZAqQSl
LLo0RsMBnNTFFJZ8LYgFLRbMBNXTuLX29LAnL1kycKxxstMgrsH/Ezk135FTMk5i
0zteLPi0q8M5aZGtMLI2prs4M4lVOMjI4/u8BQ4xGqI12/pxM/muW1g3l5J104xD
954z4lxhh+z3Q2ZF++BayRbMQYlsn+SditbutRMdNH6t4OGI2lGDZjll8CsmLPe2
5qftweL1zBgpD/YRTGnloA8OkmuVkvW4OY09w0hjFFzLGcI1UbRhm0Vo2/1ed310
gxHP28+uGSl/gxL9Ug+GcoIVLk2pj+3CPYB3zHmnv3jo7SbsE2pmtBdQxMzge7rt
Efe16e/wx/lDSEaD8elhcGpIrxZ9htqnnJbGP0UpQO9nnyxR7y3VlrgcC4NWCxOJ
AKd1LKXKcJz+oo8Ku9wx8g8MbMIsI0kptz6wLxW7Ma00rHdE3r8SESBnrrHHa0aE
mNc3IF7POyEC1njREoJ2oL8/mzZ7G8Oy6ythcpAd6wg47Z2zPEcNyvtP+beH9+s7
oSJXbXvYEDq/IwoXy9+2CVi+uFl7Bt0K3/nswN6MPaEwkpbZVjDzJ4mhM+nvwqmG
z09WlzAdnA5vkVrhYCSJxZJBt8ERrTSnpsWRFbXPBiNWRNyphARIdSRPX/nNmLQr
xY178hfCpQmCbj1HAvlhFyz8tQGESUS0TadJbVu5eOY1kFXLizL+Z9JQQB57mNft
0q6dZZUVnR50NNnk3mCwnXvLUtHcl4AzcIWLy/olDc+MERtxwRfP2KBkAOdpRehy
TM3Lz+Lds6XYqs8+7zlXIzMJciY6J24upr2UKEV0B8QWoQjVSNfWuOaAd9/593cj
kCIKYG4Sv+noa82eXKBmMfUnUm/Ox1x2j1Tv3itbo3keWLQGgrRyYWES8IfAPpnK
lQkGitfyoBENeTzOErR0jkrBtvfMzjU8vS7uEyxishZofi7raSBL8QcpKn81uPza
Z2jQxZPHU9RUhA2EDMwAhG1oNdjJyn73jI8zrUiAnlCb0HZgRWBe2k2RE+FJc8Me
FYm9PD2endWcgRisOaJxAFEru9sYgqItr5++5xaRvog+BVuZUxdenEc0eDxXSw/8
6cyJmBYTno1E+dqFLYhx6J5xy2W3fp5SrVNdCkv1jcuvGVzbrI5oOVEB4E7eNIy2
h0PH7jFS4dcMGGHjJ48GCkBgwigEt58rbTKLj7HfucuIucI8Lg7M7MD54rWxgOf0
XIuPA9TCTwuJyoqAAKZNBdwZuBiy/E8fIx89UG8SHuJAbyJyh58uMRY0lSohxjLx
Svf1iaUX88ZcL5rGyAcpgWTUkUzuKnNTxATBkcDG1qRausTCq+saGr3MGZ8elvWQ
2XiSQ+F1ty2q61oY6dLSO/9hXAgAWN3PrH4LNhAA6DmvLCxMdcb46CH07pVREZhl
LODhaZG4gvoyblyTaOi6YZwFHBCUYnSqQIc1bmIM5/meQZpxJXNMVrJxD6fFJFZF
AxJsw6qmgfN6IUqK09wxZV7x4C80QOFYGuBGHl2UJvgdWxh0cIK8bqa7shHnR6bu
0I36p7jZfdziOHc1SPgbiuUw2QAs6L2PicQMX82THlAVADiLynzsmTdtGioff7qZ
kuYA91a0XdVD+HaLJvNAygp+GEtZ7Kj7RxsIa9FvSwkBypVNNoBvAtup1Jv3XUZY
EI9Lx3Hrfa5YOl7ElH81cO2qacgqsxxFkbolxhQL3tvSeUbLqA4fp6DpWFXEhio8
jNe6IT/DIvXo6TJO1okG2Dy2ooaZIWC1mhRuZTiLAFpDvOVFqQuIKGbuJCkDvzCB
i6B0a0apytqo/+2BRNPu/fXbbjG57XzZhTzMuJaQEFNypVAecCJ3o2vN+Hmqmd5V
TLGPvY4arwsH0b4AyiuVubpS2gw1dzfk9MBg2wpnZ/E3uMUmpe3AdEmV5gFsauwK
vyT0OuXT9a4Lo2wepcLkFlgl+zG/uJ4jGXhEp3dTql6qzRkn65hoN/4dpjcpVYCu
inXI7G3YDQC17NWkd7UU18xF9fHO9F3QJWYlOmgzRrW+agmqXNjsuLkMT+//5Upe
M9+t9fdkmwBBTzIDbQKFX5PF1cSCL6xGQiKr+zooEg3QTrLWAMB+w60mCAGMFz+R
WQaEmZIS+777OWJRmz3zkG7v9nKAMoh3eQjdNj8NmOr3Yf8Pg70cmTttQgp7KF0u
lmPDaBjBzNLxi+OzzrFa08+G8l481nVHchVIYoX/lhsnSHa99Sx/2fKBhZayHull
uNEfU/g128jx3q5h55nYmrpJw5M6pgt+3ZWF6YY7YbAnw3vrx5rn6bKM8hITubbb
PMeZrwKcADh6OkDnHx7Sm6ZygIp3keI5XA5DpBqolgRkYYGR1SG5+wxuanfOBaxF
SQKBsCaI53Pl2jLiEv1VgkkSS/CaYRrbX2t5y2SoMTTawddmtAj1NLIePnIY46xU
BbBnKajZLbH1oJZn+dNI838jzUdYf7vmbBS6JoL1G02cnCQw/HNumbZH75BOVV+c
lgIdBZJdX7i2u11LMc+oo72wb0VeF1zHrxha+Jhajm0J0n/ZET70RbggBkngFV64
oc4KOFpMpeQnq62EYqcjr94fsOayZZ79UhDkXGyhhWbmDhJgOCE3T8RKhiHvKT/r
t77StD0yISsJa5t09phQEYr1I4yFCoca+E31FF9jXq6EfI9Q/S9VuJGyraNkcykW
O9FKFnu4/8VVdo71SSmKxaHpl25Jez/twTyO4Q1FnFVlgKOCPpSMX+2Rmta25qqg
XEaS23M52Sf2Uca7udncn5cnjIjMo0DSM1yCWY1zktSNGUGZPoqdV6H82l2liYwJ
pZ4wFnmwm6ctA0Q57veT5NEI6Y0SPXyZbwfwSdFMRVJbsTt4qB+88WNjLTsCiHj/
o5Iz2CPV2U/vdmb23lueMSe/MiD+qv1KXku/xIX8h8W4gignrRBBgEW3F6Xyl5Lc
V87zXu+RT0DOK+hOsQTtjsSN3qGw05jLQtvOI0t60c/Akro7CqS5tjZ4FY/Fp+XI
LQHd/DKTZjaNRy+YTHn21Oue3N4dwQo80UBSbGNDV5yrCIxfQl9tNpmIXBYmiJxw
sP9du3HgHNmKl4cQBIuu+vgqVC6HIlT0/8MLPFGUzzMBmJtYYaO3GNb/iTi06ZVV
dC9njRK4YM4hjqpMPPWHUqcjiXDUg7UQol2gEH5jSIXVywblEFLM2DmXXQXfB1oa
3rH6ia7++VQr8tLpBfPc8dkAdjveRZjy3CoX5ZeYmCrTgB9tEm18Kc95gLvqiF1y
OB9Lr5mRwwAtMe2wLOskwOZO8Xj7eaOYSrYfsKBmq8B3J5upsmwLWrZkoovXyfZj
o1tmW1pMH5NXq3zSnjshlp4hcU5ZTNHsc7JCiGYkEFCAtAP3mcVqml6pA49aKErg
oUp4rNYqGjA6Ga8a9vwDvjdxS1MnR1eqYQL/yC9YFAxX+PjAr3QDpBnIiNDYBpom
glCKUMEBx4GfFp9VH+su7JQb+Pkwf8RnxWNu9UcQvbFUlLqWpGIW+Py4mzHGO/bj
4rV1fCAwRFmf1YW5L3W/WfqX6VIF5TVKOb26kX1L4tRmB3X2QBnXwjZda488KH2H
QCUl5ZBl2MrRoGOvwlNnwPtt7/gzc4nxMZfHyCHp5eWSFCVRrsd00iMq5gTbvF+p
/JhlOcoe6aVxHp9X92yezykYDLCd4m5LfJXo5sWVfQDlMyBQpA9VsF8rlZtK6xgH
DVAyT1qyJ9zhjxtui1EibSILUN+XkTG9tT+/7K0TLzDwGBhGzR1TRt9woMPMRz20
vJnjRdCNaieYj/m32hrj2dh/TE12BBocBJmDbnklol7Ay0k+psJROI+Vdaysmd2P
HGrgJ9YtmYXMABtiS2A52cgjTg116zr0j5QBV65DNUOwXTj9W5ei1PB8xcWiJ8ww
IhRujtmLQZ4nAvatwdnop9IMAFMZ7Lm+53PKjr/lSs10tBK9Y4D1vETa1oGh5Y4R
Tgr1mV1i9SeQU++fRs0t4kQ2LB1wM9W2zqPfg94I6O2xDEPZ8JXEvPuHialIm6S5
gaZns5L3NC9EwdPKwY2wWNVbitZ3WEFRk9QxNzi7lMXzYefyrX1b+/sI1WPu7aOO
lLbdq0V8KAvmzME58thu120cCP8qbzZYTcAtSXunyhqYBYAkF4Yb//dSRRrfOrUs
P9ifAKCRvujJy7Si3csnybuWk21LRv/YNDG6OmuERju+aVFETdubn/Afd0lWMbjR
LFdyM7Q031RJFcv8ssh2P0zcp6c8wCUIr5qjqccG6jAdJ3CborxNkbOh39APiNti
32EDwyBUvqpSHvvNhF4dvs8ob51wGiZ6i5owEmTj+6LCsTGnPPlyLFT6RmwvBDYQ
t+9CiVakXwH08wbN7v2SlRZzfxuRInyg8lEYa6slxIrzYyUrSUrsmrGNI3PzfFlU
D4Kbsui0RHaYxEGSfW2GKucHQY6yF+zsbhy3FbhqM+gvnmiuVrRru/qJyTsMf3fr
Rk6MnER3Hv6E/yq4uQ1kpnQeh/PzSImnwy7inOVNFLzKjBlFHAe50Vy+JToloInZ
Eo0WoKR8x/nrnLCSbMARd+B2IJDk8fyZ94ywI41gehpZch+7tJkSeYW0tRI44EKF
f5jP/u7trg2yz3aoYi/NVxBpnCcq1/9b5ne7anVn1p7iWNkXwlWktBPQP1Mms0mW
JKvhVibOBsygS/Gv7uo4GSPcMYmmRkiAMgm1CUPWA6Uv4gD8lDQQCStaOuA83nIt
Ls9BRYaXyW1nsSytPK7j6nGw27uQx2FBJQjWRFzQB3NrXWDYo6GWxnF2Zo7Ue+qx
z48pL33g2TS7RlyY5NxGLRDJ1+GKXWuHjMrE4toUNHOjAtmTmC7aCWCQxwtkd/Rh
L3I2xYYuOMnZXodQv/MRm8DGoYz4QRgUgXzl5UPLJbFcEIB/LGlHzEFwlVntS+uq
nq+gpmDgWi/Zl4vu50O2WBG1M4OTdu/sW8fFZgZW1vEWAXfnjhsEN8lr98YYI9sx
EPgarA16UdJD8y6jZTQfu8/z5Mo6v+v9e6py4dNTogXTlSYKZmQzfhVmf5nGn8Vy
CU8E5/ru8rJH0Kmy1sMSvaOm4rm+L/DFiiblw7k2mToxQ8ohTerpRLXvdOj8OYdQ
1CXTFuhHKOJZjJ8gCLW+7+Twg/VB78v+qsaCKAV+YKNBK8+XxzDkQynTtzhlYRfp
q+EryETk3HbQQYkM9aZds1arVr7sZr1cHjjkQHWG6LjkcX4MMovrY3pwaDrQoYqf
CR2mGDOxlKz0Nd19Xb7yaa5K4+zAwkBv9kWJYWg+LeRsOiq5dOa5QU+E/YcRT0v8
HGthbbbQS+jqraWC80qKiuPGPgPMoCFaLwiNYKwT/8/GqjNMOX6Nf9owwTJRE4j2
5ycCTzNyb+WRRv94mu6ZpBKPv6oK3PCrWKxCqPn3PnnGA4ZY41QtfQL72kn6LokB
FyRc7fplDEpmbxdq6Zj/YpCJx1EZG7ws8+eIg02ULgX/xn4tuXXqY8i5nceAhZ3W
uDIlNVnDQ66i6w0qGN6sj+JTVaFUd5cHBUjL4mt7P/ayhZnfp4L6eKmv/vOFDev8
ndVsBKifxMc60fHz5cGDHaNRtXCnZYBcSVY0Mpjg833ynL16cukxuemIZAmWQL94
AFLA4z3ChZaVbr9BklWoyhECc3zzdM0PMyKyVhgPjrsqKK/x48I5fxHBFaHQdFjR
4lFS5pPKSuEoCjZ8E1DV7qhNL4AfNR6TkZBzHVFlnfg1tYC+LhUTCcJeWMDVQuNv
NEqU0ktLah9KQkvgXMA6X0vZnNw+qSAdoqzXAG/ijevRiJoaUqEAqfn35pCIEw/9
hDBkdZs59fOZUdVTiVfq52tMYS44AeKFya138YgN/0CJS/N2+HSJS0HjkuIQzSsB
DUWWYM3Cnr2A3HIWFFuhSm9aRxr98dRkVBoUvSiNoROm9oMSTqfEiO5UkDFNPdI9
clV8tEQkmHFj8dzM13zO5+ujES2bX/p7Ff8Dk1LWPjiMdIRkIHSbY/kkEvJXw575
WF89Pocc6d5waulGVHMCCa5laWiBglyO6izdy+JBqVVbXuvt+/Z29DmOLGrrfiPS
VxvotZNExAJk3EVyBrZs+M4KyVG6ADuzNLn9aq/TsNo1p4J3B/fHAytamWxdEptw
dxUiRaXKeCRB5lAhZX1x4aHXYggZVJOrVXjCtJ3dsxi9ZAlB5d78hU2o8LU40OQM
baCOQebYAHxyqevALGF1ZWnVIgSa0OyOrOSdIKryoElPsR7MPv3Q3U6idn8bVBzX
EaS4Ah1h0ZZRypPjyhgiTUx2RkFKaSzyb5LdO5RaXWcmw1iv8CVFqR8+mwgABEWa
h8jwIHVGQ2bRtHGUMJxM7mbek8OYrSW4su9RSxMvepDTIi1JgNsJWS/8ki5QAc8i
QJmH+5H6WrauBdTukEOq8dB1v2q1alxxjR00WZcXSYWOYllc7pnqtmEMeBoeJDKY
e55+zAQVQeARbtDexGxuP5Jz0HHVCGBNJZtWgwGPpdVv3oqeVEIbsS6UvHwwWtaQ
qUaAcz/KRWxDzwx8G9kJRw6I5titQK2QeB7XDIRuOO0Q4tJUEWUHMvs8kdRKpk9T
1cmR3k2CRH8tEbLnfv4lhnhgN3rGLaAFOken+EKnk8JA8eob2sRyeL5Z+WWnu5kt
Eg9PqkFFx/1li5KP3IS63jm6I9BKb94Wra50FM/hCJidL28uvAJYaH7dQLExzyMN
D6fePrkAnPAnZ/3tXApM3LgrqM4Mh8sVET2nCzRXaP3+H180TT3cRQPJsKBnGUlD
pCm1Ka1gqFleCEpP/1rk1/fFnXXboxAr+JbCtYVv30akiilWGs+buxXA9HeLrAVD
yHga/KeXZi8EZRihGRnG1wt1lcr4avn9hyNvl+ZTI1g4F9v34Ig/uoOV7lFddCYx
5ik8oS8GyeRk3XOfYz+mjgkmD4XVt3ZDr4sY2l1P+YLjTs9c39fGimD8qtxqS+SW
a9FNR9Go8meH7NDC3ZguocK78PFg6USSoEjKv49yNko07qTFpJYC4Q3eCD85VDNJ
HJzUNwDNwJkUPgRPVMjJkcrwVn2qaLIVwOZkw92xvcADgTXwlE93ltr1lChp0zW+
Hh5I2CSoiUIhlCitw2ZGdmsU+41tgLrbfBgZHJCot3RKAWqvPZ95t8IKbCErwDyK
Z5rnSiqMefB5drbNcZ0QpKIt331xu5s8Rvuu2oOZACZVgaSoIBlkcyTCVHcXq03V
nWfgLi0jMQTNNG2zkkQtqUnm9nGIEBss8VacXWOQmnPKZvyPWGJi0c9F5U81p01o
zhCDLGkM+PiwR2HqrUMwPARv+0LKBC9KNKXbnPkFvCtHNOLlvA7tEObaFahEAhBj
DeBb018FZ2Pd7G/B8yNsd3pN0jmlAstIe9QQBqgUSQvEO3PDoUxdcyfAmsXNqreD
wYofedOguVrba+KzLgSuesFsEmheXqc9OohKnSnfaDuTdLm2MZTJB3EBLZB6+Y19
AWQoWW79jR6W8O5mmYp8wkq3lrHq1pWBhgDdm5HCAwRFPKtrKK1L03POAPKm+RnK
SOU6WGCXSDO17w0z6D4tPhKO9bsFNcSCHim6ME6lwmgGBst3nu9qd5tcRrjd3B/W
fJ7Nbf51GtyXkXA3+5U3ms54tlyWoWoMpQzdNLt3/u10LSxlrgrsqb1e2+otymAO
kPXwclu3zq7NDA+4jbrul2NTnqyFfhgFonVj1/nfY9ub7v73B1e86qPeTvdoKfX+
FWxu9o3cLJyfJnfHF0deVj2QwD6y+M7bgdMTcJqoVakQBGRJOhPAZZy0FEU22bQ0
AqnWrwjLK1hFJdO/b5MpvegKKdjLSNZ6BaQBCP8mbdwEF5Jv554Z/WHGlkMRG9tT
NNy9yeCGqiJFWr2+3GhV0rp68yIzXXbQEGiOVuOdRB+B2arpTUzxWlqmhvTonxEF
NfP+6VnHSsbdYojpJY4lxbYF92Rkqi5QcKUqnKKa3Tp2do3yqfUBAMqUsa355bkQ
JIHe6Iqqnl1ElLqGJ4tE5MyvIIfyjI+bB0voXVWkWHDZ62xfr8q5GsazBfSD+B22
04GgARc6y8kx8eTBcVXOo2AEL7hgUxKK+CnW6x0XAmSMe+5bfv5ADSAm7iU2nhLx
sePnU00GUGJxpkLpgGEfwn3GbN4thG9TIQ3CgGTXVaPtnCUAzXXfaaA3HUJF6BTX
94wRX+tTOu0p8ShjFZ2/Vn6XlKO7r6IZouJRYTYQPxxNl+7WfZb70xziUJ/GGkTV
0NXUoS147Ze7UkLt1KSBLX5vPCHyOXYLunOvY+ufHW5v+plpFeUnsXo57DilBtpE
g+pjWJYQpntRfpbMVBvjOKh2fpk/YHAN9Xny9CKDzXrHd1Yn588Gks/PW3ZGjKHk
3+31sP28TQL+EFRxCmFMAGyphXkr5KgF3y5bJwA8E3No23jXJIN1LlbVM3aK6SwU
ZxwNuZTPSQH9ZrFuKDZFZKlN9xWMPlahahIXOHXkubkxVwSXyHtGf8L91TfDs1Bu
QeXKKpLn6wsxGDzsGVt3vIivJDfVcYCQLtqrVHk54Av6qL71ySD1fjwGvPhhAHWM
NbM0aHdjncgNOg3T1rPKjgY9rynigvv4RKiJV69G5mfBf1VxLzTSORkDt9GJO2hw
azKilTkikj8YlmaLT/B7GSUWAiOk9dYynhziC/a2FP32WLLS5GQ/9b5OvKztV1s8
DCYDmf9vk9lkdSI1IQmHRmdZi3rxjvn85YYKav5rQ4pI3225Iab+jSn7eTb8ZaFM
AVLBDyia685fA/Fza2yEQdA2XC6lSmiqJVewA1k48/byxQ0xmwqisWEOYuoiigtV
t8Pi/r91CYJhJ/gas5L3MEi3TN3MLzx3bdWUw7PUO3npfwbQJ2klm2mMVUbvVPsc
13U8oIb3Uz+m4YX3kI0ZNxsZwFI8ZvtCnhOxxuQQU3txItHIU2wi+w3hn7l4b5tO
/iCwEoydLeP9Ng+iQRMgbNSyWRwmcuNZWTDyz03uNuvOZxNl0KnWadbY07+/fzHu
U2kpa4l7agvwZmjLlIBY2zkmqGdSfixt3tYv9p0lgDvYMhF//L5V6dn4GPdFdLE6
82iV902M4GZHJbiXUKb1T/e71KKbPkp3fSJXAn7REa4DgkCzDemlLLAnKOhNmx8T
fZY8TVW/XY1rAJcvhGKULY+n7b8tEmlspT3Z/ojAph6m/YyjMBkwM2k5TNv7xNr2
pZk2tqjKo+pZNcQ3VOSwakjTO6mX1+IOd5gLwaRrCUGnxeVXreHxUbCMxGx1Lt0s
dDYvSeXLtN8jmvyErhpfbl2Vpif5ZAEGDvhi04U3zlGixoxpEuA7cJKL4azwnN4P
NAqBhrxF+aEyt5CwVJDDor1YgedudT65n8dk273AGYnfDsvmt1k08ZTlY0hjHNiv
4j/rrXGf0btIt3bBuIcRwTA4axpF75nme3OWKCfiZtWttHrh/deCgfRnzzCrFDZu
2czA9KLcyYk8+Z7FJhb+3Rf2vD1TNQyp9Os5xc3bsYU4rU0ace7vdhL2BnNNg/lB
aEiEN2fIsn6FgxXywqmIw/xPtQd+aoOIEjs794FaT/UzXU1zZyUQ9FRoClmAHyVn
QC2gtd6CG0b0UaUy6Bv42yyND+2Y1rTBO2D2N8budWqt76D5mp46RQgtV+TnF2fn
CYoU+q+zFmOeUI/azYEa7M4N1j2T7ni5Ups3MT6gBzMykm9c9xpFZN1m6c8cbXxA
Ie05SR/uNQY6f7EgyzRZjzZmv3pcUT9F5oEQzH7f6kyubd/3ATJOwoPu8rK12s1U
4oisg2qwGdV7f14tFRE5LL3Pp1q0oFGo5yNZ9hB7PO9L3z9+2J1S+/49WfyNDFbq
cfhljcFV1A432jcIeVELXhvi0a3Y5NI4/qXgw7ZvIv3izGB9+bnEPcaP8Zjh9RkY
jSGGo8TE4lU8I7NlRivd/0t0sJQR1Yhb52IFe/s4vc8ZztRAQW+BaqWpaVmaSrAj
LN4gqGh6IbXPEeteDz3hlV61X57YmACCVmRYS45cYSiUYK/R6C0jyMHlt8/8kkd8
vrvyolJXj4Ja3NIuPZFL/2Ks69HbBwOGH/z+ncB5eskojVVL+8MNcRu+6Xj7t3g6
R0ed0Bu4s9AEBKv/3Ko7qCHsQu6vV3+SsgyOnGayvwVkYpb+V1xNNqHlCGteO65f
/QbziauHKkRrtChxzOcsWZkKw34ImxvLJGqZ1jmXV6OaIRveMBhN8Dkxs1c0phF6
dSHZTQ0EGQ8BANZwObKerSGCIsbW47GpJ20pi1Gn7ynLg9dR4t21bmREtGAUtR3Q
Qg/8vn3wZ1SqyFLP/N3I9Zd/SLcmd9gXIpfoKMXBnyY77RxPfDwBeoKHCslCUeWd
xTAPxkHKGljrhoEFiDptf45lyJieemtTjUw2ciPn9dhsVF99bhZlq0rCcgYltXiK
o7ZakJ1z6OTvhJHfmHW7uoWscZ4l6MrX1mcS1NUXRQj2uzY7wMQMIGo1rMUkZTM/
CCAl3R9iybP9gG8xDyVrQ0p7ydCEsmyImgR4GMt2PLsp01gqw3xHjq5c8PM0PtJF
OSASksM53QPhHy6iwWkejjzvjbXTbnB5thHNnqhEPTiEaoVYxF5r7rjymrFQpcPo
Qscoxiq6XqsoX+4gI0WT+VLdvIcBVBvbDCgC1JpryUJg6ysXEmbQlK+hAZgD5ELm
pH6sscQCJvmw4KqLWlUaY2dnkRdVcBKC5rDucBQlDINXnXB5JU3/tsvRvyG9sZhy
yNuydRBWWODlYy6SN5vmggvSJVoyPVjz3c6Q0nSaNgrb1gy47S+en0j1IM3bSi/O
NQGDaraVwOlRvimf3RwhdC6sIQKlb2AiGkLr9XfIk8r+u4bqZnSZOVLLnegoFBgX
R53FBDKZFPtOQjUV6EPQkkP69UBr60BUUAlyoKBhC04pBVhYsuqpCqeR1a1Zbsdq
AihEy7GIANrmz2w39zRZ1oGiB7NC6Dr5JXFAYAln/QxEgJVrzD3StGEhUKPrzpGr
OHhdadTgWx8Sy0l7ZZY1Q7tWstTdP8vs2/g56R/TlGkd5dN5JGALMc/WeZNJozGY
v5FnVe52AUUwuipo/D4AE33mmf0NJB/EMjtR0miiYMd0I4hoZQoM10a4904EpA85
laI9/BAbeu47Mr1RI4Xx6ZCMDQp+f+ztm5ah3rSdUvX5t5GtZ1PPNa6BsudLZ2HM
4UEeQ9FtfQLQ0JOJb3JqbNBZGQ+xH/Z9lgx3wLGuCSSLL8f4L59ylvEYmsMAz5jV
ULUecl6BlVW2xOU+v3eJarX+bjpR/DhvXqC7QjT68Fm6a46epxPcbvkA6wDnug9P
ehyE06/5wQSJ+eVVHcbnTfuA22sIpCkz1Gtc1JgpyTfMGVfxmHFZh+0iS+O+SabI
LweCzT+BkxL9LU8uOUcG46Fwfy+WtXgSxw0oCvhN+3chv6SjMjJwbdHWQBcsUCe4
lNtV60VpNZZdQVsUowF/9HZKKEx9BU/ToAxnzhhh122YJ1MU6IGLP5LkmKfazWPv
FnOZ5OOI7VKvTHu8JtQZC32a3ps6iUr/WHBg96VouWJS+tbosKoD+BzxEy+MuUJz
XUZG9Fch7DHsGg3LkuIDfh8QIUdD87gSErCr6s1jo0Sgu2CZABSiL2E6872mLWKj
QAnJsaOCc4hyn+HxJOyNMXHfPzD1TED9EZsP+wy5r16RI9X+A9GfTGEg1uRy2Fws
hfYJjY4Z/y5umoSax2OwlXwP+2yqBW5fVPtP2b4ZTzaOxQo4jHaw31atggiyiYUM
8+Zr/Rvgb8oqkC+bYbp5exavUeZ41JRgbd8fE3k0UVeeu/f7vCp/0y+aOJUNc0jd
eGPvuQashoCb15cX8xycLLztsNyb33/dCvm9EaMzur2RtcNq31mpdAg+k3xrGCaJ
Xn5A2eatSnG5Xxmku1rBNUrBb6Cycoqt42X//xDaOi6+StMpE2VeSldIq0GfkGmt
98Tw9nu5wrejHSTg/e3U8kyJBS9UZmsLJCLFOm/gxjrCR95d+hVRPlghpswIpJh6
WMuYQvKLBXAGf96XtfLuhfHw00L7PlJsfypp8LoR/IoEfFsXOPO1aRZAtZ5f3lB5
bxK0RC8YHErTghQQpD/9viEnCpMGV2BrzKKrGnv/9AfvWjLb/DTGwiyAVtU9ot/+
TFQ+yx+yDEWeAjQFON6/cJd9vP+GpuQ4UkRpba1RdkAMff1leaBMYwvuHdbDKcaF
IQ74MpyAKr7tdlDBAO2swj9gDC2Mb0rL+AOa0BoZ0bk/Mwst+G4Dxaii+RbnOFpq
lZ/cWgY+Kpnu53yjNp5kPNkC2KYZ8ajbBQB73b2CuLGiSyDIxIKeTPwX94DnWc6t
8dt6v/EmA4ryvpcTxGqtlNUVnSIIyJ3s9ZZHXvk+51XTqyculdLWDZtduLd/Jl0W
XIuM8keSM8YSJkooR49UF5aod04qRVorFoBvkjYHQua5NnSWuKePjqYWJDAOIbFd
jWjKWv4onn2tpI8b8LzxOMuvlYFdW9VXRYcrLifK6njLbY04Yfkzr6jgZNtkEAEk
ZTGUdE786pCY1wwRDnGcpwCq+CCOsP7HuRQV67bnA9y6KY0S4jHZ43rnGywd96eu
dFTEKuyUGWq1riFtSPMtC5JoYHN2CRo9UlLhMBeixPLx6gAXQwZkS92hkleGwaWk
K6878M6ji0T8BX/qGnAalkq05O76Ur5eCDOKyJ5qlf4/vmOUmwMz397lWZH9dPcI
0jfRiJ2waJ+mc46nJ8I7QKYjheia5p6G5NzUqyvQXmkf9+SdD+bbc1uejLcEmEcU
OiCqW8f6OgLEUuW+KiZ5P3MmkL6YweRMSiK9bKJDfTXR0qaqHTEZESFJ/UjElxVr
ca/5rFSJ2wAfiYulUqKLQttVOnKiVA0cimnEdI51sxcBX1A794J7EmG9IQT8WjL+
KDMWmr4UbnJH3vpyW9bq7RuGHCxAoKrgLR+LVSUbiIRqrRMP/iFOAec9Pfp5ICtv
TVz2kJb67YunyX8xc5v3wejB6kj0rfrLMFn0HEs6/1Z6g04fpF1BqYfcFBKubb8h
SPJY24MkPC+n+oEcbvwSYYefJySDUH+FGaFxZUbZ1bP3EDlbkb0udnzYIHcPN0ag
53TiLya8CxIRlF77Q+55Z71k+in/3Q9hJc/gdGGgRYCt7tejFJTZ1Zoz2FyCWYAK
+0xjSxL4wAhGMXJXR41NpstHyJ+PahAD33hLl2I2akwL/Y+rxWjq9r5DQIo7cbAU
o4Uc/56rT0QGcWkws2aCOtAXCRXb1B/o4wsMQ+Rr2aTmZf9+0F0N7z7p3P2G6zPk
OpwJyf8LFxX+EpmJpM5pcDN7FtEqgBkb6nuCRzF+UEAt9hImdtQWYNYFbgfAZYLU
s8YHIEIvDFgnkBV72MbLbKarxxwTSMYSrNoJEKLYnskoyt3/Gx2MOAshrJ9nAnrr
+GnieioMvttb1dKRsz7xAEgLzYESMA2d+VBzuSTgRUJil9Ln+8ebhyphGFR78Lmm
Oe115zswtEqnmeYmABSC5N8S/Tikd02TYSE7MlrZYC/hPbVPBYYtSVPbbBN36ZbP
vDyOj0J7ovJdBT369q0H8h/4aXM5WYsIsU88dQpkws+rWmwBSrhfvcbAeSoNCPFF
3gOcqQvgR0NdmfalZEj2/yH6/a4ncNnL3PJK+Hf+l59EdjQzHjPZkjCGcgsSzpv6
AC5KmIVNl37BtV1Ak6adYk9scAhTernrj0nrvJFDn9FZ+0hD03WJVmltiIkiKyBJ
hmWXBNIDKJdq56Ayxj/BGiGuQV0l1LYtMvGhhgSLxmoK5gPDM52FEleeKvMpV4PM
5UBAXyceg8Ygabsxdq2x4615rH9d3DVPuBOJ+3F4ZoOOyhFpSFB1d/6MMYlyCk+r
yU86IYZdj0dXEqSEDoCnNUdTHKpSGZBjVGLWQEROYzt5noB/vGNKe7t2rLYHiuez
W6ut6ZAUr0CgDdvPNj5tbvOf358fVXJpUq+LSMQvXIn52h5sAUtHLnbFM/v165o2
T7ULkQDXia8NSCxZgzOMupTJeZwMmly2y5Ynnqlh/y8lPYQk8F56n3uUOUFPvnUN
EitioGx2LQV2s/eZNOyfXL2+Vpg9cBeOwNr4xrqGPghA3RflPP8idpDVbBmpeYzi
Nn7HZOAYiwvd1ofchx/PQsWZZmgR7iJkn9z0cQD4IyYP5rkKVooZvKrHsAMs7iea
Lj6s24g+zMsCkPCJW71pNTaFIrVSGGdFRdOGlgq0dHgBqm9i7U7WNbzVsN3rReot
yFA68nA2JChpbX/AWPQpqGUN/W/Bc/vcVkHgxPSmdBYNuVcn84G6VT8nyKn2WC6u
IQO8ak4m+uLY4zoSGSJ/+ai9N86I2SHZh5vCnTZjJmy6V1vyGkZwgVkp+OJtM9Y6
2cEJO7e2sa37/UHnQ9aEG4D2zAn06j4p1vXgHvLXNxeie8E5mzFL8Ja8kRSTffNO
uqYGZ2VHJjX3Zx697CKOGxjMXlYybjiMruhzDE+6fe/Z32fBb41NrJKuvYr9qBql
XDNjXX8cGzvRqPWqebzue5MPwx4yJQp99GZh9qzBN05vJKSyEG/Q6jou+AFXt2z4
PFRxDzYqPR5D9bJ5TJSXc0QslNN8cZcOBpWO2fWu9yX+t58qVihb8cCZVJ8dqLYs
vq67k/bdECKeFKE7/jHJo5o9T2EksDYT2573rn73LRa/ZM+oTAyREh3PZXo7bXO+
XUmaco2Mmg0abRJtcksTBjcsskoKGNtdUWg4bpLM5MJ39mQowpmLxjGabaC9VKjb
QshFndHm2m7T6WUu6Q6PhZdEq7dYZljfinR5pVjKmLshPApQH0R0E0hC1hJR7EUs
L83+rJzmm2q93tXSn0JOe4Gapcb7Eg+uY9bkJvFjaLKF+XVJSnZDC9ItczF6N26w
K3VkhFYf5FuNDqdIB8+193wP15hKYnB9ANbitmbSdeWZ3nuhrRnHrSWG4ct6pWb3
qxESvHeklf3vnl7h7GewUpmUJLeI9QYx0A0gxTzKAw+mgvk98DWynoYYZaAfYt+a
aBbUB9ANa/VEvM7edDZySkrW7531UZBmIljRoz4CaEe+YEDg4Za6CGE2JaGeuwdP
x5zbAy+0/+x4/rY3vb6lxqomAd25YpV6nslG14mosJciQnoIckeYtWsj27//4Qc0
lVIKZybAal03jptkZi/Dq6c14C/EiPzm5bU6ewjavUMhTLW42vNzCll3M82gwokT
Pz7JiJhXjmYYtUvU0t1aqWmxbmA0EWIoHLhhEf/zLGf5TltvtCZ4OsLgBPGi3cTl
xxcVXCER3f7rQYxMVTBpU2/OSS7F8naD0jrVXjAmRtHfllo6YVmAKuJhq0RNKRpM
VLfyHZGAZSLX02cWZ5iOOGdAsUyCJ3a7dd1kURgbGm1LNwzTpqXfmu4KFdAX9x/T
++K9026bYax/JAr5jGc815nAvwR/mAG/TZizQu6ikoqjLMcnMfSS8KayY8fExzQW
lqf9cwIdw+82pLSJVdrUBdVc+P9q7k9mf6ojP9wRsu29buUSWa83Vu+y7FeabyoJ
Dixu6sGLBHKRwa23+IyfkPVhWXbBR7/Ri83aejMvGzPdE6FzE44N+EYyGqiSdpor
aTXxBg//iGGO72PxBAu4GeTYK2fXd6tFYehRJN7TPsqLnRz3IFyU1G93XNN6b83K
1TyCHfgEmMUPuYG4dtHYYzRMNYy7LZwWG0ACwAf7iPiFXUT0NwSa5eAvnWsVeVel
VDiu0Rv0/5NBtptKjrvHt0r/HKjdo7y9p5xQfhkmyg+S0TcIgH+0LGL9lAdnSrcp
iPv0PMDuPElSICjhznU2UXVBS20vow0zPPeqi2mO+2K+bl8o/N8tkh9UFS+gwVh/
R37RoPB2ECB/Mb8y7QOnmMrR9kJW26jEbUs0KNNsmpm6X7kLVyZR+h8lNGV4iRmq
ubjN4xuOuGO0XsGBsUPmFiX3q3vqKbEQc35XaiCusAAvXjT2GumpZOCPMrwsY6MC
K+v6CRgvZRijsLa/BF0ZFpqrRCEKe3svrHWN5HSnJ7sYSp8sjHnwarnblNDXc3tk
4bHVs+7LtEP4UX/Cjp1MTa92s/eG3GgV2k81LAmhDpeOncgijWrDbDJ0cloyQOn/
4m+bBNddP+luBVzzBPfAymm1TDj/Wg9lOscb6XYb4/qnoKHIvBRxjjEN5HBhrZRI
l/3tBNtO4AD25//eF9D2TSf1NuYNhTPpINnuz3wtBLKA4iFBJW1mnPnol1nHwl8j
GX+IkejHAwsWWm2bj1JFNMlGqGSQjqyhgfWbD8hkzK9a8KUiQE8gS4mrVIHB/6Cs
fY1FsAhEEZiDS0hMAasouxTDq+dp8iYZhBcHcgVqONXFEOxWKmNzYYlTIWDiq4oa
IrRi9qgaHwflTN7t9EBv4c/L3D6IQj2bxCQyh1vXtS20+Vh/KSrmRq8nO/2qHzDt
1mRW0cfS3VrlCql6xFlfBt9LkH1HmuQ/VAqQs2g/t4Kt4yCknVwSkdKeOXEaytiX
YE4jq1WFmamfhg5Bm25uOoDvJoK60YFvoZZMfC2LcJ3J9V7O+ylFykdhpzNCVqod
ZlLgaLmmm9pS0NjH0LC7VsoJkZeXtEwESVGKeK3nRAaY8K/YKTQTQdW0GhSKBg++
xndFsyCjrBSDz8SVF4mJEYTHW4EfsyIejheAmGsFSuP/oUxVj+Y1GihKAmbkxHgw
WSQ8y7Jn99HH9hwAl6DOf2iHGARXViCgGevie/Vyh/41BOcTb06SkjmV63/5e5cq
+DvTXIEQKcw0wvR1MUD0k8wsZUWklPhiZBKBSOIZKU1eLRzQBGU0r8UFt78IBe6w
O7dvxd2bSHrJ3MhKijesjO/Thhje1JV50wqRClzv6PzCyg5oH7T4vgZr0eBKOnHt
mjFEZjgGALtVJFyeGFU9ZrmrjHwj1GKTT49WmFOnMGA0h2v2PDqO4QZlDN5RpNE9
7VQO+NeUT+y9Da2G/1Vijv0gNF+KVmiVdwoF8ao8bRT6Sco4LQR1DW7yqYOJjQWa
bKhqINMgQVGbU6vYR6VdE49iRiqDdFu4TKrp6sr3Bg/7SkOoshmjLCGiIW7QOqJ0
QjnYWWokn9CU4KrPvM4vYqUPFwg61Enr8DfUSg1KSA8dcJjXE9SMnjSDuJZoPYbC
cD86zNvmFrBWhgYyaHD7g8zeYZegyScBC98K2q3rVoV0Y9x3KKGyEToP2ompV4OY
Kl1zo2vgwLWcDjvRv5+B6Y671anPzwUVt+g3XZaXm/aenffx1qhkSg/PRHXiEEtr
uCROSa+s+a23UvrRYRtynCSIi6SszeC6jz1SSwaGR12SQOKHUANh9jMBk+soARH3
4i6BTbW1Eh3Qb808XKQaON3dI2qEqpOlEuziHqF6OIhn3/aBHFhV1nuKiQhVbBYI
g0jER/w0a23JX4cXaMmz6OxUMu9ocXI2bDa4Bqw/7s8+XLMo3r+8o5iqMR7r5XnA
ZWQME2hc/tbHDlmKxsSFbCFcawEkL2pnMrU2WfuEl8GNb1X+5apsNhf5dTq7e8hs
jL87Cd6O39hYKkvyXWV2V8J84q7z7S/o9th+ncnARwmwD6/6+1TMiGsyNdf7meTC
p4iOl/r255WRZakUT0t8C5Di0cjyfAPbUZBuc0TjoaTg+5rmY1p2Cbyq1MBAETCF
lMP/HLPRCTffqGybmPg8MNt8NimKdhiB6EsWYH47HVdqmdu6FvDpNylRJA5LEz8+
u9DQ4ndtovZu2hX1VqpobhTPcd4XlHkIj2yi6YfeauPcEAqOjA1AhxuVMMt5gIQ9
++0uVS+2HEJJdixErFCH7peU6aMUER6zGNw6qzZbdYayhZjz4vzhqtUl/tQYJXAf
Od4DWEiumlDuCU5IE3cocwG0t2xPqKN/l4o/G+J1pNIIEf6DWHSNULGXihlrtoRh
MjXA1j3imY0RXl74XijV56rQtcAFurtE0qayIYA/qGTLH8kgfgd/RM3XSorZakIk
oVOZHimk1HiLki61Zxy/07ttr5CCdKQYDpuUwqFo9OiWSu6lRhW+IemjRNe+1Tkl
I3UfwJUC2K88Fy16H+WzOHkepUpb8ImJb64xrJElcLmvkytuEE7972Yagur54U4P
yLgz127cdunLwvq8WudqaWyiSSUQ1ZPx+0dAB4GJL+xGjg+atn9lO/TSebY7ZIcr
IcwVBUQd1xoQFF/BghafaDsUPTRa/DK9Elj8wNI1s9TaLsH8Tw49JzSRJmb2GJ6H
BFsJuUJyuAuehbfkkmY/sgXuoUsUeWnuxCSdjFmpedchFZbYp5wnd8s0+HwsyfyH
wP5XLR7x65Ujvrrm+KBlY7tvFqOqR0fEhPx1rhb1tbYY4pdiN9aJ5hOb1MpWKWg2
XqJqGONvq3NLvr+Ca093s+6np2TpIg3GLhUr1jkDXROCib7RW2uWKlbGihn+F7CY
pwQ3Mc24p8m+eLKn31vo9fm92tRBCTcm3v/WTbHMZ7oF518OPjY1u9+y7jYUGmkE
tk3CkdzYIIzg/VCtm6yX+uOI/Pk0OVmLSh0MdUtcR+tPzXnYY0ov5ni92vWUysTX
UMbN5A+IJ9qIiSBFCN58pGnNH1UQ7Yi+zyjgiGkWJOzwbTTCKM70aGDQevMNgttH
T6NfPN39l7g5bQzI7RvlKccwkBg9jGJx7mdoN5RmZfL3dODlg19TqGfzPSr8SGq+
4Jfv/YfCqpHlltcAuV9louMJtNZu8vtEV783f+UKiEgM2oRO8rJUTsY1ztIXdUPT
wOvYbCKC+1Kjj8124h8yReK27yXmhQ0QpT4M1d0jBvU4O7hFTROzKbZ6RujCrmpe
ngxf6V1lwJo1hK5DFuwGrpKyiwte7ERrNJh97xHnO8JoipcgdLOBllPMH0Wtx4t3
UBRJUoKtoRWdt5G0expvmkw6IO5VA/y92djFY+JKTcvEdYjI22T9WqZCycxWKfga
f8KPvCbQ8qR3JIm78ENPVHA2BEWNGhhaL+WbVgx5rOXwuf0Br8owixIMk3ZkteW0
LQjoKEes6KZUQ9e2P7MDx2vTdHfJTKT5wcLBom5lwgzhF2y2BjXriuE0adCa2ITr
kjE+PGYAZLx+5nf/hK0ybOMBEiECKa3HJQASrlXeY+64RN7hV7RShG3yt2PetNcV
eNuhD5DJ9eTugbbW5MJu71fVL+kASrPiBWrunT10uEbly4YEle6L7Gmg1n/nFa5k
UClZqGVlzg7L4hlrohyQIwYOJ3aXBuQzJi3pfBxNBg9drw9OHbRbmMNoqtaVJTI9
+rCpErU3i9sAoLb87f8F5dBZwZey1qdqDv0SZrZCijb9n4JKbQmyXhKH9MerzD+X
suVPRWlfnQZMlI3U9jexI+P5PC0JkfQfFpUZiJPhL1cQ9yizwaUMduiVIlwtlJxD
Ord4KWCzOUypaVU8Je9yjayfpxq0shgLJ3LJ5GrADqkzfLe5xns8nvm9B9zEzHXx
jJ6tkeMLzaNCNQDmtsN8Gc7xiTC1IcDxNtESzNsckWUaWl47eZqM6Au1sNrSrWeh
jtIOnp7P+kkRrrqcgGlk6RNHiHfziTBD0Ql4H/2dG6jXOjtaJlQzVb/OHSb97dob
MrY9U22mgst5NoqQ1x+C/IYAqv/B0P8JRNq5iYOtNOj7IkQJwkntiGNw/nWtc6x4
jJwiHrGvuwez8oGC9tq1iFdZpmPXV8MzRxTQz84IW4aMy/RBozWtTV/e0eQ/Bb/R
UL+l1FBi6Ob2ybKovh2THcr3ZINi6q2/l5K78YtsFDtJNpfH4AXfOmLe52jIepIa
e2FROSoe4p3iGfCwzcSq1Vo+ccGSwBOiUyCWaI4orCEGeMTobIGxOZTg9igddt3g
VgQKvHws0IgiJxSV8JovhDRnMWx9dIyzzaHqlEda+FDp92sf8vJANiliKBTq8ddP
g4LqNddqQjj0V3DlZnIDUd8mWBh4itaHPoo+tam425yarw5uT25oJBeM70sdgmUn
PA+xlhpMAaxKmvC3hhBkrjF0ykJzaoSpK0QO/2iTXb4Ufsl/QkAWnBeZuqrBqsUp
9kHK7HmQ3mtcmViy0OBdVwktoMYouftpFImQVpHHdHr04X5+cMNPpPPCV3McmZkV
Gh9He/EL2aU9Mve7w1C4nm9MUMfnmTYSeaKbQYll9Bo68zM3te6seME1PNC57uMf
tQMTYuxxGQsorJ+nkOdI3e8G7yDwWhE7nC8xJf0xD/MJw/s9LoclCeZJKFR5thF5
dNa16Oya7n6W0FLvDE/z8DNwfpVa7iMHYAXt2CbyNjP/MljIOrAeV6bUyajJWU+K
DfX87hGmKIibcpqoLZC11iJMdBrXeOX27fbtR+drjuIGX5cffncPP7K7HeXZbHkC
WwinvlYm1m+qmwzon486ZHHz0NKCJCI3CnwZFHT0wkkFZmK6Yc+YchStQp9ArU5K
UEies/niG/PjizNU0eL8R5pMF/s5cefJ37DERbCd7OSMZ9wmnvAmPVLafoLcaL/h
vFZJxtStwkG8dNehjNf4O1+p54n1+nvrD/oU/9jUPAz1iiU2KuQzuHhkGyHX1l5E
+2qo5Qzat0OcZQZCItoANhJ6y5L8GSxfQp8ikWdnASkpAfbDTjGc7FHwYPOrV2pn
5BzZS3kgUWG5k9XFZU5WFzKL7MQ13DaFuG+ECgVc4AMtvVPHE+xjZiE44JX0alZo
7FBMrJiyd5GK6xC257+v6FuO1An8SIpEGjueIc7emAl0oEasbszAdCGsl9Su94kL
R4JaEz8C7vaDBKcnh7XKJrrSmbZ7abaji39WNM9xeE3MaEiEHAPCjp3nSMJEYLev
5hyg6Igs7whEu22SjDEaHchclMP2PHyfxChbxi+KdI+SF5458jYzuIW2pFWu78vX
djO7bHugJsJ8/uidiz+/MnCppi2KdeFOb4rW4LvjFmfMTB6OMD4Zgt5F5MQ0yruM
WB+tdT80+r372hnOoY+sEi/zGqLgQFhIDfHYOgLYO7yNakK/Ncdfl39b2YDogS0q
vwBOPnjMujjZiHv6lrzY+K4FqKSfVjjI6ONCfDiIIa5DuZBxDpImfZYC4smt+5u/
HkwQkFn6rWO75LIVJWsH8Mebcn6OZBtYBFt+OTIizGggWX8b3bk+YGa8ztiCEqxJ
1SaLWKJD38VxS7UVZBdupCq8TBi1/pPiVTW5O+C+/Pkr6esFAogEP7ZYhc2mgsCf
tSgekLaSI0EoGbdQhNzgUu9Po8h583J9hWm+9KEtv/aeL88Sx8P2QYTwf/aZfJJW
nE7hMqDWWXnmK6qaV3gWVcuOWm5WwM2YmJCX/rF2kFd8xW/OLylWEZqfxgF0nEWi
7kf0eo9gCds4wvO7XXqRjRKn/TZD3vnZJziPKqdOVzlghMOfLQjhL16nQXdrBlhm
YD1qJ8HQA6yFBDV1QIo9J2bAYKF98uM5re7fkbSPcif2Zpf1IqqChO4rPwyoKqHV
PtKTmi36O0QjKApnkL3M8JUwSfizRN2yQC6A3wtI3X+gLQotHxmoGc4NGeipWQWg
qy/ArpHcQrU4gE9dvQHoCcggtKV5kGQac03BA5+JswcYP8Nd3KGPo1O3TFIldSGW
t+fBOjfjLd+/Zxb3m/Z58k/tBg5UHwFTQAzAVQmtDeHjscQVkLE6eZKlKpxp1ipl
HuJoFmB/wBbsoPSojGWefOxO3O5aPIovE1mOxLMJ/MF7gJxFehl3XGH2W7SC8NpH
IWATSA1I+aKuvOwMzU+r3/K76B2BSozkCo5FJhY0n4IrmUb6kmV2NuvDPcNOxOse
xAtr8dK+fFdsTceFezkeZC1nbK0Orh0tDVY+ijIrBa0fxGCbB5ajf7M4LLImKJ2A
Y1+PKq5jSVOCm8uSNk8Udjf7SBJV+yLNl0K1BCzg1XxTu2aj2MJglzDTL6eb50sg
7T4wgc7gDlqEPWJX5g7mg1UqABPgxilaS3coQdp3+XYwyi6o45UUueaKDBZ20AOo
4t8dKCr0+au3Ti35iSOxhO9nyu1mHgKHQ7xSxq7MeV3k+iHjLEP5Ezi97KfN/v2Z
Eyr1q77hejbbk2aLon4nfuMlWUcYNYhSnFD9EQYEEK3UhO2dbqaAgASaVU9HQ+mO
nVGQrkjGCmJ6tn6Q6wxttjsdzprhj5Ip9kjHtQs55LeJalZQQ2x1qP+rSqdcMX+e
JkXZXylDXaltaBWBTaPJoh2fgnMj3J3Eoj8D4bfp/EWwsQgZGIM1FbnTEpGQqoj9
6rD3J9iyGexKlZhzfZ7ahncolinUlTQjz3dWZVwM3yTN3hMqCQm7xobiJfAAPO/7
V+gaw3wukFRdZhItsCOBn6LXwS6yqdXxnr2XDY1GK5QJ8lHEIdj+q1sGJAAT6StA
kfHvjbx01qK3lfmrVZV7ycL6EZpMgEcXINdOwm2g+MKUcp8MhBrH0QpbAZWuTqBl
dogV8JeDdHRlz/9rX9bMbf36UdTarFBur3FSH+3BmqaNr64ytO30EMNz5cRx8D29
5owSAjmt/Jdx5HpyifyhLycF6uLkmWciHHa/sMimC2rbNsq8rHd3KbMdngHuTYYu
wBBZvG/VmXrIbJstlqJLDWHgOapVAw+WfJEuWCINiGLlwMkQuQvnt+ziOU0ZLCyI
DPQxr0HXAiHt66kd0verzde6aMTTT+0jNwXy0Ft6jrXni+Ik4emFQopkgXg04ArA
B/ZS5zC/xrUU4QfDToBijNCcxKtUYgN4Ej8G8UyDu2PlgbDCPPAOj5GwTT1LjEJ5
gwo/DqG0oM+qdWTC314WHZM+cjkWwKt+64kDOgMOV0/2qiVnnJUCFQtWpAxGgEvf
XdWxgjSg3aEeIfw+bOGLNauc7liOWIejkGZu3qjlQetRNouhUkGBUBgdIygpiZsc
ZtIPwsuKGi9MqbF3yRErfqU+WrF7ubxh9VOZcZa5wLsyMO6jvPWTuAkHrYPSrLth
voNuS5oHVI4RAhcaAPkSW9bhGQK3x6Kg61E+wZtbrQ01Eg91jxvUCdRcvj7+LsuD
ONtO2okuc+gzRf+8LdOktyZ4osI70JAF0wI9wgqTE5eJJ/w2O6reuynPdnlIF+BM
lhULWDLmzpAV4qxgoZZLwR+OTKegREQhi5ZbmosGwCsq3EhEV91Y+UjAXbsVUIKy
zw2z9JQvSV1ICDCUA1wb8cRjn4vRRxmZhYgAt7buwgIOBcaUBKlEsxCUIfxbw2FL
CZDeTAd8BzRMYUwv+fM/qkFDmovEDwumrUR0fT6UYvTXv3dKh1TE9kKxQ+ofRUrR
G4OCFwmT5M3T7aZAgJLKBqcOuGZElOAWj08k68EouWzozWMeMVmaEM+uUyCZ7FL8
v+6bxZNZKxm1aKpjBwnTuT+Dwry8llHCfIiJqPHSTDmVODeT8dIZBDmkscDT+TG+
aRYNU+4dZhshlqdyoFXiNnkfx3Sd/GszOfI2jBxxwFzwqFaPVX9Uj30HxPok52+H
uz4z/vrl1DareZO0ebsVh1LDaA44ZqqXMRvoRSfrU4FEeY1V1dtaw7+pvbLvKMfT
T3qc63c/GESUX8k4IKzZs3XXAui1l/7G9Z/3PwFtiWa6cjPDzf6pdp6aNWoZvDEp
+oJt4ODtjaQ1apZWnHM1t2PxOhUoAckvFmReCzAV5Uk7o279hpOHZGEhMqDNkOfP
c5RaXRvclkBN1BgLK/DNlIyDREUdMTTaQUo6bRQ+fZdQ+j2AiAVB0QXwOQ21a/o1
CtoCaE1ns/9NzfjfHc6pGNALABJhoDDI6DtHhHRAol9V5K4mLOaqQy9YEKeDe3ZY
QePWNjd0qipVuBh5PRK9LhrT3GuN3tL9GX6uapLxoOyxMwxWQ5QNd8MiONB0qf9m
J4UQWnWpuUSWIvoU3DKsSqwE8C6AaegW0w9YlXdFll9ubg53E6BVzqF3FRsVCprV
dIWxsVT2Amo00ZcJXCkrmwY5I7gfCPNZTpBNY14MgVNc+LAI0hXdgiZ9wijY9Rz1
Bgb0Md4Al1lsFCnGC18RxOPKQw41+AaIg1yrHxaT4R8z84bYU5l5A1jE0TVD2pSP
aIE0VnKXPqMOjivrPQ0dLAVwq1X+e9W+TmuY+lCaEwRni0WDReEITjTAZ5GrCoNu
jQ7qajOxned9q+b5ZwPa4T33VFHMPrPMleUVhSXbdUkzMBkFtlfBFrgVR+Dn/5yY
p6zq2eGBFjM/A+QjBIBwrYugjFCISvTaRj0ROifdL5A6oEvl8Z14+i7hoar78oa9
Jy+ylAJDb5qCSAEegqoA+EcoKpVYDgEGBoJz6NvhYQ5xH5d2n9o5q4vmgoyAd62D
+mpiAZC4uZaV4SEsr4PHnrR0SScXbmxqmcz30kOvGhv6MU4shC62iClvAzDjkD1w
3b9JH2pfETSL3kNUAV/8626KxmRpI794myRg65RAm+0YhnUNybV1Z7jD1SFR3bxw
J7wBQa0+/m4hppCQdJEHGF468h19lHHHP9JYML0Czo76eE7tsfgk/xNu1qYcwIeT
xcg4dwqpRyJCKl20nQA9t1/xl8UrCngwXB3Uwc6JgMCrib7z1l+RSVADvb4s207R
XcxZ0DgggnJk2rumk4DjLMKsGRamVFvQ21iKo1bGTDImqxlc+xFObw2tXDbj9tEZ
N6QBfc1+VrMOdmxl17yoSNtZCFn5gKK6da3J7+SX4T1/AMAlLHJAXlBtTtAuqSGr
tGtqT2/gJGwV0Jx0JGPwRLAm3BhLU/FzJdoB+ad0gLKKV2nTfCjSszu0w3ouOJeE
jpzxqMCdQ8vTFMX7ijJkVK757TQDKs+0Dx1A6HBevtoQJI474NJP12EaVJ5oettw
FkNELt48WP2CgoxyCI8+5O3aUnX7wVPQkEO8RsO/M2BROxLHR5kIWFUs3apkKho1
Cj3T1yyvL8M/HghRj8pVFIfpe5zZyH/wJkdR8n3sGcHA4vnPcAb6xgvFaVnVpdhA
E04EjyN+Y5efCJFxR0sHzW6986mAMJLNZcGO0kxO8hR7Zbxqp2td7SD3WY5AHfwJ
F00SkAauoU9xvYBcuHtHB5Guo3j4pQ83MmZ1asmCuOinrkoOWK5wotPdG1g0hFh8
LsCSVH0TzAeZwuf1yNEmMaHIMnrl4UQu6QxgHwPPh/tBVFh+ASBRqVwi0y1ienAB
aITTMCNMZr6B7zOYH/1iutNLh2HSLfnJEdzZGkEyckDguHYrH7qWzTMO334zdMvL
KSZf0RsvzbnijVZ6W8k3Jj7Bv1cR/6j+YMuYRYR7S7yCxFpfL/XD14qCjLxtzFw3
iy+qAlDwME5C2XHk+zLOkvn9HlTMS857ut5+YOnYf4kDImCM+yvGyNlRwZEnFq0g
9xAspfErXaroEwi1Imy2fjJ65Pri6+9c8BU8VUQba+Yrc6nYEFV7tqqjZ/hPoe2v
PeAlgPp08XuwLbY4/6yJdwcuU9u8PpVAOuIEF/R+qyRyiOikQ5N26RCa6bho/8fU
IdKLmMt3oVToBHvAg2onfoIsSb4N39K55xkn3fJPXe5idd8Az/wRShQShQ0pxjPV
jFY7Y6aMEmiVmZU3pKDEaGPQmm5UuL8Rlom5EEJ+7MxeUZrXS4zoddvCjOqM5WJ0
i5WY2SFACeQgQgSzMlAcryM5e/u8AHqDbAMhYY/5oGDU164ymngGBNUlChkCbYTL
cYSJo3eyifA4B2TjWoW0t/gcdTu9KjkDQw6Bf9A39hZSBJyCL6uRAm00hJovEnYD
JgASeneiuJzeb9rDsA0tyr+rfMPoCG2V2OvWKDUgQPIXbUR7sfKRdKB0IFU3mWMo
A9a84bQZeQ2X27bKDAQ6X/D/OghSggkcF0/21NpVk0hnuM4euqXUxn4jgUh1nZPD
0ykes3/LlQ3U9O89m7vIFuMwuJAqRl0UYn/SjZ5B7R4nuun3ttbaLK8aKF+mfulb
EXhILsJRHo0ngF8IbySIrX5qxWTIEGa14ruGHtvxKdniylKxHlfGBTxoJdTtRm+Q
7CB0hvowW5Xf+q5qh9UzYSXZW4p8DtM0u8p50zZl1rF+RG+NgPBaCmV8Sh6URl7e
JkyqH0BjjZLuZi9Sw8V3usqqf+9cBvPq99uopINCBGWUVKMUTl9tGVS7I68JMCk/
NHK40WR+W5NuJOHPFKXYYtlZ9CgmwZQhXVJps/rSiIxAS/qCCzUD3QvYsrmSkAk8
WzIqx5AIvP3oSY0cpxV03JlbVFJxrQwazt0eIlUvmGoizspSKWjireE9DHnTDhhM
HbGQ6FTiYmrX/oDN3WcmKhCTo5AxWPGMonG8OqLKEfy5qKyDmiu2FbZWkukWPuNS
cwbXMhKGNYKbiw4GTHpxxUAzkBqEvQQRmMkRmCe01Xk0QXz3o+C3QLunDyPCdss6
0dZPITH4Q2ko/k456K1X0Vk7GWZIXIMfxGRI/ju3t95aYG2Cw2m/CobF7zFEU4ki
EguYK2y8Y2uDtduqoCE1B+49zTQvG40Kf4O72d18+HvtIYBmGDRwVKR0IE+adCo6
J2ya98hyq2Wmc8qsL6TBLFKl6IhMH+pkq4/EePv9sJlrqbhSKx8fq0oN1a2AJWsC
ZBrmdGjCqn3npnpeF7rKEZWJy5+AM+USzqyeiBngpCPaQ8euhONkK9YGAUxV+xAT
8o6BQ4ZXtSPC2z/vqGcj4vtXyfQIntWewAyzwrB38tJEenECF5VHhEWCPDyUUFin
8kp8kHO+kxeXu0L8Noy/n4jNOVZPJNuaHWzUbl7m8/pfoRIS18myTzL2BY86Ex8D
RGDUr41F1AMkITbcvrhRJmzRnjyk7OEdQRQvx4uSrOj+Sy4gA8+JgyB1WsTQF7hq
DtjjVlnt8vVZ9/KjpjvBipnj7dh0eWwjTu9TRT6Gko2eDskp7bJabtZ7ALRsGNOu
FEO+cP1P0pqkpYvj6aWblstSc5tVPiKXirTmvYDC4GPKn/clmw4KZa9tepEr1o6+
+eibIUDNqNJlYDJOgxE8G7wqg4HXEM6FoS277LyXeS+qp+9GWzRacAq4fJh+A1Fo
h3bILVMbhXBjkwcsqB3mjVbTMF3wXdt5TQqDFD+FQdKhImQDo4TC43WtrFrmqGaJ
8oHpRbGrRh1aOeB+hqwwby2q4WFjZDwSEch4QCcaVLc6EG7fXfiCCVr5vD+N82+I
4UegGbHyhmqD6pwOpO/NGuhtk4lqzuxF0DPwl9dskcSgnC8vHUUhYsusHlR7nZQQ
SI/yypKTOVsvNXaz9P7Diwy++Q0SgfOYxPQJQl/jPObIl2PKiIxvBogHeq8IKZHE
rLisjWzS6XRLq8UDp0pt7S6zEp0rGmS79jBqDoj/wfNh+6YAIHn35sPL50+SSO+v
SvL5QgWz7uAoEQluW0XT06riU4dAGnVxz6kYT4w17QC9r37YnUyRpQbR14oe8rfm
Kvjp5pJ/LyY/3UB34ZHCFLRLOTuRouMgSiLfwyM1YAddslcARP+8J6uRrhym3HWR
OCl8E8TYdfXdQzhMIswyXngNDwXhWsAP3APa+/ghMFu37p58FxA/YrBmmHucPdah
FpIeZpJIFM70LBgVH9UN1rINzrVpN/5ca4fQnYVWfOT0CE9keOnXOwLmAq26vUTR
slcS9YMlRoyddFix7TOh9WPr0DbdHK2Ld9WOyaOsqlK2Wo+2YKIfurph6uwOjpwi
X/6IOSKrsj9AulHCWixtAUcBaMXgLGnBJeNTmcSZ8Jy2XT7XVB0EOCnid98xA4TP
sRvzcWMvyzf01hYvGTdFgI+A32RjD5xwngswS8nno6l9GNLTs+DotinT+tzZY98K
E7sAufdHI/SWeHrGema00vF31luvTI+hoOpOsAzgi4LGvdkcAHhgKScuM0mrmeYX
RsvJaWWgquAsbHi1aHajnhnaDAvnB8Icnyz+K1Xp6ZcZHLO8DDWZCYYyi9b57uOw
brhDml236f0besLiJ5L7C07Fd8XuddHyVjB5E4h40PQzoubFGs506T2mRLo8i3Ff
TfmHpi0a7FW1mXh1wNzL2lwNi8zQY5yCYGAOc008udOo4go0QTAL/DHoRAfPi1/F
spFhfBqJJliOQzmNEAOcLeWqLSphbi+b4hBMU0c9SoRRM1tVRWyGx4cPrTs2ujGV
JvwbTb4AmQAp+Q+pgtMZoAGMjn8IIljgA/GuupHT5kghMcHSP71OUDykIsFop2Ke
CTo5GSb5mfmQa0NEkiGrwuPJmKpKjjlcUx0V3Mbwlln838L3Ullq8qjsHrdbVYzg
mBK7P6LnOroVUNOlUYHg4iazBIa90U0Y3zbap8HSGN3y96Zbc7wbHeSdLvcBHqBd
Ztfz+UzLhQY21zybYPAhWCVhRWdjqMCC3SmgmY0Kwvp0a+IAPaDJtELybOeLoxh7
+tgwW/iDM1lCaMG5ur4Q86EA/oFaUAZXWKQ5R6+VinQDOKm+e/UMbeWLIfHJS4z+
aF+5Y+TdIp4t2twJGH7gHYV0i2eHE7FypTnwbNl31/291gWpbHhk0EP0zJSUh+2y
FYwMg+vYWjlbihfmRvF+SMubSidYDEch+9H/3V6iCblDctV9793J6St6JX2USQ78
7InrApmOy/b43+sAVxWibkHi6J2eWs6cXxqF1+20FlRxT1KBSzipyDmhJUukdnle
01FobtoPGf6JbOx4CFax1Za2cTBzertufQXaX7Igpq+qiXw6URSTKMgq18BLT4Ti
F9QMgr0GJbKoad+ewwXnZ44Ph+H+IyWiA/mzvW0JX5F67Hv9wKoQZUtGOnfKsGPJ
SO7JqiI+UAOyejqSydPBaStlbPTLL/gWwYmgkpCvmfhMZ1KyG3UwgyZBr54Tn4Tl
VpUvYwsmAoEv+5WWf0MRqT572eYWucf40rBKtRjccY3Mj3Dc/xuRV5julwCw0Zw1
txTgHTmb0/8bXpQisW+wjH4pjZrjHgEQYsDEzHWl7dXH6Ht6RFbYVmOQVrnJ4FAF
mNv0VtjkeUIgXtcRSzaKqFMaoORGYBbyAXW3BREmF6nQIPfFYJv5P5kUurZ544sx
8uVsfuVdoz7imZjBZA7f0jJDxzMBnqbBL4HZm2IZndtS1gVbolPdqM4joXM/uRcD
RiNgRw0jfUEg+pS0sWmMrnIO2LdAQ36NIV41qsOV4Xv9WcoVSnoFOUr33XSFq84T
4gDj6igCDNRRkklubbdLysAEgk1XaM3OvoXkiG1C02zxA1gGmtz8p6U5R9hkrynJ
twGcN86QSf0fKShqHaBxksYzxnssQf79ZIIEM9xTt8yqHwObgNN35sbzCMQJM8Qh
FTHzFuWXcr15UiWnFnS8KmjgUGjMF0zxfrnc3yAgD4hAcD8CWQ9snWQsmHA6mpfb
rNAvkiCF2qenDag9qRxIQE39UUHHPvn8L72wDydjqSJc2ckC0YhBAfrKO+KoSlGk
gKbKhtNhi0f8h4KDCsaj02my5akcPziu/4owqHhzG8k+APtf/d8tcS2RuX51Z4Z9
FmXECbrQUMQuLcDlul93DcwFb3P25/ipcT0SC/msjgK3l5NkTippfJgSfTEb8dYM
Q2gYdc82jigg0bysIczr5+ZbD4fqMABlH4xRSp3g7X4b4CESEyHlzmtkVZJhE2ha
tbC79og8N8tR9xIRuQp/qx4VSpvwblKVMc4yoJQRR2lUHv6V0rvjWKU9ms4zmF6v
NJzsK4IRPOpMOSLovlwArhsrTEvaNoGcl8qOU5QsT04QUE7sbtmGQhbrxD+EzMqL
hQxAkaU+46Tpdw/TpMWiv4LGUUNPNu/iBqGQqu7QlRxqyEYGM2MBS9MVn7yCqPua
TSJ76h5rLz4B7MRw1NUhUB5mbKxcSY7GovIgDY0GVsCR4vArWxYqNeTpfdZstdHM
t+Bce9zZOHMPyJl9ZhOCK9jf1HQB/7H9h9RqPZHxnmpFYr2i8lfzYlIfuyk7q+wV
P3qjT5aRnY/FC5KFN87QAUdPyRoCPvfkIEKtQr/kokFpfyqUuu14VMROYHMlnkDb
quh4CPLT5uk+Ckyug0z9/c/3ijfk9lWqUvBmriuoZCWfO6uhajlBzILn9xFinBbr
KDI/1Wp8Jm4bobZT7X7DLHWGsTy7ZMc6XsheNtEq3XRF8ryYGRkhnPBsG4vVWwUV
htIu+EEovB9Vx/Cq4h+5Fgr5PNIGrlBo3/b+ZGlPk2q9aR2fsJSRgl4m5JI28WHi
j43VGOl7itXeiQMuMaMNHYxiWSXyjML4GyQbh1gZQQGNzpSAtyxP9SGKNRZmjf4C
Yo1ANnqeuWU3CkT9aTYrBe72mcWrl+JOgQSXTzuL0WUksrfMqMYfnkJoLWDbgtSx
ouePU444AO6eK0JEPWtCD3ojAxqs7DD0uuQNDxRbChgkMRhNSWi9xEIrHM3gY++o
6Iutu2ml3lKKpS8XnUiE7HByVYgb0FMXQxGaVuaM+SQ7WHu4SKyEjlinxmTwiUBh
NrNPoNPlcl5tkD9SsELldj7NnyZPYoEF3yjbXpUOGl+CdOsFAdyK7NzzLqdkkcTD
8OLHGNgAmDYEueJ+F9a7RzerbEB4kOuU+q9nLTBtIPrRKLNmlGq/opLYAe8PPLmN
jHvDaibyevct+iFUvG9LVigbzt6P+Te6/+roLtAN1+iEEIabVAdkogPj44409QCv
785r1W1LJ8AqX8yZmgJ0qJ28Y27qqPOp0W8G51sJip9i/+D6vPHyIA379tkg9iP8
OC/PbdfviYNoVR8js1P9OiOg6h4og6wNT3QCzsO/ltbEtNGPozqGWOAOhdF+5GrD
Icl1j4sBuWmWOpRoISQ2vo7Ygs1ExhuBC3tY5QXBH/5tmBN5toY910NzKXQaSMUc
GH0PeJy7U58wVcgb0ASmWML8Q/Zag47eybkjWvVCJRWs1zeB8ke+m0ugV1g3aqbn
ZCStwDFvH2QToFtUw6+BA3F773kt3U/hIaS8YLMeNWdOD0yrkzOjxFirEFVnwElV
7rNwN1myOn4r4y+M6bpDBDbCIzzZqbLTB15pTtTPA8oClp8BIMHHE8zqkHsfpHab
4hmZgk45CvGHYy06/slf06FHKj+7/4emRTIAKMo4psuAmoQArhOocJGYCgnB0cF3
vLY6filh03WGrHwMg9+wpO/Hh6LBjFU80yPDMvqqFT9uFGcSYaFzyYZZddd++SFU
dfa01NX6EhRGZEmpnc6iM3HK9UKlP0yNopU5wI6aMNwolo/9SZI8+QPWduOKrOGQ
wHFk85mVU8oJPazwNPQEHhs3Ra7T8TSHEOXhsm5vrXkzJG9wvA/JtOso3IvcIouY
iCV/kAJbSCTihLG8Gsuar3Rx1DWMLsZsDM++fLPKEbStICzSFy0srqF8RQLGp/Tj
dhXdwhDXWEqibn4knhXAIIHmKgaqHaBvpFn5qhZUj8t+oQc2LGliBDxsSRyydd8h
5ycq9SJgAuoCSrnUldjvNFyusIy/WL4MZn8RRznwZK/sstDqppsSh2Fh8x9Y83OZ
jikxnC15iK5GHOFmbvrk7fbTqgj63Htzl7GDkI1iHn8WxvlThJhQhvS+facdL3PU
89godWn9Q/tOSZn01FTb1G8xnX6KAWsi+93aXq1CMOA0xLXVxeU2x+w0Gd48FSu5
GLur6fwHRavv7mWwWbrjNVWTFSIn69tM9+vAt0nchtBsLYIaRvLjHHKzZOildUIW
XkQmWGZ4tny38AHeVCZScMqgyPNEC2/OON33oks7mv2iecXbqDL8+gYYbzg8MOLR
iY6Qxyp6hSrZ0O17xwSi2OhbMITe2tQS22vudfnjYLvCP1g/Z9LiDTpYTU/u3d7q
ZD8Bdh7VhbEycuEXMPG8GOJWvWB+ZZeY4dqvaPs3rrE6UxfLoaHVV0N1+xyA/F60
fYtjlXTJEBQljwZzi4LjhdSJI21Pz0R7txlebRSwYKqUB0lZvYKTYNbemkYZflys
SK+O9SEFphN0jDjGAKYbJbyynFvhIdScYNNGjqq2XcRtDfbMW9LpTjczPxNqI/FK
+p+ABIb0WTKpYNLhstlSql9ZYAgpjtkjrTZ00EfIh78F2CT++k3VAmJ1Bzvpax9K
O3pOKn9HDTKn5rI1K03iMM9Z7rWPidXBIBgzIqvmDl9NIoXlKR+1YzAyoqB1CkiQ
6lQhB6ULyFEK14dNjSo/leVsklS0aXKTj2k8d3I3SJupf5XGT0BScn5qKkHR8lRu
DagEV5854Y+56HZk8TfsW3K9zENVpTKDCSQ8GJjwzPunfHWkeT2H+UERykL0HsKG
xALX+BpCP4BWN22sFePnJlw+Vx9pRSZpnk5fkfg0xDbK3BP8ehHHnJBIpbPFOUiE
vAkbSvL8FLtn9Dkmy3lVyBL9ciBjSeY29jzhCVUltiTuxBhFVfJxs7N1ozP0ITFv
rWxinU4LvIqqCzsx9L/jupN3JJm/TCfnK+v/HAE2xXcQpwI62alJVmlpYISvq2FK
eUpNb/FQXL4lxjfAOFPt8WdJfmlSG7G36K8FwUXeF1mqCbH3sBlLvUXQHHCZfJ8H
RwZgNwdBTAgkTMHWyDGPEu8LnZD8+y1g9UHAdjOwAdwzOs0vMpq+RLqXdpNNN6A2
IrQwKk5H1c7Qf/LSBnzZKl4T9DHqGV/DJuo7e2oxizX9NrIPioXvg1KrITDs9RzV
2XQYNe4354pNYO70Kv+H0MiOqUCcV7R72/NL3H2tvvfGvEXfLPygmsXaZ0Bu1Q3b
AAXj5zkok5+r3YYz34f3CO3WT64rZQfzG/veIPhlaLDwAweocncAG4uJ1r/bx0yH
/1CGLqx9mqiBsu1gFqUtBWuppY4JFMrfIsR3jJv0k5xHBddEa9JrRiSatLl/BjUZ
wkSuwRxpw7HAGSoCVoAa8NdKHbGG1zGaUuHB3bZe+5ezb2Q1iNxnHIeFAq4PNkqV
Z/OSjNN2ertNrbCqN2OLQqzo5dWihir2ChlV79oet4+0KSwFUVITri3cVAW6rFiR
FnZHjZwWllk9/45PSlDUsZV3fThqVP5TGa3ubXF/wJ52EBP8P7fRASwSkBshRKvq
a0fVZtnUyXkNcVg3OKwKpIT5YT7Wi8Hy7l1aGM6jKaCCEfl/abJ1XYBC2VF7ayzl
VU1fNnw5D+M8HAnGHoDb4Pi0jqI7+Yap0JN+cnYaMP1xWbGr8jsWgyxwit5MqSC5
5Wpk12TbK5ibrK3xn5w7iBJkR+ftWIVilfzLggHe2ub4/B7tBvd4OBXPwMY0mWq6
2W0hhXmcbg3DuwxNlm/tNckFWDETRsPR6RwvHT+YrPOfSuszSL1qtEzuoxvNqeLY
Z2xvYXtqiiU0DLM5wUjh1eBFv6vuwOTg6ubuvh82XnMjap3RsK7noglmGxOvSz0Q
5WX8HA7w7i+EYUuDh7B7ANobnPcT1buY9RZGJm8drLob7fjFWXby/09g6wips0Gh
73EqSpFI6Ng7s42XediJyF9vdBI/6By/kocq8Cvaf/IDUG12DXW9FAK9Q8p7MM5c
qJrwzGQs+GSJJereXFSQ28ICfsFak23L4o17YzP7FZLPYXbmNGtbJPImyCHsO4Dl
tzt5IIOOsT1WSbr9YkoDFF5DbBB8kioMOHlgOCwpyVxhT+a3n+6SvXIXiOC1GHZo
a+E/Q0ppO2c//KJUVAx/p81cBothJrRS1rGxNeaUOSIEzRcyCXriHCi+cg07Dbz/
VkU46GXfq1u3z6ffKu7r3X5x1O2gesgJrOvm8COIPBnH1hznvAiw8Bfb2wDz/49z
E+3MbvuyC+PHGbPJKHq0A9EJOCSX0bcBIetsEkjiWnwGs14DhfXwtHbQvI1Rwlwa
lETEIzJt5pWh+z7/EBiJoVMtGmp4Ft9Di75eL6wEUikCYHPiz1Q4KctOi0Lu8Ago
uNyo9Y5MDoazEqPaCnmmOGgn2vqhJP2wUCJw8C5Rwuouxvph14FofXUAv5psM5w8
03JE0rIy2rHFk71HbrjcVDzhi0/ewJYu/vk5E8BP9VU4UDnQuHjwLbpSmXAfPDf4
O6eb61GGTUlRl0PqybcyWtJ6SfAkHlH3KRsytXStaLH8+B0+ngwqEVHDuDgAa2CR
D6Ak+trI5C2FK2hkSIYF24vR1bxp4dBXFEEYuYD1FmoFSBgmc++0z+PrmssOQP+o
y3uQMyQdOAUMEXjwkBW3m1JLIxPt27k5J3+doA1afnB/23+BFER/rlRXXAPsbj2X
x31guSorYxEWxLKk2BpswXet6n3TSfihvTPvQ7NPJQyQ2CEzO2f+HNy94LR++d7L
uRFrfYiEPsObIN5WDj7A2Wt8a2Wr004hIvizCMt3ZLkCXuZLYJMMLcMIrQs7bimX
PTdDDgc9y+fzVFBUx6WLRJe0qZJeINc1zu45wktktLRbzfFquPYS7liVapUMyrg8
Jmre2qKSe0LIkvwu4G2sVIMDevbq376/UcaZ7TS+2T1VgtCsm54hSAbd59D4GF/J
Q/qfZfZBDMsuJ6BLfLHqh3ejFqdlqL9UMyXTJBDhnmMqXbZzcLa1ghmeEElL7E4I
47NnzoZJeM7nnY9bkbASe8ZwBl9XmW4wBT8XibVKK9dZrezqBGkuh7m6z9JwuzAD
8B3Uaefombz0/1zTZD3zLMD6BdihMtFJQ7di0bmpmY9Fnzjr/uaHB5PhxyGtQUzz
W/olbDqcxY8doYUe5dSu44oZx0N+3OTd6R5ra/40C3YXOgkQ7u4eJE0OwURWCo2j
i+xxaIAHVa/wBudqO3S2v/PMmroqHepxYwxwATuWNZa2HSmCHqqLWXM7ULQkaDfU
sJ9v22qXxBoG4bcPMX2Du3af4ArVRMGHzcio8NuWq8zvyiNn/uy2ZeUx1Xgoi4Py
Dw9qkGFL4VrO+uI7BwyD9xTbQ2FH6Mi5uJA3eXH41rhq+M0z25n7tA0rIpXyY81/
gw8OAKalh6kYVy7+vjFiEP6/Dhf7u2o2uyGtm2wDVBb46bpfE25Hzf+HleXvmh0b
P/sEqcaeH5TUnA2Gb2dlB0iiFzCrpy7R1a5yWcrvnm/wKuVJKXZagtGSvez/8/db
e4YKTJoVG3iLwSnI7K/Klyaz/55oJHs8UdXR3opWqpdtvHTgKOIaxr69l/v56V9r
ENAi0RHnrHfhiAb4GB8gdfzQllOIFebB/rSd1Q0XmMbxIUqSvWClawMj45aZsHrs
aWCd6Zl2sv5Bvd3nL43Ctfm6KCqvc1DGVtvx1AWzZKrKTpvF7J+Dg+3T1SehQYG+
u3dbcAUdcJHyK4OdPAK57JLjh/kaffcvSfKYDC9MwqUfUhRj3B4qBygDcV4PeDsd
/GCtnC1NDg3YXn6TZc4RAHDZlzQ+LRwDAdkAg9UvMPl1BGn+UvN9Vmf44EANyaZX
+eX22DDyoU+CbkKyUiy45XdoSWnFqXNuGLuL45j/OSD1T6nFUO8PnBHZqFvdjSgP
SRMBOUG4ii+x9VHj6lC7YcxN9Rq3PWGXpOKYFdSfv+AoCR9yGQxty5FIubv/TzD+
UTdNZP1+9AX37GZm5fkgoXkG1qoDs3iX1Ipwn1ARKdtJK0/Kwq8nKcPeo7vqVJkx
Eq+KxfVTcm2H+FZ1q1Kg1Cdbq0IR3nJ+DfzBy8n2HKPbEfndnfmtqaYkEn9amj3g
SBanDOGxbiYvZw7XUnKCoNU8Wx+qWRhY3nSOP4+H5ZvxeG8SPfInZDLgFPy26+1m
IC7R+v8RB4BSNv4FhblmN3of1jWgM6DF9e1g4Wdz2ieg89hq8zeL9kuBZEXdDhiC
cDo3sex/hIotOE7oeiEvKAq2nRbJ0Ji7Ac/5Ojy6UX/NDy0kn621k7bSdwLZJOKu
PFkj5bF9zlAx0lYHOKlQZ8S5sAdYX9l8r6VfwrMjSSWR7IBc/k57zuPfFzkkwsi2
SpkTBnKQqU7G6lhLj6oCdEKVAIGKkESJPVQdJdgEYU+OhffebwZMzBtWiT+2OkdM
K8U15xjbkYMx2WxXVuV9QnRIffXdlBOfFKKXKLermoHnHNSelRZCgqLyS9hyJU5V
zGx4M/6xFoaPJM4hsCocxhEtIMQmeP3Djdvc6zwPH86rc8a1uBbsB4KR7tawMAH/
/XdF0W3uGY8J/+Aqv5M1ut9uiCbP93Yr5x7vYHmhe4nBu5pmvIQ0Mz0CIDqVJ0x0
1Dx7N7lEqiK3CIepB+xLERInnuUlNC8MkD9LzjstNt8e2BF4YzEmJ4H/nVBXvsaV
36IRhLosgavNXt6ufsIfwzBiSWP+ejYCiMsTdq9JFaAANO4B0o6V6YKSBb/thErn
6joFkRDuq7CJUA1UtF9HX6WJvYUtMoJ2jD+AxjM+QdVx74ZtGjMqQ+/Pa7PTqJmp
zmRqs6AR3rleffrJm7Y/KBpWQO5ttmswicPoRivfRp8z6I27fZIC3+eCtO1CCWhu
XhbDM7RwBv3Xjr8Evhpr2ydG0YFEppZtve2uTsnlhScgUpV3lMZwoa8iJ7E+lkZJ
Xox9oKtsBf363wvEmjQascL46qoBTUDCky5Xn3akggWLc0uJe9CNOmkB0l0UfZI3
77CMhHloFzAXLbRYOF8mnfG5Ngj2ktmrM2tVNLCfA7MrVMZhuXtNtP0sK7Q25N6E
NoK0zLhowSX7bGkY6x6mg1X+a/TXi1aLqcIGclty4DzU1U5DZ908pH1N6h4hzcM4
8DVSYd2daEuR8G7uJFAf0e1PO/oGYpWdeRhrwBW18C9HuAQAlZ/QzbhRveXbotsb
vwvPg5rtsTz/xcizlnJjdsT44j9E/4k1qX0NhsNzcKTKKc5b609XDbo90wsJy2sw
f0/9O/HWYi5U4DsgQxCSZtufEE5uOxVQ0ZO8YLHwA8penl8XPcDEWEj7L6staw/F
qIIaXRSJXkvPs/Pi54jEPfgAorc87vIWsZkLDftb3vgSmneWxTgKl4mCFgV6Z81x
pquMr/inR3H8WLRRJlwd5ICtlAwz9bcCOpYel/6ZOvgWcc9e7RAQMhZtGqKMScdg
7QFpe/6q1C95o8uPr4xptSKfPfhbQ6BRZYIpAilMsQIRMRxdh9Y6JqqVrGVoNgZL
2ED9GZlXPX5qKkluI4YPjx+lXH6L0hKCp1YiRZr21P+8qFavH8151IMCdSBK0DP7
6442+76oMFwXJDiwEokPS9m3Zb6Vek1v0wfAlK12IRp1iUGaoZBk63F2aUs7gPik
syWQnxpOYxRZSc/JOGB/am19/JCfoGkIK8p17hT6wBXkvmHgDBiiQ1ANBOS6eHfn
xb/3DhEDu90gJTb1lZfS3E2ItmgtiH8n4M/vhcCJZI2cp68cSRB4JEbugo0RM9wS
s0NVR07IVimY7gPhOPzsjgGQFnuXEBjZt1s+66dN4VxsIRROfvFuzJLvSQgCPRfJ
s8w3uxI8KUplm29bgEP8L81OCZoMJeVNsyDzaddiPs/0BKw8dmsONRZp4RDwTI5f
7ipXnYSUyHlkc5idZ+HPfYkerDKXs5TOwce8PVca7pBf0pzcPwghSY04Tu/uHhXU
LcVJnt7wYS0kobf6RH+3MD5Riz1V+9vNjHt3cCvoecpnFgMYF14ivX4pil1qgLmQ
+ubaCU9gy/NOak9awK/jHdTQJG78HwgrAY28nnwv9ZrNkHgE9V8vawWNKwO7ec7h
hkV7tCkYFLDuGWPBKVLEJ4gZAgzUlyYuej3a1QpqVbUFeFd4nh7d7EyZEDJVtWC9
xzIKsytRmpxlbwbJY1am8HrOAvWSZ3fhT+oOWVPsxVHJRZnOc5/Y1RMhqomktB8Q
D0N0yh4D9BC4LQHFaNmLr/zCM8Wlil8SEw6P1a+6vEE6o8RgsXz52Xo1+9eLFOH6
fbRpl/iOXWqDoVIW5C0mSf/r1jfX3SXHMsoDeqtvoA29w6eGzqFtIOQZs6HbcUzO
gcqdEpiNK6rjqRcZ9l5jAD2lAY7+agNYatPMTxjrqHUAQOPIjaeXe/yDNwucSNn8
DsDXheWvQzalZmtyw3jKptVN7q6+MVxJZy+DmE7Qh7GbA7YbND40KJRfIn1ou6rY
++veiqz71jjWTW8CkuM4k/CfxtlsKU7haHgreJoqkt25KoAuAMnWCA8DxrswkoBS
fkJuNRSfW+zHTeNkFQ7IA5BXl5JcF5qR7JGokAdUPf85dSe7l3gq8i1Q3NJe2so3
fd9Q84fNG/tbmENh5ONtx+ZRO9RDaWDvjrFwgw44LsMapZn4DHWc7Sg3Vloa1jMB
RCpUHSrQdpJRBqR3LLW85d7+mUSDyFAJ30liFCnkU3ffX6AkfbwbKvs+NyfmOQSn
90sUNHPiG4IVsmBDnj/tGdg4aRqt2CEP8VDcPX51oisLZ+pa9AFJfGbpjNUHxGFy
DlGBMgm9/AR1Z4tPjvFH6pYpLnV/b3S5b1cVt089qT2DkXHsBHVArGsYfy3UFsRT
SsGGu4MSDfITuBoBxNVsEcei0Pz6yyg2a1IbCJvJgiqli9ymCPJHQpaA3oKT1BLf
x2HqFJ7U8PvSRfw+CNpNPW+Q4m3IVAQVlCU8SXVw5TCGxtKGYRsyAs0Ypshup5/g
iZsBiDHDuf12q4CS/6WKs/jSLsdQlotcYRl8uoC4nY0dSrow7zwx5/4iNIGSn0TT
Ox+k/GEnQORjd63/yQ597l3ph6LS3PbURJc1nWAuxfKpS2Q85nrJTpSiZUw4896h
KnLWbfJ+0B5IyTwvd+0XWqy4OLA9KyD5Xokhi4JypE3Er9WvU4xkFG8TIAQdfX+S
wGDnk68BotZZsfM1Nd8Oa0pB+R+UXBVNHR9s8T3eQ/e4mZafk7238EHioDKapWZM
diNL0LBNWo1LIeB7WK+TrtytrkF8VUQvVUL0Wi5cWmyqV7a4HslZctapvgThkzqF
GtEUFykADUB6gkjFBjjQDfvufCXVf6Y8pulZmfegpwXWRquYU1l8Gu0WHceD0M8M
rg1y1rskBd7u6aSwyUKF1vI7usr7Bw5YOPV4TCwahLuBOAb6eis+N35MOQXwAqdF
X23+nQDu8rFsiRzFIkKGqHsRJnO/Arf2asqyx8Ur+PvoIHdXDbUzAotl8dQiq02Z
GHxShWyWnykaSEVKWlNTXz/as7jle1NI8bocO/TxvJHHu7YJxcuNojedYj6O/8Wf
GKOUpJILqPn5V9qXxK818FNemfWuaiM6pB1m1Ri8VMWSWSg72Y3/wkKiwPNP/qcB
`protect end_protected

-- =================================================================================================
--   NX_RAM definition                                                                  2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM is
generic (
    std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt     : string := ""; -- context initialization
    pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD
    -- For specific NG_LARGE Extended Features
    raw_l_enable : bit := '0';						-- EXT L Enable
    raw_l_extend : bit_vector( 3 downto 0) := B"0000"			-- EXT L
);
port (
    ACK   : in  std_logic;
    ACKC  : in  std_logic;
    ACKD  : in  std_logic;
    ACKR  : in  std_logic;
    BCK   : in  std_logic;
    BCKC  : in  std_logic;
    BCKD  : in  std_logic;
    BCKR  : in  std_logic;

    AI1   : in  std_logic;
    AI2   : in  std_logic;
    AI3   : in  std_logic;
    AI4   : in  std_logic;
    AI5   : in  std_logic;
    AI6   : in  std_logic;
    AI7   : in  std_logic;
    AI8   : in  std_logic;
    AI9   : in  std_logic;
    AI10  : in  std_logic;
    AI11  : in  std_logic;
    AI12  : in  std_logic;
    AI13  : in  std_logic;
    AI14  : in  std_logic;
    AI15  : in  std_logic;
    AI16  : in  std_logic;

    AI17  : in  std_logic;
    AI18  : in  std_logic;
    AI19  : in  std_logic;
    AI20  : in  std_logic;
    AI21  : in  std_logic;
    AI22  : in  std_logic;
    AI23  : in  std_logic;
    AI24  : in  std_logic;

    BI1   : in  std_logic;
    BI2   : in  std_logic;
    BI3   : in  std_logic;
    BI4   : in  std_logic;
    BI5   : in  std_logic;
    BI6   : in  std_logic;
    BI7   : in  std_logic;
    BI8   : in  std_logic;
    BI9   : in  std_logic;
    BI10  : in  std_logic;
    BI11  : in  std_logic;
    BI12  : in  std_logic;
    BI13  : in  std_logic;
    BI14  : in  std_logic;
    BI15  : in  std_logic;
    BI16  : in  std_logic;

    BI17  : in  std_logic;
    BI18  : in  std_logic;
    BI19  : in  std_logic;
    BI20  : in  std_logic;
    BI21  : in  std_logic;
    BI22  : in  std_logic;
    BI23  : in  std_logic;
    BI24  : in  std_logic;

    ACOR  : out std_logic;
    AERR  : out std_logic;
    BCOR  : out std_logic;
    BERR  : out std_logic;

    AO1   : out std_logic;
    AO2   : out std_logic;
    AO3   : out std_logic;
    AO4   : out std_logic;
    AO5   : out std_logic;
    AO6   : out std_logic;
    AO7   : out std_logic;
    AO8   : out std_logic;
    AO9   : out std_logic;
    AO10  : out std_logic;
    AO11  : out std_logic;
    AO12  : out std_logic;
    AO13  : out std_logic;
    AO14  : out std_logic;
    AO15  : out std_logic;
    AO16  : out std_logic;

    AO17  : out std_logic;
    AO18  : out std_logic;
    AO19  : out std_logic;
    AO20  : out std_logic;
    AO21  : out std_logic;
    AO22  : out std_logic;
    AO23  : out std_logic;
    AO24  : out std_logic;

    BO1   : out std_logic;
    BO2   : out std_logic;
    BO3   : out std_logic;
    BO4   : out std_logic;
    BO5   : out std_logic;
    BO6   : out std_logic;
    BO7   : out std_logic;
    BO8   : out std_logic;
    BO9   : out std_logic;
    BO10  : out std_logic;
    BO11  : out std_logic;
    BO12  : out std_logic;
    BO13  : out std_logic;
    BO14  : out std_logic;
    BO15  : out std_logic;
    BO16  : out std_logic;

    BO17  : out std_logic;
    BO18  : out std_logic;
    BO19  : out std_logic;
    BO20  : out std_logic;
    BO21  : out std_logic;
    BO22  : out std_logic;
    BO23  : out std_logic;
    BO24  : out std_logic;

    AA1   : in  std_logic;
    AA2   : in  std_logic;
    AA3   : in  std_logic;
    AA4   : in  std_logic;
    AA5   : in  std_logic;
    AA6   : in  std_logic;

    AA7   : in  std_logic;
    AA8   : in  std_logic;
    AA9   : in  std_logic;
    AA10  : in  std_logic;
    AA11  : in  std_logic;
    AA12  : in  std_logic;
    AA13  : in  std_logic;
    AA14  : in  std_logic;
    AA15  : in  std_logic;
    AA16  : in  std_logic;

    ACS   : in  std_logic;
    AWE   : in  std_logic;
    AR    : in  std_logic;

    BA1   : in  std_logic;
    BA2   : in  std_logic;
    BA3   : in  std_logic;
    BA4   : in  std_logic;
    BA5   : in  std_logic;
    BA6   : in  std_logic;

    BA7   : in  std_logic;
    BA8   : in  std_logic;
    BA9   : in  std_logic;
    BA10  : in  std_logic;
    BA11  : in  std_logic;
    BA12  : in  std_logic;
    BA13  : in  std_logic;
    BA14  : in  std_logic;
    BA15  : in  std_logic;
    BA16  : in  std_logic;

    BCS   : in  std_logic;
    BWE   : in  std_logic;
    BR    : in  std_logic
);
end NX_RAM;

architecture NX_RTL of NX_RAM is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RAM";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RAM_WRAP definition                                                             2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM_WRAP is
generic (
    std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt     : string := ""; -- context initialization
    pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD
    -- For specific NG_LARGE Extended Features
    raw_l_enable : bit := '0';						-- EXT L Enable
    raw_l_extend : bit_vector( 3 downto 0) := B"0000"			-- EXT L
);
port (
    ACK  : in  std_logic;
    ACKD : in  std_logic;
    ACKR : in  std_logic;
    BCK  : in  std_logic;
    BCKD : in  std_logic;
    BCKR : in  std_logic;

    AI   : in  std_logic_vector(23 downto 0);
    BI   : in  std_logic_vector(23 downto 0);

    ACOR : out std_logic;
    AERR : out std_logic;
    BCOR : out std_logic;
    BERR : out std_logic;

    AO   : out std_logic_vector(23 downto 0);
    BO   : out std_logic_vector(23 downto 0);
    AA   : in  std_logic_vector(15 downto 0);

    ACS  : in  std_logic;
    AWE  : in  std_logic;
    AR   : in  std_logic;

    BA   : in  std_logic_vector(15 downto 0);

    BCS  : in  std_logic;
    BWE  : in  std_logic;
    BR   : in  std_logic
);
end NX_RAM_WRAP;

architecture NX_RTL of NX_RAM_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RAM
generic (
    std_mode     : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge    : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge    : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge    : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge    : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt     : string := ""; -- context initialization
    pipe_ia      : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib      : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa      : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob      : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0  : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1  : bit_vector(15 downto 0) := B"0000000000000000";	-- MOD
    raw_l_enable : bit := '0';						-- EXT L Enable
    raw_l_extend : bit_vector( 3 downto 0) := B"0000"			-- EXT L
);
port (
    ACK   : in  std_logic;
    ACKC  : in  std_logic;
    ACKD  : in  std_logic;
    ACKR  : in  std_logic;
    BCK   : in  std_logic;
    BCKC  : in  std_logic;
    BCKD  : in  std_logic;
    BCKR  : in  std_logic;

    AI1   : in  std_logic;
    AI2   : in  std_logic;
    AI3   : in  std_logic;
    AI4   : in  std_logic;
    AI5   : in  std_logic;
    AI6   : in  std_logic;
    AI7   : in  std_logic;
    AI8   : in  std_logic;
    AI9   : in  std_logic;
    AI10  : in  std_logic;
    AI11  : in  std_logic;
    AI12  : in  std_logic;
    AI13  : in  std_logic;
    AI14  : in  std_logic;
    AI15  : in  std_logic;
    AI16  : in  std_logic;

    AI17  : in  std_logic;
    AI18  : in  std_logic;
    AI19  : in  std_logic;
    AI20  : in  std_logic;
    AI21  : in  std_logic;
    AI22  : in  std_logic;
    AI23  : in  std_logic;
    AI24  : in  std_logic;

    BI1   : in  std_logic;
    BI2   : in  std_logic;
    BI3   : in  std_logic;
    BI4   : in  std_logic;
    BI5   : in  std_logic;
    BI6   : in  std_logic;
    BI7   : in  std_logic;
    BI8   : in  std_logic;
    BI9   : in  std_logic;
    BI10  : in  std_logic;
    BI11  : in  std_logic;
    BI12  : in  std_logic;
    BI13  : in  std_logic;
    BI14  : in  std_logic;
    BI15  : in  std_logic;
    BI16  : in  std_logic;

    BI17  : in  std_logic;
    BI18  : in  std_logic;
    BI19  : in  std_logic;
    BI20  : in  std_logic;
    BI21  : in  std_logic;
    BI22  : in  std_logic;
    BI23  : in  std_logic;
    BI24  : in  std_logic;

    ACOR  : out std_logic;
    AERR  : out std_logic;
    BCOR  : out std_logic;
    BERR  : out std_logic;

    AO1   : out std_logic;
    AO2   : out std_logic;
    AO3   : out std_logic;
    AO4   : out std_logic;
    AO5   : out std_logic;
    AO6   : out std_logic;
    AO7   : out std_logic;
    AO8   : out std_logic;
    AO9   : out std_logic;
    AO10  : out std_logic;
    AO11  : out std_logic;
    AO12  : out std_logic;
    AO13  : out std_logic;
    AO14  : out std_logic;
    AO15  : out std_logic;
    AO16  : out std_logic;

    AO17  : out std_logic;
    AO18  : out std_logic;
    AO19  : out std_logic;
    AO20  : out std_logic;
    AO21  : out std_logic;
    AO22  : out std_logic;
    AO23  : out std_logic;
    AO24  : out std_logic;

    BO1   : out std_logic;
    BO2   : out std_logic;
    BO3   : out std_logic;
    BO4   : out std_logic;
    BO5   : out std_logic;
    BO6   : out std_logic;
    BO7   : out std_logic;
    BO8   : out std_logic;
    BO9   : out std_logic;
    BO10  : out std_logic;
    BO11  : out std_logic;
    BO12  : out std_logic;
    BO13  : out std_logic;
    BO14  : out std_logic;
    BO15  : out std_logic;
    BO16  : out std_logic;

    BO17  : out std_logic;
    BO18  : out std_logic;
    BO19  : out std_logic;
    BO20  : out std_logic;
    BO21  : out std_logic;
    BO22  : out std_logic;
    BO23  : out std_logic;
    BO24  : out std_logic;

    AA1   : in  std_logic;
    AA2   : in  std_logic;
    AA3   : in  std_logic;
    AA4   : in  std_logic;
    AA5   : in  std_logic;
    AA6   : in  std_logic;

    AA7   : in  std_logic;
    AA8   : in  std_logic;
    AA9   : in  std_logic;
    AA10  : in  std_logic;
    AA11  : in  std_logic;
    AA12  : in  std_logic;
    AA13  : in  std_logic;
    AA14  : in  std_logic;
    AA15  : in  std_logic;
    AA16  : in  std_logic;

    ACS   : in  std_logic;
    AWE   : in  std_logic;
    AR    : in  std_logic;

    BA1   : in  std_logic;
    BA2   : in  std_logic;
    BA3   : in  std_logic;
    BA4   : in  std_logic;
    BA5   : in  std_logic;
    BA6   : in  std_logic;

    BA7   : in  std_logic;
    BA8   : in  std_logic;
    BA9   : in  std_logic;
    BA10  : in  std_logic;
    BA11  : in  std_logic;
    BA12  : in  std_logic;
    BA13  : in  std_logic;
    BA14  : in  std_logic;
    BA15  : in  std_logic;
    BA16  : in  std_logic;

    BCS   : in  std_logic;
    BWE   : in  std_logic;
    BR    : in  std_logic
);
end component;

begin

ram: NX_RAM generic map (
    std_mode     => std_mode,
    mcka_edge    => mcka_edge,
    mckb_edge    => mckb_edge,
    pcka_edge    => pcka_edge,
    pckb_edge    => pckb_edge,
    mem_ctxt     => mem_ctxt,
    pipe_ia      => pipe_ia,
    pipe_ib      => pipe_ib,
    pipe_oa      => pipe_oa,
    pipe_ob      => pipe_ob,
    raw_config0  => raw_config0,
    raw_config1  => raw_config1,
    raw_l_enable => raw_l_enable,
    raw_l_extend => raw_l_extend)
port map(
    ACK   => ACK,
    ACKC  => ACK,
    ACKD  => ACKD,
    ACKR  => ACKR,
    BCK   => BCK,
    BCKC  => BCK,
    BCKD  => BCKD,
    BCKR  => BCKR,

    AI1   => AI(0),
    AI2   => AI(1),
    AI3   => AI(2),
    AI4   => AI(3),
    AI5   => AI(4),
    AI6   => AI(5),
    AI7   => AI(6),
    AI8   => AI(7),
    AI9   => AI(8),
    AI10  => AI(9),
    AI11  => AI(10),
    AI12  => AI(11),
    AI13  => AI(12),
    AI14  => AI(13),
    AI15  => AI(14),
    AI16  => AI(15),

    AI17  => AI(16),
    AI18  => AI(17),
    AI19  => AI(18),
    AI20  => AI(19),
    AI21  => AI(20),
    AI22  => AI(21),
    AI23  => AI(22),
    AI24  => AI(23),

    BI1   => BI(0),
    BI2   => BI(1),
    BI3   => BI(2),
    BI4   => BI(3),
    BI5   => BI(4),
    BI6   => BI(5),
    BI7   => BI(6),
    BI8   => BI(7),
    BI9   => BI(8),
    BI10  => BI(9),
    BI11  => BI(10),
    BI12  => BI(11),
    BI13  => BI(12),
    BI14  => BI(13),
    BI15  => BI(14),
    BI16  => BI(15),

    BI17  => BI(16),
    BI18  => BI(17),
    BI19  => BI(18),
    BI20  => BI(19),
    BI21  => BI(20),
    BI22  => BI(21),
    BI23  => BI(22),
    BI24  => BI(23),

    ACOR  => ACOR,
    AERR  => AERR,
    BCOR  => BCOR,
    BERR  => BERR,

    AO1   => AO(0),
    AO2   => AO(1),
    AO3   => AO(2),
    AO4   => AO(3),
    AO5   => AO(4),
    AO6   => AO(5),
    AO7   => AO(6),
    AO8   => AO(7),
    AO9   => AO(8),
    AO10  => AO(9),
    AO11  => AO(10),
    AO12  => AO(11),
    AO13  => AO(12),
    AO14  => AO(13),
    AO15  => AO(14),
    AO16  => AO(15),

    AO17  => AO(16),
    AO18  => AO(17),
    AO19  => AO(18),
    AO20  => AO(19),
    AO21  => AO(20),
    AO22  => AO(21),
    AO23  => AO(22),
    AO24  => AO(23),

    BO1   => BO(0),
    BO2   => BO(1),
    BO3   => BO(2),
    BO4   => BO(3),
    BO5   => BO(4),
    BO6   => BO(5),
    BO7   => BO(6),
    BO8   => BO(7),
    BO9   => BO(8),
    BO10  => BO(9),
    BO11  => BO(10),
    BO12  => BO(11),
    BO13  => BO(12),
    BO14  => BO(13),
    BO15  => BO(14),
    BO16  => BO(15),

    BO17  => BO(16),
    BO18  => BO(17),
    BO19  => BO(18),
    BO20  => BO(19),
    BO21  => BO(20),
    BO22  => BO(21),
    BO23  => BO(22),
    BO24  => BO(23),

    AA1   => AA(0),
    AA2   => AA(1),
    AA3   => AA(2),
    AA4   => AA(3),
    AA5   => AA(4),
    AA6   => AA(5),

    AA7   => AA(6),
    AA8   => AA(7),
    AA9   => AA(8),
    AA10  => AA(9),
    AA11  => AA(10),
    AA12  => AA(11),
    AA13  => AA(12),
    AA14  => AA(13),
    AA15  => AA(14),
    AA16  => AA(15),

    ACS   => ACS,
    AWE   => AWE,
    AR    => AR,

    BA1   => BA(0),
    BA2   => BA(1),
    BA3   => BA(2),
    BA4   => BA(3),
    BA5   => BA(4),
    BA6   => BA(5),

    BA7   => BA(6),
    BA8   => BA(7),
    BA9   => BA(8),
    BA10  => BA(9),
    BA11  => BA(10),
    BA12  => BA(11),
    BA13  => BA(12),
    BA14  => BA(13),
    BA15  => BA(14),
    BA16  => BA(15),

    BCS   => BCS,
    BWE   => BWE,
    BR    => BR);

end NX_RTL;

----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity NX_ECC is
    port(
	CKD : in std_logic;
	CHK : in std_logic;
	COR : out std_logic;
	ERR : out std_logic
    );
end NX_ECC;

architecture NX_RTL of NX_ECC is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_ECC";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
AHA7S/afOiedeAda0BIcR5oMDgui3Sj7C5LbIuW+y5w0Oq7GobVi1yingoQbx+OB
o95+izF5Sc1/fbvAA2rlzFE/LY0LeNYu136JE0hUR2EVVPTI74bZhD1GXQ4EiuIr
rNBCkI6/xsD9YxRCOhh6yWFtsvzgI8azLukJjnU+soXBGNNCcmK+EiuyfUr5YpYo
LM788KUM7Yk7o8/Ezx1OYCDJfOEES85+r2CCiBvZkERQ7Ltz1ePOBweiSlQkEvCx
6Gk9UAx+iHEHUjHClNxnwN+/snjHsBr3fQ0r9miQ32tvbHu2ZdXMFLPK5EGbEq7C
YOyaJyyCs9xD/6w0BkHLtA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 114592)
`protect data_block
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
EOq6RjQXYUIBlHSXnwzeAw==
`protect end_protected

-- beware following components are only intended for internal use. Do not try to instantiate them.

-- =================================================================================================
--   NX_BUFFER definition                                                               2017/09/11
-- =================================================================================================

-- NX_BUFFER#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_BUFFER is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BUFFER;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
gXTgsIZwfHsvGJEDTzMONqmRtGK7kBG6W0T8OkJ4yCKmkvFDQQ0oOKV2WO8ufrPN
XsJSPly6TdU0I4bbChNE7ilm5q6ygalnQ0zqnPHssz2rqyXYw3VSWCZ0p13tR6wz
CKbtlksFEC2jceSesRQ69Fh5VmgvFHw5eFjc08/FQyLElZZflCn9WTx6YTKXYxEi
0qdsrqCubNRdrxuerz3zAqgZYbX0yEdFf55MYFHc2rL2d//o2X0ndHB2kmAJVoxI
RdjvixfFCeVsFElyZerYwVsNd32DVYMN6WNNxwrFZC307v5243mBMMpi65uKydeb
CNrtfkKwXvCH/TDjqO2AGQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
1tql8a8BdCaPyVLIOgSth+6MZRxPg4vDVX/ejYkal2TAhcWjmmIiFEe5K0/hlMR0
eJBjy/nmGqDg8WGIGLgmoxnIdeAGXesyN2mqJEXpsGFdlg+WjEQMO8e7pPghxl0b
bxsb1YPvNe+myrbRyYq32XCzpzj4/6q/MpsE/7GlafHLpxNQ21aeYzWeZOT2aEl4
ws7ZAGyrCEFmkVk7IY/HK6EhRXECA78NcblYj8buMwXak6U9TJ/bANQL/Ec3xR/9
lgCPcO+ciiUorms2Aou9HCvOXJsbhy0ebzElNG/QgcUyF8bUjKn9bwz026jcUNFv
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_CSC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_CSC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_CSC is
port (
    I  : in  std_logic;
    O  : out std_logic
);
end NX_CSC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Dq/PfNh591K1p8NpkVpEtvXqWWH7Ne2htxcs4E1xjvGhajIQ491t/aSkuoUlHlOR
3i+6kszF8lhb7Z4xWhgNI4CDkpToa3QFlWEhEYQG/yEPaV9rKwmtgF6ivoIWjuyB
SVHB9YJvgPrjMfxzg2bKkMtwX3bX8eW1pGlQMTN8bcAMZeBmZ+UcibKwbGMJTU0j
sZSP0XKOtYvZgYikT4OXyIqJGE8PHZI0heT8YyFlt3v9ft0vw7v+nYzG8a1aWtsZ
osTh6oWTj+uDAdKWF9R04QR8ixSVx7MLxXCR4MSvthe5bF01ddZ50mRZSPArlOnI
/D/RHNYACUHP+o8WWlEiXg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
aYuZi55GQ4W+CegGtjLJEmCo5NiO8li+9eAn00IIT5/akqkPpNYvwDel2LHXhqbL
f734GtehAb/la9tNxoioFIGUbCqCK6AcUBH5lL9BgjARxJyHM/rQLahfAy7Clo0l
ygqBxlP+PkhSQLGFAx8PZG9u7fHllbyqvKv55VfAt9Mli0UTr3CrsmiFXLOMdIFW
OJFvkcMUd9/QMm8fM3eLlVXk2rpRzL6R6r66VoMfUzO+cpVHqz8Pqn0c9CjpqIhY
VsM1UGVxvMJ2O/4tzeJWBxeU4OdxmStFZL2Vf5A0iS9+nh5h5S4d0AFn2HLitlEj
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_SCC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_SCC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_SCC is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_SCC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
afMwsUT4mVoS/vfpPOrMtzW1QnFYPFbBxKB0y9mHMLooSAQy9Li+Rk4An9WHQAUs
mHC5zcGbf7dYE4hVxloE24spDXm6jhFcww+WSezhYgC5S87d5iNQjt1pdguIH2JX
eCU6rNwzNwRCwV5jROuzU/5n5iHF9F7puOzRMcNTjT/3E5KG3rVaXUqd3U6Oamrp
j5yULABrdV8qwEXvEvSNOrC/KCr1cLDIPvXTVbXk9NdawMTAesoYVGgT2w4LEKpW
lwYztQjs71csirv1x65r8CzTFd5ahK6oc2yB1XpiS7S3ub903TjkrXqtq5IHkghc
iY2GO+lpF7YQkttz/+r1vg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
1RhcgIPDTRLKuStYxb5m+AaFTPUx+0/R4dq2BUZesFz7LdNTz7kzAE8Ang6TMC/8
RxKdfKfZoORD/SPHGqvlyJawgxduOgtfkzuP0zvVsxXnhCHvuFmxNG7/mMlqu6aD
Q0UvUNwINDBr6YUyuQJvQBIXLosc05p27iz3R/EKhE7IivFv34xDU/seULAGUqhA
1cXKAxhxf7Ezy4mIKKfuOZE/eExcuc9+XCxFc2qZw3uGXyARrppsheQmQ5+dVlkw
jFX31Vk58UvMSNJ1KotXl5WO4gPTpLT2XtkvVD91LtFT2viHm6GjHhogAhRWEh5j
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_syn_tp definition                                                               2017/09/11
-- =================================================================================================

-- NX_syn_tp#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_syn_tp is
port (
    I : in  std_logic
);
end NX_syn_tp;

architecture NX_RTL of NX_syn_tp is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_syn_tp";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
nZrBVP4GK2OXWJjQI2gPRdRP/5AA0ODcWIhr6jmorZDE0dbVA5l/smZ/J98U9Utk
Kq1zkYJG30P87125RIwE9lQ/e68g2bNWJgvLfmuk8fv26NMMuAu9b4H7fj1fPlo6
YUuKAmSHF5SbXF874LjmSgrOl/1wzx3dXpBqsyHb+4WX7K4/yOsauy/YqqUOjsfc
0ww5R6/kUi9Aa/wtAq2FTifyG3CPnZvzxnk7vX/1RC+Zf3GZz7FkuVom/4Rcq0tn
5cGXS0JrfZJnduzHp2eAJmwYApWU3RPRr/QQ6xYoceKUx52s78RRmn31jFaD8QqF
61VKVt+JoMC6FxpntWSksw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 208)
`protect data_block
6DkJ9COxYskz07mXYorxizstFeZVQs7VQyFNE8mrmsx82fCldbXCuS/ki6BfDjR+
VkKSboEjCWrgz2l08noJuDMUbkJBhWzLNowlHDkRr+h9swjCOBvcrFumId2LiOVo
c2NFhTrIvW96p4oF4gxFYAx4KZcebKUzOUrXoLbWnpdRzx3dRipOCjmDdV8718/+
TCU3SlYTXkEKlCZkQQSGFgLj8GsgFHWEZ9tE65b+pLO2bp38RigjoYajEPjbDz45
QFynL3SLuWyTPW3mzwl1uQ==
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_RB definition                                                                   2020/04/08
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RB is
generic (
    -- input : EI to FO
    inputClk      : bit_vector( 1 downto 0) := B"00"; -- 00 = CK1, 01 = CK2, 10 = CK3 and 11 = CK4
    inputBypass   : bit_vector(23 downto 0) := B"000000000000000000000000"; -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
    inputContext  : string := ""; -- input context initialization
    -- output : FI to EO
    outputClk     : bit_vector( 1 downto 0) := B"00"; -- 00 = CK1, 01 = CK2, 10 = CK3 and 11 = CK4
    outputBypass  : bit_vector(23 downto 0) := B"000000000000000000000000";  -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
    outputContext : string := "" -- output context initialization
);
port (
    CK1   : in  std_logic;
    CK2   : in  std_logic;
    CK3   : in  std_logic;
    CK4   : in  std_logic;
    EI1   : in  std_logic;
    EI2   : in  std_logic;
    EI3   : in  std_logic;
    EI4   : in  std_logic;
    EI5   : in  std_logic;
    EI6   : in  std_logic;
    EI7   : in  std_logic;
    EI8   : in  std_logic;
    EI9   : in  std_logic;
    EI10  : in  std_logic;
    EI11  : in  std_logic;
    EI12  : in  std_logic;
    EI13  : in  std_logic;
    EI14  : in  std_logic;
    EI15  : in  std_logic;
    EI16  : in  std_logic;
    EI17  : in  std_logic;
    EI18  : in  std_logic;
    EI19  : in  std_logic;
    EI20  : in  std_logic;
    EI21  : in  std_logic;
    EI22  : in  std_logic;
    EI23  : in  std_logic;
    EI24  : in  std_logic;
    EI25  : in  std_logic;
    EI26  : in  std_logic;
    EI27  : in  std_logic;
    EI28  : in  std_logic;
    EI29  : in  std_logic;
    EI30  : in  std_logic;
    EI31  : in  std_logic;
    EI32  : in  std_logic;
    EI33  : in  std_logic;
    EI34  : in  std_logic;
    EI35  : in  std_logic;
    EI36  : in  std_logic;
    EI37  : in  std_logic;
    EI38  : in  std_logic;
    EI39  : in  std_logic;
    EI40  : in  std_logic;
    EI41  : in  std_logic;
    EI42  : in  std_logic;
    EI43  : in  std_logic;
    EI44  : in  std_logic;
    EI45  : in  std_logic;
    EI46  : in  std_logic;
    EI47  : in  std_logic;
    EI48  : in  std_logic;
    EI49  : in  std_logic;
    EI50  : in  std_logic;
    EI51  : in  std_logic;
    EI52  : in  std_logic;
    EI53  : in  std_logic;
    EI54  : in  std_logic;
    EI55  : in  std_logic;
    EI56  : in  std_logic;
    EI57  : in  std_logic;
    EI58  : in  std_logic;
    EI59  : in  std_logic;
    EI60  : in  std_logic;
    EI61  : in  std_logic;
    EI62  : in  std_logic;
    EI63  : in  std_logic;
    EI64  : in  std_logic;
    EI65  : in  std_logic;
    EI66  : in  std_logic;
    EI67  : in  std_logic;
    EI68  : in  std_logic;
    EI69  : in  std_logic;
    EI70  : in  std_logic;
    EI71  : in  std_logic;
    EI72  : in  std_logic;
    EI73  : in  std_logic;
    EI74  : in  std_logic;
    EI75  : in  std_logic;
    EI76  : in  std_logic;
    EI77  : in  std_logic;
    EI78  : in  std_logic;
    EI79  : in  std_logic;
    EI80  : in  std_logic;
    EI81  : in  std_logic;
    EI82  : in  std_logic;
    EI83  : in  std_logic;
    EI84  : in  std_logic;
    EI85  : in  std_logic;
    EI86  : in  std_logic;
    EI87  : in  std_logic;
    EI88  : in  std_logic;
    EI89  : in  std_logic;
    EI90  : in  std_logic;
    EI91  : in  std_logic;
    EI92  : in  std_logic;
    EI93  : in  std_logic;
    EI94  : in  std_logic;
    EI95  : in  std_logic;
    EI96  : in  std_logic;
    EI97  : in  std_logic;
    EI98  : in  std_logic;
    EI99  : in  std_logic;
    EI100 : in  std_logic;
    EI101 : in  std_logic;
    EI102 : in  std_logic;
    EI103 : in  std_logic;
    EI104 : in  std_logic;
    EI105 : in  std_logic;
    EI106 : in  std_logic;
    EI107 : in  std_logic;
    EI108 : in  std_logic;
    EI109 : in  std_logic;
    EI110 : in  std_logic;
    EI111 : in  std_logic;
    EI112 : in  std_logic;
    EI113 : in  std_logic;
    EI114 : in  std_logic;
    EI115 : in  std_logic;
    EI116 : in  std_logic;
    EI117 : in  std_logic;
    EI118 : in  std_logic;
    EI119 : in  std_logic;
    EI120 : in  std_logic;
    EI121 : in  std_logic;
    EI122 : in  std_logic;
    EI123 : in  std_logic;
    EI124 : in  std_logic;
    EI125 : in  std_logic;
    EI126 : in  std_logic;
    EI127 : in  std_logic;
    EI128 : in  std_logic;
    EI129 : in  std_logic;
    EI130 : in  std_logic;
    EI131 : in  std_logic;
    EI132 : in  std_logic;
    EI133 : in  std_logic;
    EI134 : in  std_logic;
    EI135 : in  std_logic;
    EI136 : in  std_logic;
    EI137 : in  std_logic;
    EI138 : in  std_logic;
    EI139 : in  std_logic;
    EI140 : in  std_logic;
    EI141 : in  std_logic;
    EI142 : in  std_logic;
    EI143 : in  std_logic;
    EI144 : in  std_logic;
    EI145 : in  std_logic;
    EI146 : in  std_logic;
    EI147 : in  std_logic;
    EI148 : in  std_logic;
    EI149 : in  std_logic;
    EI150 : in  std_logic;
    EI151 : in  std_logic;
    EI152 : in  std_logic;
    EI153 : in  std_logic;
    EI154 : in  std_logic;
    EI155 : in  std_logic;
    EI156 : in  std_logic;
    EI157 : in  std_logic;
    EI158 : in  std_logic;
    EI159 : in  std_logic;
    EI160 : in  std_logic;
    EI161 : in  std_logic;
    EI162 : in  std_logic;
    EI163 : in  std_logic;
    EI164 : in  std_logic;
    EI165 : in  std_logic;
    EI166 : in  std_logic;
    EI167 : in  std_logic;
    EI168 : in  std_logic;
    EI169 : in  std_logic;
    EI170 : in  std_logic;
    EI171 : in  std_logic;
    EI172 : in  std_logic;
    EI173 : in  std_logic;
    EI174 : in  std_logic;
    EI175 : in  std_logic;
    EI176 : in  std_logic;
    EI177 : in  std_logic;
    EI178 : in  std_logic;
    EI179 : in  std_logic;
    EI180 : in  std_logic;
    EI181 : in  std_logic;
    EI182 : in  std_logic;
    EI183 : in  std_logic;
    EI184 : in  std_logic;
    EI185 : in  std_logic;
    EI186 : in  std_logic;
    EI187 : in  std_logic;
    EI188 : in  std_logic;
    EI189 : in  std_logic;
    EI190 : in  std_logic;
    EI191 : in  std_logic;
    EI192 : in  std_logic;
    EO1   : out std_logic;
    EO2   : out std_logic;
    EO3   : out std_logic;
    EO4   : out std_logic;
    EO5   : out std_logic;
    EO6   : out std_logic;
    EO7   : out std_logic;
    EO8   : out std_logic;
    EO9   : out std_logic;
    EO10  : out std_logic;
    EO11  : out std_logic;
    EO12  : out std_logic;
    EO13  : out std_logic;
    EO14  : out std_logic;
    EO15  : out std_logic;
    EO16  : out std_logic;
    EO17  : out std_logic;
    EO18  : out std_logic;
    EO19  : out std_logic;
    EO20  : out std_logic;
    EO21  : out std_logic;
    EO22  : out std_logic;
    EO23  : out std_logic;
    EO24  : out std_logic;
    EO25  : out std_logic;
    EO26  : out std_logic;
    EO27  : out std_logic;
    EO28  : out std_logic;
    EO29  : out std_logic;
    EO30  : out std_logic;
    EO31  : out std_logic;
    EO32  : out std_logic;
    EO33  : out std_logic;
    EO34  : out std_logic;
    EO35  : out std_logic;
    EO36  : out std_logic;
    EO37  : out std_logic;
    EO38  : out std_logic;
    EO39  : out std_logic;
    EO40  : out std_logic;
    EO41  : out std_logic;
    EO42  : out std_logic;
    EO43  : out std_logic;
    EO44  : out std_logic;
    EO45  : out std_logic;
    EO46  : out std_logic;
    EO47  : out std_logic;
    EO48  : out std_logic;
    EO49  : out std_logic;
    EO50  : out std_logic;
    EO51  : out std_logic;
    EO52  : out std_logic;
    EO53  : out std_logic;
    EO54  : out std_logic;
    EO55  : out std_logic;
    EO56  : out std_logic;
    EO57  : out std_logic;
    EO58  : out std_logic;
    EO59  : out std_logic;
    EO60  : out std_logic;
    EO61  : out std_logic;
    EO62  : out std_logic;
    EO63  : out std_logic;
    EO64  : out std_logic;
    EO65  : out std_logic;
    EO66  : out std_logic;
    EO67  : out std_logic;
    EO68  : out std_logic;
    EO69  : out std_logic;
    EO70  : out std_logic;
    EO71  : out std_logic;
    EO72  : out std_logic;
    EO73  : out std_logic;
    EO74  : out std_logic;
    EO75  : out std_logic;
    EO76  : out std_logic;
    EO77  : out std_logic;
    EO78  : out std_logic;
    EO79  : out std_logic;
    EO80  : out std_logic;
    EO81  : out std_logic;
    EO82  : out std_logic;
    EO83  : out std_logic;
    EO84  : out std_logic;
    EO85  : out std_logic;
    EO86  : out std_logic;
    EO87  : out std_logic;
    EO88  : out std_logic;
    EO89  : out std_logic;
    EO90  : out std_logic;
    EO91  : out std_logic;
    EO92  : out std_logic;
    EO93  : out std_logic;
    EO94  : out std_logic;
    EO95  : out std_logic;
    EO96  : out std_logic;
    EO97  : out std_logic;
    EO98  : out std_logic;
    EO99  : out std_logic;
    EO100 : out std_logic;
    EO101 : out std_logic;
    EO102 : out std_logic;
    EO103 : out std_logic;
    EO104 : out std_logic;
    EO105 : out std_logic;
    EO106 : out std_logic;
    EO107 : out std_logic;
    EO108 : out std_logic;
    EO109 : out std_logic;
    EO110 : out std_logic;
    EO111 : out std_logic;
    EO112 : out std_logic;
    EO113 : out std_logic;
    EO114 : out std_logic;
    EO115 : out std_logic;
    EO116 : out std_logic;
    EO117 : out std_logic;
    EO118 : out std_logic;
    EO119 : out std_logic;
    EO120 : out std_logic;
    EO121 : out std_logic;
    EO122 : out std_logic;
    EO123 : out std_logic;
    EO124 : out std_logic;
    EO125 : out std_logic;
    EO126 : out std_logic;
    EO127 : out std_logic;
    EO128 : out std_logic;
    EO129 : out std_logic;
    EO130 : out std_logic;
    EO131 : out std_logic;
    EO132 : out std_logic;
    EO133 : out std_logic;
    EO134 : out std_logic;
    EO135 : out std_logic;
    EO136 : out std_logic;
    EO137 : out std_logic;
    EO138 : out std_logic;
    EO139 : out std_logic;
    EO140 : out std_logic;
    EO141 : out std_logic;
    EO142 : out std_logic;
    EO143 : out std_logic;
    EO144 : out std_logic;
    EO145 : out std_logic;
    EO146 : out std_logic;
    EO147 : out std_logic;
    EO148 : out std_logic;
    EO149 : out std_logic;
    EO150 : out std_logic;
    EO151 : out std_logic;
    EO152 : out std_logic;
    EO153 : out std_logic;
    EO154 : out std_logic;
    EO155 : out std_logic;
    EO156 : out std_logic;
    EO157 : out std_logic;
    EO158 : out std_logic;
    EO159 : out std_logic;
    EO160 : out std_logic;
    EO161 : out std_logic;
    EO162 : out std_logic;
    EO163 : out std_logic;
    EO164 : out std_logic;
    EO165 : out std_logic;
    EO166 : out std_logic;
    EO167 : out std_logic;
    EO168 : out std_logic;
    EO169 : out std_logic;
    EO170 : out std_logic;
    EO171 : out std_logic;
    EO172 : out std_logic;
    EO173 : out std_logic;
    EO174 : out std_logic;
    EO175 : out std_logic;
    EO176 : out std_logic;
    EO177 : out std_logic;
    EO178 : out std_logic;
    EO179 : out std_logic;
    EO180 : out std_logic;
    EO181 : out std_logic;
    EO182 : out std_logic;
    EO183 : out std_logic;
    EO184 : out std_logic;
    EO185 : out std_logic;
    EO186 : out std_logic;
    EO187 : out std_logic;
    EO188 : out std_logic;
    EO189 : out std_logic;
    EO190 : out std_logic;
    EO191 : out std_logic;
    EO192 : out std_logic;
    FI1   : in  std_logic;
    FI2   : in  std_logic;
    FI3   : in  std_logic;
    FI4   : in  std_logic;
    FI5   : in  std_logic;
    FI6   : in  std_logic;
    FI7   : in  std_logic;
    FI8   : in  std_logic;
    FI9   : in  std_logic;
    FI10  : in  std_logic;
    FI11  : in  std_logic;
    FI12  : in  std_logic;
    FI13  : in  std_logic;
    FI14  : in  std_logic;
    FI15  : in  std_logic;
    FI16  : in  std_logic;
    FI17  : in  std_logic;
    FI18  : in  std_logic;
    FI19  : in  std_logic;
    FI20  : in  std_logic;
    FI21  : in  std_logic;
    FI22  : in  std_logic;
    FI23  : in  std_logic;
    FI24  : in  std_logic;
    FI25  : in  std_logic;
    FI26  : in  std_logic;
    FI27  : in  std_logic;
    FI28  : in  std_logic;
    FI29  : in  std_logic;
    FI30  : in  std_logic;
    FI31  : in  std_logic;
    FI32  : in  std_logic;
    FI33  : in  std_logic;
    FI34  : in  std_logic;
    FI35  : in  std_logic;
    FI36  : in  std_logic;
    FI37  : in  std_logic;
    FI38  : in  std_logic;
    FI39  : in  std_logic;
    FI40  : in  std_logic;
    FI41  : in  std_logic;
    FI42  : in  std_logic;
    FI43  : in  std_logic;
    FI44  : in  std_logic;
    FI45  : in  std_logic;
    FI46  : in  std_logic;
    FI47  : in  std_logic;
    FI48  : in  std_logic;
    FI49  : in  std_logic;
    FI50  : in  std_logic;
    FI51  : in  std_logic;
    FI52  : in  std_logic;
    FI53  : in  std_logic;
    FI54  : in  std_logic;
    FI55  : in  std_logic;
    FI56  : in  std_logic;
    FI57  : in  std_logic;
    FI58  : in  std_logic;
    FI59  : in  std_logic;
    FI60  : in  std_logic;
    FI61  : in  std_logic;
    FI62  : in  std_logic;
    FI63  : in  std_logic;
    FI64  : in  std_logic;
    FI65  : in  std_logic;
    FI66  : in  std_logic;
    FI67  : in  std_logic;
    FI68  : in  std_logic;
    FI69  : in  std_logic;
    FI70  : in  std_logic;
    FI71  : in  std_logic;
    FI72  : in  std_logic;
    FI73  : in  std_logic;
    FI74  : in  std_logic;
    FI75  : in  std_logic;
    FI76  : in  std_logic;
    FI77  : in  std_logic;
    FI78  : in  std_logic;
    FI79  : in  std_logic;
    FI80  : in  std_logic;
    FI81  : in  std_logic;
    FI82  : in  std_logic;
    FI83  : in  std_logic;
    FI84  : in  std_logic;
    FI85  : in  std_logic;
    FI86  : in  std_logic;
    FI87  : in  std_logic;
    FI88  : in  std_logic;
    FI89  : in  std_logic;
    FI90  : in  std_logic;
    FI91  : in  std_logic;
    FI92  : in  std_logic;
    FI93  : in  std_logic;
    FI94  : in  std_logic;
    FI95  : in  std_logic;
    FI96  : in  std_logic;
    FI97  : in  std_logic;
    FI98  : in  std_logic;
    FI99  : in  std_logic;
    FI100 : in  std_logic;
    FI101 : in  std_logic;
    FI102 : in  std_logic;
    FI103 : in  std_logic;
    FI104 : in  std_logic;
    FI105 : in  std_logic;
    FI106 : in  std_logic;
    FI107 : in  std_logic;
    FI108 : in  std_logic;
    FI109 : in  std_logic;
    FI110 : in  std_logic;
    FI111 : in  std_logic;
    FI112 : in  std_logic;
    FI113 : in  std_logic;
    FI114 : in  std_logic;
    FI115 : in  std_logic;
    FI116 : in  std_logic;
    FI117 : in  std_logic;
    FI118 : in  std_logic;
    FI119 : in  std_logic;
    FI120 : in  std_logic;
    FI121 : in  std_logic;
    FI122 : in  std_logic;
    FI123 : in  std_logic;
    FI124 : in  std_logic;
    FI125 : in  std_logic;
    FI126 : in  std_logic;
    FI127 : in  std_logic;
    FI128 : in  std_logic;
    FI129 : in  std_logic;
    FI130 : in  std_logic;
    FI131 : in  std_logic;
    FI132 : in  std_logic;
    FI133 : in  std_logic;
    FI134 : in  std_logic;
    FI135 : in  std_logic;
    FI136 : in  std_logic;
    FI137 : in  std_logic;
    FI138 : in  std_logic;
    FI139 : in  std_logic;
    FI140 : in  std_logic;
    FI141 : in  std_logic;
    FI142 : in  std_logic;
    FI143 : in  std_logic;
    FI144 : in  std_logic;
    FI145 : in  std_logic;
    FI146 : in  std_logic;
    FI147 : in  std_logic;
    FI148 : in  std_logic;
    FI149 : in  std_logic;
    FI150 : in  std_logic;
    FI151 : in  std_logic;
    FI152 : in  std_logic;
    FI153 : in  std_logic;
    FI154 : in  std_logic;
    FI155 : in  std_logic;
    FI156 : in  std_logic;
    FI157 : in  std_logic;
    FI158 : in  std_logic;
    FI159 : in  std_logic;
    FI160 : in  std_logic;
    FI161 : in  std_logic;
    FI162 : in  std_logic;
    FI163 : in  std_logic;
    FI164 : in  std_logic;
    FI165 : in  std_logic;
    FI166 : in  std_logic;
    FI167 : in  std_logic;
    FI168 : in  std_logic;
    FI169 : in  std_logic;
    FI170 : in  std_logic;
    FI171 : in  std_logic;
    FI172 : in  std_logic;
    FI173 : in  std_logic;
    FI174 : in  std_logic;
    FI175 : in  std_logic;
    FI176 : in  std_logic;
    FI177 : in  std_logic;
    FI178 : in  std_logic;
    FI179 : in  std_logic;
    FI180 : in  std_logic;
    FI181 : in  std_logic;
    FI182 : in  std_logic;
    FI183 : in  std_logic;
    FI184 : in  std_logic;
    FI185 : in  std_logic;
    FI186 : in  std_logic;
    FI187 : in  std_logic;
    FI188 : in  std_logic;
    FI189 : in  std_logic;
    FI190 : in  std_logic;
    FI191 : in  std_logic;
    FI192 : in  std_logic;
    FO1   : out std_logic;
    FO2   : out std_logic;
    FO3   : out std_logic;
    FO4   : out std_logic;
    FO5   : out std_logic;
    FO6   : out std_logic;
    FO7   : out std_logic;
    FO8   : out std_logic;
    FO9   : out std_logic;
    FO10  : out std_logic;
    FO11  : out std_logic;
    FO12  : out std_logic;
    FO13  : out std_logic;
    FO14  : out std_logic;
    FO15  : out std_logic;
    FO16  : out std_logic;
    FO17  : out std_logic;
    FO18  : out std_logic;
    FO19  : out std_logic;
    FO20  : out std_logic;
    FO21  : out std_logic;
    FO22  : out std_logic;
    FO23  : out std_logic;
    FO24  : out std_logic;
    FO25  : out std_logic;
    FO26  : out std_logic;
    FO27  : out std_logic;
    FO28  : out std_logic;
    FO29  : out std_logic;
    FO30  : out std_logic;
    FO31  : out std_logic;
    FO32  : out std_logic;
    FO33  : out std_logic;
    FO34  : out std_logic;
    FO35  : out std_logic;
    FO36  : out std_logic;
    FO37  : out std_logic;
    FO38  : out std_logic;
    FO39  : out std_logic;
    FO40  : out std_logic;
    FO41  : out std_logic;
    FO42  : out std_logic;
    FO43  : out std_logic;
    FO44  : out std_logic;
    FO45  : out std_logic;
    FO46  : out std_logic;
    FO47  : out std_logic;
    FO48  : out std_logic;
    FO49  : out std_logic;
    FO50  : out std_logic;
    FO51  : out std_logic;
    FO52  : out std_logic;
    FO53  : out std_logic;
    FO54  : out std_logic;
    FO55  : out std_logic;
    FO56  : out std_logic;
    FO57  : out std_logic;
    FO58  : out std_logic;
    FO59  : out std_logic;
    FO60  : out std_logic;
    FO61  : out std_logic;
    FO62  : out std_logic;
    FO63  : out std_logic;
    FO64  : out std_logic;
    FO65  : out std_logic;
    FO66  : out std_logic;
    FO67  : out std_logic;
    FO68  : out std_logic;
    FO69  : out std_logic;
    FO70  : out std_logic;
    FO71  : out std_logic;
    FO72  : out std_logic;
    FO73  : out std_logic;
    FO74  : out std_logic;
    FO75  : out std_logic;
    FO76  : out std_logic;
    FO77  : out std_logic;
    FO78  : out std_logic;
    FO79  : out std_logic;
    FO80  : out std_logic;
    FO81  : out std_logic;
    FO82  : out std_logic;
    FO83  : out std_logic;
    FO84  : out std_logic;
    FO85  : out std_logic;
    FO86  : out std_logic;
    FO87  : out std_logic;
    FO88  : out std_logic;
    FO89  : out std_logic;
    FO90  : out std_logic;
    FO91  : out std_logic;
    FO92  : out std_logic;
    FO93  : out std_logic;
    FO94  : out std_logic;
    FO95  : out std_logic;
    FO96  : out std_logic;
    FO97  : out std_logic;
    FO98  : out std_logic;
    FO99  : out std_logic;
    FO100 : out std_logic;
    FO101 : out std_logic;
    FO102 : out std_logic;
    FO103 : out std_logic;
    FO104 : out std_logic;
    FO105 : out std_logic;
    FO106 : out std_logic;
    FO107 : out std_logic;
    FO108 : out std_logic;
    FO109 : out std_logic;
    FO110 : out std_logic;
    FO111 : out std_logic;
    FO112 : out std_logic;
    FO113 : out std_logic;
    FO114 : out std_logic;
    FO115 : out std_logic;
    FO116 : out std_logic;
    FO117 : out std_logic;
    FO118 : out std_logic;
    FO119 : out std_logic;
    FO120 : out std_logic;
    FO121 : out std_logic;
    FO122 : out std_logic;
    FO123 : out std_logic;
    FO124 : out std_logic;
    FO125 : out std_logic;
    FO126 : out std_logic;
    FO127 : out std_logic;
    FO128 : out std_logic;
    FO129 : out std_logic;
    FO130 : out std_logic;
    FO131 : out std_logic;
    FO132 : out std_logic;
    FO133 : out std_logic;
    FO134 : out std_logic;
    FO135 : out std_logic;
    FO136 : out std_logic;
    FO137 : out std_logic;
    FO138 : out std_logic;
    FO139 : out std_logic;
    FO140 : out std_logic;
    FO141 : out std_logic;
    FO142 : out std_logic;
    FO143 : out std_logic;
    FO144 : out std_logic;
    FO145 : out std_logic;
    FO146 : out std_logic;
    FO147 : out std_logic;
    FO148 : out std_logic;
    FO149 : out std_logic;
    FO150 : out std_logic;
    FO151 : out std_logic;
    FO152 : out std_logic;
    FO153 : out std_logic;
    FO154 : out std_logic;
    FO155 : out std_logic;
    FO156 : out std_logic;
    FO157 : out std_logic;
    FO158 : out std_logic;
    FO159 : out std_logic;
    FO160 : out std_logic;
    FO161 : out std_logic;
    FO162 : out std_logic;
    FO163 : out std_logic;
    FO164 : out std_logic;
    FO165 : out std_logic;
    FO166 : out std_logic;
    FO167 : out std_logic;
    FO168 : out std_logic;
    FO169 : out std_logic;
    FO170 : out std_logic;
    FO171 : out std_logic;
    FO172 : out std_logic;
    FO173 : out std_logic;
    FO174 : out std_logic;
    FO175 : out std_logic;
    FO176 : out std_logic;
    FO177 : out std_logic;
    FO178 : out std_logic;
    FO179 : out std_logic;
    FO180 : out std_logic;
    FO181 : out std_logic;
    FO182 : out std_logic;
    FO183 : out std_logic;
    FO184 : out std_logic;
    FO185 : out std_logic;
    FO186 : out std_logic;
    FO187 : out std_logic;
    FO188 : out std_logic;
    FO189 : out std_logic;
    FO190 : out std_logic;
    FO191 : out std_logic;
    FO192 : out std_logic
);
end NX_RB;

architecture NX_RTL of NX_RB is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RB_WRAP definition                                                              2017/06/18
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RB_WRAP is
generic (
    -- input : EI to FO
    inputClk      : bit_vector( 1 downto 0) := B"00"; -- 00 = CK[0], 01 = CK[1], 10 = CK[2] and 11 = CK[3]
    inputBypass   : bit_vector(23 downto 0) := B"000000000000000000000000"; -- 1 bypass active, LSB is bypass registers 0 to 7 ... MSB is bypass registers 183 to 191
    -- output : FI to EO
    inputContext  : string := ""; -- input context intialization
    outputClk     : bit_vector( 1 downto 0) := B"00"; -- 00 = CK[0], 01 = CK[1], 10 = CK[2] and 11 = CK[3]
    outputBypass  : bit_vector(23 downto 0) := B"000000000000000000000000";  -- 1 bypass active, LSB is bypass registers 1 to 8 ... MSB is bypass registers 184 to 192
    outputContext : string := "" -- output context intialization
);
port (
    CK  : in  std_logic_vector(  3 downto 0);
    EI  : in  std_logic_vector(191 downto 0);
    EO  : out std_logic_vector(191 downto 0);
    FI  : in  std_logic_vector(191 downto 0);
    FO  : out std_logic_vector(191 downto 0)
);
end NX_RB_WRAP;

architecture NX_RTL of NX_RB_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RB
generic (
    inputClk      : bit_vector( 1 downto 0) := B"00";
    inputBypass   : bit_vector(23 downto 0) := B"000000000000000000000000";
    inputContext  : string := "";
    outputClk     : bit_vector( 1 downto 0) := B"00";
    outputBypass  : bit_vector(23 downto 0) := B"000000000000000000000000";
    outputContext : string := ""
);
port (
    CK1   : in  std_logic;
    CK2   : in  std_logic;
    CK3   : in  std_logic;
    CK4   : in  std_logic;
    EI1   : in  std_logic;
    EI2   : in  std_logic;
    EI3   : in  std_logic;
    EI4   : in  std_logic;
    EI5   : in  std_logic;
    EI6   : in  std_logic;
    EI7   : in  std_logic;
    EI8   : in  std_logic;
    EI9   : in  std_logic;
    EI10  : in  std_logic;
    EI11  : in  std_logic;
    EI12  : in  std_logic;
    EI13  : in  std_logic;
    EI14  : in  std_logic;
    EI15  : in  std_logic;
    EI16  : in  std_logic;
    EI17  : in  std_logic;
    EI18  : in  std_logic;
    EI19  : in  std_logic;
    EI20  : in  std_logic;
    EI21  : in  std_logic;
    EI22  : in  std_logic;
    EI23  : in  std_logic;
    EI24  : in  std_logic;
    EI25  : in  std_logic;
    EI26  : in  std_logic;
    EI27  : in  std_logic;
    EI28  : in  std_logic;
    EI29  : in  std_logic;
    EI30  : in  std_logic;
    EI31  : in  std_logic;
    EI32  : in  std_logic;
    EI33  : in  std_logic;
    EI34  : in  std_logic;
    EI35  : in  std_logic;
    EI36  : in  std_logic;
    EI37  : in  std_logic;
    EI38  : in  std_logic;
    EI39  : in  std_logic;
    EI40  : in  std_logic;
    EI41  : in  std_logic;
    EI42  : in  std_logic;
    EI43  : in  std_logic;
    EI44  : in  std_logic;
    EI45  : in  std_logic;
    EI46  : in  std_logic;
    EI47  : in  std_logic;
    EI48  : in  std_logic;
    EI49  : in  std_logic;
    EI50  : in  std_logic;
    EI51  : in  std_logic;
    EI52  : in  std_logic;
    EI53  : in  std_logic;
    EI54  : in  std_logic;
    EI55  : in  std_logic;
    EI56  : in  std_logic;
    EI57  : in  std_logic;
    EI58  : in  std_logic;
    EI59  : in  std_logic;
    EI60  : in  std_logic;
    EI61  : in  std_logic;
    EI62  : in  std_logic;
    EI63  : in  std_logic;
    EI64  : in  std_logic;
    EI65  : in  std_logic;
    EI66  : in  std_logic;
    EI67  : in  std_logic;
    EI68  : in  std_logic;
    EI69  : in  std_logic;
    EI70  : in  std_logic;
    EI71  : in  std_logic;
    EI72  : in  std_logic;
    EI73  : in  std_logic;
    EI74  : in  std_logic;
    EI75  : in  std_logic;
    EI76  : in  std_logic;
    EI77  : in  std_logic;
    EI78  : in  std_logic;
    EI79  : in  std_logic;
    EI80  : in  std_logic;
    EI81  : in  std_logic;
    EI82  : in  std_logic;
    EI83  : in  std_logic;
    EI84  : in  std_logic;
    EI85  : in  std_logic;
    EI86  : in  std_logic;
    EI87  : in  std_logic;
    EI88  : in  std_logic;
    EI89  : in  std_logic;
    EI90  : in  std_logic;
    EI91  : in  std_logic;
    EI92  : in  std_logic;
    EI93  : in  std_logic;
    EI94  : in  std_logic;
    EI95  : in  std_logic;
    EI96  : in  std_logic;
    EI97  : in  std_logic;
    EI98  : in  std_logic;
    EI99  : in  std_logic;
    EI100 : in  std_logic;
    EI101 : in  std_logic;
    EI102 : in  std_logic;
    EI103 : in  std_logic;
    EI104 : in  std_logic;
    EI105 : in  std_logic;
    EI106 : in  std_logic;
    EI107 : in  std_logic;
    EI108 : in  std_logic;
    EI109 : in  std_logic;
    EI110 : in  std_logic;
    EI111 : in  std_logic;
    EI112 : in  std_logic;
    EI113 : in  std_logic;
    EI114 : in  std_logic;
    EI115 : in  std_logic;
    EI116 : in  std_logic;
    EI117 : in  std_logic;
    EI118 : in  std_logic;
    EI119 : in  std_logic;
    EI120 : in  std_logic;
    EI121 : in  std_logic;
    EI122 : in  std_logic;
    EI123 : in  std_logic;
    EI124 : in  std_logic;
    EI125 : in  std_logic;
    EI126 : in  std_logic;
    EI127 : in  std_logic;
    EI128 : in  std_logic;
    EI129 : in  std_logic;
    EI130 : in  std_logic;
    EI131 : in  std_logic;
    EI132 : in  std_logic;
    EI133 : in  std_logic;
    EI134 : in  std_logic;
    EI135 : in  std_logic;
    EI136 : in  std_logic;
    EI137 : in  std_logic;
    EI138 : in  std_logic;
    EI139 : in  std_logic;
    EI140 : in  std_logic;
    EI141 : in  std_logic;
    EI142 : in  std_logic;
    EI143 : in  std_logic;
    EI144 : in  std_logic;
    EI145 : in  std_logic;
    EI146 : in  std_logic;
    EI147 : in  std_logic;
    EI148 : in  std_logic;
    EI149 : in  std_logic;
    EI150 : in  std_logic;
    EI151 : in  std_logic;
    EI152 : in  std_logic;
    EI153 : in  std_logic;
    EI154 : in  std_logic;
    EI155 : in  std_logic;
    EI156 : in  std_logic;
    EI157 : in  std_logic;
    EI158 : in  std_logic;
    EI159 : in  std_logic;
    EI160 : in  std_logic;
    EI161 : in  std_logic;
    EI162 : in  std_logic;
    EI163 : in  std_logic;
    EI164 : in  std_logic;
    EI165 : in  std_logic;
    EI166 : in  std_logic;
    EI167 : in  std_logic;
    EI168 : in  std_logic;
    EI169 : in  std_logic;
    EI170 : in  std_logic;
    EI171 : in  std_logic;
    EI172 : in  std_logic;
    EI173 : in  std_logic;
    EI174 : in  std_logic;
    EI175 : in  std_logic;
    EI176 : in  std_logic;
    EI177 : in  std_logic;
    EI178 : in  std_logic;
    EI179 : in  std_logic;
    EI180 : in  std_logic;
    EI181 : in  std_logic;
    EI182 : in  std_logic;
    EI183 : in  std_logic;
    EI184 : in  std_logic;
    EI185 : in  std_logic;
    EI186 : in  std_logic;
    EI187 : in  std_logic;
    EI188 : in  std_logic;
    EI189 : in  std_logic;
    EI190 : in  std_logic;
    EI191 : in  std_logic;
    EI192 : in  std_logic;
    EO1   : out std_logic;
    EO2   : out std_logic;
    EO3   : out std_logic;
    EO4   : out std_logic;
    EO5   : out std_logic;
    EO6   : out std_logic;
    EO7   : out std_logic;
    EO8   : out std_logic;
    EO9   : out std_logic;
    EO10  : out std_logic;
    EO11  : out std_logic;
    EO12  : out std_logic;
    EO13  : out std_logic;
    EO14  : out std_logic;
    EO15  : out std_logic;
    EO16  : out std_logic;
    EO17  : out std_logic;
    EO18  : out std_logic;
    EO19  : out std_logic;
    EO20  : out std_logic;
    EO21  : out std_logic;
    EO22  : out std_logic;
    EO23  : out std_logic;
    EO24  : out std_logic;
    EO25  : out std_logic;
    EO26  : out std_logic;
    EO27  : out std_logic;
    EO28  : out std_logic;
    EO29  : out std_logic;
    EO30  : out std_logic;
    EO31  : out std_logic;
    EO32  : out std_logic;
    EO33  : out std_logic;
    EO34  : out std_logic;
    EO35  : out std_logic;
    EO36  : out std_logic;
    EO37  : out std_logic;
    EO38  : out std_logic;
    EO39  : out std_logic;
    EO40  : out std_logic;
    EO41  : out std_logic;
    EO42  : out std_logic;
    EO43  : out std_logic;
    EO44  : out std_logic;
    EO45  : out std_logic;
    EO46  : out std_logic;
    EO47  : out std_logic;
    EO48  : out std_logic;
    EO49  : out std_logic;
    EO50  : out std_logic;
    EO51  : out std_logic;
    EO52  : out std_logic;
    EO53  : out std_logic;
    EO54  : out std_logic;
    EO55  : out std_logic;
    EO56  : out std_logic;
    EO57  : out std_logic;
    EO58  : out std_logic;
    EO59  : out std_logic;
    EO60  : out std_logic;
    EO61  : out std_logic;
    EO62  : out std_logic;
    EO63  : out std_logic;
    EO64  : out std_logic;
    EO65  : out std_logic;
    EO66  : out std_logic;
    EO67  : out std_logic;
    EO68  : out std_logic;
    EO69  : out std_logic;
    EO70  : out std_logic;
    EO71  : out std_logic;
    EO72  : out std_logic;
    EO73  : out std_logic;
    EO74  : out std_logic;
    EO75  : out std_logic;
    EO76  : out std_logic;
    EO77  : out std_logic;
    EO78  : out std_logic;
    EO79  : out std_logic;
    EO80  : out std_logic;
    EO81  : out std_logic;
    EO82  : out std_logic;
    EO83  : out std_logic;
    EO84  : out std_logic;
    EO85  : out std_logic;
    EO86  : out std_logic;
    EO87  : out std_logic;
    EO88  : out std_logic;
    EO89  : out std_logic;
    EO90  : out std_logic;
    EO91  : out std_logic;
    EO92  : out std_logic;
    EO93  : out std_logic;
    EO94  : out std_logic;
    EO95  : out std_logic;
    EO96  : out std_logic;
    EO97  : out std_logic;
    EO98  : out std_logic;
    EO99  : out std_logic;
    EO100 : out std_logic;
    EO101 : out std_logic;
    EO102 : out std_logic;
    EO103 : out std_logic;
    EO104 : out std_logic;
    EO105 : out std_logic;
    EO106 : out std_logic;
    EO107 : out std_logic;
    EO108 : out std_logic;
    EO109 : out std_logic;
    EO110 : out std_logic;
    EO111 : out std_logic;
    EO112 : out std_logic;
    EO113 : out std_logic;
    EO114 : out std_logic;
    EO115 : out std_logic;
    EO116 : out std_logic;
    EO117 : out std_logic;
    EO118 : out std_logic;
    EO119 : out std_logic;
    EO120 : out std_logic;
    EO121 : out std_logic;
    EO122 : out std_logic;
    EO123 : out std_logic;
    EO124 : out std_logic;
    EO125 : out std_logic;
    EO126 : out std_logic;
    EO127 : out std_logic;
    EO128 : out std_logic;
    EO129 : out std_logic;
    EO130 : out std_logic;
    EO131 : out std_logic;
    EO132 : out std_logic;
    EO133 : out std_logic;
    EO134 : out std_logic;
    EO135 : out std_logic;
    EO136 : out std_logic;
    EO137 : out std_logic;
    EO138 : out std_logic;
    EO139 : out std_logic;
    EO140 : out std_logic;
    EO141 : out std_logic;
    EO142 : out std_logic;
    EO143 : out std_logic;
    EO144 : out std_logic;
    EO145 : out std_logic;
    EO146 : out std_logic;
    EO147 : out std_logic;
    EO148 : out std_logic;
    EO149 : out std_logic;
    EO150 : out std_logic;
    EO151 : out std_logic;
    EO152 : out std_logic;
    EO153 : out std_logic;
    EO154 : out std_logic;
    EO155 : out std_logic;
    EO156 : out std_logic;
    EO157 : out std_logic;
    EO158 : out std_logic;
    EO159 : out std_logic;
    EO160 : out std_logic;
    EO161 : out std_logic;
    EO162 : out std_logic;
    EO163 : out std_logic;
    EO164 : out std_logic;
    EO165 : out std_logic;
    EO166 : out std_logic;
    EO167 : out std_logic;
    EO168 : out std_logic;
    EO169 : out std_logic;
    EO170 : out std_logic;
    EO171 : out std_logic;
    EO172 : out std_logic;
    EO173 : out std_logic;
    EO174 : out std_logic;
    EO175 : out std_logic;
    EO176 : out std_logic;
    EO177 : out std_logic;
    EO178 : out std_logic;
    EO179 : out std_logic;
    EO180 : out std_logic;
    EO181 : out std_logic;
    EO182 : out std_logic;
    EO183 : out std_logic;
    EO184 : out std_logic;
    EO185 : out std_logic;
    EO186 : out std_logic;
    EO187 : out std_logic;
    EO188 : out std_logic;
    EO189 : out std_logic;
    EO190 : out std_logic;
    EO191 : out std_logic;
    EO192 : out std_logic;
    FI1   : in  std_logic;
    FI2   : in  std_logic;
    FI3   : in  std_logic;
    FI4   : in  std_logic;
    FI5   : in  std_logic;
    FI6   : in  std_logic;
    FI7   : in  std_logic;
    FI8   : in  std_logic;
    FI9   : in  std_logic;
    FI10  : in  std_logic;
    FI11  : in  std_logic;
    FI12  : in  std_logic;
    FI13  : in  std_logic;
    FI14  : in  std_logic;
    FI15  : in  std_logic;
    FI16  : in  std_logic;
    FI17  : in  std_logic;
    FI18  : in  std_logic;
    FI19  : in  std_logic;
    FI20  : in  std_logic;
    FI21  : in  std_logic;
    FI22  : in  std_logic;
    FI23  : in  std_logic;
    FI24  : in  std_logic;
    FI25  : in  std_logic;
    FI26  : in  std_logic;
    FI27  : in  std_logic;
    FI28  : in  std_logic;
    FI29  : in  std_logic;
    FI30  : in  std_logic;
    FI31  : in  std_logic;
    FI32  : in  std_logic;
    FI33  : in  std_logic;
    FI34  : in  std_logic;
    FI35  : in  std_logic;
    FI36  : in  std_logic;
    FI37  : in  std_logic;
    FI38  : in  std_logic;
    FI39  : in  std_logic;
    FI40  : in  std_logic;
    FI41  : in  std_logic;
    FI42  : in  std_logic;
    FI43  : in  std_logic;
    FI44  : in  std_logic;
    FI45  : in  std_logic;
    FI46  : in  std_logic;
    FI47  : in  std_logic;
    FI48  : in  std_logic;
    FI49  : in  std_logic;
    FI50  : in  std_logic;
    FI51  : in  std_logic;
    FI52  : in  std_logic;
    FI53  : in  std_logic;
    FI54  : in  std_logic;
    FI55  : in  std_logic;
    FI56  : in  std_logic;
    FI57  : in  std_logic;
    FI58  : in  std_logic;
    FI59  : in  std_logic;
    FI60  : in  std_logic;
    FI61  : in  std_logic;
    FI62  : in  std_logic;
    FI63  : in  std_logic;
    FI64  : in  std_logic;
    FI65  : in  std_logic;
    FI66  : in  std_logic;
    FI67  : in  std_logic;
    FI68  : in  std_logic;
    FI69  : in  std_logic;
    FI70  : in  std_logic;
    FI71  : in  std_logic;
    FI72  : in  std_logic;
    FI73  : in  std_logic;
    FI74  : in  std_logic;
    FI75  : in  std_logic;
    FI76  : in  std_logic;
    FI77  : in  std_logic;
    FI78  : in  std_logic;
    FI79  : in  std_logic;
    FI80  : in  std_logic;
    FI81  : in  std_logic;
    FI82  : in  std_logic;
    FI83  : in  std_logic;
    FI84  : in  std_logic;
    FI85  : in  std_logic;
    FI86  : in  std_logic;
    FI87  : in  std_logic;
    FI88  : in  std_logic;
    FI89  : in  std_logic;
    FI90  : in  std_logic;
    FI91  : in  std_logic;
    FI92  : in  std_logic;
    FI93  : in  std_logic;
    FI94  : in  std_logic;
    FI95  : in  std_logic;
    FI96  : in  std_logic;
    FI97  : in  std_logic;
    FI98  : in  std_logic;
    FI99  : in  std_logic;
    FI100 : in  std_logic;
    FI101 : in  std_logic;
    FI102 : in  std_logic;
    FI103 : in  std_logic;
    FI104 : in  std_logic;
    FI105 : in  std_logic;
    FI106 : in  std_logic;
    FI107 : in  std_logic;
    FI108 : in  std_logic;
    FI109 : in  std_logic;
    FI110 : in  std_logic;
    FI111 : in  std_logic;
    FI112 : in  std_logic;
    FI113 : in  std_logic;
    FI114 : in  std_logic;
    FI115 : in  std_logic;
    FI116 : in  std_logic;
    FI117 : in  std_logic;
    FI118 : in  std_logic;
    FI119 : in  std_logic;
    FI120 : in  std_logic;
    FI121 : in  std_logic;
    FI122 : in  std_logic;
    FI123 : in  std_logic;
    FI124 : in  std_logic;
    FI125 : in  std_logic;
    FI126 : in  std_logic;
    FI127 : in  std_logic;
    FI128 : in  std_logic;
    FI129 : in  std_logic;
    FI130 : in  std_logic;
    FI131 : in  std_logic;
    FI132 : in  std_logic;
    FI133 : in  std_logic;
    FI134 : in  std_logic;
    FI135 : in  std_logic;
    FI136 : in  std_logic;
    FI137 : in  std_logic;
    FI138 : in  std_logic;
    FI139 : in  std_logic;
    FI140 : in  std_logic;
    FI141 : in  std_logic;
    FI142 : in  std_logic;
    FI143 : in  std_logic;
    FI144 : in  std_logic;
    FI145 : in  std_logic;
    FI146 : in  std_logic;
    FI147 : in  std_logic;
    FI148 : in  std_logic;
    FI149 : in  std_logic;
    FI150 : in  std_logic;
    FI151 : in  std_logic;
    FI152 : in  std_logic;
    FI153 : in  std_logic;
    FI154 : in  std_logic;
    FI155 : in  std_logic;
    FI156 : in  std_logic;
    FI157 : in  std_logic;
    FI158 : in  std_logic;
    FI159 : in  std_logic;
    FI160 : in  std_logic;
    FI161 : in  std_logic;
    FI162 : in  std_logic;
    FI163 : in  std_logic;
    FI164 : in  std_logic;
    FI165 : in  std_logic;
    FI166 : in  std_logic;
    FI167 : in  std_logic;
    FI168 : in  std_logic;
    FI169 : in  std_logic;
    FI170 : in  std_logic;
    FI171 : in  std_logic;
    FI172 : in  std_logic;
    FI173 : in  std_logic;
    FI174 : in  std_logic;
    FI175 : in  std_logic;
    FI176 : in  std_logic;
    FI177 : in  std_logic;
    FI178 : in  std_logic;
    FI179 : in  std_logic;
    FI180 : in  std_logic;
    FI181 : in  std_logic;
    FI182 : in  std_logic;
    FI183 : in  std_logic;
    FI184 : in  std_logic;
    FI185 : in  std_logic;
    FI186 : in  std_logic;
    FI187 : in  std_logic;
    FI188 : in  std_logic;
    FI189 : in  std_logic;
    FI190 : in  std_logic;
    FI191 : in  std_logic;
    FI192 : in  std_logic;
    FO1   : out std_logic;
    FO2   : out std_logic;
    FO3   : out std_logic;
    FO4   : out std_logic;
    FO5   : out std_logic;
    FO6   : out std_logic;
    FO7   : out std_logic;
    FO8   : out std_logic;
    FO9   : out std_logic;
    FO10  : out std_logic;
    FO11  : out std_logic;
    FO12  : out std_logic;
    FO13  : out std_logic;
    FO14  : out std_logic;
    FO15  : out std_logic;
    FO16  : out std_logic;
    FO17  : out std_logic;
    FO18  : out std_logic;
    FO19  : out std_logic;
    FO20  : out std_logic;
    FO21  : out std_logic;
    FO22  : out std_logic;
    FO23  : out std_logic;
    FO24  : out std_logic;
    FO25  : out std_logic;
    FO26  : out std_logic;
    FO27  : out std_logic;
    FO28  : out std_logic;
    FO29  : out std_logic;
    FO30  : out std_logic;
    FO31  : out std_logic;
    FO32  : out std_logic;
    FO33  : out std_logic;
    FO34  : out std_logic;
    FO35  : out std_logic;
    FO36  : out std_logic;
    FO37  : out std_logic;
    FO38  : out std_logic;
    FO39  : out std_logic;
    FO40  : out std_logic;
    FO41  : out std_logic;
    FO42  : out std_logic;
    FO43  : out std_logic;
    FO44  : out std_logic;
    FO45  : out std_logic;
    FO46  : out std_logic;
    FO47  : out std_logic;
    FO48  : out std_logic;
    FO49  : out std_logic;
    FO50  : out std_logic;
    FO51  : out std_logic;
    FO52  : out std_logic;
    FO53  : out std_logic;
    FO54  : out std_logic;
    FO55  : out std_logic;
    FO56  : out std_logic;
    FO57  : out std_logic;
    FO58  : out std_logic;
    FO59  : out std_logic;
    FO60  : out std_logic;
    FO61  : out std_logic;
    FO62  : out std_logic;
    FO63  : out std_logic;
    FO64  : out std_logic;
    FO65  : out std_logic;
    FO66  : out std_logic;
    FO67  : out std_logic;
    FO68  : out std_logic;
    FO69  : out std_logic;
    FO70  : out std_logic;
    FO71  : out std_logic;
    FO72  : out std_logic;
    FO73  : out std_logic;
    FO74  : out std_logic;
    FO75  : out std_logic;
    FO76  : out std_logic;
    FO77  : out std_logic;
    FO78  : out std_logic;
    FO79  : out std_logic;
    FO80  : out std_logic;
    FO81  : out std_logic;
    FO82  : out std_logic;
    FO83  : out std_logic;
    FO84  : out std_logic;
    FO85  : out std_logic;
    FO86  : out std_logic;
    FO87  : out std_logic;
    FO88  : out std_logic;
    FO89  : out std_logic;
    FO90  : out std_logic;
    FO91  : out std_logic;
    FO92  : out std_logic;
    FO93  : out std_logic;
    FO94  : out std_logic;
    FO95  : out std_logic;
    FO96  : out std_logic;
    FO97  : out std_logic;
    FO98  : out std_logic;
    FO99  : out std_logic;
    FO100 : out std_logic;
    FO101 : out std_logic;
    FO102 : out std_logic;
    FO103 : out std_logic;
    FO104 : out std_logic;
    FO105 : out std_logic;
    FO106 : out std_logic;
    FO107 : out std_logic;
    FO108 : out std_logic;
    FO109 : out std_logic;
    FO110 : out std_logic;
    FO111 : out std_logic;
    FO112 : out std_logic;
    FO113 : out std_logic;
    FO114 : out std_logic;
    FO115 : out std_logic;
    FO116 : out std_logic;
    FO117 : out std_logic;
    FO118 : out std_logic;
    FO119 : out std_logic;
    FO120 : out std_logic;
    FO121 : out std_logic;
    FO122 : out std_logic;
    FO123 : out std_logic;
    FO124 : out std_logic;
    FO125 : out std_logic;
    FO126 : out std_logic;
    FO127 : out std_logic;
    FO128 : out std_logic;
    FO129 : out std_logic;
    FO130 : out std_logic;
    FO131 : out std_logic;
    FO132 : out std_logic;
    FO133 : out std_logic;
    FO134 : out std_logic;
    FO135 : out std_logic;
    FO136 : out std_logic;
    FO137 : out std_logic;
    FO138 : out std_logic;
    FO139 : out std_logic;
    FO140 : out std_logic;
    FO141 : out std_logic;
    FO142 : out std_logic;
    FO143 : out std_logic;
    FO144 : out std_logic;
    FO145 : out std_logic;
    FO146 : out std_logic;
    FO147 : out std_logic;
    FO148 : out std_logic;
    FO149 : out std_logic;
    FO150 : out std_logic;
    FO151 : out std_logic;
    FO152 : out std_logic;
    FO153 : out std_logic;
    FO154 : out std_logic;
    FO155 : out std_logic;
    FO156 : out std_logic;
    FO157 : out std_logic;
    FO158 : out std_logic;
    FO159 : out std_logic;
    FO160 : out std_logic;
    FO161 : out std_logic;
    FO162 : out std_logic;
    FO163 : out std_logic;
    FO164 : out std_logic;
    FO165 : out std_logic;
    FO166 : out std_logic;
    FO167 : out std_logic;
    FO168 : out std_logic;
    FO169 : out std_logic;
    FO170 : out std_logic;
    FO171 : out std_logic;
    FO172 : out std_logic;
    FO173 : out std_logic;
    FO174 : out std_logic;
    FO175 : out std_logic;
    FO176 : out std_logic;
    FO177 : out std_logic;
    FO178 : out std_logic;
    FO179 : out std_logic;
    FO180 : out std_logic;
    FO181 : out std_logic;
    FO182 : out std_logic;
    FO183 : out std_logic;
    FO184 : out std_logic;
    FO185 : out std_logic;
    FO186 : out std_logic;
    FO187 : out std_logic;
    FO188 : out std_logic;
    FO189 : out std_logic;
    FO190 : out std_logic;
    FO191 : out std_logic;
    FO192 : out std_logic
);
end component NX_RB;

begin

rb: NX_RB
generic map (
    inputClk      => inputClk,
    inputBypass   => inputBypass,
    inputContext  => inputContext,
    outputClk     => outputClk,
    outputBypass  => outputBypass,
    outputContext => outputContext
)
port map (
    CK1   => CK(0),
    CK2   => CK(1),
    CK3   => CK(2),
    CK4   => CK(3),
    EI1   => EI(0),
    EI2   => EI(1),
    EI3   => EI(2),
    EI4   => EI(3),
    EI5   => EI(4),
    EI6   => EI(5),
    EI7   => EI(6),
    EI8   => EI(7),
    EI9   => EI(8),
    EI10  => EI(9),
    EI11  => EI(10),
    EI12  => EI(11),
    EI13  => EI(12),
    EI14  => EI(13),
    EI15  => EI(14),
    EI16  => EI(15),
    EI17  => EI(16),
    EI18  => EI(17),
    EI19  => EI(18),
    EI20  => EI(19),
    EI21  => EI(20),
    EI22  => EI(21),
    EI23  => EI(22),
    EI24  => EI(23),
    EI25  => EI(24),
    EI26  => EI(25),
    EI27  => EI(26),
    EI28  => EI(27),
    EI29  => EI(28),
    EI30  => EI(29),
    EI31  => EI(30),
    EI32  => EI(31),
    EI33  => EI(32),
    EI34  => EI(33),
    EI35  => EI(34),
    EI36  => EI(35),
    EI37  => EI(36),
    EI38  => EI(37),
    EI39  => EI(38),
    EI40  => EI(39),
    EI41  => EI(40),
    EI42  => EI(41),
    EI43  => EI(42),
    EI44  => EI(43),
    EI45  => EI(44),
    EI46  => EI(45),
    EI47  => EI(46),
    EI48  => EI(47),
    EI49  => EI(48),
    EI50  => EI(49),
    EI51  => EI(50),
    EI52  => EI(51),
    EI53  => EI(52),
    EI54  => EI(53),
    EI55  => EI(54),
    EI56  => EI(55),
    EI57  => EI(56),
    EI58  => EI(57),
    EI59  => EI(58),
    EI60  => EI(59),
    EI61  => EI(60),
    EI62  => EI(61),
    EI63  => EI(62),
    EI64  => EI(63),
    EI65  => EI(64),
    EI66  => EI(65),
    EI67  => EI(66),
    EI68  => EI(67),
    EI69  => EI(68),
    EI70  => EI(69),
    EI71  => EI(70),
    EI72  => EI(71),
    EI73  => EI(72),
    EI74  => EI(73),
    EI75  => EI(74),
    EI76  => EI(75),
    EI77  => EI(76),
    EI78  => EI(77),
    EI79  => EI(78),
    EI80  => EI(79),
    EI81  => EI(80),
    EI82  => EI(81),
    EI83  => EI(82),
    EI84  => EI(83),
    EI85  => EI(84),
    EI86  => EI(85),
    EI87  => EI(86),
    EI88  => EI(87),
    EI89  => EI(88),
    EI90  => EI(89),
    EI91  => EI(90),
    EI92  => EI(91),
    EI93  => EI(92),
    EI94  => EI(93),
    EI95  => EI(94),
    EI96  => EI(95),
    EI97  => EI(96),
    EI98  => EI(97),
    EI99  => EI(98),
    EI100 => EI(99),
    EI101 => EI(100),
    EI102 => EI(101),
    EI103 => EI(102),
    EI104 => EI(103),
    EI105 => EI(104),
    EI106 => EI(105),
    EI107 => EI(106),
    EI108 => EI(107),
    EI109 => EI(108),
    EI110 => EI(109),
    EI111 => EI(110),
    EI112 => EI(111),
    EI113 => EI(112),
    EI114 => EI(113),
    EI115 => EI(114),
    EI116 => EI(115),
    EI117 => EI(116),
    EI118 => EI(117),
    EI119 => EI(118),
    EI120 => EI(119),
    EI121 => EI(120),
    EI122 => EI(121),
    EI123 => EI(122),
    EI124 => EI(123),
    EI125 => EI(124),
    EI126 => EI(125),
    EI127 => EI(126),
    EI128 => EI(127),
    EI129 => EI(128),
    EI130 => EI(129),
    EI131 => EI(130),
    EI132 => EI(131),
    EI133 => EI(132),
    EI134 => EI(133),
    EI135 => EI(134),
    EI136 => EI(135),
    EI137 => EI(136),
    EI138 => EI(137),
    EI139 => EI(138),
    EI140 => EI(139),
    EI141 => EI(140),
    EI142 => EI(141),
    EI143 => EI(142),
    EI144 => EI(143),
    EI145 => EI(144),
    EI146 => EI(145),
    EI147 => EI(146),
    EI148 => EI(147),
    EI149 => EI(148),
    EI150 => EI(149),
    EI151 => EI(150),
    EI152 => EI(151),
    EI153 => EI(152),
    EI154 => EI(153),
    EI155 => EI(154),
    EI156 => EI(155),
    EI157 => EI(156),
    EI158 => EI(157),
    EI159 => EI(158),
    EI160 => EI(159),
    EI161 => EI(160),
    EI162 => EI(161),
    EI163 => EI(162),
    EI164 => EI(163),
    EI165 => EI(164),
    EI166 => EI(165),
    EI167 => EI(166),
    EI168 => EI(167),
    EI169 => EI(168),
    EI170 => EI(169),
    EI171 => EI(170),
    EI172 => EI(171),
    EI173 => EI(172),
    EI174 => EI(173),
    EI175 => EI(174),
    EI176 => EI(175),
    EI177 => EI(176),
    EI178 => EI(177),
    EI179 => EI(178),
    EI180 => EI(179),
    EI181 => EI(180),
    EI182 => EI(181),
    EI183 => EI(182),
    EI184 => EI(183),
    EI185 => EI(184),
    EI186 => EI(185),
    EI187 => EI(186),
    EI188 => EI(187),
    EI189 => EI(188),
    EI190 => EI(189),
    EI191 => EI(190),
    EI192 => EI(191),
    EO1   => EO(0),
    EO2   => EO(1),
    EO3   => EO(2),
    EO4   => EO(3),
    EO5   => EO(4),
    EO6   => EO(5),
    EO7   => EO(6),
    EO8   => EO(7),
    EO9   => EO(8),
    EO10  => EO(9),
    EO11  => EO(10),
    EO12  => EO(11),
    EO13  => EO(12),
    EO14  => EO(13),
    EO15  => EO(14),
    EO16  => EO(15),
    EO17  => EO(16),
    EO18  => EO(17),
    EO19  => EO(18),
    EO20  => EO(19),
    EO21  => EO(20),
    EO22  => EO(21),
    EO23  => EO(22),
    EO24  => EO(23),
    EO25  => EO(24),
    EO26  => EO(25),
    EO27  => EO(26),
    EO28  => EO(27),
    EO29  => EO(28),
    EO30  => EO(29),
    EO31  => EO(30),
    EO32  => EO(31),
    EO33  => EO(32),
    EO34  => EO(33),
    EO35  => EO(34),
    EO36  => EO(35),
    EO37  => EO(36),
    EO38  => EO(37),
    EO39  => EO(38),
    EO40  => EO(39),
    EO41  => EO(40),
    EO42  => EO(41),
    EO43  => EO(42),
    EO44  => EO(43),
    EO45  => EO(44),
    EO46  => EO(45),
    EO47  => EO(46),
    EO48  => EO(47),
    EO49  => EO(48),
    EO50  => EO(49),
    EO51  => EO(50),
    EO52  => EO(51),
    EO53  => EO(52),
    EO54  => EO(53),
    EO55  => EO(54),
    EO56  => EO(55),
    EO57  => EO(56),
    EO58  => EO(57),
    EO59  => EO(58),
    EO60  => EO(59),
    EO61  => EO(60),
    EO62  => EO(61),
    EO63  => EO(62),
    EO64  => EO(63),
    EO65  => EO(64),
    EO66  => EO(65),
    EO67  => EO(66),
    EO68  => EO(67),
    EO69  => EO(68),
    EO70  => EO(69),
    EO71  => EO(70),
    EO72  => EO(71),
    EO73  => EO(72),
    EO74  => EO(73),
    EO75  => EO(74),
    EO76  => EO(75),
    EO77  => EO(76),
    EO78  => EO(77),
    EO79  => EO(78),
    EO80  => EO(79),
    EO81  => EO(80),
    EO82  => EO(81),
    EO83  => EO(82),
    EO84  => EO(83),
    EO85  => EO(84),
    EO86  => EO(85),
    EO87  => EO(86),
    EO88  => EO(87),
    EO89  => EO(88),
    EO90  => EO(89),
    EO91  => EO(90),
    EO92  => EO(91),
    EO93  => EO(92),
    EO94  => EO(93),
    EO95  => EO(94),
    EO96  => EO(95),
    EO97  => EO(96),
    EO98  => EO(97),
    EO99  => EO(98),
    EO100 => EO(99),
    EO101 => EO(100),
    EO102 => EO(101),
    EO103 => EO(102),
    EO104 => EO(103),
    EO105 => EO(104),
    EO106 => EO(105),
    EO107 => EO(106),
    EO108 => EO(107),
    EO109 => EO(108),
    EO110 => EO(109),
    EO111 => EO(110),
    EO112 => EO(111),
    EO113 => EO(112),
    EO114 => EO(113),
    EO115 => EO(114),
    EO116 => EO(115),
    EO117 => EO(116),
    EO118 => EO(117),
    EO119 => EO(118),
    EO120 => EO(119),
    EO121 => EO(120),
    EO122 => EO(121),
    EO123 => EO(122),
    EO124 => EO(123),
    EO125 => EO(124),
    EO126 => EO(125),
    EO127 => EO(126),
    EO128 => EO(127),
    EO129 => EO(128),
    EO130 => EO(129),
    EO131 => EO(130),
    EO132 => EO(131),
    EO133 => EO(132),
    EO134 => EO(133),
    EO135 => EO(134),
    EO136 => EO(135),
    EO137 => EO(136),
    EO138 => EO(137),
    EO139 => EO(138),
    EO140 => EO(139),
    EO141 => EO(140),
    EO142 => EO(141),
    EO143 => EO(142),
    EO144 => EO(143),
    EO145 => EO(144),
    EO146 => EO(145),
    EO147 => EO(146),
    EO148 => EO(147),
    EO149 => EO(148),
    EO150 => EO(149),
    EO151 => EO(150),
    EO152 => EO(151),
    EO153 => EO(152),
    EO154 => EO(153),
    EO155 => EO(154),
    EO156 => EO(155),
    EO157 => EO(156),
    EO158 => EO(157),
    EO159 => EO(158),
    EO160 => EO(159),
    EO161 => EO(160),
    EO162 => EO(161),
    EO163 => EO(162),
    EO164 => EO(163),
    EO165 => EO(164),
    EO166 => EO(165),
    EO167 => EO(166),
    EO168 => EO(167),
    EO169 => EO(168),
    EO170 => EO(169),
    EO171 => EO(170),
    EO172 => EO(171),
    EO173 => EO(172),
    EO174 => EO(173),
    EO175 => EO(174),
    EO176 => EO(175),
    EO177 => EO(176),
    EO178 => EO(177),
    EO179 => EO(178),
    EO180 => EO(179),
    EO181 => EO(180),
    EO182 => EO(181),
    EO183 => EO(182),
    EO184 => EO(183),
    EO185 => EO(184),
    EO186 => EO(185),
    EO187 => EO(186),
    EO188 => EO(187),
    EO189 => EO(188),
    EO190 => EO(189),
    EO191 => EO(190),
    EO192 => EO(191),
    FI1   => FI(0),
    FI2   => FI(1),
    FI3   => FI(2),
    FI4   => FI(3),
    FI5   => FI(4),
    FI6   => FI(5),
    FI7   => FI(6),
    FI8   => FI(7),
    FI9   => FI(8),
    FI10  => FI(9),
    FI11  => FI(10),
    FI12  => FI(11),
    FI13  => FI(12),
    FI14  => FI(13),
    FI15  => FI(14),
    FI16  => FI(15),
    FI17  => FI(16),
    FI18  => FI(17),
    FI19  => FI(18),
    FI20  => FI(19),
    FI21  => FI(20),
    FI22  => FI(21),
    FI23  => FI(22),
    FI24  => FI(23),
    FI25  => FI(24),
    FI26  => FI(25),
    FI27  => FI(26),
    FI28  => FI(27),
    FI29  => FI(28),
    FI30  => FI(29),
    FI31  => FI(30),
    FI32  => FI(31),
    FI33  => FI(32),
    FI34  => FI(33),
    FI35  => FI(34),
    FI36  => FI(35),
    FI37  => FI(36),
    FI38  => FI(37),
    FI39  => FI(38),
    FI40  => FI(39),
    FI41  => FI(40),
    FI42  => FI(41),
    FI43  => FI(42),
    FI44  => FI(43),
    FI45  => FI(44),
    FI46  => FI(45),
    FI47  => FI(46),
    FI48  => FI(47),
    FI49  => FI(48),
    FI50  => FI(49),
    FI51  => FI(50),
    FI52  => FI(51),
    FI53  => FI(52),
    FI54  => FI(53),
    FI55  => FI(54),
    FI56  => FI(55),
    FI57  => FI(56),
    FI58  => FI(57),
    FI59  => FI(58),
    FI60  => FI(59),
    FI61  => FI(60),
    FI62  => FI(61),
    FI63  => FI(62),
    FI64  => FI(63),
    FI65  => FI(64),
    FI66  => FI(65),
    FI67  => FI(66),
    FI68  => FI(67),
    FI69  => FI(68),
    FI70  => FI(69),
    FI71  => FI(70),
    FI72  => FI(71),
    FI73  => FI(72),
    FI74  => FI(73),
    FI75  => FI(74),
    FI76  => FI(75),
    FI77  => FI(76),
    FI78  => FI(77),
    FI79  => FI(78),
    FI80  => FI(79),
    FI81  => FI(80),
    FI82  => FI(81),
    FI83  => FI(82),
    FI84  => FI(83),
    FI85  => FI(84),
    FI86  => FI(85),
    FI87  => FI(86),
    FI88  => FI(87),
    FI89  => FI(88),
    FI90  => FI(89),
    FI91  => FI(90),
    FI92  => FI(91),
    FI93  => FI(92),
    FI94  => FI(93),
    FI95  => FI(94),
    FI96  => FI(95),
    FI97  => FI(96),
    FI98  => FI(97),
    FI99  => FI(98),
    FI100 => FI(99),
    FI101 => FI(100),
    FI102 => FI(101),
    FI103 => FI(102),
    FI104 => FI(103),
    FI105 => FI(104),
    FI106 => FI(105),
    FI107 => FI(106),
    FI108 => FI(107),
    FI109 => FI(108),
    FI110 => FI(109),
    FI111 => FI(110),
    FI112 => FI(111),
    FI113 => FI(112),
    FI114 => FI(113),
    FI115 => FI(114),
    FI116 => FI(115),
    FI117 => FI(116),
    FI118 => FI(117),
    FI119 => FI(118),
    FI120 => FI(119),
    FI121 => FI(120),
    FI122 => FI(121),
    FI123 => FI(122),
    FI124 => FI(123),
    FI125 => FI(124),
    FI126 => FI(125),
    FI127 => FI(126),
    FI128 => FI(127),
    FI129 => FI(128),
    FI130 => FI(129),
    FI131 => FI(130),
    FI132 => FI(131),
    FI133 => FI(132),
    FI134 => FI(133),
    FI135 => FI(134),
    FI136 => FI(135),
    FI137 => FI(136),
    FI138 => FI(137),
    FI139 => FI(138),
    FI140 => FI(139),
    FI141 => FI(140),
    FI142 => FI(141),
    FI143 => FI(142),
    FI144 => FI(143),
    FI145 => FI(144),
    FI146 => FI(145),
    FI147 => FI(146),
    FI148 => FI(147),
    FI149 => FI(148),
    FI150 => FI(149),
    FI151 => FI(150),
    FI152 => FI(151),
    FI153 => FI(152),
    FI154 => FI(153),
    FI155 => FI(154),
    FI156 => FI(155),
    FI157 => FI(156),
    FI158 => FI(157),
    FI159 => FI(158),
    FI160 => FI(159),
    FI161 => FI(160),
    FI162 => FI(161),
    FI163 => FI(162),
    FI164 => FI(163),
    FI165 => FI(164),
    FI166 => FI(165),
    FI167 => FI(166),
    FI168 => FI(167),
    FI169 => FI(168),
    FI170 => FI(169),
    FI171 => FI(170),
    FI172 => FI(171),
    FI173 => FI(172),
    FI174 => FI(173),
    FI175 => FI(174),
    FI176 => FI(175),
    FI177 => FI(176),
    FI178 => FI(177),
    FI179 => FI(178),
    FI180 => FI(179),
    FI181 => FI(180),
    FI182 => FI(181),
    FI183 => FI(182),
    FI184 => FI(183),
    FI185 => FI(184),
    FI186 => FI(185),
    FI187 => FI(186),
    FI188 => FI(187),
    FI189 => FI(188),
    FI190 => FI(189),
    FI191 => FI(190),
    FI192 => FI(191),
    FO1   => FO(0),
    FO2   => FO(1),
    FO3   => FO(2),
    FO4   => FO(3),
    FO5   => FO(4),
    FO6   => FO(5),
    FO7   => FO(6),
    FO8   => FO(7),
    FO9   => FO(8),
    FO10  => FO(9),
    FO11  => FO(10),
    FO12  => FO(11),
    FO13  => FO(12),
    FO14  => FO(13),
    FO15  => FO(14),
    FO16  => FO(15),
    FO17  => FO(16),
    FO18  => FO(17),
    FO19  => FO(18),
    FO20  => FO(19),
    FO21  => FO(20),
    FO22  => FO(21),
    FO23  => FO(22),
    FO24  => FO(23),
    FO25  => FO(24),
    FO26  => FO(25),
    FO27  => FO(26),
    FO28  => FO(27),
    FO29  => FO(28),
    FO30  => FO(29),
    FO31  => FO(30),
    FO32  => FO(31),
    FO33  => FO(32),
    FO34  => FO(33),
    FO35  => FO(34),
    FO36  => FO(35),
    FO37  => FO(36),
    FO38  => FO(37),
    FO39  => FO(38),
    FO40  => FO(39),
    FO41  => FO(40),
    FO42  => FO(41),
    FO43  => FO(42),
    FO44  => FO(43),
    FO45  => FO(44),
    FO46  => FO(45),
    FO47  => FO(46),
    FO48  => FO(47),
    FO49  => FO(48),
    FO50  => FO(49),
    FO51  => FO(50),
    FO52  => FO(51),
    FO53  => FO(52),
    FO54  => FO(53),
    FO55  => FO(54),
    FO56  => FO(55),
    FO57  => FO(56),
    FO58  => FO(57),
    FO59  => FO(58),
    FO60  => FO(59),
    FO61  => FO(60),
    FO62  => FO(61),
    FO63  => FO(62),
    FO64  => FO(63),
    FO65  => FO(64),
    FO66  => FO(65),
    FO67  => FO(66),
    FO68  => FO(67),
    FO69  => FO(68),
    FO70  => FO(69),
    FO71  => FO(70),
    FO72  => FO(71),
    FO73  => FO(72),
    FO74  => FO(73),
    FO75  => FO(74),
    FO76  => FO(75),
    FO77  => FO(76),
    FO78  => FO(77),
    FO79  => FO(78),
    FO80  => FO(79),
    FO81  => FO(80),
    FO82  => FO(81),
    FO83  => FO(82),
    FO84  => FO(83),
    FO85  => FO(84),
    FO86  => FO(85),
    FO87  => FO(86),
    FO88  => FO(87),
    FO89  => FO(88),
    FO90  => FO(89),
    FO91  => FO(90),
    FO92  => FO(91),
    FO93  => FO(92),
    FO94  => FO(93),
    FO95  => FO(94),
    FO96  => FO(95),
    FO97  => FO(96),
    FO98  => FO(97),
    FO99  => FO(98),
    FO100 => FO(99),
    FO101 => FO(100),
    FO102 => FO(101),
    FO103 => FO(102),
    FO104 => FO(103),
    FO105 => FO(104),
    FO106 => FO(105),
    FO107 => FO(106),
    FO108 => FO(107),
    FO109 => FO(108),
    FO110 => FO(109),
    FO111 => FO(110),
    FO112 => FO(111),
    FO113 => FO(112),
    FO114 => FO(113),
    FO115 => FO(114),
    FO116 => FO(115),
    FO117 => FO(116),
    FO118 => FO(117),
    FO119 => FO(118),
    FO120 => FO(119),
    FO121 => FO(120),
    FO122 => FO(121),
    FO123 => FO(122),
    FO124 => FO(123),
    FO125 => FO(124),
    FO126 => FO(125),
    FO127 => FO(126),
    FO128 => FO(127),
    FO129 => FO(128),
    FO130 => FO(129),
    FO131 => FO(130),
    FO132 => FO(131),
    FO133 => FO(132),
    FO134 => FO(133),
    FO135 => FO(134),
    FO136 => FO(135),
    FO137 => FO(136),
    FO138 => FO(137),
    FO139 => FO(138),
    FO140 => FO(139),
    FO141 => FO(140),
    FO142 => FO(141),
    FO143 => FO(142),
    FO144 => FO(143),
    FO145 => FO(144),
    FO146 => FO(145),
    FO147 => FO(146),
    FO148 => FO(147),
    FO149 => FO(148),
    FO150 => FO(149),
    FO151 => FO(150),
    FO152 => FO(151),
    FO153 => FO(152),
    FO154 => FO(153),
    FO155 => FO(154),
    FO156 => FO(155),
    FO157 => FO(156),
    FO158 => FO(157),
    FO159 => FO(158),
    FO160 => FO(159),
    FO161 => FO(160),
    FO162 => FO(161),
    FO163 => FO(162),
    FO164 => FO(163),
    FO165 => FO(164),
    FO166 => FO(165),
    FO167 => FO(166),
    FO168 => FO(167),
    FO169 => FO(168),
    FO170 => FO(169),
    FO171 => FO(170),
    FO172 => FO(171),
    FO173 => FO(172),
    FO174 => FO(173),
    FO175 => FO(174),
    FO176 => FO(175),
    FO177 => FO(176),
    FO178 => FO(177),
    FO179 => FO(178),
    FO180 => FO(179),
    FO181 => FO(180),
    FO182 => FO(181),
    FO183 => FO(182),
    FO184 => FO(183),
    FO185 => FO(184),
    FO186 => FO(185),
    FO187 => FO(186),
    FO188 => FO(187),
    FO189 => FO(188),
    FO190 => FO(189),
    FO191 => FO(190),
    FO192 => FO(191)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
Gfqf+rOE+gBGLhU6nCIXkJ1VLsAuzYYz12uvQO7+iGjacq4Q0WDORD4OJysHp9It
kBa6zuCPIbGeyX2zZTNkLzCSXnX2aosMt4UcLIb0qZp7Fb2usy5zlKL+s9TSztlw
DytsmHBb+ndceMmL6cYZUJbSr2oyLQg3d9DQr54V1d+lPJHpELQkaUntHYhH47vT
2ZCe0RGCfkB4JdqlD+ZIER9CMPIlrZ6E19DDz6w3UKtADSRGxPFgw1Cwe2Ftlt2y
KyGwHVcq6CU5opW5598O8H5zLAJnRv+Wj0JEKE2TmVBx0+jJO72AE/KnzVzQ+WZ0
QwVhUQftI6hPmLwyjMxFPg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 34416)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_BD definition                                                                   2018/06/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_BD is
generic (
    system: bit := '1'
);
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BD;

architecture NX_RTL of NX_BD is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_BD";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
CB3zvOoECP/57SkYujiMacauqHkuZc3bQsje37aGh9z5Pj8PVlETIZ6ml6vEh5ft
NK07wg2p6eh4P0sK/zGOKiSjriODyZ8NbohaLl/zpShEhN1/P1jjxT8qLrSuoKRW
cucwekv/4pK4J3K0ujjVaP84tS8w68d9aZ+LCWWxVDrKUE3F1gepRK8pPtCNu4jB
0kn5f7UCltDjl8bslmCSMjKnGjYlliZAtiadsd087sNMoxrAZab5/YO+vfXvBDOb
rdiE7z4aNIYRfvcTKLAvZGUc6uBn8uizhwgrAMv7a0qhMk8EXqP9XI+eONyxtt20
wdX1aHxrsWdP6sx46ckQ9A==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
Xq1gDecYGTwP6WVPxgNiaBOXFW46G6j2V035XAa5nrOHvP7b1RmtFtHtL9j4/DJk
VzAdyA4LVIysTriXW3A5RwwNMdQaR9nsW1NsbYpn3MopPCk6O5WnDPAhmnGliSCe
a3rRo6ATcd+8UWQpqnbFdpEFoGRmbsxLSVBpRajU6yv3v4etJLGmO/IO02m1LPvP
yIF3GStfKfCHzP5njkEqowLMgaV0Q0c89U5YL3cxRqxfi1vdoLZyElyJqYTOA5ud
pCJs8d7uhpRmYCLVG18+z1XwQmnKDoTCcKud0N9+Dz3L7SpN/VkQMQ7xrvZqjczF
`protect end_protected

