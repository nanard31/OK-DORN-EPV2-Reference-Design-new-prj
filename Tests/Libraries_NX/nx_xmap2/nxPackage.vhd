library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

package nxPackage is

constant IOC_LINK_SIZE                  : integer := 38;
constant IOC_LINK_OUTPUT_MAX            : integer := 25;
constant IOC_LINK_SER_SCK_FABRIC        : integer := 0;
constant IOC_LINK_SER_SCK_IOC           : integer := 1;
constant IOC_LINK_DES_SCK_FABRIC        : integer := 2;
constant IOC_LINK_DES_SCK_IOC           : integer := 3;
constant IOC_LINK_DES_WPTR              : integer := 4;
constant IOC_LINK_DES_RPTR              : integer := 5;
constant IOC_LINK_SER_CHAIN_IN          : integer := 6;
constant IOC_LINK_SER_WPTR              : integer := 7;
constant IOC_LINK_SER_RPTR              : integer := 8;
constant IOC_LINK_SER_CHAIN_OUT         : integer := 28;
constant IOC_LINK_DES_CHAIN_IN          : integer := 9;
constant IOC_LINK_DES_CHAIN_OUT         : integer := 29;
constant IOC_LINK_SPW_TX_DO             : integer := 30;
constant IOC_LINK_SPW_TX_SO             : integer := 10;
constant IOC_LINK_SPW_TX_OUT_CONFIG     : integer := 11;
constant IOC_LINK_SPW_RX_DATA           : integer := 31;
constant IOC_LINK_SPW_RX_RCK            : integer := 12;
constant IOC_LINK_SPW_RX_DI             : integer := 13;
constant IOC_LINK_SPW_RX_IN_CONFIG      : integer := 14;
constant IOC_LINK_DELAY_VALUE_IN_LAST   : integer := 15;
constant IOC_LINK_DELAY_VALUE_IN_FIRST  : integer := 20;
constant IOC_LINK_DELAY_VALUE_OUT_LAST  : integer := 32;
constant IOC_LINK_DELAY_VALUE_OUT_FIRST : integer := 37;
constant IOC_LINK_DELAY_SELECT_LAST     : integer := 21;
constant IOC_LINK_DELAY_SELECT_FIRST    : integer := 22;
constant IOC_LINK_DCK                   : integer := 23;
constant IOC_LINK_DWR                   : integer := 24;
constant IOC_LINK_FZ                    : integer := 25;
constant IOC_LINK_FLD                   : integer := 26;
constant IOC_LINK_FLG                   : integer := 27;

component NX_IOB_I is
generic (
    location             : string := "";
    padType              : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    IO	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_IOB_I;

component NX_IOB_O is
generic (
    location             : string := "";
    padType              : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    O	: out std_logic := '0';
    IO	: out std_logic := '0'
);
end component NX_IOB_O;

component NX_IOB is
generic (
    location             : string := "";
    padType              : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I	: in std_logic := '0';
    C	: in std_logic := '0';
    T	: in std_logic := '0';
    O	: out std_logic := '0';
    IO	: inout std_logic := '0'
);
end component NX_IOB;

component NX_IOC is
generic (
    mode_sw1     : bit := '0';
    mode_sw2     : bit := '0';
    mode_ddr1    : bit := '0';
    mode_ddr2    : bit := '0';
    mode_io_cal  : bit := '0';
    inv_di_fclk1 : bit := '0';
    inv_di_fclk2 : bit := '0';
    latency1     : bit := '0';
    latency2     : bit := '0';
    sel_clk_out2 : bit_vector(1 downto 0) := "00";
    sel_clk_out3 : bit_vector(1 downto 0) := "00";
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000"
);
port (
    RTCK1	: in std_logic := '0';
    RRCK1	: in std_logic := '0';
    WTCK1	: in std_logic := '0';
    WRCK1	: in std_logic := '0';
    RTCK2	: in std_logic := '0';
    RRCK2	: in std_logic := '0';
    WTCK2	: in std_logic := '0';
    WRCK2	: in std_logic := '0';

    C1TW	: in std_logic := '0';
    C1TS	: in std_logic := '0';
    C1RW1	: in std_logic := '0';
    C1RW2	: in std_logic := '0';
    C1RW3	: in std_logic := '0';
    C1RNE	: in std_logic := '0';
    C1RS	: in std_logic := '0';
    C2TW	: in std_logic := '0';
    C2TS	: in std_logic := '0';
    C2RW1	: in std_logic := '0';
    C2RW2	: in std_logic := '0';
    C2RW3	: in std_logic := '0';
    C2RNE	: in std_logic := '0';
    C2RS	: in std_logic := '0';
    FA1	: in std_logic := '0';
    FA2	: in std_logic := '0';
    FA3	: in std_logic := '0';
    FA4	: in std_logic := '0';
    FA5	: in std_logic := '0';
    FZ	: in std_logic := '0';
    DC	: in std_logic := '0';
    SE	: in std_logic := '0';
    SCI	: in std_logic := '0';
    SPI1	: in std_logic := '0';
    SPI2	: in std_logic := '0';
    SPI3	: in std_logic := '0';
    SPI4	: in std_logic := '0';
    SPI5	: in std_logic := '0';
    SPI6	: in std_logic := '0';
    CCK	: in std_logic := '0';
    DCK	: in std_logic := '0';
    DRI1	: in std_logic := '0';
    DRI2	: in std_logic := '0';
    DRI3	: in std_logic := '0';
    DRI4	: in std_logic := '0';
    DRI5	: in std_logic := '0';
    DRI6	: in std_logic := '0';
    DRA1	: in std_logic := '0';
    DRA2	: in std_logic := '0';
    DRA3	: in std_logic := '0';
    DRA4	: in std_logic := '0';
    DRA5	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DOS	: in std_logic := '0';
    DOG	: in std_logic := '0';
    DIS	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DPAS	: in std_logic := '0';
    DPAG	: in std_logic := '0';
    DQSS	: in std_logic := '0';
    DQSG	: in std_logic := '0';
    DS1	: in std_logic := '0';
    DS2	: in std_logic := '0';
    CAD1	: in std_logic := '0';
    CAD2	: in std_logic := '0';
    CAD3	: in std_logic := '0';
    CAD4	: in std_logic := '0';
    CAD5	: in std_logic := '0';
    CAD6	: in std_logic := '0';
    CAP1	: in std_logic := '0';
    CAP2	: in std_logic := '0';
    CAP3	: in std_logic := '0';
    CAP4	: in std_logic := '0';
    CAN1	: in std_logic := '0';
    CAN2	: in std_logic := '0';
    CAN3	: in std_logic := '0';
    CAN4	: in std_logic := '0';
    CAT1	: in std_logic := '0';
    CAT2	: in std_logic := '0';
    CAT3	: in std_logic := '0';
    CAT4	: in std_logic := '0';

    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    C1RED	: out std_logic := '0';
    C2RED	: out std_logic := '0';
    DRO1	: out std_logic := '0';
    DRO2	: out std_logic := '0';
    DRO3	: out std_logic := '0';
    DRO4	: out std_logic := '0';
    DRO5	: out std_logic := '0';
    DRO6	: out std_logic := '0';
    DRE	: out std_logic := '0';
    DRR	: out std_logic := '0';
    SCO	: out std_logic := '0';
    SPO1	: out std_logic := '0';
    SPO2	: out std_logic := '0';
    SPO3	: out std_logic := '0';
    SPO4	: out std_logic := '0';
    SPO5	: out std_logic := '0';

    LINK1	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK2	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK3	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK4	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK5	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK6	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK7	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK8	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK9	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK10	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK11	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK12	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK13	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK14	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK15	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK16	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK17	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK18	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK19	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK20	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK21	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK22	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK23	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK24	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK25	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK26	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK27	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK28	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK29	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0');
    LINK30	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0')
);
end component NX_IOC;

component NX_IOD is
generic (
    epath_edge      : bit := '0';
    epath_init      : bit := '0';
    epath_load      : bit := '0';
    epath_mode      : bit_vector(3 downto 0) := "0000";
    epath_sync      : bit := '0';
    epath_dynamic : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    rpath_edge      : bit := '0';
    rpath_init      : bit := '0';
    rpath_load      : bit := '0';
    rpath_mode      : bit_vector(3 downto 0) := "0000";
    rpath_sync      : bit := '0';
    rpath_dynamic : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    cpath_edge      : bit := '0';
    cpath_init      : bit := '0';
    cpath_load      : bit := '0';
    cpath_mode      : bit_vector(3 downto 0) := "0000";
    cpath_sync      : bit := '0';
    cpath_inv       : bit := '0';

    tpath_mode      : bit_vector(1 downto 0) := "00";

    location        : string := "";
    chained         : bit    := '0'
);
port (
    CCK	: in std_logic := '0';
    ECK	: in std_logic := '0';
    RCK	: in std_logic := '0';
    CI	: in std_logic := '0';
    EI	: in std_logic := '0';
    EXI1	: in std_logic := '0';
    EXI2	: in std_logic := '0';
    EXI3	: in std_logic := '0';
    EXI4	: in std_logic := '0';
    RI	: in std_logic := '0';
    CL	: in std_logic := '0';
    EL	: in std_logic := '0';
    RL	: in std_logic := '0';
    CR	: in std_logic := '0';
    CT	: in std_logic := '0';
    CXI1	: in std_logic := '0';
    CXI2	: in std_logic := '0';
    CXI3	: in std_logic := '0';
    CXI4	: in std_logic := '0';
    ER	: in std_logic := '0';
    RR	: in std_logic := '0';
    CO	: out std_logic := '0';
    EO	: out std_logic := '0';
    RO	: out std_logic := '0';
    RXO1	: out std_logic := '0';
    RXO2	: out std_logic := '0';
    RXO3	: out std_logic := '0';
    RXO4	: out std_logic := '0';
    LINK	: inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0) := (others => '0')
);
end component NX_IOD;

component NX_FE is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truthTable t15 ... t0
    dff_edge  : bit := '0';      -- 0: rising             - 1: falling
    dff_init  : bit := '0';      -- 0: no reset           - 1: reset connected
    dff_load  : bit := '0';      -- 0: no enable          - 1: enable connected
    dff_mode  : bit := '0';      -- 0: combi              - 1: sequential
    dff_sync  : bit := '0';      -- 0: asynchronous reset - 1: synchronous reset
    dff_ctxt  : std_logic := 'U' -- U: unset  - 0: low    - 1: high
);
port (
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    CK	: in std_logic := '0';
    L	: in std_logic := '0';
    R	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_FE;

component NX_CY is
generic (
    -- when generic is suffixed by 1, 2, 3 or 4 it refers to corresponding carry stage
    add_table1 : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table
    add_table2 : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table
    add_table3 : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table
    add_table4 : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table
    add_carry  : integer := 0;     -- 0: low - 1: high - 2: propagate
    add_dff1   : bit := '0';       -- 0: combinatorial - 1: sequential
    add_dff2   : bit := '0';       -- 0: combinatorial - 1: sequential
    add_dff3   : bit := '0';       -- 0: combinatorial - 1: sequential
    add_dff4   : bit := '0';       -- 0: combinatorial - 1: sequential
    add_ctxt1  : std_logic := 'U'; -- U: unset - 0: low - 1: high
    add_ctxt2  : std_logic := 'U'; -- U: unset - 0: low - 1: high
    add_ctxt3  : std_logic := 'U'; -- U: unset - 0: low - 1: high
    add_ctxt4  : std_logic := 'U'; -- U: unset - 0: low - 1: high
    dff_edge   : bit := '0';       -- 0: rising edge - 1: falling edge
    dff_load   : bit := '0';       -- 0: ignore load enable - 1: use connected load enable
    dff_init   : bit := '0';       -- 0: ignore reset - 1: use connected reset
    dff_sync   : bit := '0'        -- 0: asynchronous reset - 1: synchronous reset
);
port (
    -- O1 <= A1 + f(B1I1, B1I2, B1I3, B1I4) + CIB
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    B1I1	: in std_logic := '0';
    B1I2	: in std_logic := '0';
    B1I3	: in std_logic := '0';
    B1I4	: in std_logic := '0';
    B2I1	: in std_logic := '0';
    B2I2	: in std_logic := '0';
    B2I3	: in std_logic := '0';
    B2I4	: in std_logic := '0';
    B3I1	: in std_logic := '0';
    B3I2	: in std_logic := '0';
    B3I3	: in std_logic := '0';
    B3I4	: in std_logic := '0';
    B4I1	: in std_logic := '0';
    B4I2	: in std_logic := '0';
    B4I3	: in std_logic := '0';
    B4I4	: in std_logic := '0';
    CK1	: in std_logic := '0';
    CK2	: in std_logic := '0';
    CK3	: in std_logic := '0';
    CK4	: in std_logic := '0';
    L1	: in std_logic := '0';
    L2	: in std_logic := '0';
    L3	: in std_logic := '0';
    L4	: in std_logic := '0';
    R1	: in std_logic := '0';
    R2	: in std_logic := '0';
    R3	: in std_logic := '0';
    R4	: in std_logic := '0';
    CIB	: in std_logic := '0';
    COB	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0'
);
end component NX_CY;

component NX_CDC_L is
generic (
    mode : bit := '0';
    rck_edge : bit := '0';
    wck_edge : bit := '0'
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    RI1	: in std_logic := '0';
    RI2	: in std_logic := '0';
    RI3	: in std_logic := '0';
    RI4	: in std_logic := '0';
    RI5	: in std_logic := '0';
    RI6	: in std_logic := '0';
    RO1	: out std_logic := '0';
    RO2	: out std_logic := '0';
    RO3	: out std_logic := '0';
    RO4	: out std_logic := '0';
    RO5	: out std_logic := '0';
    RO6	: out std_logic := '0';
    WI1	: in std_logic := '0';
    WI2	: in std_logic := '0';
    WI3	: in std_logic := '0';
    WI4	: in std_logic := '0';
    WI5	: in std_logic := '0';
    WI6	: in std_logic := '0';
    WO1	: out std_logic := '0';
    WO2	: out std_logic := '0';
    WO3	: out std_logic := '0';
    WO4	: out std_logic := '0';
    WO5	: out std_logic := '0';
    WO6	: out std_logic := '0'
);
end component NX_CDC_L;

component NX_FIFO_CDC_L is
generic (
    mode : bit := '1'
);
port (
    XRCK	: in std_logic := '0';
    XWCK	: in std_logic := '0';
    XRI1	: in std_logic := '0';
    XRI2	: in std_logic := '0';
    XRI3	: in std_logic := '0';
    XRI4	: in std_logic := '0';
    XRI5	: in std_logic := '0';
    XRI6	: in std_logic := '0';
    XWI1	: in std_logic := '0';
    XWI2	: in std_logic := '0';
    XWI3	: in std_logic := '0';
    XWI4	: in std_logic := '0';
    XWI5	: in std_logic := '0';
    XWI6	: in std_logic := '0';
    RO1	: out std_logic := '0';
    RO2	: out std_logic := '0';
    RO3	: out std_logic := '0';
    RO4	: out std_logic := '0';
    RO5	: out std_logic := '0';
    RO6	: out std_logic := '0';
    WO1	: out std_logic := '0';
    WO2	: out std_logic := '0';
    WO3	: out std_logic := '0';
    WO4	: out std_logic := '0';
    WO5	: out std_logic := '0';
    WO6	: out std_logic := '0'
);
end component NX_FIFO_CDC_L;

component NX_RFB is
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RA6	: in std_logic := '0';
    RE1	: in std_logic := '0';
    RE2	: in std_logic := '0';
    RE3	: in std_logic := '0';
    RE4	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WA6	: in std_logic := '0';
    WE1	: in std_logic := '0';
    WE2	: in std_logic := '0';
    WE3	: in std_logic := '0';
    WE4	: in std_logic := '0'
);
end component NX_RFB;

component NX_RFB_WRAP is
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(15 downto 0) := (others => '0');
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O	: out std_logic_vector(15 downto 0) := (others => '0');
    RA	: in std_logic_vector(5 downto 0) := (others => '0');
    RE	: in std_logic_vector(3 downto 0) := (others => '0');
    WA	: in std_logic_vector(5 downto 0) := (others => '0');
    WE	: in std_logic_vector(3 downto 0) := (others => '0')
);
end component NX_RFB_WRAP;

component NX_CKS is
port (
    CKI	: in std_logic := '0';
    CMD	: in std_logic := '0';
    CKO	: out std_logic := '0'
);
end component NX_CKS;

component NX_RFB_L is
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    RA1	: in std_logic := '0';
    RA2	: in std_logic := '0';
    RA3	: in std_logic := '0';
    RA4	: in std_logic := '0';
    RA5	: in std_logic := '0';
    RA6	: in std_logic := '0';
    RE1	: in std_logic := '0';
    RE2	: in std_logic := '0';
    RE3	: in std_logic := '0';
    RE4	: in std_logic := '0';
    WA1	: in std_logic := '0';
    WA2	: in std_logic := '0';
    WA3	: in std_logic := '0';
    WA4	: in std_logic := '0';
    WA5	: in std_logic := '0';
    WA6	: in std_logic := '0';
    WE1	: in std_logic := '0';
    WE2	: in std_logic := '0';
    WE3	: in std_logic := '0';
    WE4	: in std_logic := '0';
    XRCK	: out std_logic := '0';
    XRO1	: out std_logic := '0';
    XRO2	: out std_logic := '0';
    XRO3	: out std_logic := '0';
    XRO4	: out std_logic := '0';
    XRO5	: out std_logic := '0';
    XRO6	: out std_logic := '0';
    XWCK	: out std_logic := '0';
    XWO1	: out std_logic := '0';
    XWO2	: out std_logic := '0';
    XWO3	: out std_logic := '0';
    XWO4	: out std_logic := '0';
    XWO5	: out std_logic := '0';
    XWO6	: out std_logic := '0'
);
end component NX_RFB_L;

component NX_RFB_L_WRAP is
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK	: in std_logic := '0';
    WCK	: in std_logic := '0';
    I	: in std_logic_vector(15 downto 0) := (others => '0');
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0';
    O	: out std_logic_vector(15 downto 0) := (others => '0');
    RA	: in std_logic_vector(5 downto 0) := (others => '0');
    RE	: in std_logic_vector(3 downto 0) := (others => '0');
    WA	: in std_logic_vector(5 downto 0) := (others => '0');
    WE	: in std_logic_vector(3 downto 0) := (others => '0');
    XRCK	: out std_logic := '0';
    XRO	: out std_logic_vector(5 downto 0) := (others => '0');
    XWCK	: out std_logic := '0';
    XWO	: out std_logic_vector(5 downto 0) := (others => '0')
);
end component NX_RFB_L_WRAP;

component NX_DSP is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";      -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    A5	: in std_logic := '0';
    A6	: in std_logic := '0';
    A7	: in std_logic := '0';
    A8	: in std_logic := '0';
    A9	: in std_logic := '0';
    A10	: in std_logic := '0';
    A11	: in std_logic := '0';
    A12	: in std_logic := '0';
    A13	: in std_logic := '0';
    A14	: in std_logic := '0';
    A15	: in std_logic := '0';
    A16	: in std_logic := '0';
    A17	: in std_logic := '0';
    A18	: in std_logic := '0';
    A19	: in std_logic := '0';
    A20	: in std_logic := '0';
    A21	: in std_logic := '0';
    A22	: in std_logic := '0';
    A23	: in std_logic := '0';
    A24	: in std_logic := '0';

    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    B5	: in std_logic := '0';
    B6	: in std_logic := '0';
    B7	: in std_logic := '0';
    B8	: in std_logic := '0';
    B9	: in std_logic := '0';
    B10	: in std_logic := '0';
    B11	: in std_logic := '0';
    B12	: in std_logic := '0';
    B13	: in std_logic := '0';
    B14	: in std_logic := '0';
    B15	: in std_logic := '0';
    B16	: in std_logic := '0';
    B17	: in std_logic := '0';
    B18	: in std_logic := '0';

    C1	: in std_logic := '0';
    C2	: in std_logic := '0';
    C3	: in std_logic := '0';
    C4	: in std_logic := '0';
    C5	: in std_logic := '0';
    C6	: in std_logic := '0';
    C7	: in std_logic := '0';
    C8	: in std_logic := '0';
    C9	: in std_logic := '0';
    C10	: in std_logic := '0';
    C11	: in std_logic := '0';
    C12	: in std_logic := '0';
    C13	: in std_logic := '0';
    C14	: in std_logic := '0';
    C15	: in std_logic := '0';
    C16	: in std_logic := '0';
    C17	: in std_logic := '0';
    C18	: in std_logic := '0';
    C19	: in std_logic := '0';
    C20	: in std_logic := '0';
    C21	: in std_logic := '0';
    C22	: in std_logic := '0';
    C23	: in std_logic := '0';
    C24	: in std_logic := '0';
    C25	: in std_logic := '0';
    C26	: in std_logic := '0';
    C27	: in std_logic := '0';
    C28	: in std_logic := '0';
    C29	: in std_logic := '0';
    C30	: in std_logic := '0';
    C31	: in std_logic := '0';
    C32	: in std_logic := '0';
    C33	: in std_logic := '0';
    C34	: in std_logic := '0';
    C35	: in std_logic := '0';
    C36	: in std_logic := '0';

    CAI1	: in std_logic := '0';
    CAI2	: in std_logic := '0';
    CAI3	: in std_logic := '0';
    CAI4	: in std_logic := '0';
    CAI5	: in std_logic := '0';
    CAI6	: in std_logic := '0';
    CAI7	: in std_logic := '0';
    CAI8	: in std_logic := '0';
    CAI9	: in std_logic := '0';
    CAI10	: in std_logic := '0';
    CAI11	: in std_logic := '0';
    CAI12	: in std_logic := '0';
    CAI13	: in std_logic := '0';
    CAI14	: in std_logic := '0';
    CAI15	: in std_logic := '0';
    CAI16	: in std_logic := '0';
    CAI17	: in std_logic := '0';
    CAI18	: in std_logic := '0';

    CAO1	: out std_logic := '0';
    CAO2	: out std_logic := '0';
    CAO3	: out std_logic := '0';
    CAO4	: out std_logic := '0';
    CAO5	: out std_logic := '0';
    CAO6	: out std_logic := '0';
    CAO7	: out std_logic := '0';
    CAO8	: out std_logic := '0';
    CAO9	: out std_logic := '0';
    CAO10	: out std_logic := '0';
    CAO11	: out std_logic := '0';
    CAO12	: out std_logic := '0';
    CAO13	: out std_logic := '0';
    CAO14	: out std_logic := '0';
    CAO15	: out std_logic := '0';
    CAO16	: out std_logic := '0';
    CAO17	: out std_logic := '0';
    CAO18	: out std_logic := '0';

    CBI1	: in std_logic := '0';
    CBI2	: in std_logic := '0';
    CBI3	: in std_logic := '0';
    CBI4	: in std_logic := '0';
    CBI5	: in std_logic := '0';
    CBI6	: in std_logic := '0';
    CBI7	: in std_logic := '0';
    CBI8	: in std_logic := '0';
    CBI9	: in std_logic := '0';
    CBI10	: in std_logic := '0';
    CBI11	: in std_logic := '0';
    CBI12	: in std_logic := '0';
    CBI13	: in std_logic := '0';
    CBI14	: in std_logic := '0';
    CBI15	: in std_logic := '0';
    CBI16	: in std_logic := '0';
    CBI17	: in std_logic := '0';
    CBI18	: in std_logic := '0';

    CBO1	: out std_logic := '0';
    CBO2	: out std_logic := '0';
    CBO3	: out std_logic := '0';
    CBO4	: out std_logic := '0';
    CBO5	: out std_logic := '0';
    CBO6	: out std_logic := '0';
    CBO7	: out std_logic := '0';
    CBO8	: out std_logic := '0';
    CBO9	: out std_logic := '0';
    CBO10	: out std_logic := '0';
    CBO11	: out std_logic := '0';
    CBO12	: out std_logic := '0';
    CBO13	: out std_logic := '0';
    CBO14	: out std_logic := '0';
    CBO15	: out std_logic := '0';
    CBO16	: out std_logic := '0';
    CBO17	: out std_logic := '0';
    CBO18	: out std_logic := '0';

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO49	: out std_logic := '0';

    CZI1	: in std_logic := '0';
    CZI2	: in std_logic := '0';
    CZI3	: in std_logic := '0';
    CZI4	: in std_logic := '0';
    CZI5	: in std_logic := '0';
    CZI6	: in std_logic := '0';
    CZI7	: in std_logic := '0';
    CZI8	: in std_logic := '0';
    CZI9	: in std_logic := '0';
    CZI10	: in std_logic := '0';
    CZI11	: in std_logic := '0';
    CZI12	: in std_logic := '0';
    CZI13	: in std_logic := '0';
    CZI14	: in std_logic := '0';
    CZI15	: in std_logic := '0';
    CZI16	: in std_logic := '0';
    CZI17	: in std_logic := '0';
    CZI18	: in std_logic := '0';
    CZI19	: in std_logic := '0';
    CZI20	: in std_logic := '0';
    CZI21	: in std_logic := '0';
    CZI22	: in std_logic := '0';
    CZI23	: in std_logic := '0';
    CZI24	: in std_logic := '0';
    CZI25	: in std_logic := '0';
    CZI26	: in std_logic := '0';
    CZI27	: in std_logic := '0';
    CZI28	: in std_logic := '0';
    CZI29	: in std_logic := '0';
    CZI30	: in std_logic := '0';
    CZI31	: in std_logic := '0';
    CZI32	: in std_logic := '0';
    CZI33	: in std_logic := '0';
    CZI34	: in std_logic := '0';
    CZI35	: in std_logic := '0';
    CZI36	: in std_logic := '0';
    CZI37	: in std_logic := '0';
    CZI38	: in std_logic := '0';
    CZI39	: in std_logic := '0';
    CZI40	: in std_logic := '0';
    CZI41	: in std_logic := '0';
    CZI42	: in std_logic := '0';
    CZI43	: in std_logic := '0';
    CZI44	: in std_logic := '0';
    CZI45	: in std_logic := '0';
    CZI46	: in std_logic := '0';
    CZI47	: in std_logic := '0';
    CZI48	: in std_logic := '0';
    CZI49	: in std_logic := '0';
    CZI50	: in std_logic := '0';
    CZI51	: in std_logic := '0';
    CZI52	: in std_logic := '0';
    CZI53	: in std_logic := '0';
    CZI54	: in std_logic := '0';
    CZI55	: in std_logic := '0';
    CZI56	: in std_logic := '0';

    CZO1	: out std_logic := '0';
    CZO2	: out std_logic := '0';
    CZO3	: out std_logic := '0';
    CZO4	: out std_logic := '0';
    CZO5	: out std_logic := '0';
    CZO6	: out std_logic := '0';
    CZO7	: out std_logic := '0';
    CZO8	: out std_logic := '0';
    CZO9	: out std_logic := '0';
    CZO10	: out std_logic := '0';
    CZO11	: out std_logic := '0';
    CZO12	: out std_logic := '0';
    CZO13	: out std_logic := '0';
    CZO14	: out std_logic := '0';
    CZO15	: out std_logic := '0';
    CZO16	: out std_logic := '0';
    CZO17	: out std_logic := '0';
    CZO18	: out std_logic := '0';
    CZO19	: out std_logic := '0';
    CZO20	: out std_logic := '0';
    CZO21	: out std_logic := '0';
    CZO22	: out std_logic := '0';
    CZO23	: out std_logic := '0';
    CZO24	: out std_logic := '0';
    CZO25	: out std_logic := '0';
    CZO26	: out std_logic := '0';
    CZO27	: out std_logic := '0';
    CZO28	: out std_logic := '0';
    CZO29	: out std_logic := '0';
    CZO30	: out std_logic := '0';
    CZO31	: out std_logic := '0';
    CZO32	: out std_logic := '0';
    CZO33	: out std_logic := '0';
    CZO34	: out std_logic := '0';
    CZO35	: out std_logic := '0';
    CZO36	: out std_logic := '0';
    CZO37	: out std_logic := '0';
    CZO38	: out std_logic := '0';
    CZO39	: out std_logic := '0';
    CZO40	: out std_logic := '0';
    CZO41	: out std_logic := '0';
    CZO42	: out std_logic := '0';
    CZO43	: out std_logic := '0';
    CZO44	: out std_logic := '0';
    CZO45	: out std_logic := '0';
    CZO46	: out std_logic := '0';
    CZO47	: out std_logic := '0';
    CZO48	: out std_logic := '0';
    CZO49	: out std_logic := '0';
    CZO50	: out std_logic := '0';
    CZO51	: out std_logic := '0';
    CZO52	: out std_logic := '0';
    CZO53	: out std_logic := '0';
    CZO54	: out std_logic := '0';
    CZO55	: out std_logic := '0';
    CZO56	: out std_logic := '0';

    D1	: in std_logic := '0';
    D2	: in std_logic := '0';
    D3	: in std_logic := '0';
    D4	: in std_logic := '0';
    D5	: in std_logic := '0';
    D6	: in std_logic := '0';
    D7	: in std_logic := '0';
    D8	: in std_logic := '0';
    D9	: in std_logic := '0';
    D10	: in std_logic := '0';
    D11	: in std_logic := '0';
    D12	: in std_logic := '0';
    D13	: in std_logic := '0';
    D14	: in std_logic := '0';
    D15	: in std_logic := '0';
    D16	: in std_logic := '0';
    D17	: in std_logic := '0';
    D18	: in std_logic := '0';

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z1	: out std_logic := '0';
    Z2	: out std_logic := '0';
    Z3	: out std_logic := '0';
    Z4	: out std_logic := '0';
    Z5	: out std_logic := '0';
    Z6	: out std_logic := '0';
    Z7	: out std_logic := '0';
    Z8	: out std_logic := '0';
    Z9	: out std_logic := '0';
    Z10	: out std_logic := '0';
    Z11	: out std_logic := '0';
    Z12	: out std_logic := '0';
    Z13	: out std_logic := '0';
    Z14	: out std_logic := '0';
    Z15	: out std_logic := '0';
    Z16	: out std_logic := '0';
    Z17	: out std_logic := '0';
    Z18	: out std_logic := '0';
    Z19	: out std_logic := '0';
    Z20	: out std_logic := '0';
    Z21	: out std_logic := '0';
    Z22	: out std_logic := '0';
    Z23	: out std_logic := '0';
    Z24	: out std_logic := '0';
    Z25	: out std_logic := '0';
    Z26	: out std_logic := '0';
    Z27	: out std_logic := '0';
    Z28	: out std_logic := '0';
    Z29	: out std_logic := '0';
    Z30	: out std_logic := '0';
    Z31	: out std_logic := '0';
    Z32	: out std_logic := '0';
    Z33	: out std_logic := '0';
    Z34	: out std_logic := '0';
    Z35	: out std_logic := '0';
    Z36	: out std_logic := '0';
    Z37	: out std_logic := '0';
    Z38	: out std_logic := '0';
    Z39	: out std_logic := '0';
    Z40	: out std_logic := '0';
    Z41	: out std_logic := '0';
    Z42	: out std_logic := '0';
    Z43	: out std_logic := '0';
    Z44	: out std_logic := '0';
    Z45	: out std_logic := '0';
    Z46	: out std_logic := '0';
    Z47	: out std_logic := '0';
    Z48	: out std_logic := '0';
    Z49	: out std_logic := '0';
    Z50	: out std_logic := '0';
    Z51	: out std_logic := '0';
    Z52	: out std_logic := '0';
    Z53	: out std_logic := '0';
    Z54	: out std_logic := '0';
    Z55	: out std_logic := '0';
    Z56	: out std_logic := '0'
);
end component NX_DSP;

component NX_DSP_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";      -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A	: in std_logic_vector(23 downto 0) := (others => '0');
    B	: in std_logic_vector(17 downto 0) := (others => '0');
    C	: in std_logic_vector(35 downto 0) := (others => '0');

    CAI	: in std_logic_vector(17 downto 0) := (others => '0');
    CAO	: out std_logic_vector(17 downto 0) := (others => '0');
    CBI	: in std_logic_vector(17 downto 0) := (others => '0');
    CBO	: out std_logic_vector(17 downto 0) := (others => '0');

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO49	: out std_logic := '0';

    CZI	: in std_logic_vector(55 downto 0) := (others => '0');
    CZO	: out std_logic_vector(55 downto 0) := (others => '0');

    D	: in std_logic_vector(17 downto 0) := (others => '0');

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0')
);
end component NX_DSP_WRAP;

component NX_DSP_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port (
    CK	: IN std_logic := '0';
    R	: IN std_logic := '0';
    RZ	: IN std_logic := '0';
    WE	: IN std_logic := '0';

    CI	: IN std_logic := '0';
    A	: IN std_logic_vector(23 downto 0) := (others => '0');
    B	: IN std_logic_vector(17 downto 0) := (others => '0');
    C	: IN std_logic_vector(35 downto 0) := (others => '0');
    D	: IN std_logic_vector(17 downto 0) := (others => '0');
    CAI	: IN std_logic_vector(17 downto 0) := (others => '0');
    CBI	: IN std_logic_vector(17 downto 0) := (others => '0');
    CZI	: IN std_logic_vector(55 downto 0) := (others => '0');
    CCI	: IN std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0');
    CO	: OUT std_logic := '0';
    CO36	: OUT std_logic := '0';
    CO48	: OUT std_logic := '0';
    OVF	: OUT std_logic := '0';
    CAO	: OUT std_logic_vector(17 downto 0) := (others => '0');
    CBO	: OUT std_logic_vector(17 downto 0) := (others => '0');
    CZO	: OUT std_logic_vector(55 downto 0) := (others => '0');
    CCO	: OUT std_logic := '0'
  );
end component NX_DSP_SPLIT;

component NX_DSP_L is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";   -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000"; -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";          -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                 -- ALU
);
port (
    A1	: in std_logic := '0';
    A2	: in std_logic := '0';
    A3	: in std_logic := '0';
    A4	: in std_logic := '0';
    A5	: in std_logic := '0';
    A6	: in std_logic := '0';
    A7	: in std_logic := '0';
    A8	: in std_logic := '0';
    A9	: in std_logic := '0';
    A10	: in std_logic := '0';
    A11	: in std_logic := '0';
    A12	: in std_logic := '0';
    A13	: in std_logic := '0';
    A14	: in std_logic := '0';
    A15	: in std_logic := '0';
    A16	: in std_logic := '0';
    A17	: in std_logic := '0';
    A18	: in std_logic := '0';
    A19	: in std_logic := '0';
    A20	: in std_logic := '0';
    A21	: in std_logic := '0';
    A22	: in std_logic := '0';
    A23	: in std_logic := '0';
    A24	: in std_logic := '0';

    B1	: in std_logic := '0';
    B2	: in std_logic := '0';
    B3	: in std_logic := '0';
    B4	: in std_logic := '0';
    B5	: in std_logic := '0';
    B6	: in std_logic := '0';
    B7	: in std_logic := '0';
    B8	: in std_logic := '0';
    B9	: in std_logic := '0';
    B10	: in std_logic := '0';
    B11	: in std_logic := '0';
    B12	: in std_logic := '0';
    B13	: in std_logic := '0';
    B14	: in std_logic := '0';
    B15	: in std_logic := '0';
    B16	: in std_logic := '0';
    B17	: in std_logic := '0';
    B18	: in std_logic := '0';

    C1	: in std_logic := '0';
    C2	: in std_logic := '0';
    C3	: in std_logic := '0';
    C4	: in std_logic := '0';
    C5	: in std_logic := '0';
    C6	: in std_logic := '0';
    C7	: in std_logic := '0';
    C8	: in std_logic := '0';
    C9	: in std_logic := '0';
    C10	: in std_logic := '0';
    C11	: in std_logic := '0';
    C12	: in std_logic := '0';
    C13	: in std_logic := '0';
    C14	: in std_logic := '0';
    C15	: in std_logic := '0';
    C16	: in std_logic := '0';
    C17	: in std_logic := '0';
    C18	: in std_logic := '0';
    C19	: in std_logic := '0';
    C20	: in std_logic := '0';
    C21	: in std_logic := '0';
    C22	: in std_logic := '0';
    C23	: in std_logic := '0';
    C24	: in std_logic := '0';
    C25	: in std_logic := '0';
    C26	: in std_logic := '0';
    C27	: in std_logic := '0';
    C28	: in std_logic := '0';
    C29	: in std_logic := '0';
    C30	: in std_logic := '0';
    C31	: in std_logic := '0';
    C32	: in std_logic := '0';
    C33	: in std_logic := '0';
    C34	: in std_logic := '0';
    C35	: in std_logic := '0';
    C36	: in std_logic := '0';

    CAI1	: in std_logic := '0';
    CAI2	: in std_logic := '0';
    CAI3	: in std_logic := '0';
    CAI4	: in std_logic := '0';
    CAI5	: in std_logic := '0';
    CAI6	: in std_logic := '0';
    CAI7	: in std_logic := '0';
    CAI8	: in std_logic := '0';
    CAI9	: in std_logic := '0';
    CAI10	: in std_logic := '0';
    CAI11	: in std_logic := '0';
    CAI12	: in std_logic := '0';
    CAI13	: in std_logic := '0';
    CAI14	: in std_logic := '0';
    CAI15	: in std_logic := '0';
    CAI16	: in std_logic := '0';
    CAI17	: in std_logic := '0';
    CAI18	: in std_logic := '0';
    CAI19	: in std_logic := '0';
    CAI20	: in std_logic := '0';
    CAI21	: in std_logic := '0';
    CAI22	: in std_logic := '0';
    CAI23	: in std_logic := '0';
    CAI24	: in std_logic := '0';

    CAO1	: out std_logic := '0';
    CAO2	: out std_logic := '0';
    CAO3	: out std_logic := '0';
    CAO4	: out std_logic := '0';
    CAO5	: out std_logic := '0';
    CAO6	: out std_logic := '0';
    CAO7	: out std_logic := '0';
    CAO8	: out std_logic := '0';
    CAO9	: out std_logic := '0';
    CAO10	: out std_logic := '0';
    CAO11	: out std_logic := '0';
    CAO12	: out std_logic := '0';
    CAO13	: out std_logic := '0';
    CAO14	: out std_logic := '0';
    CAO15	: out std_logic := '0';
    CAO16	: out std_logic := '0';
    CAO17	: out std_logic := '0';
    CAO18	: out std_logic := '0';
    CAO19	: out std_logic := '0';
    CAO20	: out std_logic := '0';
    CAO21	: out std_logic := '0';
    CAO22	: out std_logic := '0';
    CAO23	: out std_logic := '0';
    CAO24	: out std_logic := '0';

    CBI1	: in std_logic := '0';
    CBI2	: in std_logic := '0';
    CBI3	: in std_logic := '0';
    CBI4	: in std_logic := '0';
    CBI5	: in std_logic := '0';
    CBI6	: in std_logic := '0';
    CBI7	: in std_logic := '0';
    CBI8	: in std_logic := '0';
    CBI9	: in std_logic := '0';
    CBI10	: in std_logic := '0';
    CBI11	: in std_logic := '0';
    CBI12	: in std_logic := '0';
    CBI13	: in std_logic := '0';
    CBI14	: in std_logic := '0';
    CBI15	: in std_logic := '0';
    CBI16	: in std_logic := '0';
    CBI17	: in std_logic := '0';
    CBI18	: in std_logic := '0';

    CBO1	: out std_logic := '0';
    CBO2	: out std_logic := '0';
    CBO3	: out std_logic := '0';
    CBO4	: out std_logic := '0';
    CBO5	: out std_logic := '0';
    CBO6	: out std_logic := '0';
    CBO7	: out std_logic := '0';
    CBO8	: out std_logic := '0';
    CBO9	: out std_logic := '0';
    CBO10	: out std_logic := '0';
    CBO11	: out std_logic := '0';
    CBO12	: out std_logic := '0';
    CBO13	: out std_logic := '0';
    CBO14	: out std_logic := '0';
    CBO15	: out std_logic := '0';
    CBO16	: out std_logic := '0';
    CBO17	: out std_logic := '0';
    CBO18	: out std_logic := '0';

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI1	: in std_logic := '0';
    CZI2	: in std_logic := '0';
    CZI3	: in std_logic := '0';
    CZI4	: in std_logic := '0';
    CZI5	: in std_logic := '0';
    CZI6	: in std_logic := '0';
    CZI7	: in std_logic := '0';
    CZI8	: in std_logic := '0';
    CZI9	: in std_logic := '0';
    CZI10	: in std_logic := '0';
    CZI11	: in std_logic := '0';
    CZI12	: in std_logic := '0';
    CZI13	: in std_logic := '0';
    CZI14	: in std_logic := '0';
    CZI15	: in std_logic := '0';
    CZI16	: in std_logic := '0';
    CZI17	: in std_logic := '0';
    CZI18	: in std_logic := '0';
    CZI19	: in std_logic := '0';
    CZI20	: in std_logic := '0';
    CZI21	: in std_logic := '0';
    CZI22	: in std_logic := '0';
    CZI23	: in std_logic := '0';
    CZI24	: in std_logic := '0';
    CZI25	: in std_logic := '0';
    CZI26	: in std_logic := '0';
    CZI27	: in std_logic := '0';
    CZI28	: in std_logic := '0';
    CZI29	: in std_logic := '0';
    CZI30	: in std_logic := '0';
    CZI31	: in std_logic := '0';
    CZI32	: in std_logic := '0';
    CZI33	: in std_logic := '0';
    CZI34	: in std_logic := '0';
    CZI35	: in std_logic := '0';
    CZI36	: in std_logic := '0';
    CZI37	: in std_logic := '0';
    CZI38	: in std_logic := '0';
    CZI39	: in std_logic := '0';
    CZI40	: in std_logic := '0';
    CZI41	: in std_logic := '0';
    CZI42	: in std_logic := '0';
    CZI43	: in std_logic := '0';
    CZI44	: in std_logic := '0';
    CZI45	: in std_logic := '0';
    CZI46	: in std_logic := '0';
    CZI47	: in std_logic := '0';
    CZI48	: in std_logic := '0';
    CZI49	: in std_logic := '0';
    CZI50	: in std_logic := '0';
    CZI51	: in std_logic := '0';
    CZI52	: in std_logic := '0';
    CZI53	: in std_logic := '0';
    CZI54	: in std_logic := '0';
    CZI55	: in std_logic := '0';
    CZI56	: in std_logic := '0';

    CZO1	: out std_logic := '0';
    CZO2	: out std_logic := '0';
    CZO3	: out std_logic := '0';
    CZO4	: out std_logic := '0';
    CZO5	: out std_logic := '0';
    CZO6	: out std_logic := '0';
    CZO7	: out std_logic := '0';
    CZO8	: out std_logic := '0';
    CZO9	: out std_logic := '0';
    CZO10	: out std_logic := '0';
    CZO11	: out std_logic := '0';
    CZO12	: out std_logic := '0';
    CZO13	: out std_logic := '0';
    CZO14	: out std_logic := '0';
    CZO15	: out std_logic := '0';
    CZO16	: out std_logic := '0';
    CZO17	: out std_logic := '0';
    CZO18	: out std_logic := '0';
    CZO19	: out std_logic := '0';
    CZO20	: out std_logic := '0';
    CZO21	: out std_logic := '0';
    CZO22	: out std_logic := '0';
    CZO23	: out std_logic := '0';
    CZO24	: out std_logic := '0';
    CZO25	: out std_logic := '0';
    CZO26	: out std_logic := '0';
    CZO27	: out std_logic := '0';
    CZO28	: out std_logic := '0';
    CZO29	: out std_logic := '0';
    CZO30	: out std_logic := '0';
    CZO31	: out std_logic := '0';
    CZO32	: out std_logic := '0';
    CZO33	: out std_logic := '0';
    CZO34	: out std_logic := '0';
    CZO35	: out std_logic := '0';
    CZO36	: out std_logic := '0';
    CZO37	: out std_logic := '0';
    CZO38	: out std_logic := '0';
    CZO39	: out std_logic := '0';
    CZO40	: out std_logic := '0';
    CZO41	: out std_logic := '0';
    CZO42	: out std_logic := '0';
    CZO43	: out std_logic := '0';
    CZO44	: out std_logic := '0';
    CZO45	: out std_logic := '0';
    CZO46	: out std_logic := '0';
    CZO47	: out std_logic := '0';
    CZO48	: out std_logic := '0';
    CZO49	: out std_logic := '0';
    CZO50	: out std_logic := '0';
    CZO51	: out std_logic := '0';
    CZO52	: out std_logic := '0';
    CZO53	: out std_logic := '0';
    CZO54	: out std_logic := '0';
    CZO55	: out std_logic := '0';
    CZO56	: out std_logic := '0';

    D1	: in std_logic := '0';
    D2	: in std_logic := '0';
    D3	: in std_logic := '0';
    D4	: in std_logic := '0';
    D5	: in std_logic := '0';
    D6	: in std_logic := '0';
    D7	: in std_logic := '0';
    D8	: in std_logic := '0';
    D9	: in std_logic := '0';
    D10	: in std_logic := '0';
    D11	: in std_logic := '0';
    D12	: in std_logic := '0';
    D13	: in std_logic := '0';
    D14	: in std_logic := '0';
    D15	: in std_logic := '0';
    D16	: in std_logic := '0';
    D17	: in std_logic := '0';
    D18	: in std_logic := '0';

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z1	: out std_logic := '0';
    Z2	: out std_logic := '0';
    Z3	: out std_logic := '0';
    Z4	: out std_logic := '0';
    Z5	: out std_logic := '0';
    Z6	: out std_logic := '0';
    Z7	: out std_logic := '0';
    Z8	: out std_logic := '0';
    Z9	: out std_logic := '0';
    Z10	: out std_logic := '0';
    Z11	: out std_logic := '0';
    Z12	: out std_logic := '0';
    Z13	: out std_logic := '0';
    Z14	: out std_logic := '0';
    Z15	: out std_logic := '0';
    Z16	: out std_logic := '0';
    Z17	: out std_logic := '0';
    Z18	: out std_logic := '0';
    Z19	: out std_logic := '0';
    Z20	: out std_logic := '0';
    Z21	: out std_logic := '0';
    Z22	: out std_logic := '0';
    Z23	: out std_logic := '0';
    Z24	: out std_logic := '0';
    Z25	: out std_logic := '0';
    Z26	: out std_logic := '0';
    Z27	: out std_logic := '0';
    Z28	: out std_logic := '0';
    Z29	: out std_logic := '0';
    Z30	: out std_logic := '0';
    Z31	: out std_logic := '0';
    Z32	: out std_logic := '0';
    Z33	: out std_logic := '0';
    Z34	: out std_logic := '0';
    Z35	: out std_logic := '0';
    Z36	: out std_logic := '0';
    Z37	: out std_logic := '0';
    Z38	: out std_logic := '0';
    Z39	: out std_logic := '0';
    Z40	: out std_logic := '0';
    Z41	: out std_logic := '0';
    Z42	: out std_logic := '0';
    Z43	: out std_logic := '0';
    Z44	: out std_logic := '0';
    Z45	: out std_logic := '0';
    Z46	: out std_logic := '0';
    Z47	: out std_logic := '0';
    Z48	: out std_logic := '0';
    Z49	: out std_logic := '0';
    Z50	: out std_logic := '0';
    Z51	: out std_logic := '0';
    Z52	: out std_logic := '0';
    Z53	: out std_logic := '0';
    Z54	: out std_logic := '0';
    Z55	: out std_logic := '0';
    Z56	: out std_logic := '0'
);
end component NX_DSP_L;

component NX_DSP_L_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";      -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A	: in std_logic_vector(23 downto 0) := (others => '0');
    B	: in std_logic_vector(17 downto 0) := (others => '0');
    C	: in std_logic_vector(35 downto 0) := (others => '0');

    CAI	: in std_logic_vector(23 downto 0) := (others => '0');
    CAO	: out std_logic_vector(23 downto 0) := (others => '0');
    CBI	: in std_logic_vector(17 downto 0) := (others => '0');
    CBO	: out std_logic_vector(17 downto 0) := (others => '0');

    CCI	: in std_logic := '0';
    CCO	: out std_logic := '0';
    CI	: in std_logic := '0';
    CK	: in std_logic := '0';
    CO	: out std_logic := '0';
    CO37	: out std_logic := '0';
    CO57	: out std_logic := '0';

    CZI	: in std_logic_vector(55 downto 0) := (others => '0');
    CZO	: out std_logic_vector(55 downto 0) := (others => '0');

    D	: in std_logic_vector(17 downto 0) := (others => '0');

    OVF	: out std_logic := '0';
    R	: in std_logic := '0';
    RZ	: in std_logic := '0';
    WE	: in std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0')
);
end component NX_DSP_L_WRAP;

component NX_DSP_L_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port (
    CK	: IN std_logic := '0';
    R	: IN std_logic := '0';
    RZ	: IN std_logic := '0';
    WE	: IN std_logic := '0';

    CI	: IN std_logic := '0';
    A	: IN std_logic_vector(23 downto 0) := (others => '0');
    B	: IN std_logic_vector(17 downto 0) := (others => '0');
    C	: IN std_logic_vector(35 downto 0) := (others => '0');
    D	: IN std_logic_vector(17 downto 0) := (others => '0');
    CAI	: IN std_logic_vector(23 downto 0) := (others => '0');
    CBI	: IN std_logic_vector(17 downto 0) := (others => '0');
    CZI	: IN std_logic_vector(55 downto 0) := (others => '0');
    CCI	: IN std_logic := '0';

    Z	: out std_logic_vector(55 downto 0) := (others => '0');
    CO	: OUT std_logic := '0';
    CO36	: OUT std_logic := '0';
    CO56	: OUT std_logic := '0';
    OVF	: OUT std_logic := '0';
    CAO	: OUT std_logic_vector(23 downto 0) := (others => '0');
    CBO	: OUT std_logic_vector(17 downto 0) := (others => '0');
    CZO	: OUT std_logic_vector(55 downto 0) := (others => '0');
    CCO	: OUT std_logic := '0'
  );
end component NX_DSP_L_SPLIT;

component NX_RAM is
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK	: in std_logic := '0';
    ACKC	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKC	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI1	: in std_logic := '0';
    AI2	: in std_logic := '0';
    AI3	: in std_logic := '0';
    AI4	: in std_logic := '0';
    AI5	: in std_logic := '0';
    AI6	: in std_logic := '0';
    AI7	: in std_logic := '0';
    AI8	: in std_logic := '0';
    AI9	: in std_logic := '0';
    AI10	: in std_logic := '0';
    AI11	: in std_logic := '0';
    AI12	: in std_logic := '0';
    AI13	: in std_logic := '0';
    AI14	: in std_logic := '0';
    AI15	: in std_logic := '0';
    AI16	: in std_logic := '0';

    AI17	: in std_logic := '0';
    AI18	: in std_logic := '0';
    AI19	: in std_logic := '0';
    AI20	: in std_logic := '0';
    AI21	: in std_logic := '0';
    AI22	: in std_logic := '0';
    AI23	: in std_logic := '0';
    AI24	: in std_logic := '0';

    BI1	: in std_logic := '0';
    BI2	: in std_logic := '0';
    BI3	: in std_logic := '0';
    BI4	: in std_logic := '0';
    BI5	: in std_logic := '0';
    BI6	: in std_logic := '0';
    BI7	: in std_logic := '0';
    BI8	: in std_logic := '0';
    BI9	: in std_logic := '0';
    BI10	: in std_logic := '0';
    BI11	: in std_logic := '0';
    BI12	: in std_logic := '0';
    BI13	: in std_logic := '0';
    BI14	: in std_logic := '0';
    BI15	: in std_logic := '0';
    BI16	: in std_logic := '0';

    BI17	: in std_logic := '0';
    BI18	: in std_logic := '0';
    BI19	: in std_logic := '0';
    BI20	: in std_logic := '0';
    BI21	: in std_logic := '0';
    BI22	: in std_logic := '0';
    BI23	: in std_logic := '0';
    BI24	: in std_logic := '0';

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO1	: out std_logic := '0';
    AO2	: out std_logic := '0';
    AO3	: out std_logic := '0';
    AO4	: out std_logic := '0';
    AO5	: out std_logic := '0';
    AO6	: out std_logic := '0';
    AO7	: out std_logic := '0';
    AO8	: out std_logic := '0';
    AO9	: out std_logic := '0';
    AO10	: out std_logic := '0';
    AO11	: out std_logic := '0';
    AO12	: out std_logic := '0';
    AO13	: out std_logic := '0';
    AO14	: out std_logic := '0';
    AO15	: out std_logic := '0';
    AO16	: out std_logic := '0';

    AO17	: out std_logic := '0';
    AO18	: out std_logic := '0';
    AO19	: out std_logic := '0';
    AO20	: out std_logic := '0';
    AO21	: out std_logic := '0';
    AO22	: out std_logic := '0';
    AO23	: out std_logic := '0';
    AO24	: out std_logic := '0';

    BO1	: out std_logic := '0';
    BO2	: out std_logic := '0';
    BO3	: out std_logic := '0';
    BO4	: out std_logic := '0';
    BO5	: out std_logic := '0';
    BO6	: out std_logic := '0';
    BO7	: out std_logic := '0';
    BO8	: out std_logic := '0';
    BO9	: out std_logic := '0';
    BO10	: out std_logic := '0';
    BO11	: out std_logic := '0';
    BO12	: out std_logic := '0';
    BO13	: out std_logic := '0';
    BO14	: out std_logic := '0';
    BO15	: out std_logic := '0';
    BO16	: out std_logic := '0';

    BO17	: out std_logic := '0';
    BO18	: out std_logic := '0';
    BO19	: out std_logic := '0';
    BO20	: out std_logic := '0';
    BO21	: out std_logic := '0';
    BO22	: out std_logic := '0';
    BO23	: out std_logic := '0';
    BO24	: out std_logic := '0';

    AA1	: in std_logic := '0';
    AA2	: in std_logic := '0';
    AA3	: in std_logic := '0';
    AA4	: in std_logic := '0';
    AA5	: in std_logic := '0';
    AA6	: in std_logic := '0';

    AA7	: in std_logic := '0';
    AA8	: in std_logic := '0';
    AA9	: in std_logic := '0';
    AA10	: in std_logic := '0';
    AA11	: in std_logic := '0';
    AA12	: in std_logic := '0';
    AA13	: in std_logic := '0';
    AA14	: in std_logic := '0';
    AA15	: in std_logic := '0';
    AA16	: in std_logic := '0';

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA1	: in std_logic := '0';
    BA2	: in std_logic := '0';
    BA3	: in std_logic := '0';
    BA4	: in std_logic := '0';
    BA5	: in std_logic := '0';
    BA6	: in std_logic := '0';

    BA7	: in std_logic := '0';
    BA8	: in std_logic := '0';
    BA9	: in std_logic := '0';
    BA10	: in std_logic := '0';
    BA11	: in std_logic := '0';
    BA12	: in std_logic := '0';
    BA13	: in std_logic := '0';
    BA14	: in std_logic := '0';
    BA15	: in std_logic := '0';
    BA16	: in std_logic := '0';

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM;

component NX_RAM_WRAP is
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK	: in std_logic := '0';
    ACKD	: in std_logic := '0';
    ACKR	: in std_logic := '0';
    BCK	: in std_logic := '0';
    BCKD	: in std_logic := '0';
    BCKR	: in std_logic := '0';

    AI	: in std_logic_vector(23 downto 0) := (others => '0');
    BI	: in std_logic_vector(23 downto 0) := (others => '0');

    ACOR	: out std_logic := '0';
    AERR	: out std_logic := '0';
    BCOR	: out std_logic := '0';
    BERR	: out std_logic := '0';

    AO	: out std_logic_vector(23 downto 0) := (others => '0');
    BO	: out std_logic_vector(23 downto 0) := (others => '0');
    AA	: in std_logic_vector(15 downto 0) := (others => '0');

    ACS	: in std_logic := '0';
    AWE	: in std_logic := '0';
    AR	: in std_logic := '0';

    BA	: in std_logic_vector(15 downto 0) := (others => '0');

    BCS	: in std_logic := '0';
    BWE	: in std_logic := '0';
    BR	: in std_logic := '0'
);
end component NX_RAM_WRAP;

component NX_ECC is
port (
    CKD	: in std_logic := '0';
    CHK	: in std_logic := '0';
    COR	: out std_logic := '0';
    ERR	: out std_logic := '0'
    );
end component NX_ECC;

component NX_PLL is
generic (
    location     : string := "";

    vco_range    : integer   range 0 to 2 := 0;   -- 0 to 3
    ref_div_on   : bit := '0';                    -- bypass :: %2
    fbk_div_on   : bit := '0';                    -- bypass :: %2
    ext_fbk_on   : bit := '0';                    -- 0: disabled - 1: enabled

    fbk_intdiv   : integer   range 1 to 31 := 2;  -- 0 to 31  (%1 to %32)

    fbk_delay_on : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay    : integer   range 0 to 63 := 0;  -- 0 to 63

    clk_outdiv1  : integer   range 0 to 7 := 0;   -- 0 to 7   (%1 to %2^7)
    clk_outdiv2  : integer   range 0 to 7 := 0;   -- 0 to 7   (%1 to %2^7)
    clk_outdiv3  : integer   range 0 to 7 := 0    -- 0 to 7   (%1 to %2^7)
);
port (
    REF	: in std_logic := '0';
    FBK	: in std_logic := '0';

    VCO	: out std_logic := '0';

    D1	: out std_logic := '0';
    D2	: out std_logic := '0';
    D3	: out std_logic := '0';
    OSC	: out std_logic := '0';

    RDY	: out std_logic := '0'
);
end component NX_PLL;

component NX_WFG is
generic (
    location    : string := "";

    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
    mode        : bit := '0';                              -- 0: no pattern - 1: pattern

    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    SI	: in std_logic := '0';
    ZI	: in std_logic := '0';
    RDY	: in std_logic := '1';
    SO	: out std_logic := '0';
    ZO	: out std_logic := '0'
);
end component NX_WFG;

component NX_PLL_L is
generic (
    location       : string := "";

    ref_intdiv     : integer   range 0 to 31 := 0;  -- 0 to 31  (%1 to %32)
    ref_osc_on     : bit := '0';                    -- 0: disabled - 1: enabled

    ext_fbk_on     : bit := '0';                    -- 0: disabled - 1: enabled

    fbk_intdiv     : integer   range 0 to 31 := 2;  -- 0 to 31  use_pll=0 (%2 to %33 by step 1)
                                                    --          use_pll=1 (%4 to %66 by step 2)

    fbk_delay_on   : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay      : integer   range 0 to 63 := 0;  -- 0 to 63

    pll_lock_on    : bit := '0';                    -- 0: disabled - 1: enabled
    cal_lock_on    : bit := '0';                    -- 0: disabled - 1: enabled

    clk_outdivp1   : integer   range 0 to 7 := 0;   -- 0 to 7  P1 (2^n    : %1 to %128)
    clk_outdivp2   : integer   range 0 to 7 := 0;   -- 0 to 7  P2 (2^(n+1): %2 to %256)
    clk_outdivo1   : integer   range 0 to 7 := 0;   -- 0 to 7  O1 ((2n)+3 : %3 to  %17)
    clk_outdivp3o2 : integer   range 0 to 7 := 0    -- 0 to 7  P3 (2^(n+2): %4 to %512)
                                                    --         O2 ((2n)+5 : %5 to  %19)
);
port (
    REF	: in std_logic := '0';
    FBK	: in std_logic := '0';

    R	: in std_logic := '0';

    VCO	: out std_logic := '0';
    LDFO: out std_logic;
    REFO: out std_logic;

    DIVO1	: out std_logic := '0';
    DIVO2	: out std_logic := '0';

    DIVP1	: out std_logic := '0';
    DIVP2	: out std_logic := '0';
    DIVP3	: out std_logic := '0';
    OSC	: out std_logic := '0';

    LOCKED	: out std_logic := '0';
    CAL_LOCKED	: out std_logic := '0'
);
end component NX_PLL_L;

component NX_WFG_L is
generic (
    location    : string := "";

    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
    mode        : bit := '0';                              -- 0: no pattern - 1: pattern

    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    R	: in std_logic := '0';
    SI	: in std_logic := '0';
    ZI	: in std_logic := '0';
    RDY	: in std_logic := '1';
    SO	: out std_logic := '0';
    ZO	: out std_logic := '0'
);
end component NX_WFG_L;

-- beware following components are only intended for internal use. Do not try to instantiate them.
component NX_BUFFER is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_BUFFER;

component NX_CSC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_CSC;

component NX_SCC is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_SCC;

component NX_syn_tp is
port (
    I	: in std_logic := '0'
);
end component NX_syn_tp;

component NX_RB is
port (
    CK	: in std_logic := '0';
    EI1	: in std_logic := '0';
    EI2	: in std_logic := '0';
    EI3	: in std_logic := '0';
    EI4	: in std_logic := '0';
    EI5	: in std_logic := '0';
    EI6	: in std_logic := '0';
    EI7	: in std_logic := '0';
    EI8	: in std_logic := '0';
    EI9	: in std_logic := '0';
    EI10	: in std_logic := '0';
    EI11	: in std_logic := '0';
    EI12	: in std_logic := '0';
    EI13	: in std_logic := '0';
    EI14	: in std_logic := '0';
    EI15	: in std_logic := '0';
    EI16	: in std_logic := '0';
    EI17	: in std_logic := '0';
    EI18	: in std_logic := '0';
    EI19	: in std_logic := '0';
    EI20	: in std_logic := '0';
    EI21	: in std_logic := '0';
    EI22	: in std_logic := '0';
    EI23	: in std_logic := '0';
    EI24	: in std_logic := '0';
    EI25	: in std_logic := '0';
    EI26	: in std_logic := '0';
    EI27	: in std_logic := '0';
    EI28	: in std_logic := '0';
    EI29	: in std_logic := '0';
    EI30	: in std_logic := '0';
    EI31	: in std_logic := '0';
    EI32	: in std_logic := '0';
    EI33	: in std_logic := '0';
    EI34	: in std_logic := '0';
    EI35	: in std_logic := '0';
    EI36	: in std_logic := '0';
    EI37	: in std_logic := '0';
    EI38	: in std_logic := '0';
    EI39	: in std_logic := '0';
    EI40	: in std_logic := '0';
    EI41	: in std_logic := '0';
    EI42	: in std_logic := '0';
    EI43	: in std_logic := '0';
    EI44	: in std_logic := '0';
    EI45	: in std_logic := '0';
    EI46	: in std_logic := '0';
    EI47	: in std_logic := '0';
    EI48	: in std_logic := '0';
    EI49	: in std_logic := '0';
    EI50	: in std_logic := '0';
    EI51	: in std_logic := '0';
    EI52	: in std_logic := '0';
    EI53	: in std_logic := '0';
    EI54	: in std_logic := '0';
    EI55	: in std_logic := '0';
    EI56	: in std_logic := '0';
    EI57	: in std_logic := '0';
    EI58	: in std_logic := '0';
    EI59	: in std_logic := '0';
    EI60	: in std_logic := '0';
    EI61	: in std_logic := '0';
    EI62	: in std_logic := '0';
    EI63	: in std_logic := '0';
    EI64	: in std_logic := '0';
    EI65	: in std_logic := '0';
    EI66	: in std_logic := '0';
    EI67	: in std_logic := '0';
    EI68	: in std_logic := '0';
    EI69	: in std_logic := '0';
    EI70	: in std_logic := '0';
    EI71	: in std_logic := '0';
    EI72	: in std_logic := '0';
    EI73	: in std_logic := '0';
    EI74	: in std_logic := '0';
    EI75	: in std_logic := '0';
    EI76	: in std_logic := '0';
    EI77	: in std_logic := '0';
    EI78	: in std_logic := '0';
    EI79	: in std_logic := '0';
    EI80	: in std_logic := '0';
    EI81	: in std_logic := '0';
    EI82	: in std_logic := '0';
    EI83	: in std_logic := '0';
    EI84	: in std_logic := '0';
    EI85	: in std_logic := '0';
    EI86	: in std_logic := '0';
    EI87	: in std_logic := '0';
    EI88	: in std_logic := '0';
    EI89	: in std_logic := '0';
    EI90	: in std_logic := '0';
    EI91	: in std_logic := '0';
    EI92	: in std_logic := '0';
    EI93	: in std_logic := '0';
    EI94	: in std_logic := '0';
    EI95	: in std_logic := '0';
    EI96	: in std_logic := '0';
    EI97	: in std_logic := '0';
    EI98	: in std_logic := '0';
    EI99	: in std_logic := '0';
    EI100	: in std_logic := '0';
    EI101	: in std_logic := '0';
    EI102	: in std_logic := '0';
    EI103	: in std_logic := '0';
    EI104	: in std_logic := '0';
    EI105	: in std_logic := '0';
    EI106	: in std_logic := '0';
    EI107	: in std_logic := '0';
    EI108	: in std_logic := '0';
    EI109	: in std_logic := '0';
    EI110	: in std_logic := '0';
    EI111	: in std_logic := '0';
    EI112	: in std_logic := '0';
    EI113	: in std_logic := '0';
    EI114	: in std_logic := '0';
    EI115	: in std_logic := '0';
    EI116	: in std_logic := '0';
    EI117	: in std_logic := '0';
    EI118	: in std_logic := '0';
    EI119	: in std_logic := '0';
    EI120	: in std_logic := '0';
    EI121	: in std_logic := '0';
    EI122	: in std_logic := '0';
    EI123	: in std_logic := '0';
    EI124	: in std_logic := '0';
    EI125	: in std_logic := '0';
    EI126	: in std_logic := '0';
    EI127	: in std_logic := '0';
    EI128	: in std_logic := '0';
    EI129	: in std_logic := '0';
    EI130	: in std_logic := '0';
    EI131	: in std_logic := '0';
    EI132	: in std_logic := '0';
    EI133	: in std_logic := '0';
    EI134	: in std_logic := '0';
    EI135	: in std_logic := '0';
    EI136	: in std_logic := '0';
    EI137	: in std_logic := '0';
    EI138	: in std_logic := '0';
    EI139	: in std_logic := '0';
    EI140	: in std_logic := '0';
    EI141	: in std_logic := '0';
    EI142	: in std_logic := '0';
    EI143	: in std_logic := '0';
    EI144	: in std_logic := '0';
    EO1	: out std_logic := '0';
    EO2	: out std_logic := '0';
    EO3	: out std_logic := '0';
    EO4	: out std_logic := '0';
    EO5	: out std_logic := '0';
    EO6	: out std_logic := '0';
    EO7	: out std_logic := '0';
    EO8	: out std_logic := '0';
    EO9	: out std_logic := '0';
    EO10	: out std_logic := '0';
    EO11	: out std_logic := '0';
    EO12	: out std_logic := '0';
    EO13	: out std_logic := '0';
    EO14	: out std_logic := '0';
    EO15	: out std_logic := '0';
    EO16	: out std_logic := '0';
    EO17	: out std_logic := '0';
    EO18	: out std_logic := '0';
    EO19	: out std_logic := '0';
    EO20	: out std_logic := '0';
    EO21	: out std_logic := '0';
    EO22	: out std_logic := '0';
    EO23	: out std_logic := '0';
    EO24	: out std_logic := '0';
    EO25	: out std_logic := '0';
    EO26	: out std_logic := '0';
    EO27	: out std_logic := '0';
    EO28	: out std_logic := '0';
    EO29	: out std_logic := '0';
    EO30	: out std_logic := '0';
    EO31	: out std_logic := '0';
    EO32	: out std_logic := '0';
    EO33	: out std_logic := '0';
    EO34	: out std_logic := '0';
    EO35	: out std_logic := '0';
    EO36	: out std_logic := '0';
    EO37	: out std_logic := '0';
    EO38	: out std_logic := '0';
    EO39	: out std_logic := '0';
    EO40	: out std_logic := '0';
    EO41	: out std_logic := '0';
    EO42	: out std_logic := '0';
    EO43	: out std_logic := '0';
    EO44	: out std_logic := '0';
    EO45	: out std_logic := '0';
    EO46	: out std_logic := '0';
    EO47	: out std_logic := '0';
    EO48	: out std_logic := '0';
    EO49	: out std_logic := '0';
    EO50	: out std_logic := '0';
    EO51	: out std_logic := '0';
    EO52	: out std_logic := '0';
    EO53	: out std_logic := '0';
    EO54	: out std_logic := '0';
    EO55	: out std_logic := '0';
    EO56	: out std_logic := '0';
    EO57	: out std_logic := '0';
    EO58	: out std_logic := '0';
    EO59	: out std_logic := '0';
    EO60	: out std_logic := '0';
    EO61	: out std_logic := '0';
    EO62	: out std_logic := '0';
    EO63	: out std_logic := '0';
    EO64	: out std_logic := '0';
    EO65	: out std_logic := '0';
    EO66	: out std_logic := '0';
    EO67	: out std_logic := '0';
    EO68	: out std_logic := '0';
    EO69	: out std_logic := '0';
    EO70	: out std_logic := '0';
    EO71	: out std_logic := '0';
    EO72	: out std_logic := '0';
    EO73	: out std_logic := '0';
    EO74	: out std_logic := '0';
    EO75	: out std_logic := '0';
    EO76	: out std_logic := '0';
    EO77	: out std_logic := '0';
    EO78	: out std_logic := '0';
    EO79	: out std_logic := '0';
    EO80	: out std_logic := '0';
    EO81	: out std_logic := '0';
    EO82	: out std_logic := '0';
    EO83	: out std_logic := '0';
    EO84	: out std_logic := '0';
    EO85	: out std_logic := '0';
    EO86	: out std_logic := '0';
    EO87	: out std_logic := '0';
    EO88	: out std_logic := '0';
    EO89	: out std_logic := '0';
    EO90	: out std_logic := '0';
    EO91	: out std_logic := '0';
    EO92	: out std_logic := '0';
    EO93	: out std_logic := '0';
    EO94	: out std_logic := '0';
    EO95	: out std_logic := '0';
    EO96	: out std_logic := '0';
    EO97	: out std_logic := '0';
    EO98	: out std_logic := '0';
    EO99	: out std_logic := '0';
    EO100	: out std_logic := '0';
    EO101	: out std_logic := '0';
    EO102	: out std_logic := '0';
    EO103	: out std_logic := '0';
    EO104	: out std_logic := '0';
    EO105	: out std_logic := '0';
    EO106	: out std_logic := '0';
    EO107	: out std_logic := '0';
    EO108	: out std_logic := '0';
    EO109	: out std_logic := '0';
    EO110	: out std_logic := '0';
    EO111	: out std_logic := '0';
    EO112	: out std_logic := '0';
    EO113	: out std_logic := '0';
    EO114	: out std_logic := '0';
    EO115	: out std_logic := '0';
    EO116	: out std_logic := '0';
    EO117	: out std_logic := '0';
    EO118	: out std_logic := '0';
    EO119	: out std_logic := '0';
    EO120	: out std_logic := '0';
    EO121	: out std_logic := '0';
    EO122	: out std_logic := '0';
    EO123	: out std_logic := '0';
    EO124	: out std_logic := '0';
    EO125	: out std_logic := '0';
    EO126	: out std_logic := '0';
    EO127	: out std_logic := '0';
    EO128	: out std_logic := '0';
    EO129	: out std_logic := '0';
    EO130	: out std_logic := '0';
    EO131	: out std_logic := '0';
    EO132	: out std_logic := '0';
    EO133	: out std_logic := '0';
    EO134	: out std_logic := '0';
    EO135	: out std_logic := '0';
    EO136	: out std_logic := '0';
    EO137	: out std_logic := '0';
    EO138	: out std_logic := '0';
    EO139	: out std_logic := '0';
    EO140	: out std_logic := '0';
    EO141	: out std_logic := '0';
    EO142	: out std_logic := '0';
    EO143	: out std_logic := '0';
    EO144	: out std_logic := '0';
    FI1	: in std_logic := '0';
    FI2	: in std_logic := '0';
    FI3	: in std_logic := '0';
    FI4	: in std_logic := '0';
    FI5	: in std_logic := '0';
    FI6	: in std_logic := '0';
    FI7	: in std_logic := '0';
    FI8	: in std_logic := '0';
    FI9	: in std_logic := '0';
    FI10	: in std_logic := '0';
    FI11	: in std_logic := '0';
    FI12	: in std_logic := '0';
    FI13	: in std_logic := '0';
    FI14	: in std_logic := '0';
    FI15	: in std_logic := '0';
    FI16	: in std_logic := '0';
    FI17	: in std_logic := '0';
    FI18	: in std_logic := '0';
    FI19	: in std_logic := '0';
    FI20	: in std_logic := '0';
    FI21	: in std_logic := '0';
    FI22	: in std_logic := '0';
    FI23	: in std_logic := '0';
    FI24	: in std_logic := '0';
    FI25	: in std_logic := '0';
    FI26	: in std_logic := '0';
    FI27	: in std_logic := '0';
    FI28	: in std_logic := '0';
    FI29	: in std_logic := '0';
    FI30	: in std_logic := '0';
    FI31	: in std_logic := '0';
    FI32	: in std_logic := '0';
    FI33	: in std_logic := '0';
    FI34	: in std_logic := '0';
    FI35	: in std_logic := '0';
    FI36	: in std_logic := '0';
    FI37	: in std_logic := '0';
    FI38	: in std_logic := '0';
    FI39	: in std_logic := '0';
    FI40	: in std_logic := '0';
    FI41	: in std_logic := '0';
    FI42	: in std_logic := '0';
    FI43	: in std_logic := '0';
    FI44	: in std_logic := '0';
    FI45	: in std_logic := '0';
    FI46	: in std_logic := '0';
    FI47	: in std_logic := '0';
    FI48	: in std_logic := '0';
    FI49	: in std_logic := '0';
    FI50	: in std_logic := '0';
    FI51	: in std_logic := '0';
    FI52	: in std_logic := '0';
    FI53	: in std_logic := '0';
    FI54	: in std_logic := '0';
    FI55	: in std_logic := '0';
    FI56	: in std_logic := '0';
    FI57	: in std_logic := '0';
    FI58	: in std_logic := '0';
    FI59	: in std_logic := '0';
    FI60	: in std_logic := '0';
    FI61	: in std_logic := '0';
    FI62	: in std_logic := '0';
    FI63	: in std_logic := '0';
    FI64	: in std_logic := '0';
    FI65	: in std_logic := '0';
    FI66	: in std_logic := '0';
    FI67	: in std_logic := '0';
    FI68	: in std_logic := '0';
    FI69	: in std_logic := '0';
    FI70	: in std_logic := '0';
    FI71	: in std_logic := '0';
    FI72	: in std_logic := '0';
    FI73	: in std_logic := '0';
    FI74	: in std_logic := '0';
    FI75	: in std_logic := '0';
    FI76	: in std_logic := '0';
    FI77	: in std_logic := '0';
    FI78	: in std_logic := '0';
    FI79	: in std_logic := '0';
    FI80	: in std_logic := '0';
    FI81	: in std_logic := '0';
    FI82	: in std_logic := '0';
    FI83	: in std_logic := '0';
    FI84	: in std_logic := '0';
    FI85	: in std_logic := '0';
    FI86	: in std_logic := '0';
    FI87	: in std_logic := '0';
    FI88	: in std_logic := '0';
    FI89	: in std_logic := '0';
    FI90	: in std_logic := '0';
    FI91	: in std_logic := '0';
    FI92	: in std_logic := '0';
    FI93	: in std_logic := '0';
    FI94	: in std_logic := '0';
    FI95	: in std_logic := '0';
    FI96	: in std_logic := '0';
    FI97	: in std_logic := '0';
    FI98	: in std_logic := '0';
    FI99	: in std_logic := '0';
    FI100	: in std_logic := '0';
    FI101	: in std_logic := '0';
    FI102	: in std_logic := '0';
    FI103	: in std_logic := '0';
    FI104	: in std_logic := '0';
    FI105	: in std_logic := '0';
    FI106	: in std_logic := '0';
    FI107	: in std_logic := '0';
    FI108	: in std_logic := '0';
    FI109	: in std_logic := '0';
    FI110	: in std_logic := '0';
    FI111	: in std_logic := '0';
    FI112	: in std_logic := '0';
    FI113	: in std_logic := '0';
    FI114	: in std_logic := '0';
    FI115	: in std_logic := '0';
    FI116	: in std_logic := '0';
    FI117	: in std_logic := '0';
    FI118	: in std_logic := '0';
    FI119	: in std_logic := '0';
    FI120	: in std_logic := '0';
    FI121	: in std_logic := '0';
    FI122	: in std_logic := '0';
    FI123	: in std_logic := '0';
    FI124	: in std_logic := '0';
    FI125	: in std_logic := '0';
    FI126	: in std_logic := '0';
    FI127	: in std_logic := '0';
    FI128	: in std_logic := '0';
    FI129	: in std_logic := '0';
    FI130	: in std_logic := '0';
    FI131	: in std_logic := '0';
    FI132	: in std_logic := '0';
    FI133	: in std_logic := '0';
    FI134	: in std_logic := '0';
    FI135	: in std_logic := '0';
    FI136	: in std_logic := '0';
    FI137	: in std_logic := '0';
    FI138	: in std_logic := '0';
    FI139	: in std_logic := '0';
    FI140	: in std_logic := '0';
    FI141	: in std_logic := '0';
    FI142	: in std_logic := '0';
    FI143	: in std_logic := '0';
    FI144	: in std_logic := '0';
    FO1	: out std_logic := '0';
    FO2	: out std_logic := '0';
    FO3	: out std_logic := '0';
    FO4	: out std_logic := '0';
    FO5	: out std_logic := '0';
    FO6	: out std_logic := '0';
    FO7	: out std_logic := '0';
    FO8	: out std_logic := '0';
    FO9	: out std_logic := '0';
    FO10	: out std_logic := '0';
    FO11	: out std_logic := '0';
    FO12	: out std_logic := '0';
    FO13	: out std_logic := '0';
    FO14	: out std_logic := '0';
    FO15	: out std_logic := '0';
    FO16	: out std_logic := '0';
    FO17	: out std_logic := '0';
    FO18	: out std_logic := '0';
    FO19	: out std_logic := '0';
    FO20	: out std_logic := '0';
    FO21	: out std_logic := '0';
    FO22	: out std_logic := '0';
    FO23	: out std_logic := '0';
    FO24	: out std_logic := '0';
    FO25	: out std_logic := '0';
    FO26	: out std_logic := '0';
    FO27	: out std_logic := '0';
    FO28	: out std_logic := '0';
    FO29	: out std_logic := '0';
    FO30	: out std_logic := '0';
    FO31	: out std_logic := '0';
    FO32	: out std_logic := '0';
    FO33	: out std_logic := '0';
    FO34	: out std_logic := '0';
    FO35	: out std_logic := '0';
    FO36	: out std_logic := '0';
    FO37	: out std_logic := '0';
    FO38	: out std_logic := '0';
    FO39	: out std_logic := '0';
    FO40	: out std_logic := '0';
    FO41	: out std_logic := '0';
    FO42	: out std_logic := '0';
    FO43	: out std_logic := '0';
    FO44	: out std_logic := '0';
    FO45	: out std_logic := '0';
    FO46	: out std_logic := '0';
    FO47	: out std_logic := '0';
    FO48	: out std_logic := '0';
    FO49	: out std_logic := '0';
    FO50	: out std_logic := '0';
    FO51	: out std_logic := '0';
    FO52	: out std_logic := '0';
    FO53	: out std_logic := '0';
    FO54	: out std_logic := '0';
    FO55	: out std_logic := '0';
    FO56	: out std_logic := '0';
    FO57	: out std_logic := '0';
    FO58	: out std_logic := '0';
    FO59	: out std_logic := '0';
    FO60	: out std_logic := '0';
    FO61	: out std_logic := '0';
    FO62	: out std_logic := '0';
    FO63	: out std_logic := '0';
    FO64	: out std_logic := '0';
    FO65	: out std_logic := '0';
    FO66	: out std_logic := '0';
    FO67	: out std_logic := '0';
    FO68	: out std_logic := '0';
    FO69	: out std_logic := '0';
    FO70	: out std_logic := '0';
    FO71	: out std_logic := '0';
    FO72	: out std_logic := '0';
    FO73	: out std_logic := '0';
    FO74	: out std_logic := '0';
    FO75	: out std_logic := '0';
    FO76	: out std_logic := '0';
    FO77	: out std_logic := '0';
    FO78	: out std_logic := '0';
    FO79	: out std_logic := '0';
    FO80	: out std_logic := '0';
    FO81	: out std_logic := '0';
    FO82	: out std_logic := '0';
    FO83	: out std_logic := '0';
    FO84	: out std_logic := '0';
    FO85	: out std_logic := '0';
    FO86	: out std_logic := '0';
    FO87	: out std_logic := '0';
    FO88	: out std_logic := '0';
    FO89	: out std_logic := '0';
    FO90	: out std_logic := '0';
    FO91	: out std_logic := '0';
    FO92	: out std_logic := '0';
    FO93	: out std_logic := '0';
    FO94	: out std_logic := '0';
    FO95	: out std_logic := '0';
    FO96	: out std_logic := '0';
    FO97	: out std_logic := '0';
    FO98	: out std_logic := '0';
    FO99	: out std_logic := '0';
    FO100	: out std_logic := '0';
    FO101	: out std_logic := '0';
    FO102	: out std_logic := '0';
    FO103	: out std_logic := '0';
    FO104	: out std_logic := '0';
    FO105	: out std_logic := '0';
    FO106	: out std_logic := '0';
    FO107	: out std_logic := '0';
    FO108	: out std_logic := '0';
    FO109	: out std_logic := '0';
    FO110	: out std_logic := '0';
    FO111	: out std_logic := '0';
    FO112	: out std_logic := '0';
    FO113	: out std_logic := '0';
    FO114	: out std_logic := '0';
    FO115	: out std_logic := '0';
    FO116	: out std_logic := '0';
    FO117	: out std_logic := '0';
    FO118	: out std_logic := '0';
    FO119	: out std_logic := '0';
    FO120	: out std_logic := '0';
    FO121	: out std_logic := '0';
    FO122	: out std_logic := '0';
    FO123	: out std_logic := '0';
    FO124	: out std_logic := '0';
    FO125	: out std_logic := '0';
    FO126	: out std_logic := '0';
    FO127	: out std_logic := '0';
    FO128	: out std_logic := '0';
    FO129	: out std_logic := '0';
    FO130	: out std_logic := '0';
    FO131	: out std_logic := '0';
    FO132	: out std_logic := '0';
    FO133	: out std_logic := '0';
    FO134	: out std_logic := '0';
    FO135	: out std_logic := '0';
    FO136	: out std_logic := '0';
    FO137	: out std_logic := '0';
    FO138	: out std_logic := '0';
    FO139	: out std_logic := '0';
    FO140	: out std_logic := '0';
    FO141	: out std_logic := '0';
    FO142	: out std_logic := '0';
    FO143	: out std_logic := '0';
    FO144	: out std_logic := '0'
);
end component NX_RB;

component NX_RB_WRAP is
port (
    CK	: in std_logic := '0';
    EI	: in std_logic_vector(143 downto 0) := (others => '0');
    EO	: out std_logic_vector(143 downto 0) := (others => '0');
    FI	: in std_logic_vector(143 downto 0) := (others => '0');
    FO	: out std_logic_vector(143 downto 0) := (others => '0')
);
end component NX_RB_WRAP;

component NX_CKB is
port (
    I	: in std_logic := '0';
    O	: out std_logic := '0'
);
end component NX_CKB;

component NX_CORTEX_R5 is
port (
    CK	: in std_logic := '0';

    DI1	: in std_logic := '0';
    DI2	: in std_logic := '0';
    DI3	: in std_logic := '0';
    DI4	: in std_logic := '0';
    DI5	: in std_logic := '0';
    DI6	: in std_logic := '0';
    DI7	: in std_logic := '0';
    DI8	: in std_logic := '0';

    I1	: in std_logic := '0';
    I2	: in std_logic := '0';
    I3	: in std_logic := '0';
    I4	: in std_logic := '0';
    I5	: in std_logic := '0';
    I6	: in std_logic := '0';
    I7	: in std_logic := '0';
    I8	: in std_logic := '0';
    I9	: in std_logic := '0';
    I10	: in std_logic := '0';
    I11	: in std_logic := '0';
    I12	: in std_logic := '0';
    I13	: in std_logic := '0';
    I14	: in std_logic := '0';
    I15	: in std_logic := '0';
    I16	: in std_logic := '0';
    I17	: in std_logic := '0';
    I18	: in std_logic := '0';
    I19	: in std_logic := '0';
    I20	: in std_logic := '0';
    I21	: in std_logic := '0';
    I22	: in std_logic := '0';
    I23	: in std_logic := '0';
    I24	: in std_logic := '0';
    I25	: in std_logic := '0';
    I26	: in std_logic := '0';
    I27	: in std_logic := '0';
    I28	: in std_logic := '0';
    I29	: in std_logic := '0';
    I30	: in std_logic := '0';
    I31	: in std_logic := '0';
    I32	: in std_logic := '0';
    I33	: in std_logic := '0';
    I34	: in std_logic := '0';
    I35	: in std_logic := '0';
    I36	: in std_logic := '0';
    I37	: in std_logic := '0';
    I38	: in std_logic := '0';
    I39	: in std_logic := '0';
    I40	: in std_logic := '0';
    I41	: in std_logic := '0';
    I42	: in std_logic := '0';
    I43	: in std_logic := '0';
    I44	: in std_logic := '0';
    I45	: in std_logic := '0';
    I46	: in std_logic := '0';
    I47	: in std_logic := '0';
    I48	: in std_logic := '0';
    I49	: in std_logic := '0';
    I50	: in std_logic := '0';
    I51	: in std_logic := '0';
    I52	: in std_logic := '0';
    I53	: in std_logic := '0';
    I54	: in std_logic := '0';
    I55	: in std_logic := '0';
    I56	: in std_logic := '0';
    I57	: in std_logic := '0';
    I58	: in std_logic := '0';
    I59	: in std_logic := '0';
    I60	: in std_logic := '0';
    I61	: in std_logic := '0';
    I62	: in std_logic := '0';
    I63	: in std_logic := '0';
    I64	: in std_logic := '0';
    I65	: in std_logic := '0';
    I66	: in std_logic := '0';
    I67	: in std_logic := '0';
    I68	: in std_logic := '0';
    I69	: in std_logic := '0';
    I70	: in std_logic := '0';
    I71	: in std_logic := '0';
    I72	: in std_logic := '0';
    I73	: in std_logic := '0';
    I74	: in std_logic := '0';
    I75	: in std_logic := '0';
    I76	: in std_logic := '0';
    I77	: in std_logic := '0';
    I78	: in std_logic := '0';
    I79	: in std_logic := '0';
    I80	: in std_logic := '0';
    I81	: in std_logic := '0';
    I82	: in std_logic := '0';
    I83	: in std_logic := '0';
    I84	: in std_logic := '0';
    I85	: in std_logic := '0';
    I86	: in std_logic := '0';
    I87	: in std_logic := '0';
    I88	: in std_logic := '0';
    I89	: in std_logic := '0';
    I90	: in std_logic := '0';
    I91	: in std_logic := '0';
    I92	: in std_logic := '0';
    I93	: in std_logic := '0';
    I94	: in std_logic := '0';
    I95	: in std_logic := '0';
    I96	: in std_logic := '0';
    I97	: in std_logic := '0';
    I98	: in std_logic := '0';
    I99	: in std_logic := '0';
    I100: in  std_logic;
    I101: in  std_logic;
    I102: in  std_logic;
    I103: in  std_logic;
    I104: in  std_logic;
    I105: in  std_logic;
    I106: in  std_logic;
    I107: in  std_logic;
    I108: in  std_logic;
    I109: in  std_logic;
    I110: in  std_logic;
    I111: in  std_logic;
    I112: in  std_logic;
    I113: in  std_logic;
    I114: in  std_logic;
    I115: in  std_logic;
    I116: in  std_logic;
    I117: in  std_logic;
    I118: in  std_logic;
    I119: in  std_logic;
    I120: in  std_logic;
    I121: in  std_logic;
    I122: in  std_logic;
    I123: in  std_logic;
    I124: in  std_logic;
    I125: in  std_logic;
    I126: in  std_logic;
    I127: in  std_logic;
    I128: in  std_logic;
    I129: in  std_logic;
    I130: in  std_logic;
    I131: in  std_logic;
    I132: in  std_logic;
    I133: in  std_logic;
    I134: in  std_logic;
    I135: in  std_logic;
    I136: in  std_logic;
    I137: in  std_logic;
    I138: in  std_logic;
    I139: in  std_logic;
    I140: in  std_logic;
    I141: in  std_logic;
    I142: in  std_logic;
    I143: in  std_logic;
    I144: in  std_logic;
    I145: in  std_logic;
    I146: in  std_logic;
    I147: in  std_logic;
    I148: in  std_logic;
    I149: in  std_logic;
    I150: in  std_logic;
    I151: in  std_logic;
    I152: in  std_logic;
    I153: in  std_logic;
    I154: in  std_logic;
    I155: in  std_logic;
    I156: in  std_logic;
    I157: in  std_logic;
    I158: in  std_logic;
    I159: in  std_logic;
    I160: in  std_logic;
    I161: in  std_logic;
    I162: in  std_logic;
    I163: in  std_logic;
    I164: in  std_logic;
    I165: in  std_logic;
    I166: in  std_logic;
    I167: in  std_logic;
    I168: in  std_logic;
    I169: in  std_logic;
    I170: in  std_logic;
    I171: in  std_logic;
    I172: in  std_logic;
    I173: in  std_logic;
    I174: in  std_logic;
    I175: in  std_logic;
    I176: in  std_logic;
    I177: in  std_logic;
    I178: in  std_logic;
    I179: in  std_logic;
    I180: in  std_logic;
    I181: in  std_logic;
    I182: in  std_logic;
    I183: in  std_logic;
    I184: in  std_logic;
    I185: in  std_logic;
    I186: in  std_logic;
    I187: in  std_logic;
    I188: in  std_logic;
    I189: in  std_logic;
    I190: in  std_logic;
    I191: in  std_logic;
    I192: in  std_logic;
    I193: in  std_logic;
    I194: in  std_logic;
    I195: in  std_logic;
    I196: in  std_logic;
    I197: in  std_logic;
    I198: in  std_logic;
    I199: in  std_logic;
    I200: in  std_logic;
    I201: in  std_logic;
    I202: in  std_logic;
    I203: in  std_logic;
    I204: in  std_logic;
    I205: in  std_logic;
    I206: in  std_logic;
    I207: in  std_logic;
    I208: in  std_logic;
    I209: in  std_logic;
    I210: in  std_logic;
    I211: in  std_logic;
    I212: in  std_logic;
    I213: in  std_logic;
    I214: in  std_logic;
    I215: in  std_logic;
    I216: in  std_logic;
    I217: in  std_logic;
    I218: in  std_logic;
    I219: in  std_logic;
    I220: in  std_logic;
    I221: in  std_logic;
    I222: in  std_logic;
    I223: in  std_logic;
    I224: in  std_logic;
    I225: in  std_logic;
    I226: in  std_logic;
    I227: in  std_logic;
    I228: in  std_logic;
    I229: in  std_logic;
    I230: in  std_logic;
    I231: in  std_logic;
    I232: in  std_logic;
    I233: in  std_logic;
    I234: in  std_logic;
    I235: in  std_logic;
    I236: in  std_logic;
    I237: in  std_logic;
    I238: in  std_logic;
    I239: in  std_logic;
    I240: in  std_logic;
    I241: in  std_logic;
    I242: in  std_logic;
    I243: in  std_logic;
    I244: in  std_logic;
    I245: in  std_logic;
    I246: in  std_logic;
    I247: in  std_logic;
    I248: in  std_logic;
    I249: in  std_logic;
    I250: in  std_logic;
    I251: in  std_logic;
    I252: in  std_logic;
    I253: in  std_logic;
    I254: in  std_logic;
    I255: in  std_logic;
    I256: in  std_logic;
    I257: in  std_logic;
    I258: in  std_logic;
    I259: in  std_logic;
    I260: in  std_logic;
    I261: in  std_logic;
    I262: in  std_logic;
    I263: in  std_logic;
    I264: in  std_logic;
    I265: in  std_logic;
    I266: in  std_logic;
    I267: in  std_logic;
    I268: in  std_logic;
    I269: in  std_logic;
    I270: in  std_logic;
    I271: in  std_logic;
    I272: in  std_logic;
    I273: in  std_logic;
    I274: in  std_logic;
    I275: in  std_logic;
    I276: in  std_logic;
    I277: in  std_logic;
    I278: in  std_logic;
    I279: in  std_logic;
    I280: in  std_logic;
    I281: in  std_logic;
    I282: in  std_logic;
    I283: in  std_logic;
    I284: in  std_logic;
    I285: in  std_logic;
    I286: in  std_logic;
    I287: in  std_logic;
    I288: in  std_logic;
    I289: in  std_logic;
    I290: in  std_logic;
    I291: in  std_logic;
    I292: in  std_logic;
    I293: in  std_logic;
    I294: in  std_logic;
    I295: in  std_logic;
    I296: in  std_logic;
    I297: in  std_logic;
    I298: in  std_logic;
    I299: in  std_logic;
    I300: in  std_logic;
    I301: in  std_logic;
    I302: in  std_logic;
    I303: in  std_logic;
    I304: in  std_logic;
    I305: in  std_logic;
    I306: in  std_logic;
    I307: in  std_logic;
    I308: in  std_logic;
    I309: in  std_logic;
    I310: in  std_logic;
    I311: in  std_logic;
    I312: in  std_logic;
    I313: in  std_logic;
    I314: in  std_logic;
    I315: in  std_logic;
    I316: in  std_logic;
    I317: in  std_logic;
    I318: in  std_logic;
    I319: in  std_logic;
    I320: in  std_logic;
    I321: in  std_logic;
    I322: in  std_logic;
    I323: in  std_logic;
    I324: in  std_logic;
    I325: in  std_logic;
    I326: in  std_logic;
    I327: in  std_logic;
    I328: in  std_logic;
    I329: in  std_logic;
    I330: in  std_logic;
    I331: in  std_logic;
    I332: in  std_logic;
    I333: in  std_logic;
    I334: in  std_logic;
    I335: in  std_logic;
    I336: in  std_logic;
    I337: in  std_logic;
    I338: in  std_logic;
    I339: in  std_logic;
    I340: in  std_logic;
    I341: in  std_logic;
    I342: in  std_logic;
    I343: in  std_logic;
    I344: in  std_logic;
    I345: in  std_logic;
    I346: in  std_logic;
    I347: in  std_logic;

    DO1	: out std_logic := '0';
    DO2	: out std_logic := '0';
    DO3	: out std_logic := '0';
    DO4	: out std_logic := '0';
    DO5	: out std_logic := '0';
    DO6	: out std_logic := '0';
    DO7	: out std_logic := '0';
    DO8	: out std_logic := '0';

    O1	: out std_logic := '0';
    O2	: out std_logic := '0';
    O3	: out std_logic := '0';
    O4	: out std_logic := '0';
    O5	: out std_logic := '0';
    O6	: out std_logic := '0';
    O7	: out std_logic := '0';
    O8	: out std_logic := '0';
    O9	: out std_logic := '0';
    O10	: out std_logic := '0';
    O11	: out std_logic := '0';
    O12	: out std_logic := '0';
    O13	: out std_logic := '0';
    O14	: out std_logic := '0';
    O15	: out std_logic := '0';
    O16	: out std_logic := '0';
    O17	: out std_logic := '0';
    O18	: out std_logic := '0';
    O19	: out std_logic := '0';
    O20	: out std_logic := '0';
    O21	: out std_logic := '0';
    O22	: out std_logic := '0';
    O23	: out std_logic := '0';
    O24	: out std_logic := '0';
    O25	: out std_logic := '0';
    O26	: out std_logic := '0';
    O27	: out std_logic := '0';
    O28	: out std_logic := '0';
    O29	: out std_logic := '0';
    O30	: out std_logic := '0';
    O31	: out std_logic := '0';
    O32	: out std_logic := '0';
    O33	: out std_logic := '0';
    O34	: out std_logic := '0';
    O35	: out std_logic := '0';
    O36	: out std_logic := '0';
    O37	: out std_logic := '0';
    O38	: out std_logic := '0';
    O39	: out std_logic := '0';
    O40	: out std_logic := '0';
    O41	: out std_logic := '0';
    O42	: out std_logic := '0';
    O43	: out std_logic := '0';
    O44	: out std_logic := '0';
    O45	: out std_logic := '0';
    O46	: out std_logic := '0';
    O47	: out std_logic := '0';
    O48	: out std_logic := '0';
    O49	: out std_logic := '0';
    O50	: out std_logic := '0';
    O51	: out std_logic := '0';
    O52	: out std_logic := '0';
    O53	: out std_logic := '0';
    O54	: out std_logic := '0';
    O55	: out std_logic := '0';
    O56	: out std_logic := '0';
    O57	: out std_logic := '0';
    O58	: out std_logic := '0';
    O59	: out std_logic := '0';
    O60	: out std_logic := '0';
    O61	: out std_logic := '0';
    O62	: out std_logic := '0';
    O63	: out std_logic := '0';
    O64	: out std_logic := '0';
    O65	: out std_logic := '0';
    O66	: out std_logic := '0';
    O67	: out std_logic := '0';
    O68	: out std_logic := '0';
    O69	: out std_logic := '0';
    O70	: out std_logic := '0';
    O71	: out std_logic := '0';
    O72	: out std_logic := '0';
    O73	: out std_logic := '0';
    O74	: out std_logic := '0';
    O75	: out std_logic := '0';
    O76	: out std_logic := '0';
    O77	: out std_logic := '0';
    O78	: out std_logic := '0';
    O79	: out std_logic := '0';
    O80	: out std_logic := '0';
    O81	: out std_logic := '0';
    O82	: out std_logic := '0';
    O83	: out std_logic := '0';
    O84	: out std_logic := '0';
    O85	: out std_logic := '0';
    O86	: out std_logic := '0';
    O87	: out std_logic := '0';
    O88	: out std_logic := '0';
    O89	: out std_logic := '0';
    O90	: out std_logic := '0';
    O91	: out std_logic := '0';
    O92	: out std_logic := '0';
    O93	: out std_logic := '0';
    O94	: out std_logic := '0';
    O95	: out std_logic := '0';
    O96	: out std_logic := '0';
    O97	: out std_logic := '0';
    O98	: out std_logic := '0';
    O99	: out std_logic := '0';
    O100: out std_logic;
    O101: out std_logic;
    O102: out std_logic;
    O103: out std_logic;
    O104: out std_logic;
    O105: out std_logic;
    O106: out std_logic;
    O107: out std_logic;
    O108: out std_logic;
    O109: out std_logic;
    O110: out std_logic;
    O111: out std_logic;
    O112: out std_logic;
    O113: out std_logic;
    O114: out std_logic;
    O115: out std_logic;
    O116: out std_logic;
    O117: out std_logic;
    O118: out std_logic;
    O119: out std_logic;
    O120: out std_logic;
    O121: out std_logic;
    O122: out std_logic;
    O123: out std_logic;
    O124: out std_logic;
    O125: out std_logic;
    O126: out std_logic;
    O127: out std_logic;
    O128: out std_logic;
    O129: out std_logic;
    O130: out std_logic;
    O131: out std_logic;
    O132: out std_logic;
    O133: out std_logic;
    O134: out std_logic;
    O135: out std_logic;
    O136: out std_logic;
    O137: out std_logic;
    O138: out std_logic;
    O139: out std_logic;
    O140: out std_logic;
    O141: out std_logic;
    O142: out std_logic;
    O143: out std_logic;
    O144: out std_logic;
    O145: out std_logic;
    O146: out std_logic;
    O147: out std_logic;
    O148: out std_logic;
    O149: out std_logic;
    O150: out std_logic;
    O151: out std_logic;
    O152: out std_logic;
    O153: out std_logic;
    O154: out std_logic;
    O155: out std_logic;
    O156: out std_logic;
    O157: out std_logic;
    O158: out std_logic;
    O159: out std_logic;
    O160: out std_logic;
    O161: out std_logic;
    O162: out std_logic;
    O163: out std_logic;
    O164: out std_logic;
    O165: out std_logic;
    O166: out std_logic;
    O167: out std_logic;
    O168: out std_logic;
    O169: out std_logic;
    O170: out std_logic;
    O171: out std_logic;
    O172: out std_logic;
    O173: out std_logic;
    O174: out std_logic;
    O175: out std_logic;
    O176: out std_logic;
    O177: out std_logic;
    O178: out std_logic;
    O179: out std_logic;
    O180: out std_logic;
    O181: out std_logic;
    O182: out std_logic;
    O183: out std_logic;
    O184: out std_logic;
    O185: out std_logic;
    O186: out std_logic;
    O187: out std_logic;
    O188: out std_logic;
    O189: out std_logic;
    O190: out std_logic;
    O191: out std_logic;
    O192: out std_logic;
    O193: out std_logic;
    O194: out std_logic;
    O195: out std_logic;
    O196: out std_logic;
    O197: out std_logic;
    O198: out std_logic;
    O199: out std_logic;
    O200: out std_logic;
    O201: out std_logic;
    O202: out std_logic;
    O203: out std_logic;
    O204: out std_logic;
    O205: out std_logic;
    O206: out std_logic;
    O207: out std_logic;
    O208: out std_logic;
    O209: out std_logic;
    O210: out std_logic;
    O211: out std_logic;
    O212: out std_logic;
    O213: out std_logic;
    O214: out std_logic;
    O215: out std_logic;
    O216: out std_logic;
    O217: out std_logic;
    O218: out std_logic;
    O219: out std_logic;
    O220: out std_logic;
    O221: out std_logic;
    O222: out std_logic;
    O223: out std_logic;
    O224: out std_logic;
    O225: out std_logic;
    O226: out std_logic;
    O227: out std_logic;
    O228: out std_logic;
    O229: out std_logic;
    O230: out std_logic;
    O231: out std_logic;
    O232: out std_logic;
    O233: out std_logic;
    O234: out std_logic;
    O235: out std_logic;
    O236: out std_logic;
    O237: out std_logic;
    O238: out std_logic;
    O239: out std_logic;
    O240: out std_logic;
    O241: out std_logic;
    O242: out std_logic;
    O243: out std_logic;
    O244: out std_logic;
    O245: out std_logic;
    O246: out std_logic;
    O247: out std_logic;
    O248: out std_logic;
    O249: out std_logic;
    O250: out std_logic;
    O251: out std_logic;
    O252: out std_logic;
    O253: out std_logic;
    O254: out std_logic;
    O255: out std_logic;
    O256: out std_logic;
    O257: out std_logic;
    O258: out std_logic;
    O259: out std_logic;
    O260: out std_logic;
    O261: out std_logic;
    O262: out std_logic;
    O263: out std_logic;
    O264: out std_logic;
    O265: out std_logic;
    O266: out std_logic;
    O267: out std_logic;
    O268: out std_logic;
    O269: out std_logic;
    O270: out std_logic;
    O271: out std_logic;
    O272: out std_logic;
    O273: out std_logic;
    O274: out std_logic;
    O275: out std_logic;
    O276: out std_logic;
    O277: out std_logic;
    O278: out std_logic;
    O279: out std_logic;
    O280: out std_logic;
    O281: out std_logic;
    O282: out std_logic;
    O283: out std_logic;
    O284: out std_logic;
    O285: out std_logic;
    O286: out std_logic;
    O287: out std_logic;
    O288: out std_logic;
    O289: out std_logic;
    O290: out std_logic;
    O291: out std_logic;
    O292: out std_logic;
    O293: out std_logic;
    O294: out std_logic;
    O295: out std_logic;
    O296: out std_logic;
    O297: out std_logic;
    O298: out std_logic;
    O299: out std_logic;
    O300: out std_logic;
    O301: out std_logic;
    O302: out std_logic;
    O303: out std_logic;
    O304: out std_logic;
    O305: out std_logic;
    O306: out std_logic;
    O307: out std_logic;
    O308: out std_logic;
    O309: out std_logic;
    O310: out std_logic;
    O311: out std_logic;
    O312: out std_logic;
    O313: out std_logic;
    O314: out std_logic;
    O315: out std_logic;
    O316: out std_logic;
    O317: out std_logic;
    O318: out std_logic;
    O319: out std_logic;
    O320: out std_logic;
    O321: out std_logic;
    O322: out std_logic;
    O323: out std_logic;
    O324: out std_logic;
    O325: out std_logic;
    O326: out std_logic;
    O327: out std_logic;
    O328: out std_logic;
    O329: out std_logic;
    O330: out std_logic;
    O331: out std_logic;
    O332: out std_logic;
    O333: out std_logic;
    O334: out std_logic;
    O335: out std_logic;
    O336: out std_logic;
    O337: out std_logic;
    O338: out std_logic;
    O339: out std_logic;
    O340: out std_logic;
    O341: out std_logic;
    O342: out std_logic;
    O343: out std_logic;
    O344: out std_logic;
    O345: out std_logic;
    O346: out std_logic;
    O347: out std_logic;
    O348: out std_logic;
    O349: out std_logic;
    O350: out std_logic;
    O351: out std_logic;
    O352: out std_logic;
    O353: out std_logic;
    O354: out std_logic;
    O355: out std_logic;
    O356: out std_logic;
    O357: out std_logic;
    O358: out std_logic;
    O359: out std_logic;
    O360: out std_logic;
    O361: out std_logic;
    O362: out std_logic;
    O363: out std_logic;
    O364: out std_logic;
    O365: out std_logic;
    O366: out std_logic;
    O367: out std_logic;
    O368: out std_logic;
    O369: out std_logic;
    O370: out std_logic;
    O371: out std_logic;
    O372: out std_logic;
    O373: out std_logic;
    O374: out std_logic;
    O375: out std_logic;
    O376: out std_logic;
    O377: out std_logic;
    O378: out std_logic;
    O379: out std_logic;
    O380: out std_logic;
    O381: out std_logic;
    O382: out std_logic;
    O383: out std_logic;
    O384: out std_logic;
    O385: out std_logic;
    O386: out std_logic;
    O387: out std_logic;
    O388: out std_logic;
    O389: out std_logic;
    O390: out std_logic;
    O391: out std_logic;
    O392: out std_logic;
    O393: out std_logic;
    O394: out std_logic;
    O395: out std_logic;
    O396: out std_logic;
    O397: out std_logic;
    O398: out std_logic;
    O399: out std_logic;
    O400: out std_logic;
    O401: out std_logic;
    O402: out std_logic;
    O403: out std_logic;
    O404: out std_logic;
    O405: out std_logic;
    O406: out std_logic;
    O407: out std_logic;
    O408: out std_logic;
    O409: out std_logic;
    O410: out std_logic;
    O411: out std_logic;
    O412: out std_logic;
    O413: out std_logic;
    O414: out std_logic;
    O415: out std_logic;
    O416: out std_logic;
    O417: out std_logic;
    O418: out std_logic;
    O419: out std_logic;
    O420: out std_logic;
    O421: out std_logic;
    O422: out std_logic;
    O423: out std_logic;
    O424: out std_logic;
    O425: out std_logic;
    O426: out std_logic;
    O427: out std_logic;
    O428: out std_logic;
    O429: out std_logic;
    O430: out std_logic;
    O431: out std_logic;
    O432: out std_logic;
    O433: out std_logic;
    O434: out std_logic;
    O435: out std_logic;
    O436: out std_logic;
    O437: out std_logic;
    O438: out std_logic;
    O439: out std_logic;
    O440: out std_logic;
    O441: out std_logic;
    O442: out std_logic;
    O443: out std_logic;
    O444: out std_logic;
    O445: out std_logic;
    O446: out std_logic;
    O447: out std_logic;
    O448: out std_logic;
    O449: out std_logic;
    O450: out std_logic;
    O451: out std_logic;
    O452: out std_logic;
    O453: out std_logic;
    O454: out std_logic;
    O455: out std_logic;
    O456: out std_logic;
    O457: out std_logic;
    O458: out std_logic;
    O459: out std_logic;
    O460: out std_logic;
    O461: out std_logic;
    O462: out std_logic;
    O463: out std_logic;
    O464: out std_logic;
    O465: out std_logic
);
end component NX_CORTEX_R5;

component NX_SER is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Number of serialization factor
    location             : string := "";		-- Pad location
    padType              : string := "";		-- Pad electrical standard
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    outputDelayLine      : string := "";		-- "0_to_63_delay_value"
    outputCapacity       : string := ""			-- 0 to 40 (value in pF)
);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    R	: in std_logic := '0';
    I	: in std_logic_vector(data_size - 1 downto 0) := (others => '0');
    IO	: out std_logic := '0';
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(4 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(4 downto 0) := (others => '0')
);
end component NX_SER;

component NX_DES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- -- Pad locationNumber of deserialization factor
    location             : string := "";		-- Pad location
    padType              : string := "";		-- Pad electrical standard
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    termination          : string := "";		-- Input impedance adaptatio    terminationReference : string := "";
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- Input impedance adaptation
    weakTermination      : string := "";		-- "floating" or "VTT"
    inputDelayLine       : string := "";		-- "0_to_63_delay_value"
    inputSignalSlope     : string := ""			-- Decimal value "0.5" to "20" (value in V/ns)
);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    R	: in std_logic := '0';
    IO	: in std_logic := '0';
    O	: out std_logic_vector(data_size - 1 downto 0) := (others => '0');
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(4 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(4 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0'
);
end component NX_DES;

component NX_SERDES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Serialiser/deserializer factor 
    location             : string := "";		-- Pad location
    padType              : string := "";		-- Pad electrical standard
    differential         : string := "";		-- Single ended ("0" or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    termination          : string := "";		-- Input impedance adaptation
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- "true" or "false"
    weakTermination      : string := "";		-- "PullUp" or "None"
    inputDelayLine       : string := "";		-- "O_to_63_delay_value"
    outputDelayLine      : string := "";		-- "O_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    outputCapacity       : string := "";		-- "0" to "40" (value in pF)
    cpath_registered     : bit := '0'			-- Use Register in Enable Path ('1')
);
port (
    FCK	: in std_logic := '0';
    SCK	: in std_logic := '0';
    RTX	: in std_logic := '0';
    RRX	: in std_logic := '0';
    CI	: in std_logic := '0';
    CCK	: in std_logic := '0';
    CL	: in std_logic := '0';
    CR	: in std_logic := '0';
    I	: in std_logic_vector(data_size - 1 downto 0) := (others => '0');
    IO	: inout std_logic := '0';
    O	: out std_logic_vector(data_size - 1 downto 0) := (others => '0');
    -- Delay Control
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(4 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(4 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0'
);
end component NX_SERDES;

component NX_IOC_SERDES is
generic (
    data_size : integer range 2 to 10 := 5;
    location  : string := ""
);
port (
    RTCK	: in std_logic := '0';
    WRCK	: in std_logic := '0';
    WTCK	: in std_logic := '0';
    RRCK	: in std_logic := '0';
    TRST	: in std_logic := '0';
    RRST	: in std_logic := '0';
    DCK	: in std_logic := '0';
    DRL	: in std_logic := '0';
    DIG	: in std_logic := '0';
    DS	: in std_logic_vector(1 downto 0) := (others => '0');
    DRA	: in std_logic_vector(4 downto 0) := (others => '0');
    DRI	: in std_logic_vector(5 downto 0) := (others => '0');
    FZ	: in std_logic := '0';
    DRO	: out std_logic_vector(5 downto 0) := (others => '0');
    DID	: out std_logic_vector(4 downto 0) := (others => '0');
    FLD	: out std_logic := '0';
    FLG	: out std_logic := '0';
    LINKN	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINKP	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0')
);
end component NX_IOC_SERDES;

component NX_HSSL_FULL_L is
generic (
   cfg_main_i : bit_vector( 33 downto 0) := (others => '0');
   cfg_tx0_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx0_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx1_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx1_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx2_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx2_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx3_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx3_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx4_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx4_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx5_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx5_i  : bit_vector(159 downto 0) := (others => '0');
   location   : string := ""
 );
port (
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ MAIN ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- Fabric Interface
    hssl_clk_user_i	: in std_logic := '0';
    hssl_clk_ref_i	: in std_logic := '0';
    hssl_clock_o	: out std_logic := '0';
    usr_com_tx_pma_pre_sign_i	: in std_logic := '0';
    usr_com_tx_pma_pre_en_i	: in std_logic := '0';
    usr_com_tx_pma_pre_input_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_tx_pma_main_sign_i	: in std_logic := '0';
    usr_com_rx_pma_m_eye_i	: in std_logic := '0';
    usr_com_tx_pma_main_en_i	: in std_logic_vector(5 downto 0) := (others => '0');
    usr_com_tx_pma_margin_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_tx_pma_margin_input_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_tx_pma_margin_sel_var_i	: in std_logic_vector(4 downto 0) := (others => '0');
    usr_com_tx_pma_margin_input_sel_var_i	: in std_logic_vector(4 downto 0) := (others => '0');
    usr_com_tx_pma_post_en_i	: in std_logic_vector(4 downto 0) := (others => '0');
    usr_com_tx_pma_post_sign_i	: in std_logic := '0';
    usr_com_tx_pma_post_input_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_tx_pma_post_input_sel_var_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_rx_pma_ctle_cap_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_rx_pma_ctle_resp_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_rx_pma_ctle_resn_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_com_ctrl_tx_sel_i	: in std_logic_vector(5 downto 0) := (others => '0');
    usr_com_ctrl_rx_sel_i	: in std_logic_vector(5 downto 0) := (others => '0');
    usr_pll_pma_rst_n_i	: in std_logic := '0';
    usr_main_rst_n_i	: in std_logic := '0';
    usr_calibrate_pma_res_p1_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_calibrate_pma_res_n2_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_calibrate_pma_res_n3_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_calibrate_pma_res_p4_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_calibrate_pma_sel_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_calibrate_pma_en_i	: in std_logic := '0';
    usr_pcs_ctrl_pll_lock_en_i	: in std_logic := '0';
    usr_pcs_ctrl_ovs_en_i	: in std_logic := '0';
    usr_main_test_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_pll_lock_o	: out std_logic := '0';
    usr_calibrate_pma_out_o	: out std_logic := '0';
    usr_main_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    pma_clk_ext_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 0 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx0_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx0_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx0_rst_n_i	: in std_logic := '0';
    usr_tx0_pma_clk_en_i	: in std_logic := '0';
    usr_tx0_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx0_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx0_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx0_busy_o	: out std_logic := '0';
    pma_tx0_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx0_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx0_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx0_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx0_ctrl_align_en_i	: in std_logic := '0';
    usr_rx0_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx0_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx0_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx0_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx0_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx0_rst_n_i	: in std_logic := '0';
    usr_rx0_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx0_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx0_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx0_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx0_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx0_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx0_busy_o	: out std_logic := '0';
    usr_rx0_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx0_pll_lock_o	: out std_logic := '0';
    pma_rx0_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 1 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx1_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx1_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx1_rst_n_i	: in std_logic := '0';
    usr_tx1_pma_clk_en_i	: in std_logic := '0';
    usr_tx1_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx1_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx1_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx1_busy_o	: out std_logic := '0';
    pma_tx1_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx1_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx1_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx1_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx1_ctrl_align_en_i	: in std_logic := '0';
    usr_rx1_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx1_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx1_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx1_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx1_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx1_rst_n_i	: in std_logic := '0';
    usr_rx1_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx1_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx1_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx1_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx1_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx1_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx1_busy_o	: out std_logic := '0';
    usr_rx1_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx1_pll_lock_o	: out std_logic := '0';
    pma_rx1_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 2 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx2_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx2_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx2_rst_n_i	: in std_logic := '0';
    usr_tx2_pma_clk_en_i	: in std_logic := '0';
    usr_tx2_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx2_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx2_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx2_busy_o	: out std_logic := '0';
    pma_tx2_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx2_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx2_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx2_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx2_ctrl_align_en_i	: in std_logic := '0';
    usr_rx2_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx2_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx2_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx2_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx2_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx2_rst_n_i	: in std_logic := '0';
    usr_rx2_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx2_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx2_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx2_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx2_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx2_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx2_busy_o	: out std_logic := '0';
    usr_rx2_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx2_pll_lock_o	: out std_logic := '0';
    pma_rx2_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 3 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx3_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx3_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx3_rst_n_i	: in std_logic := '0';
    usr_tx3_pma_clk_en_i	: in std_logic := '0';
    usr_tx3_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx3_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx3_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx3_busy_o	: out std_logic := '0';
    pma_tx3_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx3_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx3_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx3_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx3_ctrl_align_en_i	: in std_logic := '0';
    usr_rx3_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx3_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx3_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx3_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx3_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx3_rst_n_i	: in std_logic := '0';
    usr_rx3_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx3_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx3_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx3_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx3_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx3_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx3_busy_o	: out std_logic := '0';
    usr_rx3_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx3_pll_lock_o	: out std_logic := '0';
    pma_rx3_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 4 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx4_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx4_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx4_rst_n_i	: in std_logic := '0';
    usr_tx4_pma_clk_en_i	: in std_logic := '0';
    usr_tx4_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx4_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx4_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx4_busy_o	: out std_logic := '0';
    pma_tx4_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx4_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx4_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx4_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx4_ctrl_align_en_i	: in std_logic := '0';
    usr_rx4_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx4_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx4_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx4_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx4_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx4_rst_n_i	: in std_logic := '0';
    usr_rx4_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx4_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx4_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx4_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx4_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx4_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx4_busy_o	: out std_logic := '0';
    usr_rx4_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx4_pll_lock_o	: out std_logic := '0';
    pma_rx4_i	: in std_logic := '0';

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 5 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
    usr_tx5_ctrl_enc_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_char_is_k_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_scr_en_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_end_of_multiframe_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_end_of_frame_i	: in std_logic_vector(7 downto 0) := (others => '0');
    usr_tx5_ctrl_replace_en_i	: in std_logic := '0';
    usr_tx5_rst_n_i	: in std_logic := '0';
    usr_tx5_pma_clk_en_i	: in std_logic := '0';
    usr_tx5_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_tx5_data_i	: in std_logic_vector(63 downto 0) := (others => '0');
    usr_tx5_test_o	: out std_logic_vector(3 downto 0) := (others => '0');
    usr_tx5_busy_o	: out std_logic := '0';
    pma_tx5_o	: out std_logic := '0';
    -- RX - Fabric Interface
    usr_rx5_data_o	: out std_logic_vector(63 downto 0) := (others => '0');
    usr_rx5_ctrl_dscr_en_i	: in std_logic := '0';
    usr_rx5_ctrl_dec_en_i	: in std_logic := '0';
    usr_rx5_ctrl_align_en_i	: in std_logic := '0';
    usr_rx5_ctrl_align_sync_i	: in std_logic := '0';
    usr_rx5_ctrl_replace_en_i	: in std_logic := '0';
    usr_rx5_ctrl_el_buff_rst_i	: in std_logic := '0';
    usr_rx5_ctrl_ovs_bit_sel_i	: in std_logic_vector(1 downto 0) := (others => '0');
    usr_rx5_ctrl_el_buff_fifo_en_i	: in std_logic := '0';
    usr_rx5_rst_n_i	: in std_logic := '0';
    usr_rx5_pma_cdr_rst_i	: in std_logic := '0';
    usr_rx5_pma_ckgen_rst_n_i	: in std_logic := '0';
    usr_rx5_pma_pll_rst_n_i	: in std_logic := '0';
    usr_rx5_test_i	: in std_logic_vector(3 downto 0) := (others => '0');
    usr_rx5_pma_loss_of_signal_o	: out std_logic := '0';
    usr_rx5_ctrl_char_is_comma_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_char_is_k_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_not_in_table_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_disp_err_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_char_is_a_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_char_is_f_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_ctrl_char_is_aligned_o	: out std_logic := '0';
    usr_rx5_busy_o	: out std_logic := '0';
    usr_rx5_test_o	: out std_logic_vector(7 downto 0) := (others => '0');
    usr_rx5_pll_lock_o	: out std_logic := '0';
    pma_rx5_i	: in std_logic := '0'
);
end component NX_HSSL_FULL_L;

component NX_CTX_L is
generic (
     pma_clk_pos          : bit := '0';
     pcs_protocol_size    : bit := '0';
     pcs_8b_scr_sel       : bit := '0';
     pcs_scr_init         : bit_vector(16 downto 0) := (others => '0');
     pcs_scr_bypass       : bit := '0';
     pcs_sync_supported   : bit := '0';
     pcs_replace_bypass   : bit := '0';
     pcs_enc_bypass       : bit := '0';
     pcs_loopback         : bit := '0';
     pcs_polarity         : bit := '0';
     pcs_esistream_fsm_en : bit := '0';
     test                 : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc   : bit := '0';
     pcs_bypass_usr_cdc   : bit := '0';
     pma_loopback         : bit := '0';
     location             : string := ""
 );
port (
    ENC_E_I1	: in std_logic := '0';
    ENC_E_I2	: in std_logic := '0';
    ENC_E_I3	: in std_logic := '0';
    ENC_E_I4	: in std_logic := '0';
    ENC_E_I5	: in std_logic := '0';
    ENC_E_I6	: in std_logic := '0';
    ENC_E_I7	: in std_logic := '0';
    ENC_E_I8	: in std_logic := '0';

    CH_K_I1	: in std_logic := '0';
    CH_K_I2	: in std_logic := '0';
    CH_K_I3	: in std_logic := '0';
    CH_K_I4	: in std_logic := '0';
    CH_K_I5	: in std_logic := '0';
    CH_K_I6	: in std_logic := '0';
    CH_K_I7	: in std_logic := '0';
    CH_K_I8	: in std_logic := '0';

    SCR_E_I1	: in std_logic := '0';
    SCR_E_I2	: in std_logic := '0';
    SCR_E_I3	: in std_logic := '0';
    SCR_E_I4	: in std_logic := '0';
    SCR_E_I5	: in std_logic := '0';
    SCR_E_I6	: in std_logic := '0';
    SCR_E_I7	: in std_logic := '0';
    SCR_E_I8	: in std_logic := '0';

    EOMF_I1	: in std_logic := '0';
    EOMF_I2	: in std_logic := '0';
    EOMF_I3	: in std_logic := '0';
    EOMF_I4	: in std_logic := '0';
    EOMF_I5	: in std_logic := '0';
    EOMF_I6	: in std_logic := '0';
    EOMF_I7	: in std_logic := '0';
    EOMF_I8	: in std_logic := '0';

    EOF_I1	: in std_logic := '0';
    EOF_I2	: in std_logic := '0';
    EOF_I3	: in std_logic := '0';
    EOF_I4	: in std_logic := '0';
    EOF_I5	: in std_logic := '0';
    EOF_I6	: in std_logic := '0';
    EOF_I7	: in std_logic := '0';
    EOF_I8	: in std_logic := '0';

    REP_E_I	: in std_logic := '0';
    RST_N_I	: in std_logic := '0';

    TST_I1	: in std_logic := '0';
    TST_I2	: in std_logic := '0';
    TST_I3	: in std_logic := '0';
    TST_I4	: in std_logic := '0';

    DATA_I1	: in std_logic := '0';
    DATA_I2	: in std_logic := '0';
    DATA_I3	: in std_logic := '0';
    DATA_I4	: in std_logic := '0';
    DATA_I5	: in std_logic := '0';
    DATA_I6	: in std_logic := '0';
    DATA_I7	: in std_logic := '0';
    DATA_I8	: in std_logic := '0';
    DATA_I9	: in std_logic := '0';
    DATA_I10	: in std_logic := '0';
    DATA_I11	: in std_logic := '0';
    DATA_I12	: in std_logic := '0';
    DATA_I13	: in std_logic := '0';
    DATA_I14	: in std_logic := '0';
    DATA_I15	: in std_logic := '0';
    DATA_I16	: in std_logic := '0';
    DATA_I17	: in std_logic := '0';
    DATA_I18	: in std_logic := '0';
    DATA_I19	: in std_logic := '0';
    DATA_I20	: in std_logic := '0';
    DATA_I21	: in std_logic := '0';
    DATA_I22	: in std_logic := '0';
    DATA_I23	: in std_logic := '0';
    DATA_I24	: in std_logic := '0';
    DATA_I25	: in std_logic := '0';
    DATA_I26	: in std_logic := '0';
    DATA_I27	: in std_logic := '0';
    DATA_I28	: in std_logic := '0';
    DATA_I29	: in std_logic := '0';
    DATA_I30	: in std_logic := '0';
    DATA_I31	: in std_logic := '0';
    DATA_I32	: in std_logic := '0';
    DATA_I33	: in std_logic := '0';
    DATA_I34	: in std_logic := '0';
    DATA_I35	: in std_logic := '0';
    DATA_I36	: in std_logic := '0';
    DATA_I37	: in std_logic := '0';
    DATA_I38	: in std_logic := '0';
    DATA_I39	: in std_logic := '0';
    DATA_I40	: in std_logic := '0';
    DATA_I41	: in std_logic := '0';
    DATA_I42	: in std_logic := '0';
    DATA_I43	: in std_logic := '0';
    DATA_I44	: in std_logic := '0';
    DATA_I45	: in std_logic := '0';
    DATA_I46	: in std_logic := '0';
    DATA_I47	: in std_logic := '0';
    DATA_I48	: in std_logic := '0';
    DATA_I49	: in std_logic := '0';
    DATA_I50	: in std_logic := '0';
    DATA_I51	: in std_logic := '0';
    DATA_I52	: in std_logic := '0';
    DATA_I53	: in std_logic := '0';
    DATA_I54	: in std_logic := '0';
    DATA_I55	: in std_logic := '0';
    DATA_I56	: in std_logic := '0';
    DATA_I57	: in std_logic := '0';
    DATA_I58	: in std_logic := '0';
    DATA_I59	: in std_logic := '0';
    DATA_I60	: in std_logic := '0';
    DATA_I61	: in std_logic := '0';
    DATA_I62	: in std_logic := '0';
    DATA_I63	: in std_logic := '0';
    DATA_I64	: in std_logic := '0';

    TST_O1	: out std_logic := '0';
    TST_O2	: out std_logic := '0';
    TST_O3	: out std_logic := '0';
    TST_O4	: out std_logic := '0';

    BUSY_O	: out std_logic := '0';
    CLK_E_I	: in std_logic := '0';

    LINK	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');

    TX_O	: out std_logic := '0'
);
end component NX_CTX_L;

component NX_CRX_L is
generic (
     test                         : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc           : bit := '0';
     pcs_bypass_usr_cdc           : bit := '0';
     pcs_debug_en                 : bit := '0';
     pcs_fsm_watchdog_en          : bit := '0';
     pma_clk_pos                  : bit := '0';
     pcs_protocol_size            : bit := '0';
     pcs_loopback                 : bit := '0';
     pcs_polarity                 : bit := '0';
     pcs_p_comma_en               : bit := '0';
     pcs_p_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_m_comma_en               : bit := '0';
     pcs_m_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_comma_mask               : bit_vector(9 downto 0) := (others => '0');
     pcs_nb_comma_bef_realign     : bit_vector(1 downto 0) := (others => '0');
     pcs_align_bypass             : bit := '0';
     pcs_dec_bypass               : bit := '0';
     pcs_el_buff_max_comp         : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_diff_bef_comp    : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_only_one_skp     : bit := '0';
     pcs_el_buff_underflow_handle : bit := '0';
     pcs_el_buff_skp_seq_size     : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_char_0       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_1       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_2       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_3       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_size  : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_header_0     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_1     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_2     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_3     : bit_vector(8 downto 0) := (others => '0');
     pcs_buffers_use_cdc          : bit := '0';
     pcs_buffers_bypass           : bit := '0';
     pcs_sync_supported           : bit := '0';
     pcs_replace_bypass           : bit := '0';
     pcs_dscr_bypass              : bit := '0';
     pcs_8b_dscr_sel              : bit := '0';
     pcs_fsm_sel                  : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divf_en_n            : bit := '0';
     pma_pll_divm_en_n            : bit := '0';
     pma_pll_divn_en_n            : bit := '0';
     pma_cdr_cp                   : bit_vector(3 downto 0) := (others => '0');
     pma_ctrl_term                : bit_vector(5 downto 0) := (others => '0');
     pma_pll_cpump_n              : bit_vector(2 downto 0) := (others => '0');
     pma_pll_divf                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divm                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divn                 : bit := '0';
     pma_loopback                 : bit := '0';
     location                     : string := ""
 );
port (
    DSCR_E_I	: in std_logic := '0';
    DEC_E_I	: in std_logic := '0';
    ALIGN_E_I	: in std_logic := '0';
    ALIGN_S_I	: in std_logic := '0';
    REP_E_I	: in std_logic := '0';
    BUF_R_I	: in std_logic := '0';

    OVS_BS_I1	: in std_logic := '0';
    OVS_BS_I2	: in std_logic := '0';

    BUF_FE_I	: in std_logic := '0';
    RST_N_I	: in std_logic := '0';
    CDR_R_I	: in std_logic := '0';
    CKG_RN_I	: in std_logic := '0';
    PLL_RN_I	: in std_logic := '0';

    TST_I1	: in std_logic := '0';
    TST_I2	: in std_logic := '0';
    TST_I3	: in std_logic := '0';
    TST_I4	: in std_logic := '0';

    LOS_O	: out std_logic := '0';

    DATA_O1	: out std_logic := '0';
    DATA_O2	: out std_logic := '0';
    DATA_O3	: out std_logic := '0';
    DATA_O4	: out std_logic := '0';
    DATA_O5	: out std_logic := '0';
    DATA_O6	: out std_logic := '0';
    DATA_O7	: out std_logic := '0';
    DATA_O8	: out std_logic := '0';
    DATA_O9	: out std_logic := '0';
    DATA_O10	: out std_logic := '0';
    DATA_O11	: out std_logic := '0';
    DATA_O12	: out std_logic := '0';
    DATA_O13	: out std_logic := '0';
    DATA_O14	: out std_logic := '0';
    DATA_O15	: out std_logic := '0';
    DATA_O16	: out std_logic := '0';
    DATA_O17	: out std_logic := '0';
    DATA_O18	: out std_logic := '0';
    DATA_O19	: out std_logic := '0';
    DATA_O20	: out std_logic := '0';
    DATA_O21	: out std_logic := '0';
    DATA_O22	: out std_logic := '0';
    DATA_O23	: out std_logic := '0';
    DATA_O24	: out std_logic := '0';
    DATA_O25	: out std_logic := '0';
    DATA_O26	: out std_logic := '0';
    DATA_O27	: out std_logic := '0';
    DATA_O28	: out std_logic := '0';
    DATA_O29	: out std_logic := '0';
    DATA_O30	: out std_logic := '0';
    DATA_O31	: out std_logic := '0';
    DATA_O32	: out std_logic := '0';
    DATA_O33	: out std_logic := '0';
    DATA_O34	: out std_logic := '0';
    DATA_O35	: out std_logic := '0';
    DATA_O36	: out std_logic := '0';
    DATA_O37	: out std_logic := '0';
    DATA_O38	: out std_logic := '0';
    DATA_O39	: out std_logic := '0';
    DATA_O40	: out std_logic := '0';
    DATA_O41	: out std_logic := '0';
    DATA_O42	: out std_logic := '0';
    DATA_O43	: out std_logic := '0';
    DATA_O44	: out std_logic := '0';
    DATA_O45	: out std_logic := '0';
    DATA_O46	: out std_logic := '0';
    DATA_O47	: out std_logic := '0';
    DATA_O48	: out std_logic := '0';
    DATA_O49	: out std_logic := '0';
    DATA_O50	: out std_logic := '0';
    DATA_O51	: out std_logic := '0';
    DATA_O52	: out std_logic := '0';
    DATA_O53	: out std_logic := '0';
    DATA_O54	: out std_logic := '0';
    DATA_O55	: out std_logic := '0';
    DATA_O56	: out std_logic := '0';
    DATA_O57	: out std_logic := '0';
    DATA_O58	: out std_logic := '0';
    DATA_O59	: out std_logic := '0';
    DATA_O60	: out std_logic := '0';
    DATA_O61	: out std_logic := '0';
    DATA_O62	: out std_logic := '0';
    DATA_O63	: out std_logic := '0';
    DATA_O64	: out std_logic := '0';

    CH_COM_O1	: out std_logic := '0';
    CH_COM_O2	: out std_logic := '0';
    CH_COM_O3	: out std_logic := '0';
    CH_COM_O4	: out std_logic := '0';
    CH_COM_O5	: out std_logic := '0';
    CH_COM_O6	: out std_logic := '0';
    CH_COM_O7	: out std_logic := '0';
    CH_COM_O8	: out std_logic := '0';

    CH_K_O1	: out std_logic := '0';
    CH_K_O2	: out std_logic := '0';
    CH_K_O3	: out std_logic := '0';
    CH_K_O4	: out std_logic := '0';
    CH_K_O5	: out std_logic := '0';
    CH_K_O6	: out std_logic := '0';
    CH_K_O7	: out std_logic := '0';
    CH_K_O8	: out std_logic := '0';

    NIT_O1	: out std_logic := '0';
    NIT_O2	: out std_logic := '0';
    NIT_O3	: out std_logic := '0';
    NIT_O4	: out std_logic := '0';
    NIT_O5	: out std_logic := '0';
    NIT_O6	: out std_logic := '0';
    NIT_O7	: out std_logic := '0';
    NIT_O8	: out std_logic := '0';

    D_ERR_O1	: out std_logic := '0';
    D_ERR_O2	: out std_logic := '0';
    D_ERR_O3	: out std_logic := '0';
    D_ERR_O4	: out std_logic := '0';
    D_ERR_O5	: out std_logic := '0';
    D_ERR_O6	: out std_logic := '0';
    D_ERR_O7	: out std_logic := '0';
    D_ERR_O8	: out std_logic := '0';

    CH_A_O1	: out std_logic := '0';
    CH_A_O2	: out std_logic := '0';
    CH_A_O3	: out std_logic := '0';
    CH_A_O4	: out std_logic := '0';
    CH_A_O5	: out std_logic := '0';
    CH_A_O6	: out std_logic := '0';
    CH_A_O7	: out std_logic := '0';
    CH_A_O8	: out std_logic := '0';

    CH_F_O1	: out std_logic := '0';
    CH_F_O2	: out std_logic := '0';
    CH_F_O3	: out std_logic := '0';
    CH_F_O4	: out std_logic := '0';
    CH_F_O5	: out std_logic := '0';
    CH_F_O6	: out std_logic := '0';
    CH_F_O7	: out std_logic := '0';
    CH_F_O8	: out std_logic := '0';

    ALIGN_O	: out std_logic := '0';
    BUSY_O	: out std_logic := '0';

    TST_O1	: out std_logic := '0';
    TST_O2	: out std_logic := '0';
    TST_O3	: out std_logic := '0';
    TST_O4	: out std_logic := '0';
    TST_O5	: out std_logic := '0';
    TST_O6	: out std_logic := '0';
    TST_O7	: out std_logic := '0';
    TST_O8	: out std_logic := '0';

    LOCK_O	: out std_logic := '0';

    LINK	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');

    RX_I	: in std_logic := '0'
);
end component NX_CRX_L;

component NX_PMA_L is
generic (
     main_test                   : bit_vector(7 downto 0) := (others => '0');
     rx_pma_half_step            : bit := '0';
     pll_pma_int_data_len        : bit := '0';
     pll_pma_cpump_n             : bit_vector(2 downto 0) := (others => '0');
     pll_pma_divf                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divm                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divn                : bit := '0';
     pll_pma_lvds_mux            : bit := '0';
     pll_pma_mux_ckref           : bit := '0';
     pll_pma_divf_en_n           : bit := '0';
     pll_pma_divm_en_n           : bit := '0';
     pll_pma_divn_en_n           : bit := '0';
     main_clk_to_fabric_div_mode : bit := '0';
     main_clk_to_fabric_div_en   : bit := '0';
     main_clk_to_fabric_sel      : bit := '0';
     main_use_only_usr_clock     : bit := '0';
     main_use_pcs_clk_2          : bit := '0';
     pcs_word_len                : bit_vector(1 downto 0) := (others => '0');
     pcs_ovs_mode                : bit := '0';
     pcs_pll_lock_count          : bit_vector(2 downto 0) := (others => '0');
     location                    : string := ""
 );
port (
    CLK_USER_I	: in std_logic := '0';
    CLK_REF_I	: in std_logic := '0';
--    CLK_I1      : in  std_logic;
--    CLK_I2      : in  std_logic;
--    CLK_I3      : in  std_logic;
--    CLK_I4      : in  std_logic;
--    CLK_I5      : in  std_logic;
--    CLK_I6      : in  std_logic;
--    CLK_I7      : in  std_logic;
--    CLK_I8      : in  std_logic;

    PRE_SG_I	: in std_logic := '0';
    PRE_EN_I	: in std_logic := '0';

    PRE_IS_I1	: in std_logic := '0';
    PRE_IS_I2	: in std_logic := '0';
    PRE_IS_I3	: in std_logic := '0';
    PRE_IS_I4	: in std_logic := '0';

    MAIN_SG_I	: in std_logic := '0';

    MAIN_EN_I1	: in std_logic := '0';
    MAIN_EN_I2	: in std_logic := '0';
    MAIN_EN_I3	: in std_logic := '0';
    MAIN_EN_I4	: in std_logic := '0';
    MAIN_EN_I5	: in std_logic := '0';
    MAIN_EN_I6	: in std_logic := '0';

    MARG_S_I1	: in std_logic := '0';
    MARG_S_I2	: in std_logic := '0';
    MARG_S_I3	: in std_logic := '0';
    MARG_S_I4	: in std_logic := '0';

    MARG_IS_I1	: in std_logic := '0';
    MARG_IS_I2	: in std_logic := '0';
    MARG_IS_I3	: in std_logic := '0';
    MARG_IS_I4	: in std_logic := '0';

    MARG_SV_I1	: in std_logic := '0';
    MARG_SV_I2	: in std_logic := '0';
    MARG_SV_I3	: in std_logic := '0';
    MARG_SV_I4	: in std_logic := '0';
    MARG_SV_I5	: in std_logic := '0';

    MARG_ISV_I1	: in std_logic := '0';
    MARG_ISV_I2	: in std_logic := '0';
    MARG_ISV_I3	: in std_logic := '0';
    MARG_ISV_I4	: in std_logic := '0';
    MARG_ISV_I5	: in std_logic := '0';

    POST_EN_I1	: in std_logic := '0';
    POST_EN_I2	: in std_logic := '0';
    POST_EN_I3	: in std_logic := '0';
    POST_EN_I4	: in std_logic := '0';
    POST_EN_I5	: in std_logic := '0';

    POST_SG_I	: in std_logic := '0';

    POST_IS_I1	: in std_logic := '0';
    POST_IS_I2	: in std_logic := '0';
    POST_IS_I3	: in std_logic := '0';
    POST_IS_I4	: in std_logic := '0';

    POST_ISV_I1	: in std_logic := '0';
    POST_ISV_I2	: in std_logic := '0';
    POST_ISV_I3	: in std_logic := '0';
    POST_ISV_I4	: in std_logic := '0';

    TX_SEL_I1	: in std_logic := '0';
    TX_SEL_I2	: in std_logic := '0';
    TX_SEL_I3	: in std_logic := '0';
    TX_SEL_I4	: in std_logic := '0';
    TX_SEL_I5	: in std_logic := '0';
    TX_SEL_I6	: in std_logic := '0';

    CT_CAP_I1	: in std_logic := '0';
    CT_CAP_I2	: in std_logic := '0';
    CT_CAP_I3	: in std_logic := '0';
    CT_CAP_I4	: in std_logic := '0';

    CT_RESP_I1	: in std_logic := '0';
    CT_RESP_I2	: in std_logic := '0';
    CT_RESP_I3	: in std_logic := '0';
    CT_RESP_I4	: in std_logic := '0';

    CT_RESN_I1	: in std_logic := '0';
    CT_RESN_I2	: in std_logic := '0';
    CT_RESN_I3	: in std_logic := '0';
    CT_RESN_I4	: in std_logic := '0';

    M_EYE_I	: in std_logic := '0';

    RX_SEL_I1	: in std_logic := '0';
    RX_SEL_I2	: in std_logic := '0';
    RX_SEL_I3	: in std_logic := '0';
    RX_SEL_I4	: in std_logic := '0';
    RX_SEL_I5	: in std_logic := '0';
    RX_SEL_I6	: in std_logic := '0';

    PLL_RN_I	: in std_logic := '0';
    RST_N_I	: in std_logic := '0';

    CAL_1P_I1	: in std_logic := '0';
    CAL_1P_I2	: in std_logic := '0';
    CAL_1P_I3	: in std_logic := '0';
    CAL_1P_I4	: in std_logic := '0';
    CAL_1P_I5	: in std_logic := '0';
    CAL_1P_I6	: in std_logic := '0';
    CAL_1P_I7	: in std_logic := '0';
    CAL_1P_I8	: in std_logic := '0';

    CAL_2N_I1	: in std_logic := '0';
    CAL_2N_I2	: in std_logic := '0';
    CAL_2N_I3	: in std_logic := '0';
    CAL_2N_I4	: in std_logic := '0';
    CAL_2N_I5	: in std_logic := '0';
    CAL_2N_I6	: in std_logic := '0';
    CAL_2N_I7	: in std_logic := '0';
    CAL_2N_I8	: in std_logic := '0';

    CAL_3N_I1	: in std_logic := '0';
    CAL_3N_I2	: in std_logic := '0';
    CAL_3N_I3	: in std_logic := '0';
    CAL_3N_I4	: in std_logic := '0';
    CAL_3N_I5	: in std_logic := '0';
    CAL_3N_I6	: in std_logic := '0';
    CAL_3N_I7	: in std_logic := '0';
    CAL_3N_I8	: in std_logic := '0';

    CAL_4P_I1	: in std_logic := '0';
    CAL_4P_I2	: in std_logic := '0';
    CAL_4P_I3	: in std_logic := '0';
    CAL_4P_I4	: in std_logic := '0';
    CAL_4P_I5	: in std_logic := '0';
    CAL_4P_I6	: in std_logic := '0';
    CAL_4P_I7	: in std_logic := '0';
    CAL_4P_I8	: in std_logic := '0';

    CAL_SEL_I1	: in std_logic := '0';
    CAL_SEL_I2	: in std_logic := '0';
    CAL_SEL_I3	: in std_logic := '0';
    CAL_SEL_I4	: in std_logic := '0';

    CAL_E_I	: in std_logic := '0';
    LOCK_E_I	: in std_logic := '0';
    OVS_E_I	: in std_logic := '0';

    TST_I1	: in std_logic := '0';
    TST_I2	: in std_logic := '0';
    TST_I3	: in std_logic := '0';
    TST_I4	: in std_logic := '0';
    TST_I5	: in std_logic := '0';
    TST_I6	: in std_logic := '0';
    TST_I7	: in std_logic := '0';
    TST_I8	: in std_logic := '0';

    CLK_O	: out std_logic := '0';
    LOCK_O	: out std_logic := '0';
    CAL_O	: out std_logic := '0';

    TST_O1	: out std_logic := '0';
    TST_O2	: out std_logic := '0';
    TST_O3	: out std_logic := '0';
    TST_O4	: out std_logic := '0';
    TST_O5	: out std_logic := '0';
    TST_O6	: out std_logic := '0';
    TST_O7	: out std_logic := '0';
    TST_O8	: out std_logic := '0';

    LINK_TX0	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX1	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX2	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX3	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX4	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_TX5	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX0	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX1	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX2	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX3	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX4	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');
    LINK_RX5	: inout std_logic_vector(IOC_LINK_SIZE-1 downto 0) := (others => '0');

    CLK_EXT_I	: in std_logic := '0'
);
end component NX_PMA_L;

component NX_R5_L is
port (
    -- Inputs
    A_CKEM_I	: in std_logic := '0';
    A_CKEP_I	: in std_logic := '0';
    A_CKES_I	: in std_logic := '0';

    AR_A_I32	: in std_logic := '0';
    AR_A_I31	: in std_logic := '0';
    AR_A_I30	: in std_logic := '0';
    AR_A_I29	: in std_logic := '0';
    AR_A_I28	: in std_logic := '0';
    AR_A_I27	: in std_logic := '0';
    AR_A_I26	: in std_logic := '0';
    AR_A_I25	: in std_logic := '0';
    AR_A_I24	: in std_logic := '0';
    AR_A_I23	: in std_logic := '0';
    AR_A_I22	: in std_logic := '0';
    AR_A_I21	: in std_logic := '0';
    AR_A_I20	: in std_logic := '0';
    AR_A_I19	: in std_logic := '0';
    AR_A_I18	: in std_logic := '0';
    AR_A_I17	: in std_logic := '0';
    AR_A_I16	: in std_logic := '0';
    AR_A_I15	: in std_logic := '0';
    AR_A_I14	: in std_logic := '0';
    AR_A_I13	: in std_logic := '0';
    AR_A_I12	: in std_logic := '0';
    AR_A_I11	: in std_logic := '0';
    AR_A_I10	: in std_logic := '0';
    AR_A_I9	: in std_logic := '0';
    AR_A_I8	: in std_logic := '0';
    AR_A_I7	: in std_logic := '0';
    AR_A_I6	: in std_logic := '0';
    AR_A_I5	: in std_logic := '0';
    AR_A_I4	: in std_logic := '0';
    AR_A_I3	: in std_logic := '0';
    AR_A_I2	: in std_logic := '0';
    AR_A_I1	: in std_logic := '0';

    AR_BU_I2	: in std_logic := '0';
    AR_BU_I1	: in std_logic := '0';

    AR_CH_I4	: in std_logic := '0';
    AR_CH_I3	: in std_logic := '0';
    AR_CH_I2	: in std_logic := '0';
    AR_CH_I1	: in std_logic := '0';

    AR_IDS_I8	: in std_logic := '0';
    AR_IDS_I7	: in std_logic := '0';
    AR_IDS_I6	: in std_logic := '0';
    AR_IDS_I5	: in std_logic := '0';
    AR_IDS_I4	: in std_logic := '0';
    AR_IDS_I3	: in std_logic := '0';
    AR_IDS_I2	: in std_logic := '0';
    AR_IDS_I1	: in std_logic := '0';

    AR_LE_I4	: in std_logic := '0';
    AR_LE_I3	: in std_logic := '0';
    AR_LE_I2	: in std_logic := '0';
    AR_LE_I1	: in std_logic := '0';

    AR_LK_I2	: in std_logic := '0';
    AR_LK_I1	: in std_logic := '0';

    AR_PR_I3	: in std_logic := '0';
    AR_PR_I2	: in std_logic := '0';
    AR_PR_I1	: in std_logic := '0';

    AR_RYM_I	: in std_logic := '0';
    AR_RYP_I	: in std_logic := '0';

    AR_SZ_I3	: in std_logic := '0';
    AR_SZ_I2	: in std_logic := '0';
    AR_SZ_I1	: in std_logic := '0';

    AR_VD_I	: in std_logic := '0';
    AT_RS_I	: in std_logic := '0';

    AW_A_I32	: in std_logic := '0';
    AW_A_I31	: in std_logic := '0';
    AW_A_I30	: in std_logic := '0';
    AW_A_I29	: in std_logic := '0';
    AW_A_I28	: in std_logic := '0';
    AW_A_I27	: in std_logic := '0';
    AW_A_I26	: in std_logic := '0';
    AW_A_I25	: in std_logic := '0';
    AW_A_I24	: in std_logic := '0';
    AW_A_I23	: in std_logic := '0';
    AW_A_I22	: in std_logic := '0';
    AW_A_I21	: in std_logic := '0';
    AW_A_I20	: in std_logic := '0';
    AW_A_I19	: in std_logic := '0';
    AW_A_I18	: in std_logic := '0';
    AW_A_I17	: in std_logic := '0';
    AW_A_I16	: in std_logic := '0';
    AW_A_I15	: in std_logic := '0';
    AW_A_I14	: in std_logic := '0';
    AW_A_I13	: in std_logic := '0';
    AW_A_I12	: in std_logic := '0';
    AW_A_I11	: in std_logic := '0';
    AW_A_I10	: in std_logic := '0';
    AW_A_I9	: in std_logic := '0';
    AW_A_I8	: in std_logic := '0';
    AW_A_I7	: in std_logic := '0';
    AW_A_I6	: in std_logic := '0';
    AW_A_I5	: in std_logic := '0';
    AW_A_I4	: in std_logic := '0';
    AW_A_I3	: in std_logic := '0';
    AW_A_I2	: in std_logic := '0';
    AW_A_I1	: in std_logic := '0';

    AW_BU_I2	: in std_logic := '0';
    AW_BU_I1	: in std_logic := '0';

    AW_CH_I4	: in std_logic := '0';
    AW_CH_I3	: in std_logic := '0';
    AW_CH_I2	: in std_logic := '0';
    AW_CH_I1	: in std_logic := '0';

    AW_IDS_I8	: in std_logic := '0';
    AW_IDS_I7	: in std_logic := '0';
    AW_IDS_I6	: in std_logic := '0';
    AW_IDS_I5	: in std_logic := '0';
    AW_IDS_I4	: in std_logic := '0';
    AW_IDS_I3	: in std_logic := '0';
    AW_IDS_I2	: in std_logic := '0';
    AW_IDS_I1	: in std_logic := '0';

    AW_LE_I4	: in std_logic := '0';
    AW_LE_I3	: in std_logic := '0';
    AW_LE_I2	: in std_logic := '0';
    AW_LE_I1	: in std_logic := '0';

    AW_LK_I2	: in std_logic := '0';
    AW_LK_I1	: in std_logic := '0';

    AW_PR_I3	: in std_logic := '0';
    AW_PR_I2	: in std_logic := '0';
    AW_PR_I1	: in std_logic := '0';

    AW_RYM_I	: in std_logic := '0';
    AW_RYP_I	: in std_logic := '0';

    AW_SZ_I3	: in std_logic := '0';
    AW_SZ_I2	: in std_logic := '0';
    AW_SZ_I1	: in std_logic := '0';

    AW_VD_I	: in std_logic := '0';

    B_IDM_I4	: in std_logic := '0';
    B_IDM_I3	: in std_logic := '0';
    B_IDM_I2	: in std_logic := '0';
    B_IDM_I1	: in std_logic := '0';

    B_IDP_I4	: in std_logic := '0';
    B_IDP_I3	: in std_logic := '0';
    B_IDP_I2	: in std_logic := '0';
    B_IDP_I1	: in std_logic := '0';

    B_RDY_I	: in std_logic := '0';

    B_RSPM_I2	: in std_logic := '0';
    B_RSPM_I1	: in std_logic := '0';

    B_RSPP_I2	: in std_logic := '0';
    B_RSPP_I1	: in std_logic := '0';

    B_VDM_I	: in std_logic := '0';
    B_VDP_I	: in std_logic := '0';

--    CAL_I5        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I4        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I3        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I2        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I1        : in  std_logic; --  calibration   5   [0:4]

    CDB_PW_I	: in std_logic := '0';
    CDB_RS_I	: in std_logic := '0';
    CFG_EE_I	: in std_logic := '0';
    CFG_IE_I	: in std_logic := '0';
    CFG_NM_I	: in std_logic := '0';
    CK_I	: in std_logic := '0';
--    CK_DR_I       : in  std_logic; --  clock_dr      1
    CS_PW_I	: in std_logic := '0';
    DB_E_I	: in std_logic := '0';
    DB_NCK_I	: in std_logic := '0';

    DB_RA_I20	: in std_logic := '0';
    DB_RA_I19	: in std_logic := '0';
    DB_RA_I18	: in std_logic := '0';
    DB_RA_I17	: in std_logic := '0';
    DB_RA_I16	: in std_logic := '0';
    DB_RA_I15	: in std_logic := '0';
    DB_RA_I14	: in std_logic := '0';
    DB_RA_I13	: in std_logic := '0';
    DB_RA_I12	: in std_logic := '0';
    DB_RA_I11	: in std_logic := '0';
    DB_RA_I10	: in std_logic := '0';
    DB_RA_I9	: in std_logic := '0';
    DB_RA_I8	: in std_logic := '0';
    DB_RA_I7	: in std_logic := '0';
    DB_RA_I6	: in std_logic := '0';
    DB_RA_I5	: in std_logic := '0';
    DB_RA_I4	: in std_logic := '0';
    DB_RA_I3	: in std_logic := '0';
    DB_RA_I2	: in std_logic := '0';
    DB_RA_I1	: in std_logic := '0';

    DB_RAV_I	: in std_logic := '0';

    DB_SA_I20	: in std_logic := '0';
    DB_SA_I19	: in std_logic := '0';
    DB_SA_I18	: in std_logic := '0';
    DB_SA_I17	: in std_logic := '0';
    DB_SA_I16	: in std_logic := '0';
    DB_SA_I15	: in std_logic := '0';
    DB_SA_I14	: in std_logic := '0';
    DB_SA_I13	: in std_logic := '0';
    DB_SA_I12	: in std_logic := '0';
    DB_SA_I11	: in std_logic := '0';
    DB_SA_I10	: in std_logic := '0';
    DB_SA_I9	: in std_logic := '0';
    DB_SA_I8	: in std_logic := '0';
    DB_SA_I7	: in std_logic := '0';
    DB_SA_I6	: in std_logic := '0';
    DB_SA_I5	: in std_logic := '0';
    DB_SA_I4	: in std_logic := '0';
    DB_SA_I3	: in std_logic := '0';
    DB_SA_I2	: in std_logic := '0';
    DB_SA_I1	: in std_logic := '0';

    DB_SAV_I	: in std_logic := '0';
    DEV_E_I	: in std_logic := '0';

    DFTS_I8	: in std_logic := '0';
    DFTS_I7	: in std_logic := '0';
    DFTS_I6	: in std_logic := '0';
    DFTS_I5	: in std_logic := '0';
    DFTS_I4	: in std_logic := '0';
    DFTS_I3	: in std_logic := '0';
    DFTS_I2	: in std_logic := '0';
    DFTS_I1	: in std_logic := '0';

    E_DB_I	: in std_logic := '0';
    ERR_R_I	: in std_logic := '0';
    EVENT_I	: in std_logic := '0';

    GID_I4	: in std_logic := '0';
    GID_I3	: in std_logic := '0';
    GID_I2	: in std_logic := '0';
    GID_I1	: in std_logic := '0';

    INIT_P_I	: in std_logic := '0';
    INIT_R_I	: in std_logic := '0';
    LOC_R_I	: in std_logic := '0';
--    LBK_E_I       : in  std_logic; --  loopback_en   1
--    LBK_MX_I      : in  std_logic; --  loopback_mux  1

--    MODE1_I3      : in  std_logic; --  mode1         3   [0:2]
--    MODE1_I2      : in  std_logic; --  mode1         3   [0:2]
--    MODE1_I1      : in  std_logic; --  mode1         3   [0:2]

--    MODE2_I3      : in  std_logic; --  mode2         3   [0:2]
--    MODE2_I2      : in  std_logic; --  mode2         3   [0:2]
--    MODE2_I1      : in  std_logic; --  mode2         3   [0:2]

--    MODE3_I3      : in  std_logic; --  mode3         3   [0:2]
--    MODE3_I2      : in  std_logic; --  mode3         3   [0:2]
--    MODE3_I1      : in  std_logic; --  mode3         3   [0:2]

    NCPUH_I	: in std_logic := '0';
    NET_RS_I	: in std_logic := '0';
    N_FIQ_I	: in std_logic := '0';
    N_IDE_I	: in std_logic := '0';
    N_IRQ_I	: in std_logic := '0';
    N_PRS_I	: in std_logic := '0';
    N_RS_I	: in std_logic := '0';
    N_SPRS_I	: in std_logic := '0';
    N_TRS_I	: in std_logic := '0';

    P_A_I29	: in std_logic := '0';
    P_A_I28	: in std_logic := '0';
    P_A_I27	: in std_logic := '0';
    P_A_I26	: in std_logic := '0';
    P_A_I25	: in std_logic := '0';
    P_A_I24	: in std_logic := '0';
    P_A_I23	: in std_logic := '0';
    P_A_I22	: in std_logic := '0';
    P_A_I21	: in std_logic := '0';
    P_A_I20	: in std_logic := '0';
    P_A_I19	: in std_logic := '0';
    P_A_I18	: in std_logic := '0';
    P_A_I17	: in std_logic := '0';
    P_A_I16	: in std_logic := '0';
    P_A_I15	: in std_logic := '0';
    P_A_I14	: in std_logic := '0';
    P_A_I13	: in std_logic := '0';
    P_A_I12	: in std_logic := '0';
    P_A_I11	: in std_logic := '0';
    P_A_I10	: in std_logic := '0';
    P_A_I9	: in std_logic := '0';
    P_A_I8	: in std_logic := '0';
    P_A_I7	: in std_logic := '0';
    P_A_I6	: in std_logic := '0';
    P_A_I5	: in std_logic := '0';
    P_A_I4	: in std_logic := '0';
    P_A_I3	: in std_logic := '0';
    P_A_I2	: in std_logic := '0';
    P_A_I1	: in std_logic := '0';

    P_ECC_I	: in std_logic := '0';
    PLVL_I	: in std_logic := '0';
    P_CK_E_I	: in std_logic := '0';
    P_CK_I	: in std_logic := '0';
    P_E_I	: in std_logic := '0';

    PPV_BS_I20	: in std_logic := '0';
    PPV_BS_I19	: in std_logic := '0';
    PPV_BS_I18	: in std_logic := '0';
    PPV_BS_I17	: in std_logic := '0';
    PPV_BS_I16	: in std_logic := '0';
    PPV_BS_I15	: in std_logic := '0';
    PPV_BS_I14	: in std_logic := '0';
    PPV_BS_I13	: in std_logic := '0';
    PPV_BS_I12	: in std_logic := '0';
    PPV_BS_I11	: in std_logic := '0';
    PPV_BS_I10	: in std_logic := '0';
    PPV_BS_I9	: in std_logic := '0';
    PPV_BS_I8	: in std_logic := '0';
    PPV_BS_I7	: in std_logic := '0';
    PPV_BS_I6	: in std_logic := '0';
    PPV_BS_I5	: in std_logic := '0';
    PPV_BS_I4	: in std_logic := '0';
    PPV_BS_I3	: in std_logic := '0';
    PPV_BS_I2	: in std_logic := '0';
    PPV_BS_I1	: in std_logic := '0';

    PPV_SZ_I5	: in std_logic := '0';
    PPV_SZ_I4	: in std_logic := '0';
    PPV_SZ_I3	: in std_logic := '0';
    PPV_SZ_I2	: in std_logic := '0';
    PPV_SZ_I1	: in std_logic := '0';

    PPX_BS_I20	: in std_logic := '0';
    PPX_BS_I19	: in std_logic := '0';
    PPX_BS_I18	: in std_logic := '0';
    PPX_BS_I17	: in std_logic := '0';
    PPX_BS_I16	: in std_logic := '0';
    PPX_BS_I15	: in std_logic := '0';
    PPX_BS_I14	: in std_logic := '0';
    PPX_BS_I13	: in std_logic := '0';
    PPX_BS_I12	: in std_logic := '0';
    PPX_BS_I11	: in std_logic := '0';
    PPX_BS_I10	: in std_logic := '0';
    PPX_BS_I9	: in std_logic := '0';
    PPX_BS_I8	: in std_logic := '0';
    PPX_BS_I7	: in std_logic := '0';
    PPX_BS_I6	: in std_logic := '0';
    PPX_BS_I5	: in std_logic := '0';
    PPX_BS_I4	: in std_logic := '0';
    PPX_BS_I3	: in std_logic := '0';
    PPX_BS_I2	: in std_logic := '0';
    PPX_BS_I1	: in std_logic := '0';

    PPX_SZ_I5	: in std_logic := '0';
    PPX_SZ_I4	: in std_logic := '0';
    PPX_SZ_I3	: in std_logic := '0';
    PPX_SZ_I2	: in std_logic := '0';
    PPX_SZ_I1	: in std_logic := '0';

    P_RS_I	: in std_logic := '0';
    P_SEL_I	: in std_logic := '0';

    PW_D_I32	: in std_logic := '0';
    PW_D_I31	: in std_logic := '0';
    PW_D_I30	: in std_logic := '0';
    PW_D_I29	: in std_logic := '0';
    PW_D_I28	: in std_logic := '0';
    PW_D_I27	: in std_logic := '0';
    PW_D_I26	: in std_logic := '0';
    PW_D_I25	: in std_logic := '0';
    PW_D_I24	: in std_logic := '0';
    PW_D_I23	: in std_logic := '0';
    PW_D_I22	: in std_logic := '0';
    PW_D_I21	: in std_logic := '0';
    PW_D_I20	: in std_logic := '0';
    PW_D_I19	: in std_logic := '0';
    PW_D_I18	: in std_logic := '0';
    PW_D_I17	: in std_logic := '0';
    PW_D_I16	: in std_logic := '0';
    PW_D_I15	: in std_logic := '0';
    PW_D_I14	: in std_logic := '0';
    PW_D_I13	: in std_logic := '0';
    PW_D_I12	: in std_logic := '0';
    PW_D_I11	: in std_logic := '0';
    PW_D_I10	: in std_logic := '0';
    PW_D_I9	: in std_logic := '0';
    PW_D_I8	: in std_logic := '0';
    PW_D_I7	: in std_logic := '0';
    PW_D_I6	: in std_logic := '0';
    PW_D_I5	: in std_logic := '0';
    PW_D_I4	: in std_logic := '0';
    PW_D_I3	: in std_logic := '0';
    PW_D_I2	: in std_logic := '0';
    PW_D_I1	: in std_logic := '0';

    PW_I	: in std_logic := '0';

    RAMCTL_I8	: in std_logic := '0';
    RAMCTL_I7	: in std_logic := '0';
    RAMCTL_I6	: in std_logic := '0';
    RAMCTL_I5	: in std_logic := '0';
    RAMCTL_I4	: in std_logic := '0';
    RAMCTL_I3	: in std_logic := '0';
    RAMCTL_I2	: in std_logic := '0';
    RAMCTL_I1	: in std_logic := '0';

    R_DM_I64	: in std_logic := '0';
    R_DM_I63	: in std_logic := '0';
    R_DM_I62	: in std_logic := '0';
    R_DM_I61	: in std_logic := '0';
    R_DM_I60	: in std_logic := '0';
    R_DM_I59	: in std_logic := '0';
    R_DM_I58	: in std_logic := '0';
    R_DM_I57	: in std_logic := '0';
    R_DM_I56	: in std_logic := '0';
    R_DM_I55	: in std_logic := '0';
    R_DM_I54	: in std_logic := '0';
    R_DM_I53	: in std_logic := '0';
    R_DM_I52	: in std_logic := '0';
    R_DM_I51	: in std_logic := '0';
    R_DM_I50	: in std_logic := '0';
    R_DM_I49	: in std_logic := '0';
    R_DM_I48	: in std_logic := '0';
    R_DM_I47	: in std_logic := '0';
    R_DM_I46	: in std_logic := '0';
    R_DM_I45	: in std_logic := '0';
    R_DM_I44	: in std_logic := '0';
    R_DM_I43	: in std_logic := '0';
    R_DM_I42	: in std_logic := '0';
    R_DM_I41	: in std_logic := '0';
    R_DM_I40	: in std_logic := '0';
    R_DM_I39	: in std_logic := '0';
    R_DM_I38	: in std_logic := '0';
    R_DM_I37	: in std_logic := '0';
    R_DM_I36	: in std_logic := '0';
    R_DM_I35	: in std_logic := '0';
    R_DM_I34	: in std_logic := '0';
    R_DM_I33	: in std_logic := '0';
    R_DM_I32	: in std_logic := '0';
    R_DM_I31	: in std_logic := '0';
    R_DM_I30	: in std_logic := '0';
    R_DM_I29	: in std_logic := '0';
    R_DM_I28	: in std_logic := '0';
    R_DM_I27	: in std_logic := '0';
    R_DM_I26	: in std_logic := '0';
    R_DM_I25	: in std_logic := '0';
    R_DM_I24	: in std_logic := '0';
    R_DM_I23	: in std_logic := '0';
    R_DM_I22	: in std_logic := '0';
    R_DM_I21	: in std_logic := '0';
    R_DM_I20	: in std_logic := '0';
    R_DM_I19	: in std_logic := '0';
    R_DM_I18	: in std_logic := '0';
    R_DM_I17	: in std_logic := '0';
    R_DM_I16	: in std_logic := '0';
    R_DM_I15	: in std_logic := '0';
    R_DM_I14	: in std_logic := '0';
    R_DM_I13	: in std_logic := '0';
    R_DM_I12	: in std_logic := '0';
    R_DM_I11	: in std_logic := '0';
    R_DM_I10	: in std_logic := '0';
    R_DM_I9	: in std_logic := '0';
    R_DM_I8	: in std_logic := '0';
    R_DM_I7	: in std_logic := '0';
    R_DM_I6	: in std_logic := '0';
    R_DM_I5	: in std_logic := '0';
    R_DM_I4	: in std_logic := '0';
    R_DM_I3	: in std_logic := '0';
    R_DM_I2	: in std_logic := '0';
    R_DM_I1	: in std_logic := '0';

    R_DP_I32	: in std_logic := '0';
    R_DP_I31	: in std_logic := '0';
    R_DP_I30	: in std_logic := '0';
    R_DP_I29	: in std_logic := '0';
    R_DP_I28	: in std_logic := '0';
    R_DP_I27	: in std_logic := '0';
    R_DP_I26	: in std_logic := '0';
    R_DP_I25	: in std_logic := '0';
    R_DP_I24	: in std_logic := '0';
    R_DP_I23	: in std_logic := '0';
    R_DP_I22	: in std_logic := '0';
    R_DP_I21	: in std_logic := '0';
    R_DP_I20	: in std_logic := '0';
    R_DP_I19	: in std_logic := '0';
    R_DP_I18	: in std_logic := '0';
    R_DP_I17	: in std_logic := '0';
    R_DP_I16	: in std_logic := '0';
    R_DP_I15	: in std_logic := '0';
    R_DP_I14	: in std_logic := '0';
    R_DP_I13	: in std_logic := '0';
    R_DP_I12	: in std_logic := '0';
    R_DP_I11	: in std_logic := '0';
    R_DP_I10	: in std_logic := '0';
    R_DP_I9	: in std_logic := '0';
    R_DP_I8	: in std_logic := '0';
    R_DP_I7	: in std_logic := '0';
    R_DP_I6	: in std_logic := '0';
    R_DP_I5	: in std_logic := '0';
    R_DP_I4	: in std_logic := '0';
    R_DP_I3	: in std_logic := '0';
    R_DP_I2	: in std_logic := '0';
    R_DP_I1	: in std_logic := '0';

--    RDY_I3        : in  std_logic; --  ready         3   [0:2]
--    RDY_I2        : in  std_logic; --  ready         3   [0:2]
--    RDY_I1        : in  std_logic; --  ready         3   [0:2]

    R_IDM_I4	: in std_logic := '0';
    R_IDM_I3	: in std_logic := '0';
    R_IDM_I2	: in std_logic := '0';
    R_IDM_I1	: in std_logic := '0';

    R_IDP_I4	: in std_logic := '0';
    R_IDP_I3	: in std_logic := '0';
    R_IDP_I2	: in std_logic := '0';
    R_IDP_I1	: in std_logic := '0';

    R_LSTM_I	: in std_logic := '0';
    R_LSTP_I	: in std_logic := '0';
    R_RDY_I	: in std_logic := '0';

    R_RSPM_I2	: in std_logic := '0';
    R_RSPM_I1	: in std_logic := '0';

    R_RSPP_I2	: in std_logic := '0';
    R_RSPP_I1	: in std_logic := '0';

    RS_BYP_I	: in std_logic := '0';
    R_VDM_I	: in std_logic := '0';
    R_VDP_I	: in std_logic := '0';
--    SCAN_E_I      : in  std_logic; --  scan_en       1
    SE_I	: in std_logic := '0';
--    SHF_DR_I      : in  std_logic; --  shift_dr      1
--    SH_I          : in  std_logic; --  shin          1
    SW_CK_I	: in std_logic := '0';
    SW_DI_I	: in std_logic := '0';
    T_DI_I	: in std_logic := '0';
    TE_INI_I	: in std_logic := '0';
--    TEST_E_I      : in  std_logic; --  test_en       1
--    UPD_DR_I      : in  std_logic; --  update_dr     1
    VINI_I	: in std_logic := '0';

    W_D_I64	: in std_logic := '0';
    W_D_I63	: in std_logic := '0';
    W_D_I62	: in std_logic := '0';
    W_D_I61	: in std_logic := '0';
    W_D_I60	: in std_logic := '0';
    W_D_I59	: in std_logic := '0';
    W_D_I58	: in std_logic := '0';
    W_D_I57	: in std_logic := '0';
    W_D_I56	: in std_logic := '0';
    W_D_I55	: in std_logic := '0';
    W_D_I54	: in std_logic := '0';
    W_D_I53	: in std_logic := '0';
    W_D_I52	: in std_logic := '0';
    W_D_I51	: in std_logic := '0';
    W_D_I50	: in std_logic := '0';
    W_D_I49	: in std_logic := '0';
    W_D_I48	: in std_logic := '0';
    W_D_I47	: in std_logic := '0';
    W_D_I46	: in std_logic := '0';
    W_D_I45	: in std_logic := '0';
    W_D_I44	: in std_logic := '0';
    W_D_I43	: in std_logic := '0';
    W_D_I42	: in std_logic := '0';
    W_D_I41	: in std_logic := '0';
    W_D_I40	: in std_logic := '0';
    W_D_I39	: in std_logic := '0';
    W_D_I38	: in std_logic := '0';
    W_D_I37	: in std_logic := '0';
    W_D_I36	: in std_logic := '0';
    W_D_I35	: in std_logic := '0';
    W_D_I34	: in std_logic := '0';
    W_D_I33	: in std_logic := '0';
    W_D_I32	: in std_logic := '0';
    W_D_I31	: in std_logic := '0';
    W_D_I30	: in std_logic := '0';
    W_D_I29	: in std_logic := '0';
    W_D_I28	: in std_logic := '0';
    W_D_I27	: in std_logic := '0';
    W_D_I26	: in std_logic := '0';
    W_D_I25	: in std_logic := '0';
    W_D_I24	: in std_logic := '0';
    W_D_I23	: in std_logic := '0';
    W_D_I22	: in std_logic := '0';
    W_D_I21	: in std_logic := '0';
    W_D_I20	: in std_logic := '0';
    W_D_I19	: in std_logic := '0';
    W_D_I18	: in std_logic := '0';
    W_D_I17	: in std_logic := '0';
    W_D_I16	: in std_logic := '0';
    W_D_I15	: in std_logic := '0';
    W_D_I14	: in std_logic := '0';
    W_D_I13	: in std_logic := '0';
    W_D_I12	: in std_logic := '0';
    W_D_I11	: in std_logic := '0';
    W_D_I10	: in std_logic := '0';
    W_D_I9	: in std_logic := '0';
    W_D_I8	: in std_logic := '0';
    W_D_I7	: in std_logic := '0';
    W_D_I6	: in std_logic := '0';
    W_D_I5	: in std_logic := '0';
    W_D_I4	: in std_logic := '0';
    W_D_I3	: in std_logic := '0';
    W_D_I2	: in std_logic := '0';
    W_D_I1	: in std_logic := '0';

    W_IDS_I8	: in std_logic := '0';
    W_IDS_I7	: in std_logic := '0';
    W_IDS_I6	: in std_logic := '0';
    W_IDS_I5	: in std_logic := '0';
    W_IDS_I4	: in std_logic := '0';
    W_IDS_I3	: in std_logic := '0';
    W_IDS_I2	: in std_logic := '0';
    W_IDS_I1	: in std_logic := '0';

    W_LST_I	: in std_logic := '0';
    W_RYM_I	: in std_logic := '0';
    W_RYP_I	: in std_logic := '0';

    W_SBS_I8	: in std_logic := '0';
    W_SBS_I7	: in std_logic := '0';
    W_SBS_I6	: in std_logic := '0';
    W_SBS_I5	: in std_logic := '0';
    W_SBS_I4	: in std_logic := '0';
    W_SBS_I3	: in std_logic := '0';
    W_SBS_I2	: in std_logic := '0';
    W_SBS_I1	: in std_logic := '0';

    W_VD_I	: in std_logic := '0';

    -- Outputs
    AR_AM_O32	: out std_logic := '0';
    AR_AM_O31	: out std_logic := '0';
    AR_AM_O30	: out std_logic := '0';
    AR_AM_O29	: out std_logic := '0';
    AR_AM_O28	: out std_logic := '0';
    AR_AM_O27	: out std_logic := '0';
    AR_AM_O26	: out std_logic := '0';
    AR_AM_O25	: out std_logic := '0';
    AR_AM_O24	: out std_logic := '0';
    AR_AM_O23	: out std_logic := '0';
    AR_AM_O22	: out std_logic := '0';
    AR_AM_O21	: out std_logic := '0';
    AR_AM_O20	: out std_logic := '0';
    AR_AM_O19	: out std_logic := '0';
    AR_AM_O18	: out std_logic := '0';
    AR_AM_O17	: out std_logic := '0';
    AR_AM_O16	: out std_logic := '0';
    AR_AM_O15	: out std_logic := '0';
    AR_AM_O14	: out std_logic := '0';
    AR_AM_O13	: out std_logic := '0';
    AR_AM_O12	: out std_logic := '0';
    AR_AM_O11	: out std_logic := '0';
    AR_AM_O10	: out std_logic := '0';
    AR_AM_O9	: out std_logic := '0';
    AR_AM_O8	: out std_logic := '0';
    AR_AM_O7	: out std_logic := '0';
    AR_AM_O6	: out std_logic := '0';
    AR_AM_O5	: out std_logic := '0';
    AR_AM_O4	: out std_logic := '0';
    AR_AM_O3	: out std_logic := '0';
    AR_AM_O2	: out std_logic := '0';
    AR_AM_O1	: out std_logic := '0';

    AR_AP_O32	: out std_logic := '0';
    AR_AP_O31	: out std_logic := '0';
    AR_AP_O30	: out std_logic := '0';
    AR_AP_O29	: out std_logic := '0';
    AR_AP_O28	: out std_logic := '0';
    AR_AP_O27	: out std_logic := '0';
    AR_AP_O26	: out std_logic := '0';
    AR_AP_O25	: out std_logic := '0';
    AR_AP_O24	: out std_logic := '0';
    AR_AP_O23	: out std_logic := '0';
    AR_AP_O22	: out std_logic := '0';
    AR_AP_O21	: out std_logic := '0';
    AR_AP_O20	: out std_logic := '0';
    AR_AP_O19	: out std_logic := '0';
    AR_AP_O18	: out std_logic := '0';
    AR_AP_O17	: out std_logic := '0';
    AR_AP_O16	: out std_logic := '0';
    AR_AP_O15	: out std_logic := '0';
    AR_AP_O14	: out std_logic := '0';
    AR_AP_O13	: out std_logic := '0';
    AR_AP_O12	: out std_logic := '0';
    AR_AP_O11	: out std_logic := '0';
    AR_AP_O10	: out std_logic := '0';
    AR_AP_O9	: out std_logic := '0';
    AR_AP_O8	: out std_logic := '0';
    AR_AP_O7	: out std_logic := '0';
    AR_AP_O6	: out std_logic := '0';
    AR_AP_O5	: out std_logic := '0';
    AR_AP_O4	: out std_logic := '0';
    AR_AP_O3	: out std_logic := '0';
    AR_AP_O2	: out std_logic := '0';
    AR_AP_O1	: out std_logic := '0';

    AR_BUM_O2	: out std_logic := '0';
    AR_BUM_O1	: out std_logic := '0';

    AR_BUP_O2	: out std_logic := '0';
    AR_BUP_O1	: out std_logic := '0';

    AR_CHM_O4	: out std_logic := '0';
    AR_CHM_O3	: out std_logic := '0';
    AR_CHM_O2	: out std_logic := '0';
    AR_CHM_O1	: out std_logic := '0';

    AR_CHP_O4	: out std_logic := '0';
    AR_CHP_O3	: out std_logic := '0';
    AR_CHP_O2	: out std_logic := '0';
    AR_CHP_O1	: out std_logic := '0';

    AR_IDM_O4	: out std_logic := '0';
    AR_IDM_O3	: out std_logic := '0';
    AR_IDM_O2	: out std_logic := '0';
    AR_IDM_O1	: out std_logic := '0';

    AR_IDP_O4	: out std_logic := '0';
    AR_IDP_O3	: out std_logic := '0';
    AR_IDP_O2	: out std_logic := '0';
    AR_IDP_O1	: out std_logic := '0';

    AR_INM_O4	: out std_logic := '0';
    AR_INM_O3	: out std_logic := '0';
    AR_INM_O2	: out std_logic := '0';
    AR_INM_O1	: out std_logic := '0';

    AR_LEM_O4	: out std_logic := '0';
    AR_LEM_O3	: out std_logic := '0';
    AR_LEM_O2	: out std_logic := '0';
    AR_LEM_O1	: out std_logic := '0';

    AR_LEP_O4	: out std_logic := '0';
    AR_LEP_O3	: out std_logic := '0';
    AR_LEP_O2	: out std_logic := '0';
    AR_LEP_O1	: out std_logic := '0';

    AR_LKM_O2	: out std_logic := '0';
    AR_LKM_O1	: out std_logic := '0';

    AR_LKP_O2	: out std_logic := '0';
    AR_LKP_O1	: out std_logic := '0';

    AR_PRM_O3	: out std_logic := '0';
    AR_PRM_O2	: out std_logic := '0';
    AR_PRM_O1	: out std_logic := '0';

    AR_PRP_O3	: out std_logic := '0';
    AR_PRP_O2	: out std_logic := '0';
    AR_PRP_O1	: out std_logic := '0';

    AR_RDY_O	: out std_logic := '0';
    AR_SHM_O	: out std_logic := '0';

    AR_SZM_O3	: out std_logic := '0';
    AR_SZM_O2	: out std_logic := '0';
    AR_SZM_O1	: out std_logic := '0';

    AR_SZP_O3	: out std_logic := '0';
    AR_SZP_O2	: out std_logic := '0';
    AR_SZP_O1	: out std_logic := '0';

    AR_VDM_O	: out std_logic := '0';
    AR_VDP_O	: out std_logic := '0';

    AW_AM_O32	: out std_logic := '0';
    AW_AM_O31	: out std_logic := '0';
    AW_AM_O30	: out std_logic := '0';
    AW_AM_O29	: out std_logic := '0';
    AW_AM_O28	: out std_logic := '0';
    AW_AM_O27	: out std_logic := '0';
    AW_AM_O26	: out std_logic := '0';
    AW_AM_O25	: out std_logic := '0';
    AW_AM_O24	: out std_logic := '0';
    AW_AM_O23	: out std_logic := '0';
    AW_AM_O22	: out std_logic := '0';
    AW_AM_O21	: out std_logic := '0';
    AW_AM_O20	: out std_logic := '0';
    AW_AM_O19	: out std_logic := '0';
    AW_AM_O18	: out std_logic := '0';
    AW_AM_O17	: out std_logic := '0';
    AW_AM_O16	: out std_logic := '0';
    AW_AM_O15	: out std_logic := '0';
    AW_AM_O14	: out std_logic := '0';
    AW_AM_O13	: out std_logic := '0';
    AW_AM_O12	: out std_logic := '0';
    AW_AM_O11	: out std_logic := '0';
    AW_AM_O10	: out std_logic := '0';
    AW_AM_O9	: out std_logic := '0';
    AW_AM_O8	: out std_logic := '0';
    AW_AM_O7	: out std_logic := '0';
    AW_AM_O6	: out std_logic := '0';
    AW_AM_O5	: out std_logic := '0';
    AW_AM_O4	: out std_logic := '0';
    AW_AM_O3	: out std_logic := '0';
    AW_AM_O2	: out std_logic := '0';
    AW_AM_O1	: out std_logic := '0';

    AW_AP_O32	: out std_logic := '0';
    AW_AP_O31	: out std_logic := '0';
    AW_AP_O30	: out std_logic := '0';
    AW_AP_O29	: out std_logic := '0';
    AW_AP_O28	: out std_logic := '0';
    AW_AP_O27	: out std_logic := '0';
    AW_AP_O26	: out std_logic := '0';
    AW_AP_O25	: out std_logic := '0';
    AW_AP_O24	: out std_logic := '0';
    AW_AP_O23	: out std_logic := '0';
    AW_AP_O22	: out std_logic := '0';
    AW_AP_O21	: out std_logic := '0';
    AW_AP_O20	: out std_logic := '0';
    AW_AP_O19	: out std_logic := '0';
    AW_AP_O18	: out std_logic := '0';
    AW_AP_O17	: out std_logic := '0';
    AW_AP_O16	: out std_logic := '0';
    AW_AP_O15	: out std_logic := '0';
    AW_AP_O14	: out std_logic := '0';
    AW_AP_O13	: out std_logic := '0';
    AW_AP_O12	: out std_logic := '0';
    AW_AP_O11	: out std_logic := '0';
    AW_AP_O10	: out std_logic := '0';
    AW_AP_O9	: out std_logic := '0';
    AW_AP_O8	: out std_logic := '0';
    AW_AP_O7	: out std_logic := '0';
    AW_AP_O6	: out std_logic := '0';
    AW_AP_O5	: out std_logic := '0';
    AW_AP_O4	: out std_logic := '0';
    AW_AP_O3	: out std_logic := '0';
    AW_AP_O2	: out std_logic := '0';
    AW_AP_O1	: out std_logic := '0';

    AW_BUM_O2	: out std_logic := '0';
    AW_BUM_O1	: out std_logic := '0';

    AW_BUP_O2	: out std_logic := '0';
    AW_BUP_O1	: out std_logic := '0';

    AW_CHM_O4	: out std_logic := '0';
    AW_CHM_O3	: out std_logic := '0';
    AW_CHM_O2	: out std_logic := '0';
    AW_CHM_O1	: out std_logic := '0';

    AW_CHP_O4	: out std_logic := '0';
    AW_CHP_O3	: out std_logic := '0';
    AW_CHP_O2	: out std_logic := '0';
    AW_CHP_O1	: out std_logic := '0';

    AW_IDM_O4	: out std_logic := '0';
    AW_IDM_O3	: out std_logic := '0';
    AW_IDM_O2	: out std_logic := '0';
    AW_IDM_O1	: out std_logic := '0';

    AW_IDP_O4	: out std_logic := '0';
    AW_IDP_O3	: out std_logic := '0';
    AW_IDP_O2	: out std_logic := '0';
    AW_IDP_O1	: out std_logic := '0';

    AW_INM_O4	: out std_logic := '0';
    AW_INM_O3	: out std_logic := '0';
    AW_INM_O2	: out std_logic := '0';
    AW_INM_O1	: out std_logic := '0';

    AW_LEM_O4	: out std_logic := '0';
    AW_LEM_O3	: out std_logic := '0';
    AW_LEM_O2	: out std_logic := '0';
    AW_LEM_O1	: out std_logic := '0';

    AW_LEP_O4	: out std_logic := '0';
    AW_LEP_O3	: out std_logic := '0';
    AW_LEP_O2	: out std_logic := '0';
    AW_LEP_O1	: out std_logic := '0';

    AW_LKM_O2	: out std_logic := '0';
    AW_LKM_O1	: out std_logic := '0';

    AW_LKP_O2	: out std_logic := '0';
    AW_LKP_O1	: out std_logic := '0';

    AW_PRM_O3	: out std_logic := '0';
    AW_PRM_O2	: out std_logic := '0';
    AW_PRM_O1	: out std_logic := '0';

    AW_PRP_O3	: out std_logic := '0';
    AW_PRP_O2	: out std_logic := '0';
    AW_PRP_O1	: out std_logic := '0';

    AW_RDY_O	: out std_logic := '0';
    AW_SHM_O	: out std_logic := '0';

    AW_SZM_O3	: out std_logic := '0';
    AW_SZM_O2	: out std_logic := '0';
    AW_SZM_O1	: out std_logic := '0';

    AW_SZP_O3	: out std_logic := '0';
    AW_SZP_O2	: out std_logic := '0';
    AW_SZP_O1	: out std_logic := '0';

    AW_VDM_O	: out std_logic := '0';
    AW_VDP_O	: out std_logic := '0';

    B_IDS_O8	: out std_logic := '0';
    B_IDS_O7	: out std_logic := '0';
    B_IDS_O6	: out std_logic := '0';
    B_IDS_O5	: out std_logic := '0';
    B_IDS_O4	: out std_logic := '0';
    B_IDS_O3	: out std_logic := '0';
    B_IDS_O2	: out std_logic := '0';
    B_IDS_O1	: out std_logic := '0';

    B_RDYM_O	: out std_logic := '0';
    B_RDYP_O	: out std_logic := '0';

    B_RSP_O2	: out std_logic := '0';
    B_RSP_O1	: out std_logic := '0';

    B_VD_O	: out std_logic := '0';

--    CAL_O5        : out std_logic; --  calibration         5   [0:4]
--    CAL_O4        : out std_logic; --  calibration         5   [0:4]
--    CAL_O3        : out std_logic; --  calibration         5   [0:4]
--    CAL_O2        : out std_logic; --  calibration         5   [0:4]
--    CAL_O1        : out std_logic; --  calibration         5   [0:4]

    CDB_PW_O	: out std_logic := '0';
    CDB_RS_O	: out std_logic := '0';
--    CK_DR_O       : out std_logic; --  clock_dr            1
    COM_RX_O	: out std_logic := '0';
    COM_TX_O	: out std_logic := '0';
    CS_PW_O	: out std_logic := '0';
    DB_ACK_O	: out std_logic := '0';
    DB_NPD_O	: out std_logic := '0';
    DB_RS_O	: out std_logic := '0';

    DFTS_O8	: out std_logic := '0';
    DFTS_O7	: out std_logic := '0';
    DFTS_O6	: out std_logic := '0';
    DFTS_O5	: out std_logic := '0';
    DFTS_O4	: out std_logic := '0';
    DFTS_O3	: out std_logic := '0';
    DFTS_O2	: out std_logic := '0';
    DFTS_O1	: out std_logic := '0';

    ET_ASC_O8	: out std_logic := '0';
    ET_ASC_O7	: out std_logic := '0';
    ET_ASC_O6	: out std_logic := '0';
    ET_ASC_O5	: out std_logic := '0';
    ET_ASC_O4	: out std_logic := '0';
    ET_ASC_O3	: out std_logic := '0';
    ET_ASC_O2	: out std_logic := '0';
    ET_ASC_O1	: out std_logic := '0';

    ET_E_O	: out std_logic := '0';

    ET_EXT_O2	: out std_logic := '0';
    ET_EXT_O1	: out std_logic := '0';

    EVENT_O	: out std_logic := '0';
    FP_DZC_O	: out std_logic := '0';
    FP_IDC_O	: out std_logic := '0';
    FP_IOC_O	: out std_logic := '0';
    FP_IXC_O	: out std_logic := '0';
    FP_OFC_O	: out std_logic := '0';
    FP_UFC_O	: out std_logic := '0';
    JTAG_O	: out std_logic := '0';
--    LBK_E_O       : out std_logic; --  loopback_en         1
--    LBK_MX_O      : out std_logic; --  loopback_mux        1

--    MODE1_O2      : out std_logic; --  mode1               3   [0:2]
--    MODE1_O1      : out std_logic; --  mode1               3   [0:2]

--    MODE2_O2      : out std_logic; --  mode2               3   [0:2]
--    MODE2_O1      : out std_logic; --  mode2               3   [0:2]

--    MODE3_O2      : out std_logic; --  mode3               3   [0:2]
--    MODE3_O1      : out std_logic; --  mode3               3   [0:2]

    N_CKST_O	: out std_logic := '0';
    N_PMU_O	: out std_logic := '0';
    N_TDO_O	: out std_logic := '0';
    N_VFIQ_O	: out std_logic := '0';
    N_VIRQ_O	: out std_logic := '0';
    N_VRST_O	: out std_logic := '0';
    N_EPST_O	: out std_logic := '0';
    N_IPST_O	: out std_logic := '0';

    P_RD_O32	: out std_logic := '0';
    P_RD_O31	: out std_logic := '0';
    P_RD_O30	: out std_logic := '0';
    P_RD_O29	: out std_logic := '0';
    P_RD_O28	: out std_logic := '0';
    P_RD_O27	: out std_logic := '0';
    P_RD_O26	: out std_logic := '0';
    P_RD_O25	: out std_logic := '0';
    P_RD_O24	: out std_logic := '0';
    P_RD_O23	: out std_logic := '0';
    P_RD_O22	: out std_logic := '0';
    P_RD_O21	: out std_logic := '0';
    P_RD_O20	: out std_logic := '0';
    P_RD_O19	: out std_logic := '0';
    P_RD_O18	: out std_logic := '0';
    P_RD_O17	: out std_logic := '0';
    P_RD_O16	: out std_logic := '0';
    P_RD_O15	: out std_logic := '0';
    P_RD_O14	: out std_logic := '0';
    P_RD_O13	: out std_logic := '0';
    P_RD_O12	: out std_logic := '0';
    P_RD_O11	: out std_logic := '0';
    P_RD_O10	: out std_logic := '0';
    P_RD_O9	: out std_logic := '0';
    P_RD_O8	: out std_logic := '0';
    P_RD_O7	: out std_logic := '0';
    P_RD_O6	: out std_logic := '0';
    P_RD_O5	: out std_logic := '0';
    P_RD_O4	: out std_logic := '0';
    P_RD_O3	: out std_logic := '0';
    P_RD_O2	: out std_logic := '0';
    P_RD_O1	: out std_logic := '0';

    P_RDY_O	: out std_logic := '0';
    P_VER_O	: out std_logic := '0';

    RD_O64	: out std_logic := '0';
    RD_O63	: out std_logic := '0';
    RD_O62	: out std_logic := '0';
    RD_O61	: out std_logic := '0';
    RD_O60	: out std_logic := '0';
    RD_O59	: out std_logic := '0';
    RD_O58	: out std_logic := '0';
    RD_O57	: out std_logic := '0';
    RD_O56	: out std_logic := '0';
    RD_O55	: out std_logic := '0';
    RD_O54	: out std_logic := '0';
    RD_O53	: out std_logic := '0';
    RD_O52	: out std_logic := '0';
    RD_O51	: out std_logic := '0';
    RD_O50	: out std_logic := '0';
    RD_O49	: out std_logic := '0';
    RD_O48	: out std_logic := '0';
    RD_O47	: out std_logic := '0';
    RD_O46	: out std_logic := '0';
    RD_O45	: out std_logic := '0';
    RD_O44	: out std_logic := '0';
    RD_O43	: out std_logic := '0';
    RD_O42	: out std_logic := '0';
    RD_O41	: out std_logic := '0';
    RD_O40	: out std_logic := '0';
    RD_O39	: out std_logic := '0';
    RD_O38	: out std_logic := '0';
    RD_O37	: out std_logic := '0';
    RD_O36	: out std_logic := '0';
    RD_O35	: out std_logic := '0';
    RD_O34	: out std_logic := '0';
    RD_O33	: out std_logic := '0';
    RD_O32	: out std_logic := '0';
    RD_O31	: out std_logic := '0';
    RD_O30	: out std_logic := '0';
    RD_O29	: out std_logic := '0';
    RD_O28	: out std_logic := '0';
    RD_O27	: out std_logic := '0';
    RD_O26	: out std_logic := '0';
    RD_O25	: out std_logic := '0';
    RD_O24	: out std_logic := '0';
    RD_O23	: out std_logic := '0';
    RD_O22	: out std_logic := '0';
    RD_O21	: out std_logic := '0';
    RD_O20	: out std_logic := '0';
    RD_O19	: out std_logic := '0';
    RD_O18	: out std_logic := '0';
    RD_O17	: out std_logic := '0';
    RD_O16	: out std_logic := '0';
    RD_O15	: out std_logic := '0';
    RD_O14	: out std_logic := '0';
    RD_O13	: out std_logic := '0';
    RD_O12	: out std_logic := '0';
    RD_O11	: out std_logic := '0';
    RD_O10	: out std_logic := '0';
    RD_O9	: out std_logic := '0';
    RD_O8	: out std_logic := '0';
    RD_O7	: out std_logic := '0';
    RD_O6	: out std_logic := '0';
    RD_O5	: out std_logic := '0';
    RD_O4	: out std_logic := '0';
    RD_O3	: out std_logic := '0';
    RD_O2	: out std_logic := '0';
    RD_O1	: out std_logic := '0';

--    RDY_O3        : out std_logic; --  ready               3   [0:2]
--    RDY_O2        : out std_logic; --  ready               3   [0:2]
--    RDY_O1        : out std_logic; --  ready               3   [0:2]

    R_IDS_O8	: out std_logic := '0';
    R_IDS_O7	: out std_logic := '0';
    R_IDS_O6	: out std_logic := '0';
    R_IDS_O5	: out std_logic := '0';
    R_IDS_O4	: out std_logic := '0';
    R_IDS_O3	: out std_logic := '0';
    R_IDS_O2	: out std_logic := '0';
    R_IDS_O1	: out std_logic := '0';

    R_LST_O	: out std_logic := '0';
    R_RDYM_O	: out std_logic := '0';
    R_RDYP_O	: out std_logic := '0';

    R_RSP_O2	: out std_logic := '0';
    R_RSP_O1	: out std_logic := '0';

    R_VD_O	: out std_logic := '0';
--    SCAN_E_O      : out std_logic; --  scan_en             1
--    SHF_DR_O      : out std_logic; --  shift_dr            1
--    SHOUT_O       : out std_logic; --  shout               1
    SWDO_O	: out std_logic := '0';
    SWDO_E_O	: out std_logic := '0';
    TDO_O	: out std_logic := '0';
--    TEST_E_O      : out std_logic; --  test_en             1
    T_CK_O	: out std_logic := '0';
    T_CTL_O	: out std_logic := '0';

    T_DATA_O32	: out std_logic := '0';
    T_DATA_O31	: out std_logic := '0';
    T_DATA_O30	: out std_logic := '0';
    T_DATA_O29	: out std_logic := '0';
    T_DATA_O28	: out std_logic := '0';
    T_DATA_O27	: out std_logic := '0';
    T_DATA_O26	: out std_logic := '0';
    T_DATA_O25	: out std_logic := '0';
    T_DATA_O24	: out std_logic := '0';
    T_DATA_O23	: out std_logic := '0';
    T_DATA_O22	: out std_logic := '0';
    T_DATA_O21	: out std_logic := '0';
    T_DATA_O20	: out std_logic := '0';
    T_DATA_O19	: out std_logic := '0';
    T_DATA_O18	: out std_logic := '0';
    T_DATA_O17	: out std_logic := '0';
    T_DATA_O16	: out std_logic := '0';
    T_DATA_O15	: out std_logic := '0';
    T_DATA_O14	: out std_logic := '0';
    T_DATA_O13	: out std_logic := '0';
    T_DATA_O12	: out std_logic := '0';
    T_DATA_O11	: out std_logic := '0';
    T_DATA_O10	: out std_logic := '0';
    T_DATA_O9	: out std_logic := '0';
    T_DATA_O8	: out std_logic := '0';
    T_DATA_O7	: out std_logic := '0';
    T_DATA_O6	: out std_logic := '0';
    T_DATA_O5	: out std_logic := '0';
    T_DATA_O4	: out std_logic := '0';
    T_DATA_O3	: out std_logic := '0';
    T_DATA_O2	: out std_logic := '0';
    T_DATA_O1	: out std_logic := '0';

--    UPD_DR_O      : out std_logic; --  update_dr           1

    W_DM_O64	: out std_logic := '0';
    W_DM_O63	: out std_logic := '0';
    W_DM_O62	: out std_logic := '0';
    W_DM_O61	: out std_logic := '0';
    W_DM_O60	: out std_logic := '0';
    W_DM_O59	: out std_logic := '0';
    W_DM_O58	: out std_logic := '0';
    W_DM_O57	: out std_logic := '0';
    W_DM_O56	: out std_logic := '0';
    W_DM_O55	: out std_logic := '0';
    W_DM_O54	: out std_logic := '0';
    W_DM_O53	: out std_logic := '0';
    W_DM_O52	: out std_logic := '0';
    W_DM_O51	: out std_logic := '0';
    W_DM_O50	: out std_logic := '0';
    W_DM_O49	: out std_logic := '0';
    W_DM_O48	: out std_logic := '0';
    W_DM_O47	: out std_logic := '0';
    W_DM_O46	: out std_logic := '0';
    W_DM_O45	: out std_logic := '0';
    W_DM_O44	: out std_logic := '0';
    W_DM_O43	: out std_logic := '0';
    W_DM_O42	: out std_logic := '0';
    W_DM_O41	: out std_logic := '0';
    W_DM_O40	: out std_logic := '0';
    W_DM_O39	: out std_logic := '0';
    W_DM_O38	: out std_logic := '0';
    W_DM_O37	: out std_logic := '0';
    W_DM_O36	: out std_logic := '0';
    W_DM_O35	: out std_logic := '0';
    W_DM_O34	: out std_logic := '0';
    W_DM_O33	: out std_logic := '0';
    W_DM_O32	: out std_logic := '0';
    W_DM_O31	: out std_logic := '0';
    W_DM_O30	: out std_logic := '0';
    W_DM_O29	: out std_logic := '0';
    W_DM_O28	: out std_logic := '0';
    W_DM_O27	: out std_logic := '0';
    W_DM_O26	: out std_logic := '0';
    W_DM_O25	: out std_logic := '0';
    W_DM_O24	: out std_logic := '0';
    W_DM_O23	: out std_logic := '0';
    W_DM_O22	: out std_logic := '0';
    W_DM_O21	: out std_logic := '0';
    W_DM_O20	: out std_logic := '0';
    W_DM_O19	: out std_logic := '0';
    W_DM_O18	: out std_logic := '0';
    W_DM_O17	: out std_logic := '0';
    W_DM_O16	: out std_logic := '0';
    W_DM_O15	: out std_logic := '0';
    W_DM_O14	: out std_logic := '0';
    W_DM_O13	: out std_logic := '0';
    W_DM_O12	: out std_logic := '0';
    W_DM_O11	: out std_logic := '0';
    W_DM_O10	: out std_logic := '0';
    W_DM_O9	: out std_logic := '0';
    W_DM_O8	: out std_logic := '0';
    W_DM_O7	: out std_logic := '0';
    W_DM_O6	: out std_logic := '0';
    W_DM_O5	: out std_logic := '0';
    W_DM_O4	: out std_logic := '0';
    W_DM_O3	: out std_logic := '0';
    W_DM_O2	: out std_logic := '0';
    W_DM_O1	: out std_logic := '0';

    W_DP_O32	: out std_logic := '0';
    W_DP_O31	: out std_logic := '0';
    W_DP_O30	: out std_logic := '0';
    W_DP_O29	: out std_logic := '0';
    W_DP_O28	: out std_logic := '0';
    W_DP_O27	: out std_logic := '0';
    W_DP_O26	: out std_logic := '0';
    W_DP_O25	: out std_logic := '0';
    W_DP_O24	: out std_logic := '0';
    W_DP_O23	: out std_logic := '0';
    W_DP_O22	: out std_logic := '0';
    W_DP_O21	: out std_logic := '0';
    W_DP_O20	: out std_logic := '0';
    W_DP_O19	: out std_logic := '0';
    W_DP_O18	: out std_logic := '0';
    W_DP_O17	: out std_logic := '0';
    W_DP_O16	: out std_logic := '0';
    W_DP_O15	: out std_logic := '0';
    W_DP_O14	: out std_logic := '0';
    W_DP_O13	: out std_logic := '0';
    W_DP_O12	: out std_logic := '0';
    W_DP_O11	: out std_logic := '0';
    W_DP_O10	: out std_logic := '0';
    W_DP_O9	: out std_logic := '0';
    W_DP_O8	: out std_logic := '0';
    W_DP_O7	: out std_logic := '0';
    W_DP_O6	: out std_logic := '0';
    W_DP_O5	: out std_logic := '0';
    W_DP_O4	: out std_logic := '0';
    W_DP_O3	: out std_logic := '0';
    W_DP_O2	: out std_logic := '0';
    W_DP_O1	: out std_logic := '0';

    W_IDM_O4	: out std_logic := '0';
    W_IDM_O3	: out std_logic := '0';
    W_IDM_O2	: out std_logic := '0';
    W_IDM_O1	: out std_logic := '0';

    W_IDP_O4	: out std_logic := '0';
    W_IDP_O3	: out std_logic := '0';
    W_IDP_O2	: out std_logic := '0';
    W_IDP_O1	: out std_logic := '0';

    W_LSTM_O	: out std_logic := '0';
    W_LSTP_O	: out std_logic := '0';
    W_RDY_O	: out std_logic := '0';

    W_SBM_O8	: out std_logic := '0';
    W_SBM_O7	: out std_logic := '0';
    W_SBM_O6	: out std_logic := '0';
    W_SBM_O5	: out std_logic := '0';
    W_SBM_O4	: out std_logic := '0';
    W_SBM_O3	: out std_logic := '0';
    W_SBM_O2	: out std_logic := '0';
    W_SBM_O1	: out std_logic := '0';

    W_SBP_O4	: out std_logic := '0';
    W_SBP_O3	: out std_logic := '0';
    W_SBP_O2	: out std_logic := '0';
    W_SBP_O1	: out std_logic := '0';

    W_VDM_O	: out std_logic := '0';
    W_VDP_O	: out std_logic := '0'
);
end component NX_R5_L;

component NX_R5_L_WRAP is
port (
    -- Inputs
    A_CKEM_I	: in std_logic := '0';
    A_CKEP_I	: in std_logic := '0';
    A_CKES_I	: in std_logic := '0';
    AR_A_I	: in std_logic_vector(31 downto 0) := (others => '0');
    AR_BU_I	: in std_logic_vector(1 downto 0) := (others => '0');
    AR_CH_I	: in std_logic_vector(3 downto 0) := (others => '0');
    AR_IDS_I	: in std_logic_vector(7 downto 0) := (others => '0');
    AR_LE_I	: in std_logic_vector(3 downto 0) := (others => '0');
    AR_LK_I	: in std_logic_vector(1 downto 0) := (others => '0');
    AR_PR_I	: in std_logic_vector(2 downto 0) := (others => '0');
    AR_RYM_I	: in std_logic := '0';
    AR_RYP_I	: in std_logic := '0';
    AR_SZ_I	: in std_logic_vector(2 downto 0) := (others => '0');
    AR_VD_I	: in std_logic := '0';
    AT_RS_I	: in std_logic := '0';
    AW_A_I	: in std_logic_vector(31 downto 0) := (others => '0');
    AW_BU_I	: in std_logic_vector(1 downto 0) := (others => '0');
    AW_CH_I	: in std_logic_vector(3 downto 0) := (others => '0');
    AW_IDS_I	: in std_logic_vector(7 downto 0) := (others => '0');
    AW_LE_I	: in std_logic_vector(3 downto 0) := (others => '0');
    AW_LK_I	: in std_logic_vector(1 downto 0) := (others => '0');
    AW_PR_I	: in std_logic_vector(2 downto 0) := (others => '0');
    AW_RYM_I	: in std_logic := '0';
    AW_RYP_I	: in std_logic := '0';
    AW_SZ_I	: in std_logic_vector(2 downto 0) := (others => '0');
    AW_VD_I	: in std_logic := '0';
    B_IDM_I	: in std_logic_vector(3 downto 0) := (others => '0');
    B_IDP_I	: in std_logic_vector(3 downto 0) := (others => '0');
    B_RDY_I	: in std_logic := '0';
    B_RSPM_I	: in std_logic_vector(1 downto 0) := (others => '0');
    B_RSPP_I	: in std_logic_vector(1 downto 0) := (others => '0');
    B_VDM_I	: in std_logic := '0';
    B_VDP_I	: in std_logic := '0';
    --	CAL_I : std_logic_vector(4 downto 0) := (others => '0');
    CDB_PW_I	: in std_logic := '0';
    CDB_RS_I	: in std_logic := '0';
    CFG_EE_I	: in std_logic := '0';
    CFG_IE_I	: in std_logic := '0';
    CFG_NM_I	: in std_logic := '0';
    CK_I	: in std_logic := '0';
--    CK_DR_I     : in  std_logic;                      --  clock_dr      1
    CS_PW_I	: in std_logic := '0';
    DB_E_I	: in std_logic := '0';
    DB_NCK_I	: in std_logic := '0';
    DB_RA_I	: in std_logic_vector(19 downto 0) := (others => '0');
    DB_RAV_I	: in std_logic := '0';
    DB_SA_I	: in std_logic_vector(19 downto 0) := (others => '0');
    DB_SAV_I	: in std_logic := '0';
    DEV_E_I	: in std_logic := '0';
    DFTS_I	: in std_logic_vector(7 downto 0) := (others => '0');
    E_DB_I	: in std_logic := '0';
    ERR_R_I	: in std_logic := '0';
    EVENT_I	: in std_logic := '0';
    GID_I	: in std_logic_vector(3 downto 0) := (others => '0');
    INIT_P_I	: in std_logic := '0';
    INIT_R_I	: in std_logic := '0';
    LOC_R_I	: in std_logic := '0';
--    LBK_E_I     : in  std_logic;                      --  loopback_en   1
--    LBK_MX_I    : in  std_logic;                      --  loopback_mux  1
    --	MODE1_I : std_logic_vector(2 downto 0) := (others => '0');
    --	MODE2_I : std_logic_vector(2 downto 0) := (others => '0');
    --	MODE3_I : std_logic_vector(2 downto 0) := (others => '0');
    NCPUH_I	: in std_logic := '0';
    NET_RS_I	: in std_logic := '0';
    N_FIQ_I	: in std_logic := '0';
    N_IDE_I	: in std_logic := '0';
    N_IRQ_I	: in std_logic := '0';
    N_PRS_I	: in std_logic := '0';
    N_RS_I	: in std_logic := '0';
    N_SPRS_I	: in std_logic := '0';
    N_TRS_I	: in std_logic := '0';
    P_A_I	: in std_logic_vector(28 downto 0) := (others => '0');
    P_ECC_I	: in std_logic := '0';
    PLVL_I	: in std_logic := '0';
    P_CK_E_I	: in std_logic := '0';
    P_CK_I	: in std_logic := '0';
    P_E_I	: in std_logic := '0';
    PPV_BS_I	: in std_logic_vector(19 downto 0) := (others => '0');
    PPV_SZ_I	: in std_logic_vector(4 downto 0) := (others => '0');
    PPX_BS_I	: in std_logic_vector(19 downto 0) := (others => '0');
    PPX_SZ_I	: in std_logic_vector(4 downto 0) := (others => '0');
    P_RS_I	: in std_logic := '0';
    P_SEL_I	: in std_logic := '0';
    PW_D_I	: in std_logic_vector(31 downto 0) := (others => '0');
    PW_I	: in std_logic := '0';
    RAMCTL_I	: in std_logic_vector(7 downto 0) := (others => '0');
    R_DM_I	: in std_logic_vector(63 downto 0) := (others => '0');
    R_DP_I	: in std_logic_vector(31 downto 0) := (others => '0');
    --	RDY_I : std_logic_vector(2 downto 0) := (others => '0');
    R_IDM_I	: in std_logic_vector(3 downto 0) := (others => '0');
    R_IDP_I	: in std_logic_vector(3 downto 0) := (others => '0');
    R_LSTM_I	: in std_logic := '0';
    R_LSTP_I	: in std_logic := '0';
    R_RDY_I	: in std_logic := '0';
    R_RSPM_I	: in std_logic_vector(1 downto 0) := (others => '0');
    R_RSPP_I	: in std_logic_vector(1 downto 0) := (others => '0');
    RS_BYP_I	: in std_logic := '0';
    R_VDM_I	: in std_logic := '0';
    R_VDP_I	: in std_logic := '0';
--    SCAN_E_I    : in  std_logic;                      --  scan_en       1
    SE_I	: in std_logic := '0';
--    SHF_DR_I    : in  std_logic;                      --  shift_dr      1
--    SH_I        : in  std_logic;                      --  shin          1
    SW_CK_I	: in std_logic := '0';
    SW_DI_I	: in std_logic := '0';
    T_DI_I	: in std_logic := '0';
    TE_INI_I	: in std_logic := '0';
--    TEST_E_I    : in  std_logic;                      --  test_en       1
--    UPD_DR_I    : in  std_logic;                      --  update_dr     1
    VINI_I	: in std_logic := '0';
    W_D_I	: in std_logic_vector(63 downto 0) := (others => '0');
    W_IDS_I	: in std_logic_vector(7 downto 0) := (others => '0');
    W_LST_I	: in std_logic := '0';
    W_RYM_I	: in std_logic := '0';
    W_RYP_I	: in std_logic := '0';
    W_SBS_I	: in std_logic_vector(7 downto 0) := (others => '0');
    W_VD_I	: in std_logic := '0';

    -- Outputs
    AR_AM_O	: out std_logic_vector(31 downto 0) := (others => '0');
    AR_AP_O	: out std_logic_vector(31 downto 0) := (others => '0');
    AR_BUM_O	: out std_logic_vector(1 downto 0) := (others => '0');
    AR_BUP_O	: out std_logic_vector(1 downto 0) := (others => '0');
    AR_CHM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AR_CHP_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AR_IDM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AR_IDP_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AR_INM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AR_LEM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AR_LEP_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AR_LKM_O	: out std_logic_vector(1 downto 0) := (others => '0');
    AR_LKP_O	: out std_logic_vector(1 downto 0) := (others => '0');
    AR_PRM_O	: out std_logic_vector(2 downto 0) := (others => '0');
    AR_PRP_O	: out std_logic_vector(2 downto 0) := (others => '0');
    AR_RDY_O	: out std_logic := '0';
    AR_SHM_O	: out std_logic := '0';
    AR_SZM_O	: out std_logic_vector(2 downto 0) := (others => '0');
    AR_SZP_O	: out std_logic_vector(2 downto 0) := (others => '0');
    AR_VDM_O	: out std_logic := '0';
    AR_VDP_O	: out std_logic := '0';
    AW_AM_O	: out std_logic_vector(31 downto 0) := (others => '0');
    AW_AP_O	: out std_logic_vector(31 downto 0) := (others => '0');
    AW_BUM_O	: out std_logic_vector(1 downto 0) := (others => '0');
    AW_BUP_O	: out std_logic_vector(1 downto 0) := (others => '0');
    AW_CHM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AW_CHP_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AW_IDM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AW_IDP_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AW_INM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AW_LEM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AW_LEP_O	: out std_logic_vector(3 downto 0) := (others => '0');
    AW_LKM_O	: out std_logic_vector(1 downto 0) := (others => '0');
    AW_LKP_O	: out std_logic_vector(1 downto 0) := (others => '0');
    AW_PRM_O	: out std_logic_vector(2 downto 0) := (others => '0');
    AW_PRP_O	: out std_logic_vector(2 downto 0) := (others => '0');
    AW_RDY_O	: out std_logic := '0';
    AW_SHM_O	: out std_logic := '0';
    AW_SZM_O	: out std_logic_vector(2 downto 0) := (others => '0');
    AW_SZP_O	: out std_logic_vector(2 downto 0) := (others => '0');
    AW_VDM_O	: out std_logic := '0';
    AW_VDP_O	: out std_logic := '0';
    B_IDS_O	: out std_logic_vector(7 downto 0) := (others => '0');
    B_RDYM_O	: out std_logic := '0';
    B_RDYP_O	: out std_logic := '0';
    B_RSP_O	: out std_logic_vector(1 downto 0) := (others => '0');
    B_VD_O	: out std_logic := '0';
    --	CAL_O : std_logic_vector(4 downto 0) := (others => '0');
    CDB_PW_O	: out std_logic := '0';
    CDB_RS_O	: out std_logic := '0';
--    CK_DR_O     : out std_logic;                      --  clock_dr            1
    COM_RX_O	: out std_logic := '0';
    COM_TX_O	: out std_logic := '0';
    CS_PW_O	: out std_logic := '0';
    DB_ACK_O	: out std_logic := '0';
    DB_NPD_O	: out std_logic := '0';
    DB_RS_O	: out std_logic := '0';
    DFTS_O	: out std_logic_vector(7 downto 0) := (others => '0');
    ET_ASC_O	: out std_logic_vector(7 downto 0) := (others => '0');
    ET_E_O	: out std_logic := '0';
    ET_EXT_O	: out std_logic_vector(1 downto 0) := (others => '0');
    EVENT_O	: out std_logic := '0';
    FP_DZC_O	: out std_logic := '0';
    FP_IDC_O	: out std_logic := '0';
    FP_IOC_O	: out std_logic := '0';
    FP_IXC_O	: out std_logic := '0';
    FP_OFC_O	: out std_logic := '0';
    FP_UFC_O	: out std_logic := '0';
    JTAG_O	: out std_logic := '0';
--    LBK_E_O     : out std_logic;                      --  loopback_en         1
--    LBK_MX_O    : out std_logic;                      --  loopback_mux        1
    --	MODE1_O : std_logic_vector(1 downto 0) := (others => '0');
    --	MODE2_O : std_logic_vector(1 downto 0) := (others => '0');
    --	MODE3_O : std_logic_vector(1 downto 0) := (others => '0');
    N_CKST_O	: out std_logic := '0';
    N_PMU_O	: out std_logic := '0';
    N_TDO_O	: out std_logic := '0';
    N_VFIQ_O	: out std_logic := '0';
    N_VIRQ_O	: out std_logic := '0';
    N_VRST_O	: out std_logic := '0';
    N_EPST_O	: out std_logic := '0';
    N_IPST_O	: out std_logic := '0';
    P_RD_O	: out std_logic_vector(31 downto 0) := (others => '0');
    P_RDY_O	: out std_logic := '0';
    P_VER_O	: out std_logic := '0';
    RD_O	: out std_logic_vector(63 downto 0) := (others => '0');
    --	RDY_O : std_logic_vector(2 downto 0) := (others => '0');
    R_IDS_O	: out std_logic_vector(7 downto 0) := (others => '0');
    R_LST_O	: out std_logic := '0';
    R_RDYM_O	: out std_logic := '0';
    R_RDYP_O	: out std_logic := '0';
    R_RSP_O	: out std_logic_vector(1 downto 0) := (others => '0');
    R_VD_O	: out std_logic := '0';
--    SCAN_E_O    : out std_logic;                      --  scan_en             1
--    SHF_DR_O    : out std_logic;                      --  shift_dr            1
--    SHOUT_O     : out std_logic;                      --  shout               1
    SWDO_O	: out std_logic := '0';
    SWDO_E_O	: out std_logic := '0';
    TDO_O	: out std_logic := '0';
--    TEST_E_O    : out std_logic;                      --  test_en             1
    T_CK_O	: out std_logic := '0';
    T_CTL_O	: out std_logic := '0';
    T_DATA_O	: out std_logic_vector(31 downto 0) := (others => '0');
--    UPD_DR_O    : out std_logic;                      --  update_dr           1
    W_DM_O	: out std_logic_vector(63 downto 0) := (others => '0');
    W_DP_O	: out std_logic_vector(31 downto 0) := (others => '0');
    W_IDM_O	: out std_logic_vector(3 downto 0) := (others => '0');
    W_IDP_O	: out std_logic_vector(3 downto 0) := (others => '0');
    W_LSTM_O	: out std_logic := '0';
    W_LSTP_O	: out std_logic := '0';
    W_RDY_O	: out std_logic := '0';
    W_SBM_O	: out std_logic_vector(7 downto 0) := (others => '0');
    W_SBP_O	: out std_logic_vector(3 downto 0) := (others => '0');
    W_VDM_O	: out std_logic := '0';
    W_VDP_O	: out std_logic := '0'
);
end component NX_R5_L_WRAP;


end nxPackage;
-- =================================================================================================
--   NX_IOB definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB_I is
generic (
    location             : string := "";
    padType              : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in  std_logic;
    C  : in  std_logic;
    T  : in  std_logic;
    IO : in  std_logic;
    O  : out std_logic
);
end NX_IOB_I;

architecture NX_RTL of NX_IOB_I is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB_O is
generic (
    location             : string := "";
    padType              : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in  std_logic;
    C  : in  std_logic;
    T  : in  std_logic;
    O  : out std_logic;
    IO : out std_logic
);
end NX_IOB_O;

architecture NX_RTL of NX_IOB_O is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_IOB is
generic (
    location             : string := "";
    padType              : string := "";
    differential         : string := "";
    slewRate             : string := "";
    termination          : string := "";
    terminationReference : string := "";
    turbo                : string := "";
    weakTermination      : string := "";
    inputDelayLine       : string := "";
    outputDelayLine      : string := "";
    inputSignalSlope     : string := "";
    outputCapacity       : string := "";
    locked               : bit    := '0'
);
port (
    I  : in    std_logic;
    C  : in    std_logic;
    T  : in    std_logic;
    O  : out   std_logic;
    IO : inout std_logic
);
end NX_IOB;

architecture NX_RTL of NX_IOB is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
P0VMglA8XyZm6Jhfvf33eZ2trEMdlD/5MhfOGRoSjW+bhHVnTk0N91ab5Mky85tS
sgi0Wg9GSY00g5vvgYnXYreYxcwJfKq3UOS746BrsETWJcTLVG6CnRDSf74GTMRZ
uJdIGgF3hYosNNXgMcrafluYcviElgcZrE0Yz0gev5l6Wp1SpWzShiy8giHUI5NA
DxP4+TG03W/mVpq0YiSBOQSf8HRo/HONpuLkVRFg+U4Z/NjYCILG0WkF0QkZyNfS
mXqExW6qodK7Qakv/h9CnDQta+1K6Kwvwe+J2vX8P9zVyugEv0Sn5Sueww2TkJmZ
2JBFcarLjcpIHpBzy6gfKg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 2624)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_IOC definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOC is
generic (
    mode_sw1     : bit := '0';
    mode_sw2     : bit := '0';
    mode_ddr1    : bit := '0';
    mode_ddr2    : bit := '0';
    mode_io_cal  : bit := '0';
    inv_di_fclk1 : bit := '0';
    inv_di_fclk2 : bit := '0';
    latency1     : bit := '0';
    latency2     : bit := '0';
    sel_clk_out2 : bit_vector(1 downto 0) := "00";
    sel_clk_out3 : bit_vector(1 downto 0) := "00";
    sel_clkw_rx1 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx1 : bit := '0';
    sel_clkw_rx2 : bit_vector(1 downto 0) := "00";
    sel_clkr_rx2 : bit := '0';
    div_tx1      : bit_vector(3 downto 0) := "0000";
    div_rx1      : bit_vector(3 downto 0) := "0000";
    div_tx2      : bit_vector(3 downto 0) := "0000";
    div_rx2      : bit_vector(3 downto 0) := "0000"
);
port(
    RTCK1   : in    std_logic;
    RRCK1   : in    std_logic;
    WTCK1   : in    std_logic;
    WRCK1   : in    std_logic;
    RTCK2   : in    std_logic;
    RRCK2   : in    std_logic;
    WTCK2   : in    std_logic;
    WRCK2   : in    std_logic;

    C1TW    : in    std_logic;
    C1TS    : in    std_logic;
    C1RW1   : in    std_logic;
    C1RW2   : in    std_logic;
    C1RW3   : in    std_logic;
    C1RNE   : in    std_logic;
    C1RS    : in    std_logic;
    C2TW    : in    std_logic;
    C2TS    : in    std_logic;
    C2RW1   : in    std_logic;
    C2RW2   : in    std_logic;
    C2RW3   : in    std_logic;
    C2RNE   : in    std_logic;
    C2RS    : in    std_logic;
    FA1     : in    std_logic;
    FA2     : in    std_logic;
    FA3     : in    std_logic;
    FA4     : in    std_logic;
    FA5     : in    std_logic;
    FZ      : in    std_logic;
    DC      : in    std_logic;
    SE      : in    std_logic;
    SCI     : in    std_logic;
    SPI1    : in    std_logic;
    SPI2    : in    std_logic;
    SPI3    : in    std_logic;
    SPI4    : in    std_logic;
    SPI5    : in    std_logic;
    SPI6    : in    std_logic;
    CCK     : in    std_logic;
    DCK     : in    std_logic;
    DRI1    : in    std_logic;
    DRI2    : in    std_logic;
    DRI3    : in    std_logic;
    DRI4    : in    std_logic;
    DRI5    : in    std_logic;
    DRI6    : in    std_logic;
    DRA1    : in    std_logic;
    DRA2    : in    std_logic;
    DRA3    : in    std_logic;
    DRA4    : in    std_logic;
    DRA5    : in    std_logic;
    DRL     : in    std_logic;
    DOS     : in    std_logic;
    DOG     : in    std_logic;
    DIS     : in    std_logic;
    DIG     : in    std_logic;
    DPAS    : in    std_logic;
    DPAG    : in    std_logic;
    DQSS    : in    std_logic;
    DQSG    : in    std_logic;
    DS1     : in    std_logic;
    DS2     : in    std_logic;
    CAD1    : in    std_logic;
    CAD2    : in    std_logic;
    CAD3    : in    std_logic;
    CAD4    : in    std_logic;
    CAD5    : in    std_logic;
    CAD6    : in    std_logic;
    CAP1    : in    std_logic;
    CAP2    : in    std_logic;
    CAP3    : in    std_logic;
    CAP4    : in    std_logic;
    CAN1    : in    std_logic;
    CAN2    : in    std_logic;
    CAN3    : in    std_logic;
    CAN4    : in    std_logic;
    CAT1    : in    std_logic;
    CAT2    : in    std_logic;
    CAT3    : in    std_logic;
    CAT4    : in    std_logic;

    FLD     : out   std_logic;
    FLG     : out   std_logic;
    C1RED   : out   std_logic;
    C2RED   : out   std_logic;
    DRO1    : out   std_logic;
    DRO2    : out   std_logic;
    DRO3    : out   std_logic;
    DRO4    : out   std_logic;
    DRO5    : out   std_logic;
    DRO6    : out   std_logic;
    DRE     : out   std_logic;
    DRR     : out   std_logic;
    SCO     : out   std_logic;
    SPO1    : out   std_logic;
    SPO2    : out   std_logic;
    SPO3    : out   std_logic;
    SPO4    : out   std_logic;
    SPO5    : out   std_logic;

    LINK1  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK2  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK3  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK4  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK5  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK6  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK7  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK8  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK9  : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK10 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK11 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK12 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK13 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK14 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK15 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK16 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK17 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK18 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK19 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK20 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK21 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK22 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK23 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK24 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK25 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK26 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK27 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK28 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK29 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
    LINK30 : inout std_logic_vector(IOC_LINK_SIZE - 1 downto 0)
);
end NX_IOC;

architecture NX_RTL of NX_IOC is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOC";
    attribute NX_USE of LINK1  : signal is "LINK";
    attribute NX_USE of LINK2  : signal is "LINK";
    attribute NX_USE of LINK3  : signal is "LINK";
    attribute NX_USE of LINK4  : signal is "LINK";
    attribute NX_USE of LINK5  : signal is "LINK";
    attribute NX_USE of LINK6  : signal is "LINK";
    attribute NX_USE of LINK7  : signal is "LINK";
    attribute NX_USE of LINK8  : signal is "LINK";
    attribute NX_USE of LINK9  : signal is "LINK";
    attribute NX_USE of LINK10 : signal is "LINK";
    attribute NX_USE of LINK11 : signal is "LINK";
    attribute NX_USE of LINK12 : signal is "LINK";
    attribute NX_USE of LINK13 : signal is "LINK";
    attribute NX_USE of LINK14 : signal is "LINK";
    attribute NX_USE of LINK15 : signal is "LINK";
    attribute NX_USE of LINK16 : signal is "LINK";
    attribute NX_USE of LINK17 : signal is "LINK";
    attribute NX_USE of LINK18 : signal is "LINK";
    attribute NX_USE of LINK19 : signal is "LINK";
    attribute NX_USE of LINK20 : signal is "LINK";
    attribute NX_USE of LINK21 : signal is "LINK";
    attribute NX_USE of LINK22 : signal is "LINK";
    attribute NX_USE of LINK23 : signal is "LINK";
    attribute NX_USE of LINK24 : signal is "LINK";
    attribute NX_USE of LINK25 : signal is "LINK";
    attribute NX_USE of LINK26 : signal is "LINK";
    attribute NX_USE of LINK27 : signal is "LINK";
    attribute NX_USE of LINK28 : signal is "LINK";
    attribute NX_USE of LINK29 : signal is "LINK";
    attribute NX_USE of LINK30 : signal is "LINK";

begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
A/2MKdlqRI4N+6IrPTFPC7y2tDNaxmizKQEhfwfuN4TgYMd5Eb4CbcU+1TsbHB3A
h1/KMYqZRGthK6yaUshnycyqXPB2mY3a0KmV0caOVsa6tI5NMd4rNPqzMid7Vf2g
NUhDYJ7h3vQB7tXo7pEsrlY/luoBEWQkwUgZcg3UYttTs/18NulBCLSR7ib5muAU
IjGtQJxb7+Iizb6ZchyzCVsf+7gRVDIUNA2eVVu6bMBgnKEGCkuBSOW06mHnbUhG
O+uJfXoXCndpmzrnoU2gnE3I6NpJVlh8yWljaSeYICPMmPH6tS0Fefi16GUjTnzE
eTwlYo77FSBO9J+IvaJRGA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 28672)
`protect data_block
NfzfW+NzpF7kDCEhBWNNoFmnMDxlEQyeTzEOBLxoZkWW1t8eMvsg0IZD1PLIeMMm
evbJbAl/9XCY3PmK0vTkMqvVsg7RtOGXA+/9I0O3QXF5Hf7yLv4ApnG9eTdSt2eV
1N6zm5qUA1wTlMUaMKwtVAD6H53VV16nf2+4GpXDDkjDfscreUK4nb+JLzakcNJ8
e05HiLKmV49Cz/Asm0d7Fx/NczX/kcD7ZlsZNbNW7VxcODlR7g9XGPq8c+HP1nrF
/yEtzhxEd/vaEIkPGjmIEGP+si2+NXaConsPz6OLwJEhaYEfwDgBZw6fMguN1uzP
b75ZRGKpVg4LT7DSjaFdBBkRXhtKiXNgukJIwQNbeEhenQMr2sbQtP/a7YmK1dVT
Nrex0wy2VY0JpMg12HPLoMqdPFWXSmpUgY5N3+EQX4mywZI2Htx7X2kLnNxI4myj
1JcvWU8f/6jginImSi3ZmfM6N3uPGAkrTcKrUP8wbrppfbqRrGi4451hl9yDaYNS
RNoKuo39DF75Kg+VLi54VhCWs9vZqr9hnp4YFUSFUYLum+OkMxhAopb7pA2XUT6R
6A9eMXmIxUd6vCdQM4t/W80At4LNZdagOFmYvsbUWu8yHbXNTrd04FdQ7+noPFl/
ihow3qsz+PeOKQkKNsaLJWZuZ4LYpInMiVixsJ3nP+5IbF4gdG6YYf43LphPCnyK
qhOA2rMqaoHXjvoEciQY/hMbk8FQs+fWP3xF/ztv6ebLugQsbd4JoSXBmuz6sz6q
rboqwd4XLx1j+IZjAc3hW1xtmY0zlqqeF1kRSYiWLEqz/lb7J8NzzjgEltVrfxJ9
TW8lGkIpe/BufHAfBpWkb5xRuwN+rUbwrXPcJ05Bsqc7l5MeThnJvgalp6DrLZDd
ort7WHG76RK1LeGLo68+UDLHddf+hPehUR8g/hoOJoeyajehnOLq2IaObtHEeFDq
0y81r5l/itlRbmMNcNabqDOGfPJqhlEvr6rVOFZcteXYnkBHSv+iZZhoio8XEvY+
Ap0YZCiRXra2gkok/jzV+9YpuNGk9INVEInCGAqrfQXvMe8avCeA7uxEt6zQE13h
4Xum72yARnOa9TPcaAnDc4E10zsY3tP4NqiIrGP5a1qom8Xhf0xw48cVZu9J2mRe
KbBDBJK8/tywOMzhgEpXYxnd7yP9cilCSrxyRgD6P1uU9HHUEZsHffJDIyjSCiX3
kDokKluCNmkC1DZdgm73bhdFI3Yy2YlHKsj4789/I24I/Of9oK+xgDxYQ5AHItED
wu5vHqA0x4DcrplrXJ4cJyIfaM6TbIkAgV+r5zg0J0XrFvILVFcxW+n2hFN8z5MD
wkp+zFRETHquN0O5xrPTuMSvGbsJsZhgpsXnCbZvfnrlEPd1kQoQ+vBa6zlae6QA
u6s3XZdPYSXOxJ9moAaV86aE+UJnA6maOCOuyKPnX89umkTGKgsxEPRsGJCeyp50
5p9LwNEDkSDnADelz4RMP6FaHpLOVsasntkQDInfmXA355aLL3MzMT7wtF1Bii/L
9uRvDvB1JWedKwzUWdnE5Kzy62cpHL9aZfKtVHWgOCif9sf+iWtWf0GChLLC2dKU
XbyyDtXMQ/me/6cbJ8+lG5V0BRjq08m+pcEaxK9qTOQ+UQfEIAM62FJuRbcbxmTD
9wd4Ltex88Wpl1xObOzAYPAKvoDn67gnXuEFPIztZWiuKuRkb3M72Mi2XcYyUl3U
sPmYUNViWdJSQCHoAqf7+eGybq8rTvMTiptLXiecJFNVhUuUU/YmD08PKFnFke7l
5MKh0MadAP0QWAvZxfZtvxOJjU9utDoHLIfIptaM4wfmrWPUc9JQmD8z/eOoObKi
UGnyHDXtPDSslhU3NKB8Ig3dN0eeQW/kuh27mTdcRQeXWcHOBKu2+nhKW8tVXkVd
m6+AX8e2eZe96YT5DquYL2A/v4VCls4gRJSD6+naWJ9l0WRq9ACWFThr/kPSxUxE
XI/OO8lQDh70yEt1O/rGasnmzHqWhA+6rBsuQN8GQ1ZWBIm5UYc91oXwU+sq3bnj
gQLdL4b4rag4Lb0h5xOvYJXoZvcsP5HG1OHVSGvtSScKCAm5Au6LJSQWNRvwNlYs
PmejiJ0xlObXJWIPqEEmYNaIZFEPOsDZFcE2PueT0Z8je0q+gFebKfYQplY2ntWv
OUjsLzcZH4jyT3nnGhbwLV1DSWpEf9NXc86iC0MFATcejPd8lBDw2IBueW9VlDBR
A8IY4Gg8i8E8KTmf8vsSFDr1EaGQcxIjK/I/ZDSdCjUDFiFC7GT9Dzrmr6Ou/Yg4
H7VHm3qeVfdti0Yob0jen9bIchfTXkNrSVhLzBPOhQSrnXg6njV0XMigE2ssAzeN
qHSxX0Ox6kcdDK7OPgw5iK+rOl7Hx4bpC0JPlXsHQ7X242NcUAVs+4/wY8Ew2Cso
B57orG9UEP6pUIVYkPyp4qzFYPiVrux0I0NOtwHrXn1Hn6PnGI423/nZm3pXPHWD
t5LvJ48jsvy4Aunjb6t6VrhqojilcGuDEliTAn/RRz5RNUZILo1OLZnP8n+3gyGW
6GuPAWzLX4/FyrHNctd8JucD3ySn2cgbJ1nKC02mGZyeB3NkU/9PdWMmKlBsT/qR
7ZEgA+59ggumRQs1NFmvSIwzIfRJGtbJAaoA3zJDIzJfxR4HFRHobEpoNL2rktNC
gLrn+Yi20c49Jk9ec6MluKBdW8k9dF84mh+0PQ7i4CB3CUeXehwDX93MmO4T7Nt1
7dZY2/GV5Bwle+RDm1MQROznbOCG/bhVpYxoeXTQ3SqHEyZSVNchxF8Eg8C2uSGE
t9dNruqT9rzstp66ZcS/ECKOSOz8P2pWzaZUMytaXZZnNRHH4AVnM13zKH9PQJP0
ggUwzscNQ8Z9CaUmxj4RctI3mnsQ8c5RSfYCFKNbJdhJeTWC95abu4P/5kcCYXd6
sjed5xCBdgl36hAQjdfytNo42s0BMjYLnvVERuLreZMNfJ1OWr/K/DuV6qwTC4ND
z/zeu3wFgdKGjIrmvTOEZwjv/jeHu7b0JEBJHlatW9Dnbl95/82Xnn/WmVEn7c8F
SvvvEu1GawKG63Q1wZXei4VG+2wmSskPBtnUPsxUxDTiBoBdQs5llJmg5cPA6Ed3
gCI75xXFP0ye3suSbS+kDocSovplWy6Cm7h36wsPfW8JtWAauX6dE11o3Xis7iN8
m99nzG+9ap7P5UlqBTYpCb0sxEH1kFNzHD3IXEfbORJ5AN7qjXL40IgJR3opqY9G
mqHORHA/heVEc1+U6LIgYCES/dhURNY0PYVbz2m3eoRvF0UmNiuBXr4Gfki3qZ2S
l0vFbM0YLhTZZGaa9dlfPTUdfMLi4J2aklEiXgOpycj5PAfgdOIDiizlkBQFIuBi
llublJZqwQhuVmg97oII3uUnTQg7m/odVID2lZkPteQd8KQwW7a/6yHf5J9oE2MJ
8+DY+D/LzLNy9WphPmNqX8Lj4kiJFIK8BCeWyIYBt2paoMLFYesoU31d9uaQCtbc
8jvpilz5+nUMtiymEfQtyM9n+z1jrU8jC7W/fpDaB3Zv4mAC4FLwNoJONvAfXFc3
RwRkfNSmcARFbYrjiz7fMiGp6+Ol9W+X1YoUgy6gfL3VtJfWDTqbphHgsFMfsaLG
Ysiu1DhbcP053CE2vHJ9TfbOlcyJ4u5iHYx4+1y/UlojA2JAkC0sablwVDnHecXg
C+/gSfl4+bLhMDkK+lWcstQFcpu69cB1/CB2fIfH0XOtx0AFDx9tFPwgIlxYQWuC
Jtmgcnx0E6zzfaNI8rnB0gfoqdNXAjT5JhvHJfedXOeVkRDoDgvLX+QH/otgpQBb
G8w0PIwHNmjJeICw/9wXEDPdPJ8yh0KatQmwuAoZ9tqiUMkWiRGOyv+S2NeUXXNI
hNzNgSbmSdsA55sLiDJzCF1V8FtB4a+xG2CgnP/3OnPa83jLgyx+cXZ46Nae2N1Z
DneVDxQZ6gmhT6IkVvdBOhaMJb2n/IR8od/TeQIT8f6HHbH5sm8+1mgknRMUQiEm
xwhHeuxpeohFHkwQdFKG7Hbsh/4jpBIB/gQTcI2TzX6Pkr8HVtCOXXzcJbMtR4Qh
swwOSd2wooshg7sjBvZj7Q8y2/Pbu1Er0qvBiagl8nOBlvpwT1erWADwS7PdyRet
VPmgTqARLwrfm/JJhtSNY6heKrdSWXNyQQs43ATuzvID76gLLzvHwPsFNhJzNsVx
GQI6tD/H6xbpSHDrO1rWib2FN4MI8FNA/O5Ybqi7VavYB7iaGdSLJpHOjcIKzAdH
q6shxutG5eYwLGvoHWOOWEEuZXSfvq+CUi0ZwlhCg6XF8+Rd+TP91U3UoEs9sV9A
IZ8FYra3PHUH81L004Pnrudinn+OsH5P5P0fG/sNNEQneIDdFg5FHNDLPxi24qBF
sdWKoPtOIt/rWDncbcV91idV+NSALuQQW9ID1Is+iQA9yyHPe7FZaXAr68+YUq8C
VOMynYgZn8Ibr7Tk+OrR5NgYoD9VnbfHSuuS1tRGjTsrVvAtAuAQyQNUrLace20X
bKJxwXEJ6Yoa3tuR3pvDAJScMzLwCUhq82AI0EAwKEvQykrPw1ONTGukFv1UM611
nyaoxUWvUOPZ9ilwXUvpIf0W8cqNKM8Jzba5kzbpRmoyadDlvv97IBCWyY6SFpcG
eZ4Mih7FsuHpEN/5gHgTplHoFkNAVR3YUmHihg9e2086yjiuQ29pFyXUHIPvZHb4
PQw2XHRdHONalbHF5kF5K8RmNWZu9vIpqXFVLI3MG9EyMbbkI5Nw6PYJa2EFIPrz
cFW1AjA7+5qm0ZjZqiYcJrz8SQxbMjyouZiV6HW/2m4vrkXkNi8D2ie5SFFWBKLu
Er+Uq6/f/xm29BC2wtSgBruz+rQ3NBaK+ab9wJ7EgMARqL8ZbRySXhYcqFzfs9Fd
AQ4H56UAZPYy4vB0c9PaeV/FbAetWXddnjIO7TsaS1k0bHHir7/VzGhMW+BEoPi2
1OkHEoccUA+eTRojQL12GcUyNLLBKKfHZazEw2q7eXrAYngqiSYaVlXK0ZcATL6K
PeZN7IMsV+mPfrGvH7dMe5BJ8SjjKrdU81BlPgC5tdAGlhzdgEX7jI0FqDMVZ/CI
k50vOY+c0w+0mWk7S33PPEDK3zAIKnHzuC1NK9xFsKe12PerkJYUOYzpegQG1S0B
S/JhTeg7mbUsvsNfE9thnq5kbttN2HT1z6Jwvk7lFweSOjd2NfPDP6EVVPRddTi4
SSKqG+Ux9NeosEqzC+UODlYGpJ0VoCKH+qgwD8WQU57bwr+iPW49I5ZhVohWCXIk
6vT94Yx5Ut1rFor+TtTHEQPsW6utmHfGAXGi8EPuZqIiN3re3bdQgSsyAVTUqubC
nyHPbZT9QyRWxN1MC1xd9GNTU++DHbYxWs8aRmAD29WqlhEQA7+r4zBKFCBn19vu
wXoi8w7YP9nH8QSl7aiDI5pu49I2VWQrdkLgoUx1EPKWi3XgmSpk42oDMDn4X6q6
wupHtWxwgO3de2DhKPfbQ3hCrcltTz+dg9kMg8ji4LFdv+hDDg8aq0daihBw2tP0
LddezbzYLS5U7xHXGjZnOWx0oSsoAtq2u/fYhAg5+Eci5EHH2bB8PXtrl+W14zjU
AyACK5e+80k3/PwotWO8PThCJSfS4blp9Wnssap1PmoX3zMokdY7tN7yuH5P6rBn
fGSkguILwRuwKwp7J3NOxaeshA2vPccqyqltZg54Q9+VcNt/M4YkqnDDrr2XC2qx
hDOOQnSB8iTGSSY/CdzNKtqjzXdNhEFagZmQJbbUj1xC7Dtsc6QhtS6F3Vu/GfVl
KGrPodvlArxkqEo/tUXcer9utrrL+Dq5h/wSIZkCDRyYbcE8ZERCRguNIAB54V63
YZZFI1x19BA4/1fPJ+NqkDwJWv/DQqBhjGYydRTVnbaWVLE3ybJVBWp/3kfRoAGc
w05jGaY7WQsrCyAkpesx1hqxG7mDelk3J2PE3mcbaO01058TUH82+Hlni0+B9KH6
IzkNwH+Ag5AkXjytukIqXgqGYctgehkfCMP8gKciafwMpte7zcGHNiQxLUtG4q/V
Zskxivo/q30GdzbsSKrAvXeUetoKXUsAFzn1xEy8v3XAnFFw/x9FMw+gc+bHHyFQ
+o6q8ZFJKubOQHwEcVUB74PHwdReb08Q5TgGrAwJHo7gF2CuzSd9e2/CVJBLMi0n
K/GJQNEaUs+3+SuUoMuANwvme4aWssfAHXHHNx2H+BAK7gnNgCmwEIok0jO6huzr
6ZZ+9/Ya+42swACLsDAUo8/UfFRmEsBvEqKj8IT1H8p5mTbLsUF9L0oGYgV1HtRe
JBzwDWabB4oo6+B1wAwEa1Zdtk2pfZej6322bb4P1EM6Rys8sfQj3f7jhX8whzYf
pu0TsjiUmOksw5JbAqj1Tdztflh/n8IR8dlajH7R+bCgeJ/P9ADLnwWimcmf9GmX
or3JQksCkKY0JZOyOAMf4f1FOom/L7uJAzA7yCNyXbFyzfnFroxECoJnda2yRTaY
LbMbbEwbSme1ZPMeavbi+ZzKRSHhDufdfIDTYdQtR+f6I0IBOFrGAzIUNRt8JMi/
pSx5uDzAlBheNKdVxvH5XVuGnMH7cFNVqLGasyVu1qc62oCXMFucf0PvYiUHQLs+
0OZ3fCki2bRrVvoPC3PykG413y9ZzBDc/BmTkhabWezGIjmuEgsd6Ul2i5EOqvZW
9DZiD/3j0LjmklGBPiAnisGRFXppJj0dqZLXcA7cuUtjk87Dp0wod+RrABj5JRZH
u/N105FDZWefQMhbvuKTjkIhtCm/Q3pxD/F7CLS933tnYfcvasU2aRMrXiQKY9FQ
sfvMCzZk6k3YlQ5+5IMFjy54nLShHOh7wDiEsNiovDyBDYQVgUfiEVzJJi0EiAP1
70nVleVkXr9aOtl8XfR+L4QMY/tVHCg7/zMP0YedDeJimE6vgTYWDzoXLL930Jxj
vwGyyTe5xSrDEr0A23KdHYfTwE09eWjhlKj1V5ePJbVTEfvU2HT8MGUw/GgfDCwy
KB3IWwP6MenqLZ9CDVDb/yTdOge3kAUQdajvJx4qo2prXZcN9S/AGPs04/2ddvrp
mzluv3+Uymxj9PNaIskdzDfV2XWWxeHIu6U2JG82wtrbNSlPZy1aIMAy38JdF5o/
RQnHxtBk3SXW3ByH61R5Agp0/gNz0jYzsmK51MEtS9nLvv6oivBMwMvV8SM/46gu
tLAVj54Ua3XluOIdZQBJU62S91DqiErkiz5Zb0Q3fhagC6XkDLckEmY3h3w4X28S
Gsiqw3XrPZXwIXPaVFuZz6jnfG85WAQYejgqGUbepC39VjGB2ncK4kwRzdetJYL0
yhl66xH1kgayQTzpHMUJpzrNL/Qh19YUDjIB2kW4SQMTGnXqQPcxyYly6kn9PFLz
kvJOa/hXdtoDycDEdGqk1ksLUMpTy/Ukg9cXx0XM0lr8oOmnUFvf24PsIqRfmLHX
RlscBEHNcHGEU0Wh21rTh82drI0t8j8e4Whwf+RUBZYmIHPoSUHd4MbbbeHtkw5F
9WhdIPjtLTIlQC8FnOBeAjeP903hq+Xr7xLgMXqAPixKV+N6GQ/XilmYV1L3pT6H
6wX1B1VlQsaIbY0X3wxa65sPGDavLECJkeIrRxwCPIVqjBi/jfffajAidf+UWZnB
mA9uPvdijUZ+c7CsjJ0sMY8L+I3ZhwQycPQNYhEN+S1/wlvrKyBrtqEeFeHMi9sH
NDGccZu4ky5+qgTteisbBN/2J02nIhJkTHxB5mx6EW+q4IhbIvtJ+fgHPmYY5HiQ
eJVUcq4dErLEusDGTorcuUydp5ENgz1AxfwAX1WSXarkGpzraDIIR9hkAz0Kdfc+
rlvetZsKGxcxNeTDkRI5gjcpi7q4jtELuNVLhgGpPrCD6PVOLXVT1LB+Cjq3bA2D
IqZZgqmRp24S8LbW/Y8glkmbicK+rE1/wu/V8/5/0v4FFM9L8IMBciRJkCyjfrRF
Jbu036PQQLEwOioBc4wYOJXKsNp6sNW4KuonjE/hOSQlwvMFeNH4kQG7Dc3T8jG/
RS2MU+fqCgOzpjCuOpqq41D9g/6SwWE9m8amq/7EmyHbq1GJKlWNNY7rnHUZWCDL
zItvD1xdW1MPNuqzpG6FyqfpXrY68sSYljRB3u6G+A1TNxRlxgEtHIoCQOkdiiNw
WU7xiHIJOk80XGQ8iZgUWvlkFVpzDmyjfu6CsBSrTv1a7Ulke6/iTqXX36EcHrYZ
Awnk3zkE88gvilmm+VhOelt67w7kOVM4D3njUxANtDjLtnCP/5pM+I4t/RCo9iqI
iekUuWGZkIs3UrzK94DIJ2W872MaPUlEzSi17tYV+Z2GgV3Oee6hUWgOn82kDckR
o5WotT58N4TcEyzzOpimsDMaxXN+CBbjXvB/o2yzy+Z68dC464snYzk6VWTxiM/U
8QdfqzE4v2jd/BHql1Jl5kY2EDl6aKg5FaoHc0iB4qDncICA28P3zJ0G0iKCtc44
bMyrjzhpUYDlsIhwSt3yT/JMxNy6HZkxl4sMv+doRj0RPOsdtgcU1t80f+eqgNDc
78TcRpIsVLKwJczPUmV0Kvip4WAzYFQ7KiEMnLIRVmVPzvOZOomQZMz3S6J64a6s
pCtKz2/hIyCgGQl5JD2tpBdbW3O4Ki7tiCQ3Nv3FOkZeM2wixI520ejPyHmCPgv/
gROQqgvfy5K88ceeuqjyWr7tqxWf7fi9KimG6NEGKccLScKJ3dJqv5k/gHLJdtbn
aD5m4dBos6YBwy/WPQ4Y0GU6Mamf1f+fGNJIjsWV3tCaTO6kk9LGjDRE3dXhOkjG
sVa6il/p/GtUI7q3Je+d+qPbdmzhqV+f1HYp3qSlo8OES0y37XKgneb3j+gXJd9y
16nB/DCMdCK8pE0KVKqwu29UgkbrlzK0qigxOQGtZH748yjyeiDRZVQ2paX1vt03
foaYuKAx7uA0B5TqKxwlrhBf80usqqKYsGH2SFTbKdrPuX2b7Wj0YWsT7zKlNlzJ
URvuUPoLvaXCUsvBLJesoHyDNskww5r2+I2pVnquVFxoGVDhrf+9AmeTyv87pIS0
sARUhKsmesBKqSQYRtmy70AnC1oGnWmdcAZT3ZyWKnA42mJhMXb2zhCBQdYKryof
v+mVF1oH8NzCKEYfEFcN5ddrN7oDyrX421XsICIYzzT1BATwo/KsBmabxnXWnVkX
CQuBcIA9JeeYeL6ButgaYhkgx8A/mUiVaKcLYg2Igtsw5V6bVuvjBUt9U1q5RFhT
aLMKBzpEfWN2lv0EgxfKaELmM3Ohh+xurLJcSs6gY2xAGOwqcHuVrElMRU8pmfVZ
W0RS1MON/iBUjVhElriU7blzWz95/UJ087nZXXxvCipFS5megFX//inPlHDUA4r8
CxKpS8/GPGRmuw62W6ZWDJBp3NOEv/XlsK4ajFG9t9nFoeS30oqWDGi4ynJ9s4s0
amOofxJ5tJRn7YKKGbZSm3rIlDPegMNOM0S1vnD7jHA5ZhQQwDgf3MJ0fpxGGpYB
6UxtATZD6cW4WBjvhd/mMlrjUb/DukS7bh0Uk6on/sP6o+gtlmih69ny7tAOOmKi
45/48Ycv/pKgknfMcX7Lv7YXGWfLlfNuKEMFdgv1gO/rbKOlzKhMu04r7ULo+r0e
tq9achdomZ1pDyG4NgVbAvEJzDEJtZ98VfHGs+Go40q9VCllyv5RJi2AECK+ikkJ
Ce2oVB6nS/HW1uP/fRMrURpnbQDtClx3sYOIGuLM7JHFASc1f7G8aYZWH1FbVfhC
Q1hMnDXX+pSnLTgijO6vVEV1DOlG7BanhKx+xpm3So4YlWXaE8TNwLx9OJH+ZSQt
y1L12701GutzDNvXNZXkej99cKTNZ8yJ17ukis8fg9MeSNISuZHBlYQ7cYFMbuDk
CWv7QhHYrFBidhRC327X2Rpr19VSUSm9a6TdQVQKhe+YKDueiC3HwB0exrgg/KQM
2fsTI0pEi5rlKdPEwzMcYGDutGJwX1VAmv08imYzOrvXEELvhYwMSTagbflf1kek
DZeaJtFRV0W/KWIbeoDQEsR15fhhs7YgjBe6X8mKMkj5rge8yzY8hoHvMQPtsOat
b4+BzKxaBUgCpBvUfyrNk7rZZNsihj8qyL3uO6g7VEm4r3U0HqM9NBesrY3K+iBH
yT8TYb8uGDyhoQ8BO06WSvl1m9uIwPS7R/Wx1OwxVBbxA0A6aGKX6+2rVHLAcUe3
/btkmdKhXznpkGUEx9jAVGXnxVQajISOnqlpm8ncYmKXKBrdjpK4pbYolSXbHNTj
kegAvjmDW8vdIRU19z7vZreb4TsKM6rRi973FxaE65Ix810da/tdgk5IE21GfGmH
sJEpyHB46mU6L9MWwkgN7eFTYF/6zOnh0BrP8MYVSKREg1fDHzux2iRUmEEe5fXv
709oHVc4OBldCY16a2aMmPDe+CY01w2gWna4gsn0pdBoV/EQTAoSBYfGUwkC93c9
mmzY35Zs9Dc5ThpWYa03PZQbpVRAgMCYveQj9TSgerjHCsBeDUd4zFjniZ4EJZMq
mTDKgYgcdOYzMnzvzcD/MKn2sPOaPAqZitU+jx5DKKuQ9acG0v+AjvbF2XnCJyoy
ADOiUSlHgSczM9ozgLuYhvvCgbUwBetZ1XkhSpeILBuL1j25AODsvrHC5yvc4YWN
XFiA+DOYaP+IASAgzTcM8a5iIz4a8mODPjZtB6HALZW4BP7FOpRI3aAS4A0OcYaF
2GWqM3JPB+b/nGne1VbLady3+sFc3+2YVV1nMnj6iZzV2zPIXyIcI876PnyH2fHe
FaW/PMesH20sMBEosWsCrzgdSpvKpch37DbGFdBpi9j361QyzTojDLRrfr5TNzXS
qSod11aLsR2c9s0nCkr6Grfst+ivC8y3anPzdwy2quRl08BMp1T7Kib1IS96oDR6
mJxP4StFwUPn9EnclBftdf1fyQqIqX5EM34bSviJ9PDDiw4MOo2J2FYWv/i9vXQb
6sx6EafPYqDkkrvfJtR2m3Qh0UDsQUidvFgrfEge45ffpzypvv2xoa7VQFMU0UV0
m2DJVtCZNJsGmz2Zg8xLA5BLczYhNXvXyXX7EXwur0YOhZgMT0DX5AlPRcD3efLa
nRmm8+J8soBOv8SYmJwUnhIqOGAN58hoAINE+umxBwA7FVeDlvKXzOrTWBGpOwnM
zNTlkQ0bJJaRZ3DEyy8xI3mx6Z0zBMvtseQtGjT/UQ/pCkQ/R7qwNVx7KE1Z0jsM
iyxCH8RwyX3rq+isZTmGAtiULNnfhdBYi3wHXRA+tH1GoELqMhM7opKAj0XD2X2O
fSwAjzx5+sJD5V/bCn+cM+W1qsbHem4UwrPmyfjyCtBm+UlBi24b+gdEFVwUdQZD
2XkocdGAaE9hhG4y145luQ3kyKoNlFQA6UT8kPkZqdzTLSKik9o/ky/0lf2t5E75
1il0oe7L9zUJnKVSCWtwqBosLudgBJ57LrfCDGYaKL2iDyJc531ADiYHrhdKgjOT
oQ5G3CRMciEzRdaOxgd1t3zyNTzY2BNXYGhdrEWwntti+xBLHmWFRdX7WgzoMeR6
2m10pLj3AVAAN/k3aRVjqgJ11zsgoLSQc34qqCLprOFAl0zDSfIs3VY6eq6knHYm
W/T+rW4GO1dOXkFSrnzGV85N0QDGKnSlhSzrp/JtvDSoOuO9WRiK1RCm+OezhVnr
IQV/F0kve/FBwXWbno5U7ZoZARBui9niFYI1rlFkZuvq2wMmNmDUrtiQS3FlWaph
pq+65JV8nbI6K8jMrE0ZH53KnUFyxRxkk21cFBNN3/7DIO3oMo7beyr+VLNN+gNM
9+K31soYsZsFVAfoj+yMFYLT1joeoyXTf+/812qX2Hy6t/ofPMcPYkNQQefdzeG3
X9FZVEpiplz++ddVJuCqr6+FeDKwi8SGH+JgXUI0ooXWf/V79eCQNBzub095EUJI
3pf9qvfP8VOlQa8LPuCyjN0hOWb/JBNiEOMCZCrGpI1qB4OSyvh9UUcaGox6JzYY
Ewnzpj6SLVA7J/9dQeiWALw4YtBN6yMNPV5A4UACp6JNIIgzxSMsQcJKjV5RJ9Hu
R55reTa/tNUSKR5616AA/771SwxjP0Ty7R3IjXETcIJO7u9je/IZ3KMsBsfaEdtK
A2cJA6KJoDi94faOU2p1/893F9cDoqhUhzzc2Knbm+o2DeykNQUkXMdCzpY5JFrA
PRBHky/T5QAXaJkDpTF6TsbeccQ5rBi3UHPkn19yFY7hrYqyG7+81FsEcU1Iz49h
5+wXaVIDcZO6THPB/m3pXSK9QbpW3yoOR4wYkauYNMVwzSLlESR5tGFxUWtL4tMY
dcdyIzAD8n/q2TPfoz6cj+g8IopFzkRBDZcCS//9fbPgsUdoo3JRwjxRH1TVKcNb
1Fxjqcga2/CBWqQpjHW2aB0nB3u/kGzbjDrJ/w635y9yMn/C9KcjDyyblvo/U2wG
pnu6BO3/gVt5S5+Jkr4IzBdJHm/DhHNUnSRQuGhreg+X0MjL7w/P0BfLql7F8OBl
1DGngMz7+lfRinaJzfUfVh680gOZ0lIHNclSlkF7ERVPCqU78S2OfKmc5zkZ9EVG
d9Adj44izLBnYDtUyZ4qwMpsTuRtNyhu/OK1hkgR/6ptkD3/BDOp4zPdGe2OuQNJ
9pSAd7X4EQ/ij3bTuPAbb5/JHrUPC2UDBSPyAQcNE/RebG9aYfaG7Kb3x/Z+Vx0j
rBcnuHsaXOqV8MqAThbkNFIWiLGc2lzK+ttc/nWJwEmzd2hcB38P6ElMDH7pNK1F
AzhlexefBnIgcHSGTodjmKRB2wBWdevIeZQGIUdYawZWhiMEFJfBfGHFgG/m7jM9
BnLIpMewzU5Y0Vr3Hgar/3I2Xz6iB7O65etZ10Vm2MgtAoXDjQfrQZGwsUr8TFXI
qOhD7Mwd1rgAZvk/vUj8+55qnql3eWFeBwu374m2Vu/I5GS/UWXw3RrBcBchX6WP
unUFdzD85lPiiCurSGK0YANvSQHVsun1mEuI6fGLVyeb8Re/LPBtXmSsSGQab8Rs
hMFoRbTRbU/yS15RHoX2VLKvivWRpmKohcAU6ydoIQ/I+5tJgYJd0/+fWRn+Hm+g
MSBHH1wBDttPmiHlDTPbbS1ZnE8PRnBeIw3MBhqJFRKXNzC2Ad9Jx2dEb+/0Rv7p
gp91eaRnG5tz5fJHdOYEoqi+e+jmFosXwWm26HzIIt1xvSmLAer3Cq22DUViKMXO
MidAKCSgla3KRTRt5ySlbpggdWlXdxqBte1gjU5yZhdGqR23+cB+wdvT0QDkMs+Z
2FNUlo238s5lX4R+KN0VrqRQO1cdCS8ha1F/vRNiK+0MX2phXrB27tfcT84da6CW
ZpdP/lbEh0ZAS8ya8Xkoi94g22vrWn7SETu7lMDC5OWvjnDvajprSAiA92CypVBz
TLEmUbl9p1S9SCStyt/5nvWCfANgZsfdWbltpcQzx9+96x3KTlWEMZOgaVEJTQUC
vISlfRRqbqSZ8cgNWZyrRCB0Z4oM1ywQP7QSUVZe/jfXEk+7h0Qq30UXdYoru450
YXkQJgDsXC1Ym3MBiqcekV7oFfnpOdmskC66GGtz2gP8a+uPGNxL5FyLcMxDOK+1
s8Z2gcrtHtDweZQHFFT/cgYU5dvCeJqML0x650HIZvRb5M/03LRD6Uk4tjgVwHcR
us6OSS9D7JZF3EgYdxp+V0Kbc87hy6vz0PkrfFFFy3JmNBHmBDG/TGtDa8Hce7W+
6AjMMzA4Bw91Dw+m0/dC4YjJrJJRvHMCE+sA+5ySEfLDuuhYiIGzHIu/auPDPqEa
uODqfOPYpCMwjhhNaVR7RZ1eRNIlZfgbOfYuRdDBBQam8yYdgeEGDLzgcq6emjSh
gVnLobv3qP+QqPQGMGjp/DlQQ8NJfvTpShrpoDtAHFlxJSjIG29x9BSJ2CwL6ujZ
9wLTEiVVZN/3lBIjDAqULu8Ocait8O6/q4zlUKXOw9LcFHEBquzMjzTLRDOBp6Cl
9Q6On2JfYT/nHBiH2RB6viw3Sf6JUS0zOQz9RPn2trS2x2mtJ3NKWlQyM5W2itHp
M8Ge239ACBDi8em2OXu/Nd8Y8GjBujpMvvzPZN/HN3PSU+PbI7FtVPS1SKcGprvf
0YsO7U98f5cEIykNLGyYHl6PWWC2THCw3nF99e4cf+eKbTaNBhGq7M8+8kP+DH8L
C24hcGsrzb5NKWHvKzl7rZkft1HmsoLwigsDNp6ww/QD3/TbPFAKjpstrXcDjgLP
r4gai8UB0zm8LoMDBS5Bi0vqPcWbFNPY1XjDp+ocMUdQM25RzN1LNsRHGT2JC09j
sxiEKfyB10HqM8z5ejW2UwYkoqJhTGSlKECLvXWi5Lj5hhu8/HaBfoklAXfNrE0R
ecptY6WNjB7bA7i5saL9qnibbj8clrAwji0qBOAcuqDdVZyqBRqdqWM1TAOvh1QS
PwRMRFd5QMFvLIaMfAC1pSfFobXHq5C4UK6H9LeaOeQRqtaSqmiWcGDlPP/rLcc4
BPUDTCUAM25dQQWWHU485Yh2EvfQLDTuwv5bWLMv2JMupjlDEPKowaBaxrLKNPAo
mOh8NLERQMajPW8KA4jX+HuImK1BpKDDOu87kgSYKTWaul2wfYmNmIXgf002aPoK
jiCz0HN8YE9zG/F0/G9fLeqTht+i1kAxZpBOu4ZYWLj5HNPESgekwLw9+z4eAoM4
EtWKE+eS6niG1q+3TU8AgxTaB9f9JXDmdPW5/0VWtMMjcogTd0rQRge4/Fq99wPp
7cOVSw51QLvboWD2FzlUCacUdgbMzVAhpUO3Oj+ptlmZCCB719J1pLoUbfH7k4ex
/NsTIqvmBHiZ6RReVddLphSaPhsd2xmUNqxNivIu8SKTQxMlB5TMBXG8Hqz5y+Qw
F27XGizY67zHujyineV3qs9c5Wu0lbtf1ihpQbc7sLap2oNs3EaHMDvSJ1sXOKUY
h0XmdRi3g0A5Zv0kAEWI2U+K2L5Z9DlKXSLl8QcZa3b8xWEWgzbrabKUu8ZIz4g5
T5wln0sWYg7ePUUEGjfXWfy7tveJ7mnmFnF79D8n8Vw/yJAGPf9j1MhmOJMw3Aow
4gxRvimb6Q1oN8iM5PNgB2zfhKzJ7G1QCxxdoiOFZS0x5QvNEQhOPFjMm+Z3yNQM
O3c2FxfNK08T8wbYZa4fdw6Dp7mqvP9lxvPyNrHjwsrCwUONRbj0IxK5L40C9m4x
DyMgozLpHt1Fd16Homr6+2lUNEErJPSWpYzCnKDKcGI7nF42GEkFmu0IEiXjPoOX
TZdn2dJoPyCUkHTE7mJhqtrReglDxVOTPhzHIGscxJrug98kmnQ+VFgqOzHyWUFV
OBpTtUojvEeCLEIBjxY212BQToo44cf1PlXPtZBDQbA7N4CeYaQ0yZfWjCgSFTdB
9nZNxcqCDVMq1FSTm7kC7JUZHdVy/V8DF/BP6ysysH5i0aUgfG9QcIKQ65Qoappp
Bk3fWMWDx2LfyfPCjio/rZp0m/TTfOazaFUan8mieDhMF4m/KXwwpAm8GogYZOXC
F/ecOXUJkJw3qjHtr27P0houmiRj44KJw4ynI7By7lL5t2Q5yhqngrWyXWCJyahE
JXjzUFA8UXEe4kSnLFGfo7T+K6cJ1VBK91mWL/+Mj9kP9X2rpD1uH+ZMZNZo0OTN
+OaYd5ia6R9H/kbO44WQWHecn9da90z5bdQjN8qhWYVuQ0iffTzYhpf7HjUccNsI
ijcp32L5hs0Sj8F8GSpBtU/5WRh94tIIKGYhgt70LT46i3FkepNgMwN7ghnaCcKX
UJGrSGMUQUYKPa+CPsoUwQ9amukO7+1MYtNuDaaXeHRcN301GqGn7MwuGjapV0Pt
ksv1ghBkJNw7O5UdMUZY06dfgZG4hw4n6qrBI/tZ+Ita1PUeuLeDyxD7ySemKJqZ
TxwfILw4ax+n9EJJOY1yGtwEJ6EWCUdeCqxRG8oF6uTUmYh3li8PLL8c+8bqUyiS
6PhaOUcZ4FaawxYflcbBsm7QxgILB9cuKGurEqLTd4MRrnPOlLY5KjvgUT6erdWE
M5EPguHkkVuq1D5vNlIapdFjaFbJA1h9LFTciNlJpDHkn0Ba0VKi8HRXxKv9f6Fb
0CoXzS975hUWTV8d8c1yTK3yllz0V4BX3u/ii7YifzBpwvWXwyy/CH0GxZ+88qvX
9+OTIs1SrEYCv+kRymNiEqSJMRxkaTqQtpgiSpJgWRQqat+QKOiWfgR2W+FC0QsS
aqTvzzaZh0l3GTq/cyvSt8352g2Px1yeZXWGbw03LNV8qCDhgySQq6cKTivfucfE
e3IxjzwvCxTWI1YF6nvQnHZQBfOQYrg3DFwPMDwKdXCFMfMdK99s1WfA+xHYHjET
rbU+C/NX7xQALMAlra2AJcPcnVy+ytCtdNGZB5wiS2jO/tvrZiwnYhSgO+snYq+Q
7OGYL9jbcG2v0FA8RhDifuYWQ+Pr+NbqfzKOpittQ52/xws4JLnvJTXlk2gz+UTG
ZGEMqyRADj5ztsqGx1lwEpdz8l9OciXECLaAZdj8LtDQSizF9hpGkQ37TR+Vhmk7
VxqFNzxuMAfR3g0Hh9y5Z8+a8US6kUe5YHUZl8rkdKBWMxcBoawwC5noMJY2hTZo
zzTwC9O1Ldy2qZk0jjzs82crzqXZVkGmG5JnB6ZCHG/HuyF02pdbE9/trLcG/Ckg
K/ONw2Z07cFnaq/blUqVrWyMX5PxeiL4vgOGH00xBZ+tjfsVNMhRVYUbIMkVsrr1
bXeSG3FXI9v/heaEJposSZcKQ72SbomDZODc5j8xZmStX15zEYN3TpIg9XSBzz9o
U2qiIX67jJxvZJKufCgBUMqWuoqPsGBNRMj7RSt6UUw6hTmayboxGXFUu3fyZmjF
nHsMauu9NBe56ix9r2k9cvJUvbIIrkZcDE6vyJV7e2OicOLj5Qr6JB4arRt/AXII
Ku5dER7dYVjVd37IvT7+qKmO99/KIPG2y2XR4LpZBHZGsdHVhu55TBRxCJGXEXZp
+uxMU+drK4VIuBQfPulJcdlCI8gqVUlbIcJJO3f6GDAFcSSPjfGvRySBpjU1A8kc
Z6KNjFqeSpOJ9R7nEXKJ0aYHEdxZuFQaHyMhlkkTbrnFQ3fdzQtP35hXzExE5efF
aIq3vzRYDG7piZtHZIbY8N49X3y5ykukxjW24Xpxibd5PZjXVwr4y6jyr+l/ghAl
47NVc4BZ0qlRcTvbUv2LKUgX8UZhzqfE93yn+I1c9zJ5CK4pdIxFNxPgTS5x4znP
fiH7itYzm3qEMmIAwDw/QtmoWRN/MokQ5s3Xtn1CxK2iQbsasO/D5dOkIvhr6AYd
oZEQyTjwPaJkFuOKDWog5h1CaFZccOEYN/Ckep94jz1bwzf9dAxLy2m4LQEqTpr5
u1l36dsJ+R149yRu86NqRsLTgQirCpACC6qYa2zh9LMQuYOC6zGIleQERvuy6Vd2
xk4kEhD78FDO6swi07+c5aO42sA4W9VpkLyEkPRvmRn94mHtaofkE3q2MbGt2e3G
1dEGP13LUAfD2BcfplE0mtEUMUycu6VIx2BaXoNOtociKPe8WflaIQmKt9lUxlgS
ikZzlxpqophcxV4CNG/CDFZY73ZRlwK5CiZB6pcXBP/pAK8DVeDqetvCuR47c3Ir
lkc9wHrb9WpKTsu2cONhHZ7d6gNh1AIvAoRaIzO0xHjAd5lQn/OexBEbtrxfvanc
ouGXM5l0iyS4FuKAz62h1ZYMdUpHdsUh7/W8Q4kfXX83ISfLbzQZJhB5HbhFGQE0
p7W9mEJAmCSz90/rc6QKffDBz81fPoSV7tsPfjb96HgsE6Yi9bokJ8qpt4HN4JvU
b2EY6V4/oW0EvhNg1G1mzcBseKKZzn/bVkfKZaOl77prtWqkMZsP5seTP1Frv7V/
CEh/eSSFMEwT1DFIRYXJvsvG2B+IAH00dWs/dINfPIehQRt6zdGkcPVtA9zPVyHJ
Ju0HeTLKzRB7NC4jrNykKCuh56EBzUZ40oscx8fEfRno2+9sKZEJA6NUXuPeDC/T
9l+zwIfiwHHT2etJ/ir5lsQ7oTMw7pIYnJrqcYoxd1TRTDk8HdyRTPN/rkoIpVX7
IG2rzhwaTsEs688iDRdYi+Hud88bPfnCtCSZn9yaDAf/pJmqoKpT5F7ymBa2acY5
bYLBTlLSqeWRggiOijAqIks6WAHBXNkolVJ6v3a/oBJTFxQFhJmnV7ph3Nceetva
7qKXlHxQLHcor6Xah9p9b4mlZIBGX3T4g3sH664JgUVw97e6S0Kyc16zP/DfAtJE
Z+P3N3m7jzdouJl0iEkW9MiOnFTBWoMqd4BPLVpYxrDeVptSTubhX3kb783aS2tP
d0OFShrj0dEtVg3N3gdGGbMIAeiXz35Gxo5b74KhIJx//6yOSZjRRMR89E0JkvkB
46W2RX0pEFZQk/AEPUtJ63L3sXdPfWBVLlMS7xv4GMFoj/AVTd/O66tX3mA/pqIE
ZcH0GdVvjNmeCmUEzapQDc8YLcwgrRdlTmxqhLFd7r22oxtITaaaIpf5pk/q3DVO
Pr9PsCF6Skrf4GasFE/zzWwC8x4BmxH2mpsFmZgHgspUtmtLZqoe0lfFpplpZuBM
t7FoUMdAdULA2eWlSauoifsAfkmq0TcNFNV0XCwl15ieIR6PpTNv2XdLWqvYRPxP
3LcTBce/KCwKTCM7j3G2TABV0RhFWccJwix5YrrM/Fjp3mw4U8pkT0Ubq4pOmSNj
rYjiyOar+kp9ESL67WIOugjvJex3mJoYyF3NER7zLJWuhp2Jl0X9CBDfLTyPkdaa
XErwcuHmwtfpc3WxtRWfkVEUqHEoJmaak5bFM1DSv2KZV/05XlJsISVk3Kug5vNb
PqIDGsNae/BwgHF9LrezJpgFWt3qM+6KBCiHEylcA+iU9n+Z2Cb4vFNBJHIXhowT
b4wAPIPF8Tp7jmE0FGUDaaywn1FoxqMHWlQmCJpiK/rAlLtoe/XH/B+zHj18ACzK
e5sLofMcCqo+mkzOUluqKlQ6aF7ESURmHBI3XaIa04hi+t6AdqYts9UCmbAuqQy/
49l/O6eFliN6iA1Ej6ZOHvG4uhnu8CYxEPoMdJbVGoBP5y0r/H0VRb7G/WfikZVG
Bwb4JoCewZhSk23bohnHeSfb/lzmUf4taB00nBf1CjaXyCa2LOCs3cifkQbdObSD
N1tYuewgmpb3FheDW1lFylnV6Bx0BIj+A/7Kb/rML1UbwkA0u+MhBFRbAQ6Gwly9
sYxNaI7tVthVMWQ6gQKdpQLRUzRpleV5tzPc6YM2RKr8GHbRPSF/f7fxMTjLo2Tk
UwDmmMvOp2RIJoLFDdsJAr3q/yUSc9juUeLb4BLULU1t/rt09fyzQaJaekqC/LAQ
TdROTOYVWEN5PEssWMa1d/aq3kuNJvNQOlCKZXEHk/H229MOVx0bg+pyQL7SN01y
S0zKBMg/5UCkx0CMYpoOXmFyRWvPrcFRkjuPn9HaNTsXoZs5rbKsOwV88+kNQXea
IU+JH8/wxQud9tgOUb2dFtZ4zV9+no6ndODJqpwXwVKwasoyefsWLvJIb9eltSTf
DOma0yx+YqQGh+DyO9DJ12wMpCiM2or5w6Dg0+NGiJkR6YF3fn5shxGTyIq5jhKq
fc4STh3WG/o8mHN24Mvuq1DX2C44jZgoG4pE0VhSIqUVrVp4s/nvIoCnB/nmru5T
X9FErYxzVmPkEdgEG0/IqVJOUSR0vuV+ScaN90hC5XaffemYcAoUIhqXAw/ygCmv
k0PZu0zGSAdf23fzPXzUrJyj+fuxZ0YJLU+ZWMaupMJf29+HhD9dVbDdv0di99Cq
sK+EsCiS7P201xyYnoGaWEw0YBoxq2ae+yXyIajU/kF0/ZBiO0E8XV5hIWULrEnP
C5AZs859nHRTzc0+OXJYn9an/M/PqKejQ6SbnQgE1WCjbJqi1hVzTrgf63mV6Ejx
M5x+bhFs9aYWDT4ejglEnkxOnhHAGnjyysCasrDcC11qX+TWvDyf1Hngoq4OB075
d1BTiUTAnsnxRfHrnCiN92Z4B2ttMxtR+nZ4svviXUDpMtPNnXN1YU9P3SaEt6VN
CmO44obav/7Q0gHobcpFo7z2njznYKNgMqN8IXa4xeMVOcclNGOOSsJKMtV7UnHp
fyH93saq9lD65Lq4Og8tqP34hhLBW0o3mJBrXZJEyi8YP3cs7G0fpxfpCtWn8FAr
AE5ONX7Yy21Q+bDxiNy8PYJ5Z4NBsXHsxWyxTa7iXi0cuTSUDt5l6gZlm38rw80f
gLBtijZXWsXYj/J9YlHiJmSPafwUHuTFEFatsGXZZC1paZZiSV/b7/4yf8wLqT+k
nvIckiL4QduXLg03GvEJdLiyUZeRqDiCNt1X7Hj57Tj//ZS3Skdnp0/mWdqyiGNn
aEYyIMdWIqMwX7ATSqET/51W3tstDgmgL8oqj3iOjhvkh5rJnnyiJFDbP2EZ5k6l
wSXft8RaKeKOURjdz5nMOB/nTynrduc9lS+gvQ9viILOO/pSKGrInGSX3/XFcR51
vn7CPtsWLWjfeUZAcUNoZ96GlNVPgizwyoYobfrIRCcUWJkd7I/SIy6MKvufrrmD
8UxaTjm5yzE1GMakh2WnwFqjlGTKzI8VGLzbVQHpfdCsvDSfMep7w/3xbXXoF1Bm
PNte6WDr9e8WB43sB47ssokYFelO9BeW6bnz/BcoRu7xO4uH4krkGs/AVITOIynw
foMBvWefgExcrrKKYlOPCLBGRmkQLTZP30CwI7nzVopFfFTC+qCWDa1tTGG5WV6o
hj9nBZveHU+bpR4exNB2AOFbyaFTdpako72hBftVDA1JigAOcuW9jzJ7rbBoYfDB
XvAOyuMBUFmMg+7BWG60WkaXBIPWlX0St31mMq2y8jWwHUawZLs+3Re4GV42Hlhw
zRC4VycmIq7LlftaD9qMcns4qApdtHrtnlOLyHLbjn/bwHXJCgHL5a5kLdFSMguC
svBUGZxNtKp/LkpFeTdQdqnMeKbVQ48AkJT1I7SxdUxlhD98x/J6E7CL4J+B8YVV
G3pnAA1m3bTbYbpTxXE2nORtYU+ducI3xZp25f1n2aysX6pVx6VG5+B80d/saLkx
QaY88QUUNpBnq0V+sa/20oc+xtP09uI/6c4rqzivch+Lj9RdfYqMcxixHgAcjIu0
qC2uGu6cwPj8+QaMetIRjRhn+uBUc7SdEcaV38ATifj3rZ/QEG247x46Tt3tIqw2
zXYqG/gaEcjr0xNzRjk4bDxj8sRWQe2PdGhMzN8RVIW0st5xwkS+O3QgJ+IPONoE
zskjGhr94TXA1bmqDUrOFLzLy65Z5f0D52BBtLt9mwAqspiIEwYCgdB4stQxxa0Q
caXLuddg11ERpQOoo7TZVczrJ/ds5NF8t+GWlYxX9s39lQXX168eX/Xag6PHe9Vj
Dre3DraxME4NRygtwvi4VZ/ZPi8+hxPSGQMTiAQSp3+HQMuqdh/w9GriThG7fYT9
3czP/425H4i8nO7DdefwxK9vJ4qJsKjj1Lf4RpA4csMj2GULD7b/kqbv+BHjOLcd
3xMqMwlR6uCLiDCMoCWpwtwH8OI/V4kUe9hRQuTkela7/ISst1MRi4FQRKsZ2y/e
hmgJnleMNdGTg0COZs2SSJkJgyTusXYHlCb0COH0IolPE+nbZc3Ea0+FVYtFux7H
5SMMox7kgtLsgRlSzMy0E6z9SJwR+QXMbJ7yrcs19Mf6knunErsAoOox3bAGFi0+
Pjs0Qdwba0IuUVEgQMMHZ/XbO8DUjzU5EU+weAM0iJWFYdFvi0/yO03Zlk8NkYTV
AZzu3t+4wn2qSLfg4XV6iMPegjj9/16oVXxBUYnG9dC3EmYNdxBP2gV/LXQXHyg6
2cS90ok+eQqcQR8bfBgB1IxgebAxX9q4heZRYY5QB/z++Kmj66hzT29sboj9goak
n3zvqgCwYKXUUDhC1xgm40RtWhJ1hE4KppmMw8hhVyWCTasOHIAJqvFbBYfUZAyy
H77qKbML+OYkpI5eB8SsJOfzutGAHDMlRGQBFhHaWSvSbxxV6wbXxIEsvKXPuKvH
KXKrMW+7s/j8RH95uBhHWc/76jm11DTXCj1fC2yPheUo59yol1o6JMYmNikfHdyI
KT/bQLfTlvfquSnXrvFZzuoNwMyhdP6YEg6S9Xoh6FtiUng8nAlE9ODqgNmghqW0
nTOyDIjac3/ebj/9/KTdqe3be+5w3xRQLQEkhtV9knsOI4Jh8vI8a0sArNQNLyI1
HoJ3AraOc1wW2TxO5GSL0PZxQopeKMRun466PkWz3+jwxr2YiAGoCzSnXbkvqTQL
T2csxmm+qMaHELPWEPlAiiYEZQg1BV3DPbOPqr510kZZWa4g6JXO8ODf59qQCyDt
gXhxOBSNVWyM0lMryR5JIlhXeVQLhdzcej1vnAzZ45VKMRLloGIQm7nUs81B8dmV
bB+bl7vf22k1Mig/0BP/E6ceBssCVdiaGDQKyVCal71xl7vywHReI+/W1NnG/wP5
xkepATH+QDR6bdkGDaukMP9kk+zw0+SPHZuljMRTkiIbBZaxRd1bAbhoMxyD9/9P
ziYhvyk+MNiSqGFLDbV/vM40CmBoqj89oF+jVk/TA9WuIOz6Rc54MuMH1Y3KtmVV
mual9wTcNqmFnbhDbdwoJ1DrhIi0yFvZQB03Tzi2hKzbqb1e70bpnfFQl3kHvowq
AVMNAljV3APNHJMcJeWF7A9NNmo6H2lNd8VccTQ9KdrV+y6nzzgbvj9nKNCEeUyK
+FkFaVrW0YDJMhWrxPsF9oiQLDgeHWdSe/iiwFBzJlceZcS3EOapUaJ/jmEfLS1C
iK6wmPP01GWlQhtSTI5Q4hv+4LmutFWt8obgezRR8gtPFGwhYWEVnCG8Ebtp9v6V
z22RE3ytjuXbjphVW6UXWtXrLcgynsiZpqVJ/SYelilF/+EXeyqa5DraYIzxLrZi
Zm2YWka/o5J3e8nhEkTDVM1zZOYDxzi1cyg1SJ/7q1vjL5N5G65NUvRIfFkJsd6G
pYIfw84UxJ40E3JVLWTWHF5RrP/uUhsV4yt12ydTKq/2zSoK8IAqOvEgPZw0vYv1
psqN1d8Gt8aFf+3tsce6VNulYYKxRKrde+4IklPKtfuJFH4S/C9tsoZEl223vFdA
Prhpa8gjmq0trX+MmGWttQgE/TDmDvAXh2AAjJKLVTkPBT49LC/bwO79uJTiP0GJ
20gI0Zp1OwKAtZ0N+SbC5Psu55IYhm2dmGyKugnbmw2Q1REPJoYMXoQmlGUMYwcl
MDY1JzCwpTVz5vnvi7Di/k81eAtEiz5ewDmEWsH6vBWzl1y3Lvmr+w2QHbZfNnCj
PSCxVZItrvF6/w01ceH5mhSx/Z0k/nTndBGpdczFsvkWbHsJerpZXTsX57zDCldS
CF6NwDp8QYwMoesaFIPArdzg8MaIWfjORnOy9M33miId9SlMFOET57vN7+sgbxcq
fGIhoN8tznlquazDA3MP5RL/nRqAFMJsLDZIEfK62osyOKVlWhXha1TFvPLoETWy
H1Wzx9aQDVm4KfU8bB/sugLOAJqa0u1buwF7pQzCrPREEP9hm3AdUvAksXuL7GKs
Kr/xzR10PxSpy/eDzclCT/s3rm+1LMjr0EeylctzNBdbAjFQPFi1I2/9GMifCg38
1n08RatyJv6MQAzqIpTQKksPUWCCWl7rB0pv2lVtvLVspateNfIPQKBaxwpWfd8m
6SjtEaX6HvDntbMJ+1MORD/LLa7EAlAdv/DfNIGAXjsFLk/oFLIQ4EzjLAX8aDZj
XGTv2Z/+Z6c6BC5TFtPbqUEkRNepN1ZBfTHMxmK5DTo1EXoF7N5PhfxQ1/lzwanU
F6vaGEEdaaPwkGa3RXC1WMPE6F692aEwhUhKNxmyVijabN3hUk3kTGD/URdSuKN6
YbnJ55M+/VSWIsnFPe0sfjSFG+fyD2AigGswqBLeL3W4a+vh5+hgzB8d7ZF5Q/9Y
7hsV++gWzDw6YGsVl8TJ5K9g0JYpKD9Cqlv1iIeaMN0fLDp75LPIuFqlwSFLXdL7
FaHbm3VPtpXq3TiRE32srO3SomXnWzroYpPvFXJ4U1ah1Q87FYhNDyFoXgHzqbhN
+JU0jZIac9fTOrWROq51zXxU2rfk8rPNOF/YwhnZAwShc46fITk2CFzKqlkO+NNk
TPCdg8Iw/L+NVlb1vu+gbw15K+WOrA/9w+K75BFMLHIkQe3eK/GCxXPB4/WENQIO
6nPYmHHIyKh2SZcvbH1SE5+S01A8a0HjeLKahl5jxqfWA98NlLh/YTo2/BagHNPx
4Dx0GhRivV1IxQ4J0hJyVE/+NE1MCS3KP0ZLJgJ0Met+CP/2Sijh2/YRs/u3xeMw
jnB31vQIFlZK9jh3kfr9e+GnGjCpxeFsApg3PwvrHFM+XFkvrWybW4sqIbDlEzOs
NSWl02fQABR/ByAOfh2U+eNpWRuIRt2MQyzb/RiA6FmdXylWjjzXDEO3HoTkhlct
ob+jvpCohqWrcWRyGnkUgAtvRspV2eMe8Q7mGamj/400YQaPee8SKpBxxfqZ3p4y
R3V4FJVUQ3WS8thVTxpGw5gOCHfwt4KrCJaJ4QczZXdPWEcUE9Ha//jKUJpmsFMF
HgtsGim1U3dIqJbCzoLmcjTnMUctcfQA29lY9p0kpmd9sW9jV7eQsNEIOppMfPp5
e2WkJ2eK+IAjDRHTrVc5WSlA7OnqllAr+kOTA6QlyfT9mPaZ6oc7AwKJCDjK60hV
258xlftQXm45IfdtJzuMGBxLVRoBCgd31e5WMfcwJD5vW+Ex9yiF/a1qosd4vibg
Qjc/kqvSAayv4xfWPNQFDki3ECaU52YI+f5E0//wda2SQjWlJdZjLl1IXt4xMI70
xas9CvUBIc1WIcSZgIY73Hf2Tvq4VmT9DV97mTO7xhtmFuC5T2F1QHshCArU5FaD
j9BcPBvDwEy5ABXvZ16SxqlQKQpbb1kpMKCt8RD/7wB3OV9PigxFEpxWt1FUMtqV
sQ2ekVV+vHPUUYKVIdIf7/0zc6WJ5gB9H9ASKZDYpzcKg7ZoK51UmLYI5ykqwuc5
dKZGveZW7H7+HKEA4/YbxUYAkbs0B7Mp8ExvVKGA0sVwBo80+rYufwys5L1r8a74
5kKXMp2DlyiWIVI2It+tHqugiqsdmQPPowW2MdUdiTbW2QfvO81DKsXNgDGRk5IE
YDi8uely03VR3+Kx6Qi0faaREfCeJdZqCwU58B5Jz3TaEE3L2b3QPLlWWwIP8ZRr
zdDlhqiDx5XD4jTFi9NvS+AaYf+XblzRg1M/jHQ1UqWvRFKQyLttOR/vO85uu3Xe
jRIt9Cx0Sk3KaeHdY9TweHnBBVNVehfDjkdXsnYKCfaOlS0N6flct+Cxd1aVrVSV
glmDbyi5pHCv0Ax8ZdrjF8haEKe6jTB1PfalLrfxOG0AGdfGi2FvnwQYht/wCYRy
HvLSdImcGqSvipoI32PBJSr0S+8KjiUXLMD8r1YZkjkRggF5+hT4YnUUVWTtdOP/
JrmNwLkasSkHJNN7PvF3eDNi7onLZZ0Q5HZyOTx9sIVEzoJBA3jbKOKyw29/K8VA
mfCC/yZ2yItOPBa6rMXHJC/iNqlTa4A/dH2UJegsks+wAxduAB1CDnvAoVEyz20N
XaXpRVvFLuxc165l9gFxxQu/wQkuCRm1Q8BK1LncRtMdZi8rLN+kWcf1m25pYZW5
agKmg8Eh8XgKu39SnuKUW+HoMTSwOEOFjZjgF63X4l1KxDjsURqcDJr20JPplqhQ
lV9myj7lZdbu7Cn8qi0RJRRHjmyKxULrGcXnhRrQZjsh4sLCkUKInPhHxE/Ssa3v
YtgQiwXfHENeAbqJigwNyy/TA6mEOAJHTvomPZvF1mOOlxjNevxz25MWWYVT3cTY
xVRpJvHo0ME0h0YZ4D5FMfawSYmo91gjRUjM1wjp0uEN6VQcmBcirvHaGpJnISDE
wOUSucnOTeoMFNBIs3H80oIAUdoCEgQB9Zmx7OFpwCbU15Oj9w6kSbGkrclAmmDk
7dbDNB5j2Y9+a62KZ60YSE+aRuhdODZhHIhrm5blB1TSC2xdc42nePP+GDg/lJCN
NgtYdnylA7wWvEQynqT9Q+N60AEAJvthpJXRACC37bZyNqncuDa1uFvvAL7U46AL
4KpgjyFNprFVqI72WVWGxy6wVs3RIlI/FqJ/XQ5pb1Rdi7Hl+FoeAMt4sMROOTo8
Nh2A+wy5fhNeQHmsWkUT9a7x1mbR2+8f5F6ZBDACkOm8LgCC+wSVal9y6AQUIG2j
bVVrDy55db+ul+lhrySIB0xygSbfVTGUXq5yL5gALUmbQPuYhBDcLe9syvz1CyPE
L9C2n76eaTjRV4PAGixgnHVc6Ehe43Ds/Ht63Z81udJgBpGO/dUzyJRoo6OM0/YS
iMPcKCxO2xBeClqioh891gJF8LTVlz6SvzZMpTpj0pUMhg/1BdPT3L8u61UnoMWr
aYlWgjv5JbyQxEXODrdpjdr0LiBQDoha1FNRKvEQS5o0q5NHb9z/y1vysUk8bBhm
nkL79roHcC+s2IwJcSGjIViGms7A8VbqQSf9aJ9OHX4uwfP0M3OCkcGAYDyzX6Qr
sx6uQy62/2Ojm1438Wu0mPRdwz/mFny526C2BJ5XLYCGg3hp+NfTrCNjn6iC+zdd
z/1RRGUEhxkbG9695OOZ5kSIYyUcHPWGmZXxkrDNrxZmeHtORqhrvd1lZzZf6vfh
G9MRH5pjWXfQMAYzlgy0LkDiWeLWskcVH3viKCZ7XYqF78Hat3+VVa6dBltnOuNo
EKNBRuPiyWaf8beBSbsIzarJHNGee+wQu22I9kkivUSeulLZy0S42CaW6nU+eE7H
e+aGnV++bx44XNUTdwuA12BMQMLno0KjOceCfluDXR33hpazVyvGnJzwyN5Pwkcy
X9kQQpUcoQTyGdD10pj2IWurYPgRMke+9+MHXE2rlTxxynNX+Mdut0r+9KfFXqWB
XFJUj4wd4kkc6TXiRR45hjqEuVLVIDdJBkfccYM8EAV1PCvKP+y7xtaJ/HJ7FdzQ
GoFuQWq37ewvDj87GJFRL9WCSO62Q/kr3fUleVo8FgtjEpCu/4xgirTmJndsI1ya
cf94/EI/5aIMpJJPBDRTGZTDeiGVAzSzP7TZnQHirlmihtoGAQjxm6lXv2Gs4QuM
xrxep3CRjeIT7RLHkMYffjBv8hjNn4nGuvUfyuGv8t474Uzc0poSCJLxXIacDsJn
e6LnxvG7J1SrGVIjSaIgv/Ci6YH3TkAg1AZ8UphUFb8B9BFrvIHTnD9bHtzGp+NL
F+mevqBZnsFWZzEMMa8e0OC0QaSs9soh+6IFyeD/ber9IQCatC7eBRQEXPPRqYeq
hWj/N7jT/l/1gnMnQDN7FqXXOvOllWuBkQpmI7mA9p3oyErLdkhCSLI6RsDGziuQ
RpARRhgVfTv+b/w4huoLDVvhOvDMtVWDX6XdWjLXSbQvUr0sUstB/NUrDKi3nqLB
x1qxhBDB1n2SIy8+0WnFaIw00rkJRRQwNLSRdT2ljG22T7NevdP+LyOiFfMHARJl
sTBEcrJwQCsnHJjtQMA6FBPRu2G1gtzpMSU9HPDRsezNtqmq5mBpUVgtP0xE+S8n
a6NKTe5UmGsCwCANA88jtkoEgKj7pgXuWZihZo5v+eTSKTPFmDrVRn1TqxcNFVsu
QiA2IWmay2LGTTdpQg8yXl3BLtpLi3E/Xcjv2BYcwpO6E/FUYKxdv3NizYub/NRK
OdDpuaAVNPiRJ+HaIdNl69rQLkLo2KjA/z3mwbs4BOayIZKe+rDqdLK1DMc6A4uB
jnSR8uzs63l+h8hv+unggVkKA/z4Ce/M5HQdF1GzXAmoGSns+AEcBPTxmgAMSs9l
xrwWptiMDLCil9wU5cHd5NwJjB8g/9kggl9j9YUGyGXdkdPladJmi1ziV3XMYPWv
fcYmKu8IqWC2VVVdaafkEClgfOuRIZKur5iu21TdnZocJbtV17rucYph5aBtRSpw
cG5AbuN8ZtT4U5xWv9eRVlCaw+taXQ05/FWsmMMBp917TKxuWcHL3U893bcmob9Q
bA93W2uGBFewqiJNt6VQKJnuxY00Aj1OcSCZpVcrLtaiqShVTGcBjNhTtcFh9d35
OUa8NMdSbY1UTwYokru7x5sP3MdDp3651vGjm6hwzgoI0HBka4ZbNRNJldy44iOL
qtJ+ue8uSLvU0g7mAI3uk/A0CBJsC3EDvR89JZ8Om6GipnIKMYUO//LKUJ1gEIw7
SPJv5oNrHojdsA+w717ab4deDS9SAhK10Tn00fmBfBxGGutp71VerXqqphmpMTpt
W0aMaTmKgR8iEsW2c7CZTkJS43BmFSdEMTcv6T/t30zNlsEobTrsvDjweEFzVdJT
lFgp/kpcfc0/GAQe+G0yLGq9yLl26/JVayx0YfaHA5NBlBpWbroPX1BHQEa8XYe6
m7SwVkAqa2Y0VdF80S2wwrG1veqAeQXVY1hvYqQHWuPWGQR9LU/xB9UNS2Rk3Wig
R8qeFnHPGnymwPN87CGwhbeUz/N3F/XZYIrUJHRoN+i40CZnBy35FhRrxEE8Vj0a
qAZVtwHsO9wIwkqZBDPIzCa1POulrv3gaGIRaTVYHQ9q9nGULW8Q6hdRI7FNLR51
9P9/yyurIJiP+yETLpTmKaB7o+wkXZDJITlZBUzL/0Wy7hLQ1+ksb3Q5H7owDzmt
ZAL9IdaFRH3P+MXEv/CWMWfnnH+vkgGXZWdX17OI9DzUChACGS4isezpVY7DdA5/
FviPGnXeoTH82GIV/LX74M0OOfnd+EhM2qktiOfNNHbpJdX3WxCNKc5OMt/F4toS
lDo7NKvdMCr7Xecv3LNS5iioEQjqHeaBOD2QIVEpP6sfr5ZZtAmmMx/DRcNinI+R
QVb1tbFd1fdVpQg45VJmvnwM1YpvmTsvcAgChI+TINttENHZhULFYeLOhWG/e6PH
KKYVl/juG22hpUxHK5NwYNEWY65/VDQB4sxM2KJVabRwEQ4edQxrXJ3mjtfLHbdG
LqQBY5UDALfGxj6pDvIHIg6kppwLcjsQ5XGCL/jG+f99UeH6TUJb/YILI0nD4MRN
5DxNxruV2cd19DMRPXbF9ZhAlJAm9Ww6ciSAmD1ty4W9pDj44YDD1aIidh/UbFOG
YkV/TPIBegI0TRdgu03+Iiwswezmevee7sHqY9NgdctdW2lAXb2EYPrYjKS3WoS8
0EqWQFtFh0VeP7AvxNUUvMi7nhY0JZc8loYzmFLMPDYyA4R2rVAAoyvMJ/FDZZhA
21siflNvDEiBsz2676kubumiaZDe8uLhNY3IfcVkhej4jxdJ8O99etGTbQT1NT6A
B6o1H9ftz6rAKu6Y3eXUgAWEE860M6ub3kPFUh5oOJ83cnTmTstRk9zKZfWwFWRB
kqe77nEu3AXEPImvFDssDy2opg9eSbroUgc2yhXRdQS9FavVkdJR7k0q1/CQr8ZP
sMfkTuQ74gX2XXUBRP5QS4t0f+5G4MPO9o+6LwXyBp+T1J5dIeX4BQEGOrJz3tkB
32lKtWBXpyHK5WyZhtCY9FGqiR7reVO8Jln37j01olSuhVymatiOEzoBmY6v/kc3
784tNlkrJR6ysiuBX7htEt9NTpjDcLIBBk4X9BEDen9wJ/4BIJo3oFdmlb8d4IES
iOxPnUpQxHRJOEP3kzInWKhnqG+vMjvrBzu4d4qsB6zQj2yAWzO7+GPiu3ybZzMC
8Slra6ct7lKNWsgyUZuG6dmUr3k7l/n6LpN+xD5f7JrT8c8twOXpkCGOVA2hrRIp
VaAoQw5de4KiOh9U0vdlYEEH/7k+2CXL0bk5YL/qy2kRwpPikyenumhsXEcIuTtW
rWm6uxIe75yMQ1BIn76z3Pv9l/guhJk5/EhGVhZnIrnBablcc/8vj0XC6lAivdyQ
cIPm1RruzQW+dYVHNxpSbYtK+7eeMOe/5S1K9e/oHiypSo8dIPNxAEnsxb0fK3yO
Qu4O/4jF61c3Y7WguGNCAYQJvuIV3hcliQBjQAThrIEwpOHXNM463JcPuJBF/BdB
VVo9eYIPoPKM9jDQC2PuyOHIaIaoxvqyUaS+EbzUXpjkIB+rfla+LcRPJI+Dm4Ux
cwqhxi91NpCX/6YF2UOxX4YyY7Y+GOw2R4B0Re+B+vrBs+MmxADU9QiM1+xGI8C1
eKh4EEwzHpHTF2jd8bn5UU9mPN2v2B19p2MExO1w/h4snlkyIHHzqGKBxjvCiLph
2V/b4ysYXER3l93w5Hm3O88F/85CwaB8i7jHV5EiPvnK4jA/fmA05Irv1eHk1hyH
7+1JIM7q0YX6z9+invjTYzaRS836da7R+2k1TSDeQayR2WoeyjfdF6rz2fGrRuVb
CymY659iCrXynX7Erlrjn3zBsXiz3bJNUlEHFKOEDWkQVjvCExQ7p6bKrkfevhOB
N2Ot/m+JqNekCH0RmlWVWvXNDSGksaEoj26IehJVTCwgCIe3X3De+dwSV7jfGyYQ
S3j/oDgykk3k68NIIVBsQlCujYl9Ck0pMzwlQYJC1oVL73E4SAaVfEk1cEeeS3ke
iJZjnHNQbGHWekbclJmbG6e+P71X1I+W5Z9NaRrR2Zmk5lSr21fDesNpXIXLSyjq
EYCJpc/rwYwMX7E9rCIR7g/OCJmL2fOL/1yWc2XHAbhqn6hLkkUyM8v/r7cu33cw
v1H0Dl5X3AfEN9iEJpdtI9jsm1J+b5Akl0HVI56SZe2d+nBlzOOXWOwPHi6fzKVH
DZVQtOKgUFYNUFod+0z742Oq5CInUrcNN34OsG99hxQynEFDqosaI0I6gNCFNx/m
KJ3lYrAsK6oBemSrecqDmMTdTfT/QysErJph81TN5OOloNKmQeGn7tQ/c7RNDyO0
eW9chf2AQpbphsBxAauNe6DeJEnaHcUDgDdN8P9vjM8NHnY5QeNkcpI5kIqc4/Se
hrnjYPDHblJLVvYHGfLpr3dYFVCpZgz2fn54gLnH1jM+W/c1NWow/xVauYUuGcEW
T6ZJq/9qThTOwYK2MVotVu8gLnYXLT1uvXlEWxRlgIiaqW9SbgAxAsJasjpJCeUA
8qA1gsaVw3oMGMPh6jW9A5E1vdSMXH0E97JX8eG4DNiJYpvJBENB/HPcDJv0GFte
qw42sUpPfdjx6F2wkqDJnHivdhga4CdYgf2ov/K+iSh4BtVYHAavLOvuqE9UIbuD
uhBqWsBmB2HFJfW/Vlt+2bQu3GG4dTN+k1HbvJppROzj7gaSikVZB6wILYYfbXk5
pn/OQ0PdbrtVmrM1wiRKJxtv5T22KBEhDvJcKG5M4P1v2qID7ugXyExgjj8ALsOB
J5cX46n+6ki2huW8oZR+s7cwSNNX10efZxG2mTp+BDsFny7b3p7W/6vSdii0IFjI
dwgbKs/d9QGuNby1JsFDSSE1ZZrsd94A8PJtbLN3UlqS3NLKshtlcQWYf6odqcZI
yiVBaEZKX7YSoYP44OulGr+Ch/r6sG78U5/p/w0AUWRlE0eukTGQGTg5w5cfFwVb
+coeslpyOajfun5rWVlEre0pDjPjDl36l7QjH4YqrhOMOFvRf7orN3oNUox9WENs
m0nmyjCatlitxBSwf24wyUOvGcuAgpXHuLvMHB0zDBmFriBHJZoh3vk6nG47qHcd
tlK79F3JosJM/i8FrA/2plBhTVrrw7CLsCjwcticuw7EabdXrabUR0iAPxqqG4uV
YZZtFVBJD0UgF/rg4px8MGBjvZclEZV7ju0i0fc1W1R7HvouJE035rriyk9I6xWt
1sZrEktT+FH+EeasYpJTDnq39t+Q3nZuNh+pFObb56my23mbsHWkPXhjTMIg0LpA
h7bohPrvMJ+AZBHqrYus+RZJmFygo0mTEdGMOJ2TMyUO9eD2h2xwVuAgyoCpM5tA
NmMePKJW4kf6hW/Dyw/ZGTDPlFKA9yNhz+JoQLrTA5HSqPpng1UWMjdSqgEw2Qe2
hoBmlCuCHwhXW44o+lIPLNL9G/xfooao2JSPqMrIJCTFQtG53KQKl/wZfvQGwlQN
t+qlJlWbFsH4Nc2ERX5SPCq8bxQVx1w68nMfW7ENDIUZmNY8isA5lRlbpBGXOP4T
u8Z/L5zX1CCbra9m21iLzMcO9Djmi+WpTDdCJLssmsS1EMSPZPCvfsGcsOTzPswe
LAZyH7kGC9yfyR+/CHHYtw7xhGzhXuzZX1Dy1JquiQDmSCuLq4oil6y2BKlLSlHR
7yQpzE9eVO/TpqheXeHoj677SroOSYlsEpR2r/u0iWTIjKRgGHal9dOuVXdibPmH
F64pZbhUkUjUK/61Yi6r5rCi81pdumy4+wAO1zk1p1ntlB5UwfiwZZs/Pd8XF71d
6NtwL1RUAlxSaVUztkC2pbEigD5v0XwasdlOjvcnwf4/Dyzybi3v00Cu71ivpx27
succTLPBpcSUsw+vgduD9o+EaK27dV97kHbHBHuN3Eq8ymIiI4lNesSmlHkzglum
rRH4CpOZUxStMx/0z4LCdAn5tLNrNeF7Si8ASXPLC60bjvNTtCDLmyERl2WvIbMD
7Nwwghxl7rI3yDPeONSTr0gHNdUQPV2z9Lk4UqVSXR+9XIdbeqVPdsJKps3WFYIC
atZIfIBTrEURnLxJiCQPNYK09NA82E2UK5V4q44rQBcZ974qU/y3+mZMpOQEXed5
ypxz7GfFpza1Fiv9oZ/2J2BCXhGp7bgvoF8NgB8ieHhakh/OCecScnLsoSPRZahV
3binHpnX/pc5GV6sqjGx5Hv6QxmPx1Q5jmicQ27iuMrHLojYlkUquftAUHqdI19C
WWVZ3XY6OHI2Z71Hc6HalocDALOkyQBV1EqphuhnZYq5VStTxb5nyu9kpwt191b4
SmQImAJeUaL/g6wZAdb05iNUt52PW24UeXzx6Bi/h8VwiutnW99Rcwy2oWbC4UEy
QZBp4ZKV4fn2wK1XXgIh3LgNidOG9RXqa3t3orawYHKy42EadPE2eHXholFMLB1O
Zpf0hzqgxlW/gWC4LyZWLIstLKMwCa41Or7Ou80GYhWK7yIWABwGQ6XRNRqV9Ikf
Eqp9beLDOmjX8RlJmnRcB1qqZ0klCzoF2vtPQkDnHcOcx3KAul2US49C/Pdzri1l
nFIlqfDOL7TIUSNXLEYmmYQ7LJx3bKfUS1RbqPT+6N9fJ7sly8aJ9Mdm8Vds8eCQ
f/Y5lB7vAKTCLzyxarFJ3UXbaRSqR+7nhwhVph56TrtMqd71eCOw8Q68XcqEcjaX
l3DG5XCrsyPloZSazH6o2LrU3XlrFyjegd5ip/gFYM2iGI108KOIPyyzj5QEtTiU
tM4mMxwHOm3eNOJkyKuD1EibDZy4xKqxlnOVdEpAyFeNHZkvdzHlRIvJ2XNQSAt1
2+f9DvMeQE4X0dCGeV7dhEW3xCnrR59s7f3D1CiDkbQZv2e2wjQYzVEOuOncOxT9
XwevOvSbDAaFrQvoVZ/psCO3eb5YarL9fp3lEU/sZ4a1LQh99AaGN0AEtjj71r8f
C9MJF4onsKvUvOZ4rSR89G5yR3TzXfVh+RSqcCNaHQXeSvSauVxoh9VLrKVN27ci
bQhu3oYIV3tUQUT4yQuCjDrwwsBIA7eeZqPMwRC3SD/lugIuAIz6KX0GJ8teoOmL
KxAEPq9/BvP3AxsOtEo1s71wDHzFpsd62vl2Nzghbf5+Ddh2PF7nx3dUetscLQYi
pUmRx0DnghNbrZ+W6lFHSHX9TFCOlsTXTpbk5+xJstmjz2BdbxoY2hFIhCB52zbY
zbBaWSZ5d5K1hH4eSN5DWe0aQFCd3Hb3KTMaAHt/lBw9sgI+3ygGtlo/Y7M221cR
CLHopkiZdBFriOW3SJ0qMez/Qkft/mwTpzNFqq5hnJiGF9g0O0crwkV4hebwZCqj
6WkILH2f+nqKz+YWpbG+DKh2oX89VAJWn/yL9P7zPeEmxgO0FB+MynTGR4+k6Zjv
nithvXYXOOYCAqIc7GWh1bBUW8yXWlZrUoajjg8GWEHudHzq2iNOGPiOW85VOJNO
xa2zNl+YYkoFTe2YgurErLFS5sFiQc07c2Jo16KWXK8yZLKL3wsxZ7H/Fjk8k01F
mzuNyFWEXnKop6MC2T+SUGjjD5cwoy9+gZ6Hc38Xao+LBAbOH761KwkLfOt5V9vA
TogLJ2uI+9dsSc/Maxy6IwGQ2sVq4WQFpAF8gSKDkqHY+xT3EFhGCp+j6cr9L2hU
k7PcacDsiVckVjGd6XYaE16UII6H1102z8KAVWWjRIxmlGWp05a7KmhTXHSQNe93
RybojWBCwvecCg1r6umsR+JXmHBnlgyfcdEjj3a3ot/AL7KCeoOQrKkcf8B7n7iB
EbgyEW6Bo3seGKNOpEpYLRkr9LW4d7nc8Gd4jtwybLZYJ9rBXfXT5oJM5Bxsk74M
fo4ca0NaFT62xdIPn95pKjSPmO8GUx96Yv72OHSxRxIAfMI4dntZSpCMnetfreWh
5ZMoTey4jhZ8G23vWNBjPzpEOpgabq3xta4snpBs9jly5HhPaVQhLXfJRSdyp2r+
AZ5q6MU2nZMIc2Pkhh8py8QGjyUNlIenxnQ9Z00taWiFbdihv01PN9ag//zZnwS/
+AR0UZARBLNeONaSQIJ/GUrP2MxKgLXbvJfG0AP89ZSGUCyDuwDm0GbfHDffLu5u
yjcsQF7rXHeXt55nB4OKPuP9okXcS3MxTRP7ruC56uD4MMhZuPHKfiKRrlvoPind
GmaVvG+L/ZpLWV9QPnK1YOBGhfYAPeZzvht0i5UOspXwj1IAhoLrB5+E34s367Cx
ZKbfxfPubD+QVMyiJXbfVkxutb1oZ3kEvFVdqOEgZEgXS6SBoQi74SgXN9XbBF9x
odAYMPnuMUxCvzTBS9DW59czgbCFiIUHwyZLZtkpKRGd+SabX8/Yz3rkRGKXVexQ
uqAvjNCDrNzJxvEk/KdPvq4paDg84QiZjhj8KCUUTggK0f3QTKNidJaDjL6J7vwE
QTi3we44y2PcA5rL4GBlIluYKqdxlIRMVzIEGc1GuVSZvH0HLyp5yQk7xyLtJo1I
jG0UlFAq+gfpPf/LY4uJMnQN0Tdpb9R5IRbPJOVmguGP2vl7qgs0nttnPPuIdfgI
5FvTmXWo54LUuLwFsSlofzVoqVAE/RnwkB0kwUXzuYO5qqej6xbjtNak8c62Od6Z
1Sz0rCOQmxgDIoYOu4j4CNn3MJmWDynBSqRiT0zpTso+wcbYOUu6ds6SipknwhfJ
6iQ/qVaAuFyCT6uZQkfWYMwELQ6RJXusy4uXc+LoyfOel7+3pJwMUkT4UZz1tXbT
Xw1w9101IEl9mnTURWjlSHE3fvm7Rd4lNyLaTioUM/p9XijEdffv5pGgQMR3jGFX
YAut0a5qs9dbtn7NGwUnFvhhL8BEXRdDIoh8Vh7s9FwoiVxUShO7b9T8nDU7dwlK
tKQSFeJ2iVTXSzYnFrOvzWJOp4DPjWGTp/SxQhlh+be6z6/RjjUlNIqqfWojV+Yo
ynpN3eM6SkZienpHf5XuWh6gut2QpT2ThYtRZRCZRKNzeNAAMdoVWgKchNhJ3u2L
tWkMRGC78UXi0ZI8VymD0YjlUL/CJXeZ695Mu/yvL2adrXqJeaJl6w49BgLx+YnK
2TWOeOvS1lppQLNZhtgZqUYb2tw7eNCpJb4ztoZstxTT71NZsXaeegWfdmihddZS
KIwr+a/H725v9NUPx25WeubASNGhfua4W+QCwtcTolqllaP+MgHUeyHQKRyKLBJe
CCC1FndJl6xa9zg6F+Lfirz4TMpQ6mouc7t94cn3ysvuA7wT4wrF72kAdl+WH6P6
n1RR+J9xE50dP9drPItHVixhHJxo4wd3f7TfCXPWH4FGBJyBwh9s0oMZHGiqI1sF
NWEcI9ii+bRBjHQyPaesJHrf1OeVBC82453y43i10kydQ9mt+b5brpVPFZ9+yKRe
6uoWxj+O7CQ166R3UI3zi/jD65c80PkVaSAdKCnE3TAcp6UWtykeav9on5teFQbE
vJziFFmtkYIPxb77jMl0tnnW+e7g1dFZNRtMcJqht0t1Fn67+YBfiY94ozeXoK/r
g6vCi9coaixXyHBr37wAP3Iyde0ebj+Itk/VEukoZAFxVgAJxQjedjvEFi/jtE+N
b/4l27Ugg2Jtlc+pEuYkohINHP/z6BQ7FPbg+YkBtULdVoHXbsFsohDwYpokepym
lHXno2GNLByo+MDTXN6UbqTcMKEg4eIBhuyJGZzne020qPSFHIt82al93L48rd31
WKghqvF5Fd48yogaHU+sP/OMxSA6AN32wd9dQCwrBRLj/0PF6KQb9U58Ao55qcKy
LJUL/8xIiMgbRwjWmG3bhowx+OfZk/Qz1IvKfkO5ySG07astNjhvpdCiie38H+7v
YxvbGwMVfuK/CC4agMsYfaEwGQD78hAXVIPvg6csFZv1iMBFrIvXW16OlxyW1R+z
iLa9niIv74CV1c13e+ndhnTqzijCPxhT8IepkpNyD2dG3x+U8kwBc8k+UGIjwduX
h7ERDdGoZoylMEFLEKCD2ssMnAsD/7NfAVeBeezPZNTHZfgrc3oWUhDyT7WoxhXh
OEdIKRcBpUEy/Jxie70GhGORU+MIphUZRs+pvWMIEB46bsPotWNbTgeZVdxY+LOt
+dGBZDuSrhn97+TmAhm9MXY7bmx2iyp+sPgMb3ahAuiUds92d7/5cG8YfvTJiNiq
QZlNlV3fJwQ9bEC1sEeytweR69tcFa9U4VPkzRbERGQoL/+4fbB9txZysan8Sn5T
AOvm9Rfgy4DuveDKGRYOwyNgSholELWtNx1rQkjzCRx1BDf2LhmWOJzvDj2Atszm
XygAbExoSa9ox5NAtykFf9/530OCA1OLvugo8dqpk5yfL1Z/GscE8eVLA7zGlBCr
2P1t6YGyLD7VF5initQ0isNZy5nVnuA8/nyyukChfRQb/C88GszLGQ2ElzGO1cPT
TxABk22JMjUz3yLj/N5s8B7dyMUZOwgOyHff6AwSBjjL+a+1eAKBUHITzbkHsMAW
uy+N2zd1aAVEfqC8JcagISeRHA68wGtsXEJ1CL57UbZj51saN5rWWRY0YVWsWQtZ
aVHUWL018sZmfImFvDF40IGKP46/AMCZPZgcWlgAzRRsn03Ctt7qoezoTQSGngaK
gaf53o7o5eIXxNlIGP6sJvhfN3kHE6ySdLicYucN7eMajh7WpM7KtrkLlJajmVvv
RkKQU3F+LGUDjsql/K+FbByec9YfU6ba3lyJ+H5zhI1P2kRP1Mf25T4DZkjtWavA
c9puSzPAxn1HxZi1s503ztuMzFKeC3CQ71y5UFI/9DZ/3UmFdZHDxwMsG4jZMo5p
zegPFCGJfnD8OPau0a21Q78Qa+n+rrkI5d47fKMneDvhpRweohQGzZfhpq1CDpIp
410TOyfSdP4b4J/jVfX5zVcKkgtYAAplkAPRiXrnjB/TWe/K1HBCLJlhbHiZrji+
STRuI+0CtQQIuBYrNt7grl/dImtBRtpeUh/jHwTsdeqOXJcBh/tI/z51gutMDnFy
VtFDnF88MY/1J8f2aKgOKyDmfc9ROXXrO5PJfGxMKAuyvKp9abHEeE6aVF4nE1bS
terzvI0Voh0rINREkAL3ISWM3V+3RdLi+zlxvPoVKCe0ZYtp3DbUPfWw2Bn5bjdf
fIt4RjLxWu/jg3iVILCNKYz9Xsvm0BjrrXmQHdbNjV1rfanJIx0dYpdWDXSXJp1N
Jh8kmz8w2B+OsFnJ+6pVFmZPqLsagwt7DIViCTNTobEbKBAv8bccuNQhNF7Lg/Kq
PGVosPc/PKa9do2380OU1ujTogiUAzjL80f4g/unWtuupq59A6KzHOfy/40LSyc/
53GDlds6GUpURjizWW1T2wcfguCEHaaw6C9jyb+5EEb+w6+XZMxS3hvkLuIqS50G
jNhYfKtODc2R3AStkjF20c38/LlMxlGXDU6DXzDlxPnG0PqJH71LuDglJf0d62N8
gALXYSb7zmEEu/VFmNhs5mZxKbOdMReEHhUpHSq9x85LPdFAZlMDqFesiSUK/SIu
e1EgabVJZBW8zCB+Q1ddD3sthDDZf8UG05HLq1D3JQwJkHIPyyAsELopwiBXiiWG
6pWYrY0+GVRPen8piceI+1VEGOitnHI+1q75qteuYekiD7ZRGlpdhPkbEeV4fsIj
ZoX/Yb73uIYT0/+41QIRVQ==
`protect end_protected

-- =================================================================================================
--   NX_IOD definition                                                                  2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_arith.all;
use ieee.std_logic_unsigned.all;

library NX;
use NX.nxPackage.all;

entity NX_IOD is
generic (
    epath_edge      : bit := '0';
    epath_init      : bit := '0';
    epath_load      : bit := '0';
    epath_mode      : bit_vector(3 downto 0) := "0000";
    epath_sync      : bit := '0';
    epath_dynamic : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    rpath_edge      : bit := '0';
    rpath_init      : bit := '0';
    rpath_load      : bit := '0';
    rpath_mode      : bit_vector(3 downto 0) := "0000";
    rpath_sync      : bit := '0';
    rpath_dynamic : bit := '0'; --0: off/fixed delay, 1: dynamic delay

    cpath_edge      : bit := '0';
    cpath_init      : bit := '0';
    cpath_load      : bit := '0';
    cpath_mode      : bit_vector(3 downto 0) := "0000";
    cpath_sync      : bit := '0';
    cpath_inv       : bit := '0';

    tpath_mode      : bit_vector(1 downto 0) := "00";

    location        : string := "";
    chained         : bit    := '0'
);
port (
    CCK  : in  std_logic;
    ECK  : in  std_logic;
    RCK  : in  std_logic;
    CI   : in  std_logic;
    EI   : in  std_logic;
    EXI1 : in  std_logic;
    EXI2 : in  std_logic;
    EXI3 : in  std_logic;
    EXI4 : in  std_logic;
    RI   : in  std_logic;
    CL   : in  std_logic;
    EL   : in  std_logic;
    RL   : in  std_logic;
    CR   : in  std_logic;
    CT   : in  std_logic;
    CXI1 : in  std_logic;
    CXI2 : in  std_logic;
    CXI3 : in  std_logic;
    CXI4 : in  std_logic;
    ER   : in  std_logic;
    RR   : in  std_logic;
    CO   : out std_logic;
    EO   : out std_logic;
    RO   : out std_logic;
    RXO1 : out std_logic;
    RXO2 : out std_logic;
    RXO3 : out std_logic;
    RXO4 : out std_logic;
    LINK : inout  std_logic_vector(IOC_LINK_SIZE - 1 downto 0)
);
end NX_IOD;

architecture NX_RTL of NX_IOD is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOD";
    attribute NX_USE of LINK: signal is "LINK";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
XtIbDyqJ0RBXo3BrnygX/Hc+zKjvJXOoSx4piKKt9h7uBKpFfc8OqMY//3Bf9hz/
/69WHMkv1ZMFPizNZjWmT6ScyNU0OQgohvVMjQVF1+I1RGvO6VVrqHwrTGFsfqu7
2s8G5j0GpEp8i9yWn1RRJBkBludVzCOa1X7fT+I13Mh4cOvlxsaX1z1uQkZ1rQFF
XXr5BwgscrwcTNPaZqYIQj3KsGEdupLzx96qiyO8W6gkTehaPYhWEtT1KkNY/RWf
ijHk/uBE3c1v5/sYJKTsaUgNM0ysGM2t8yc7EsWVEFUNWjYJq+qG9h77Fp1YDrQz
UfgXqwYEn+omWuu0cefjlQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 18848)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_FE definition                                                                   2017/09/04
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_FE is
generic (
    lut_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truthTable t15 ... t0
    dff_edge  : bit := '0';      -- 0: rising             - 1: falling
    dff_init  : bit := '0';      -- 0: no reset           - 1: reset connected
    dff_load  : bit := '0';      -- 0: no enable          - 1: enable connected
    dff_mode  : bit := '0';      -- 0: combi              - 1: sequential
    dff_sync  : bit := '0';      -- 0: asynchronous reset - 1: synchronous reset
    dff_ctxt  : std_logic := 'U' -- U: unset  - 0: low    - 1: high
);
port (
    I1 : in  std_logic;
    I2 : in  std_logic;
    I3 : in  std_logic;
    I4 : in  std_logic;
    CK : in  std_logic;
    L  : in  std_logic;
    R  : in  std_logic;
    O  : out std_logic
);
end NX_FE;

architecture NX_RTL of NX_FE is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_FE";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
UEQXfHHJjvY2OJGSdibRGP61PRCUmBipsG9sCwaCLGbG9g5gvhxfpH0/302NkYAK
bfooMKFWrc1yQTESLKt+9motWMP/nzd77E0AAyzDMzC0w0RqS6vnSwvXeAwc4+U3
bIbgwdsSmQkWOhUrLZ8Wo2DAmMDKsiDJSVMqL70H6SzAo2i45Ox+yBWlJ1XVMSXp
Ur5RrMiv+G8CQT7s0tfPizcJnhahaG85F1jb76/qlM0qr4wGbhADns0o+amHqJ51
qGQly30uJrbEkk6xyimV+KIvJlpe0+aLFoHv5azzSUbyBm6g/p6dGaTBjeYoy8Hs
CLvYgjfA6K7sVn1Xz/dSDA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 10016)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_CY definition                                                                   2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CY is
generic (
    -- when generic is suffixed by 1, 2, 3 or 4 it refers to corresponding carry stage
    add_table1 : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table
    add_table2 : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table
    add_table3 : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table
    add_table4 : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table
    add_carry  : integer := 0;     -- 0: low - 1: high - 2: propagate
    add_dff1   : bit := '0';       -- 0: combinatorial - 1: sequential
    add_dff2   : bit := '0';       -- 0: combinatorial - 1: sequential
    add_dff3   : bit := '0';       -- 0: combinatorial - 1: sequential
    add_dff4   : bit := '0';       -- 0: combinatorial - 1: sequential
    add_ctxt1  : std_logic := 'U'; -- U: unset - 0: low - 1: high
    add_ctxt2  : std_logic := 'U'; -- U: unset - 0: low - 1: high
    add_ctxt3  : std_logic := 'U'; -- U: unset - 0: low - 1: high
    add_ctxt4  : std_logic := 'U'; -- U: unset - 0: low - 1: high
    dff_edge   : bit := '0';       -- 0: rising edge - 1: falling edge
    dff_load   : bit := '0';       -- 0: ignore load enable - 1: use connected load enable
    dff_init   : bit := '0';       -- 0: ignore reset - 1: use connected reset
    dff_sync   : bit := '0'        -- 0: asynchronous reset - 1: synchronous reset
);
port (
    -- O1 <= A1 + f(B1I1, B1I2, B1I3, B1I4) + CIB
    A1   : in  std_logic;
    A2   : in  std_logic;
    A3   : in  std_logic;
    A4   : in  std_logic;
    B1I1 : in  std_logic;
    B1I2 : in  std_logic;
    B1I3 : in  std_logic;
    B1I4 : in  std_logic;
    B2I1 : in  std_logic;
    B2I2 : in  std_logic;
    B2I3 : in  std_logic;
    B2I4 : in  std_logic;
    B3I1 : in  std_logic;
    B3I2 : in  std_logic;
    B3I3 : in  std_logic;
    B3I4 : in  std_logic;
    B4I1 : in  std_logic;
    B4I2 : in  std_logic;
    B4I3 : in  std_logic;
    B4I4 : in  std_logic;
    CK1  : in  std_logic;
    CK2  : in  std_logic;
    CK3  : in  std_logic;
    CK4  : in  std_logic;
    L1   : in  std_logic;
    L2   : in  std_logic;
    L3   : in  std_logic;
    L4   : in  std_logic;
    R1   : in  std_logic;
    R2   : in  std_logic;
    R3   : in  std_logic;
    R4   : in  std_logic;
    CIB  : in  std_logic;
    COB  : out std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic
);
end NX_CY;

architecture NX_RTL of NX_CY is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CY";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
kTKpYt41esqelXbTUGa6KR+a6bFM2zp8vTnnNBJT1VmoETeCelW72Tx+oI9HDiDd
bTRq6CZWgtmLSoV07xl6gy1sCFf5blq26INFFiX2wBzLH6HnWaFInQS3GVTru4E3
kxvMT+LIRjb0ViI/2cDyD7tXCNVDjGhJudcYd15eSPFKAJSOiFERVnKAo56FETB3
/3okhEZKi5DaZztTrlV1JgsC5vrI2R5Phgv60BOqq9wH/cFogLnhp4sflrbchM3/
/Mz5cgPoi/9+QtiSrvIQNaNKSLIFXGoO77xj8JxM/c5a3uYURTt+csyYEn9qH/Iz
oJxeTrljHe1jEBLuLDajkQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 5344)
`protect data_block
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
POLS6q/b8lLrVBVh1wKOeA==
`protect end_protected

-- =================================================================================================
--   NX_CDC_L definition                                                                2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_CDC_L is
generic (
    mode : bit := '0';
    rck_edge : bit := '0';
    wck_edge : bit := '0'
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    RI1 : in  std_logic;
    RI2 : in  std_logic;
    RI3 : in  std_logic;
    RI4 : in  std_logic;
    RI5 : in  std_logic;
    RI6 : in  std_logic;
    RO1 : out std_logic;
    RO2 : out std_logic;
    RO3 : out std_logic;
    RO4 : out std_logic;
    RO5 : out std_logic;
    RO6 : out std_logic;
    WI1 : in  std_logic;
    WI2 : in  std_logic;
    WI3 : in  std_logic;
    WI4 : in  std_logic;
    WI5 : in  std_logic;
    WI6 : in  std_logic;
    WO1 : out std_logic;
    WO2 : out std_logic;
    WO3 : out std_logic;
    WO4 : out std_logic;
    WO5 : out std_logic;
    WO6 : out std_logic
);
end NX_CDC_L;

architecture NX_RTL of NX_CDC_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CDC_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_FIFO_CDC_L definition                                                           2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_FIFO_CDC_L is
generic (
    mode : bit := '1'
);
port (
    XRCK : in  std_logic;
    XWCK : in  std_logic;
    XRI1 : in  std_logic;
    XRI2 : in  std_logic;
    XRI3 : in  std_logic;
    XRI4 : in  std_logic;
    XRI5 : in  std_logic;
    XRI6 : in  std_logic;
    XWI1 : in  std_logic;
    XWI2 : in  std_logic;
    XWI3 : in  std_logic;
    XWI4 : in  std_logic;
    XWI5 : in  std_logic;
    XWI6 : in  std_logic;
    RO1  : out std_logic;
    RO2  : out std_logic;
    RO3  : out std_logic;
    RO4  : out std_logic;
    RO5  : out std_logic;
    RO6  : out std_logic;
    WO1  : out std_logic;
    WO2  : out std_logic;
    WO3  : out std_logic;
    WO4  : out std_logic;
    WO5  : out std_logic;
    WO6  : out std_logic
);
end NX_FIFO_CDC_L;

architecture NX_RTL of NX_FIFO_CDC_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CDC_L";
begin
end NX_RTL;
-- =================================================================================================
--   NX_RFB definition                                                                  2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB is
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE1 : in  std_logic;
    RE2 : in  std_logic;
    RE3 : in  std_logic;
    RE4 : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE1 : in  std_logic;
    WE2 : in  std_logic;
    WE3 : in  std_logic;
    WE4 : in  std_logic
);
end NX_RFB;

architecture NX_RTL of NX_RFB is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RFB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RFB_WRAP definition                                                             2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_WRAP is
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I   : in  std_logic_vector(15 downto 0);
    COR : out std_logic;
    ERR : out std_logic;
    O   : out std_logic_vector(15 downto 0);
    RA  : in  std_logic_vector(5 downto 0);
    RE  : in  std_logic_vector(3 downto 0);
    WA  : in  std_logic_vector(5 downto 0);
    WE  : in  std_logic_vector(3 downto 0)
);
end NX_RFB_WRAP;

architecture NX_RTL of NX_RFB_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK : in  std_logic;
    WCK : in  std_logic;
    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    COR : out std_logic;
    ERR : out std_logic;
    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    RA1 : in  std_logic;
    RA2 : in  std_logic;
    RA3 : in  std_logic;
    RA4 : in  std_logic;
    RA5 : in  std_logic;
    RA6 : in  std_logic;
    RE1 : in  std_logic;
    RE2 : in  std_logic;
    RE3 : in  std_logic;
    RE4 : in  std_logic;
    WA1 : in  std_logic;
    WA2 : in  std_logic;
    WA3 : in  std_logic;
    WA4 : in  std_logic;
    WA5 : in  std_logic;
    WA6 : in  std_logic;
    WE1 : in  std_logic;
    WE2 : in  std_logic;
    WE3 : in  std_logic;
    WE4 : in  std_logic
);
end component NX_RFB;

begin

rfb: NX_RFB generic map (
    ren_table   => ren_table,
    wen_table   => wen_table,
    rck_edge    => rck_edge,
    wck_edge    => wck_edge,
    mem_ctxt    => mem_ctxt)
port map (
    RCK => RCK,
    WCK => WCK,
    I1  => I(0),
    I2  => I(1),
    I3  => I(2),
    I4  => I(3),
    I5  => I(4),
    I6  => I(5),
    I7  => I(6),
    I8  => I(7),
    I9  => I(8),
    I10 => I(9),
    I11 => I(10),
    I12 => I(11),
    I13 => I(12),
    I14 => I(13),
    I15 => I(14),
    I16 => I(15),
    COR => COR,
    ERR => ERR,
    O1  => O(0),
    O2  => O(1),
    O3  => O(2),
    O4  => O(3),
    O5  => O(4),
    O6  => O(5),
    O7  => O(6),
    O8  => O(7),
    O9  => O(8),
    O10 => O(9),
    O11 => O(10),
    O12 => O(11),
    O13 => O(12),
    O14 => O(13),
    O15 => O(14),
    O16 => O(15),
    RA1 => RA(0),
    RA2 => RA(1),
    RA3 => RA(2),
    RA4 => RA(3),
    RA5 => RA(4),
    RA6 => RA(5),
    RE1 => RE(0),
    RE2 => RE(1),
    RE3 => RE(2),
    RE4 => RE(3),
    WA1 => WA(0),
    WA2 => WA(1),
    WA3 => WA(2),
    WA4 => WA(3),
    WA5 => WA(4),
    WA6 => WA(5),
    WE1 => WE(0),
    WE2 => WE(1),
    WE3 => WE(2),
    WE4 => WE(3)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;

entity NX_CKS is
port (
    CKI : in  std_logic;
    CMD : in  std_logic;
    CKO : out std_logic
);
end NX_CKS;

architecture NX_RTL of NX_CKS is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CKS";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
VLPRdq0oADmfmPJ0LO4+/S7OPRZrgPIaqvmLmF7b6S/NpvWegIS+z9OSYAkxhX6y
hhozaDrGqcQXiTO3bKO8xZot83aMbsz+n23iYkFVT/FZ4vPGuuT6zfckkcfN7poE
eRU07o8M3PfP3RE7E6b2TkmZ1vHauQCSXuKPZPe5g9+rcGEXLXbFyvCViol6bVmU
1h1rwHA4Kgh8rdP9PDvIAJ3P01jwTNnClCvIj2L03x1UxeYv6ewp1We1N+iPqIhb
hIuK4OE9ku1egdFEeeaHqZJObdM+TNxvF9xEmiOfc8l5/EH5PBswC4GGOQS2/BXd
nBWbWb1wnTThPvOBQAJNLQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7584)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_RFB_L definition                                                                2018/11/30
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_L is
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK  : in  std_logic;
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    COR  : out std_logic;
    ERR  : out std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RE1  : in  std_logic;
    RE2  : in  std_logic;
    RE3  : in  std_logic;
    RE4  : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE1  : in  std_logic;
    WE2  : in  std_logic;
    WE3  : in  std_logic;
    WE4  : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XRO6 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic;
    XWO6 : out std_logic
);
end NX_RFB_L;

architecture NX_RTL of NX_RFB_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RFB_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RFB_L_WRAP definition                                                           2017/09/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RFB_L_WRAP is
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK  : in  std_logic;
    WCK  : in  std_logic;
    I    : in  std_logic_vector(15 downto 0);
    COR  : out std_logic;
    ERR  : out std_logic;
    O    : out std_logic_vector(15 downto 0);
    RA   : in  std_logic_vector(5 downto 0);
    RE   : in  std_logic_vector(3 downto 0);
    WA   : in  std_logic_vector(5 downto 0);
    WE   : in  std_logic_vector(3 downto 0);
    XRCK : out std_logic;
    XRO  : out std_logic_vector(5 downto 0);
    XWCK : out std_logic;
    XWO  : out std_logic_vector(5 downto 0)
);
end NX_RFB_L_WRAP;

architecture NX_RTL of NX_RFB_L_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RFB_L
generic (
    ren_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of read enable
    wen_table : bit_vector(15 downto 0) := B"0000000000000000"; -- truth table of write enable
    rck_edge  : bit := '0';   -- 0: read clock rising edge - 1: read clock falling edge
    wck_edge  : bit := '0';   -- 0: write clock rising edge - 1: write clock falling edge
    mem_ctxt  : string := "" -- memory initial context
);
port (
    RCK  : in  std_logic;
    WCK  : in  std_logic;
    I1   : in  std_logic;
    I2   : in  std_logic;
    I3   : in  std_logic;
    I4   : in  std_logic;
    I5   : in  std_logic;
    I6   : in  std_logic;
    I7   : in  std_logic;
    I8   : in  std_logic;
    I9   : in  std_logic;
    I10  : in  std_logic;
    I11  : in  std_logic;
    I12  : in  std_logic;
    I13  : in  std_logic;
    I14  : in  std_logic;
    I15  : in  std_logic;
    I16  : in  std_logic;
    COR  : out std_logic;
    ERR  : out std_logic;
    O1   : out std_logic;
    O2   : out std_logic;
    O3   : out std_logic;
    O4   : out std_logic;
    O5   : out std_logic;
    O6   : out std_logic;
    O7   : out std_logic;
    O8   : out std_logic;
    O9   : out std_logic;
    O10  : out std_logic;
    O11  : out std_logic;
    O12  : out std_logic;
    O13  : out std_logic;
    O14  : out std_logic;
    O15  : out std_logic;
    O16  : out std_logic;
    RA1  : in  std_logic;
    RA2  : in  std_logic;
    RA3  : in  std_logic;
    RA4  : in  std_logic;
    RA5  : in  std_logic;
    RA6  : in  std_logic;
    RE1  : in  std_logic;
    RE2  : in  std_logic;
    RE3  : in  std_logic;
    RE4  : in  std_logic;
    WA1  : in  std_logic;
    WA2  : in  std_logic;
    WA3  : in  std_logic;
    WA4  : in  std_logic;
    WA5  : in  std_logic;
    WA6  : in  std_logic;
    WE1  : in  std_logic;
    WE2  : in  std_logic;
    WE3  : in  std_logic;
    WE4  : in  std_logic;
    XRCK : out std_logic;
    XRO1 : out std_logic;
    XRO2 : out std_logic;
    XRO3 : out std_logic;
    XRO4 : out std_logic;
    XRO5 : out std_logic;
    XRO6 : out std_logic;
    XWCK : out std_logic;
    XWO1 : out std_logic;
    XWO2 : out std_logic;
    XWO3 : out std_logic;
    XWO4 : out std_logic;
    XWO5 : out std_logic;
    XWO6 : out std_logic
);
end component NX_RFB_L;

begin

rfb: NX_RFB_L generic map (
    ren_table   => ren_table,
    wen_table   => wen_table,
    rck_edge    => rck_edge,
    wck_edge    => wck_edge,
    mem_ctxt    => mem_ctxt)
port map (
    RCK  => RCK,
    WCK  => WCK,
    I1   => I(0),
    I2   => I(1),
    I3   => I(2),
    I4   => I(3),
    I5   => I(4),
    I6   => I(5),
    I7   => I(6),
    I8   => I(7),
    I9   => I(8),
    I10  => I(9),
    I11  => I(10),
    I12  => I(11),
    I13  => I(12),
    I14  => I(13),
    I15  => I(14),
    I16  => I(15),
    COR  => COR,
    ERR  => ERR,
    O1   => O(0),
    O2   => O(1),
    O3   => O(2),
    O4   => O(3),
    O5   => O(4),
    O6   => O(5),
    O7   => O(6),
    O8   => O(7),
    O9   => O(8),
    O10  => O(9),
    O11  => O(10),
    O12  => O(11),
    O13  => O(12),
    O14  => O(13),
    O15  => O(14),
    O16  => O(15),
    RA1  => RA(0),
    RA2  => RA(1),
    RA3  => RA(2),
    RA4  => RA(3),
    RA5  => RA(4),
    RA6  => RA(5),
    RE1  => RE(0),
    RE2  => RE(1),
    RE3  => RE(2),
    RE4  => RE(3),
    WA1  => WA(0),
    WA2  => WA(1),
    WA3  => WA(2),
    WA4  => WA(3),
    WA5  => WA(4),
    WA6  => WA(5),
    WE1  => WE(0),
    WE2  => WE(1),
    WE3  => WE(2),
    WE4  => WE(3),
    XRCK => XRCK,
    XRO1 => XRO(0),
    XRO2 => XRO(1),
    XRO3 => XRO(2),
    XRO4 => XRO(3),
    XRO5 => XRO(4),
    XRO6 => XRO(5),
    XWCK => XWCK,
    XWO1 => XWO(0),
    XWO2 => XWO(1),
    XWO3 => XWO(2),
    XWO4 => XWO(3),
    XWO5 => XWO(4),
    XWO6 => XWO(5)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
KifC4k8AzwC8ZG2uFyiBrBg7Nja06DtkQbmRCjfYAs+OlU5Vq32Pm32yO8L1K8v1
VHRhUSWS19OxfRrxptLqaznb6LHDhnIb+adm7OzPSdeomZYqgP4ftBIGbWYwBXf9
1zIUvT1I6NGDziNWQ8E6Y76gpb03WIdufmARnZ4+CHEGCUp9/pBW+Fr0ab6E7NZP
vYQVRqey8ArUhgkOFC7op8/8zqRp8PlHSDRib0vmo526S6CxlyGtv7yz5upSR5QP
J7lS/mUcqLWzdlSjvDmdiQ4shiw7JNPzXZrEIwjwQP/K7KWz7hr2CgjKJqsZTwlE
ZC3RKuwbOg03rI69DNLcbg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7216)
`protect data_block
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
a9y1KWmSay187nL3AdqeTQ==
`protect end_protected

-- =================================================================================================
--   NX_DSP definition                                                                  2018/11/30
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_DSP is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";      -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO49  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end NX_DSP;

architecture NX_RTL of NX_DSP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DSP";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_WRAP definition                                                             2017/09/25
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_DSP_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";      -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A    : in  std_logic_vector(23 downto 0);
    B    : in  std_logic_vector(17 downto 0);
    C    : in  std_logic_vector(35 downto 0);

    CAI  : in  std_logic_vector(17 downto 0);
    CAO  : out std_logic_vector(17 downto 0);
    CBI  : in  std_logic_vector(17 downto 0);
    CBO  : out std_logic_vector(17 downto 0);

    CCI  : in  std_logic;
    CCO  : out std_logic;
    CI   : in  std_logic;
    CK   : in  std_logic;
    CO   : out std_logic;
    CO37 : out std_logic;
    CO49 : out std_logic;

    CZI  : in  std_logic_vector(55 downto 0);
    CZO  : out std_logic_vector(55 downto 0);

    D    : in  std_logic_vector(17 downto 0);

    OVF  : out std_logic;
    R    : in  std_logic;
    RZ   : in  std_logic;
    WE   : in  std_logic;

    Z    : out std_logic_vector(55 downto 0)
);
end NX_DSP_WRAP;

-- architecture NXP_ARCH of NX_DSP_WRAP#{{{#
architecture NXP_ARCH of NX_DSP_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NXP_ARCH: architecture is "WRAPPER";

component NX_DSP
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";      -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";    -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";             -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                    -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO49  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end component;

begin

dsp: NX_DSP generic map (
    std_mode    => std_mode,
    raw_config0 => raw_config0,
    raw_config1 => raw_config1,
    raw_config2 => raw_config2,
    raw_config3 => raw_config3)
port map (
    A1    => A(0),
    A2    => A(1),
    A3    => A(2),
    A4    => A(3),
    A5    => A(4),
    A6    => A(5),
    A7    => A(6),
    A8    => A(7),
    A9    => A(8),
    A10   => A(9),
    A11   => A(10),
    A12   => A(11),
    A13   => A(12),
    A14   => A(13),
    A15   => A(14),
    A16   => A(15),
    A17   => A(16),
    A18   => A(17),
    A19   => A(18),
    A20   => A(19),
    A21   => A(20),
    A22   => A(21),
    A23   => A(22),
    A24   => A(23),

    B1    => B(0),
    B2    => B(1),
    B3    => B(2),
    B4    => B(3),
    B5    => B(4),
    B6    => B(5),
    B7    => B(6),
    B8    => B(7),
    B9    => B(8),
    B10   => B(9),
    B11   => B(10),
    B12   => B(11),
    B13   => B(12),
    B14   => B(13),
    B15   => B(14),
    B16   => B(15),
    B17   => B(16),
    B18   => B(17),

    C1    => C(0),
    C2    => C(1),
    C3    => C(2),
    C4    => C(3),
    C5    => C(4),
    C6    => C(5),
    C7    => C(6),
    C8    => C(7),
    C9    => C(8),
    C10   => C(9),
    C11   => C(10),
    C12   => C(11),
    C13   => C(12),
    C14   => C(13),
    C15   => C(14),
    C16   => C(15),
    C17   => C(16),
    C18   => C(17),
    C19   => C(18),
    C20   => C(19),
    C21   => C(20),
    C22   => C(21),
    C23   => C(22),
    C24   => C(23),
    C25   => C(24),
    C26   => C(25),
    C27   => C(26),
    C28   => C(27),
    C29   => C(28),
    C30   => C(29),
    C31   => C(30),
    C32   => C(31),
    C33   => C(32),
    C34   => C(33),
    C35   => C(34),
    C36   => C(35),

    CAI1  => CAI(0),
    CAI2  => CAI(1),
    CAI3  => CAI(2),
    CAI4  => CAI(3),
    CAI5  => CAI(4),
    CAI6  => CAI(5),
    CAI7  => CAI(6),
    CAI8  => CAI(7),
    CAI9  => CAI(8),
    CAI10 => CAI(9),
    CAI11 => CAI(10),
    CAI12 => CAI(11),
    CAI13 => CAI(12),
    CAI14 => CAI(13),
    CAI15 => CAI(14),
    CAI16 => CAI(15),
    CAI17 => CAI(16),
    CAI18 => CAI(17),

    CAO1  => CAO(0),
    CAO2  => CAO(1),
    CAO3  => CAO(2),
    CAO4  => CAO(3),
    CAO5  => CAO(4),
    CAO6  => CAO(5),
    CAO7  => CAO(6),
    CAO8  => CAO(7),
    CAO9  => CAO(8),
    CAO10 => CAO(9),
    CAO11 => CAO(10),
    CAO12 => CAO(11),
    CAO13 => CAO(12),
    CAO14 => CAO(13),
    CAO15 => CAO(14),
    CAO16 => CAO(15),
    CAO17 => CAO(16),
    CAO18 => CAO(17),

    CBI1  => CBI(0),
    CBI2  => CBI(1),
    CBI3  => CBI(2),
    CBI4  => CBI(3),
    CBI5  => CBI(4),
    CBI6  => CBI(5),
    CBI7  => CBI(6),
    CBI8  => CBI(7),
    CBI9  => CBI(8),
    CBI10 => CBI(9),
    CBI11 => CBI(10),
    CBI12 => CBI(11),
    CBI13 => CBI(12),
    CBI14 => CBI(13),
    CBI15 => CBI(14),
    CBI16 => CBI(15),
    CBI17 => CBI(16),
    CBI18 => CBI(17),

    CBO1  => CBO(0),
    CBO2  => CBO(1),
    CBO3  => CBO(2),
    CBO4  => CBO(3),
    CBO5  => CBO(4),
    CBO6  => CBO(5),
    CBO7  => CBO(6),
    CBO8  => CBO(7),
    CBO9  => CBO(8),
    CBO10 => CBO(9),
    CBO11 => CBO(10),
    CBO12 => CBO(11),
    CBO13 => CBO(12),
    CBO14 => CBO(13),
    CBO15 => CBO(14),
    CBO16 => CBO(15),
    CBO17 => CBO(16),
    CBO18 => CBO(17),

    CCI   => CCI,
    CCO   => CCO,
    CI    => CI,
    CK    => CK,
    CO    => CO,
    CO37  => CO37,
    CO49  => CO49,

    CZI1  => CZI(0),
    CZI2  => CZI(1),
    CZI3  => CZI(2),
    CZI4  => CZI(3),
    CZI5  => CZI(4),
    CZI6  => CZI(5),
    CZI7  => CZI(6),
    CZI8  => CZI(7),
    CZI9  => CZI(8),
    CZI10 => CZI(9),
    CZI11 => CZI(10),
    CZI12 => CZI(11),
    CZI13 => CZI(12),
    CZI14 => CZI(13),
    CZI15 => CZI(14),
    CZI16 => CZI(15),
    CZI17 => CZI(16),
    CZI18 => CZI(17),
    CZI19 => CZI(18),
    CZI20 => CZI(19),
    CZI21 => CZI(20),
    CZI22 => CZI(21),
    CZI23 => CZI(22),
    CZI24 => CZI(23),
    CZI25 => CZI(24),
    CZI26 => CZI(25),
    CZI27 => CZI(26),
    CZI28 => CZI(27),
    CZI29 => CZI(28),
    CZI30 => CZI(29),
    CZI31 => CZI(30),
    CZI32 => CZI(31),
    CZI33 => CZI(32),
    CZI34 => CZI(33),
    CZI35 => CZI(34),
    CZI36 => CZI(35),
    CZI37 => CZI(36),
    CZI38 => CZI(37),
    CZI39 => CZI(38),
    CZI40 => CZI(39),
    CZI41 => CZI(40),
    CZI42 => CZI(41),
    CZI43 => CZI(42),
    CZI44 => CZI(43),
    CZI45 => CZI(44),
    CZI46 => CZI(45),
    CZI47 => CZI(46),
    CZI48 => CZI(47),
    CZI49 => CZI(48),
    CZI50 => CZI(49),
    CZI51 => CZI(50),
    CZI52 => CZI(51),
    CZI53 => CZI(52),
    CZI54 => CZI(53),
    CZI55 => CZI(54),
    CZI56 => CZI(55),

    CZO1  => CZO(0),
    CZO2  => CZO(1),
    CZO3  => CZO(2),
    CZO4  => CZO(3),
    CZO5  => CZO(4),
    CZO6  => CZO(5),
    CZO7  => CZO(6),
    CZO8  => CZO(7),
    CZO9  => CZO(8),
    CZO10 => CZO(9),
    CZO11 => CZO(10),
    CZO12 => CZO(11),
    CZO13 => CZO(12),
    CZO14 => CZO(13),
    CZO15 => CZO(14),
    CZO16 => CZO(15),
    CZO17 => CZO(16),
    CZO18 => CZO(17),
    CZO19 => CZO(18),
    CZO20 => CZO(19),
    CZO21 => CZO(20),
    CZO22 => CZO(21),
    CZO23 => CZO(22),
    CZO24 => CZO(23),
    CZO25 => CZO(24),
    CZO26 => CZO(25),
    CZO27 => CZO(26),
    CZO28 => CZO(27),
    CZO29 => CZO(28),
    CZO30 => CZO(29),
    CZO31 => CZO(30),
    CZO32 => CZO(31),
    CZO33 => CZO(32),
    CZO34 => CZO(33),
    CZO35 => CZO(34),
    CZO36 => CZO(35),
    CZO37 => CZO(36),
    CZO38 => CZO(37),
    CZO39 => CZO(38),
    CZO40 => CZO(39),
    CZO41 => CZO(40),
    CZO42 => CZO(41),
    CZO43 => CZO(42),
    CZO44 => CZO(43),
    CZO45 => CZO(44),
    CZO46 => CZO(45),
    CZO47 => CZO(46),
    CZO48 => CZO(47),
    CZO49 => CZO(48),
    CZO50 => CZO(49),
    CZO51 => CZO(50),
    CZO52 => CZO(51),
    CZO53 => CZO(52),
    CZO54 => CZO(53),
    CZO55 => CZO(54),
    CZO56 => CZO(55),

    D1    => D(0),
    D2    => D(1),
    D3    => D(2),
    D4    => D(3),
    D5    => D(4),
    D6    => D(5),
    D7    => D(6),
    D8    => D(7),
    D9    => D(8),
    D10   => D(9),
    D11   => D(10),
    D12   => D(11),
    D13   => D(12),
    D14   => D(13),
    D15   => D(14),
    D16   => D(15),
    D17   => D(16),
    D18   => D(17),

    OVF   => OVF,
    R     => R,
    RZ    => RZ,
    WE    => WE,

    Z1    => Z(0),
    Z2    => Z(1),
    Z3    => Z(2),
    Z4    => Z(3),
    Z5    => Z(4),
    Z6    => Z(5),
    Z7    => Z(6),
    Z8    => Z(7),
    Z9    => Z(8),
    Z10   => Z(9),
    Z11   => Z(10),
    Z12   => Z(11),
    Z13   => Z(12),
    Z14   => Z(13),
    Z15   => Z(14),
    Z16   => Z(15),
    Z17   => Z(16),
    Z18   => Z(17),
    Z19   => Z(18),
    Z20   => Z(19),
    Z21   => Z(20),
    Z22   => Z(21),
    Z23   => Z(22),
    Z24   => Z(23),
    Z25   => Z(24),
    Z26   => Z(25),
    Z27   => Z(26),
    Z28   => Z(27),
    Z29   => Z(28),
    Z30   => Z(29),
    Z31   => Z(30),
    Z32   => Z(31),
    Z33   => Z(32),
    Z34   => Z(33),
    Z35   => Z(34),
    Z36   => Z(35),
    Z37   => Z(36),
    Z38   => Z(37),
    Z39   => Z(38),
    Z40   => Z(39),
    Z41   => Z(40),
    Z42   => Z(41),
    Z43   => Z(42),
    Z44   => Z(43),
    Z45   => Z(44),
    Z46   => Z(45),
    Z47   => Z(46),
    Z48   => Z(47),
    Z49   => Z(48),
    Z50   => Z(49),
    Z51   => Z(50),
    Z52   => Z(51),
    Z53   => Z(52),
    Z54   => Z(53),
    Z55   => Z(54),
    Z56   => Z(55)
);

end NXP_ARCH;
-- #}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_SPLIT definition                                                             2017/09/25
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_signed.ALL;

entity NX_DSP_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port(
   CK   : IN  std_logic;
   R    : IN  std_logic;
   RZ   : IN  std_logic;
   WE   : IN  std_logic;

   CI   : IN  std_logic;     -- cy_i
   A    : IN  std_logic_vector(23 downto 0);
   B    : IN  std_logic_vector(17 downto 0);
   C    : IN  std_logic_vector(35 downto 0);
   D    : IN  std_logic_vector(17 downto 0);
   CAI  : IN  std_logic_vector(17 downto 0);
   CBI  : IN  std_logic_vector(17 downto 0);
   CZI  : IN  std_logic_vector(55 downto 0);
   CCI  : IN  std_logic;  -- ccy_i

   Z    : out  std_logic_vector(55 downto 0);
   CO   : OUT  std_logic;  -- cy_o
   CO36 : OUT  std_logic;  -- cy36_o
   CO48 : OUT  std_logic;  -- cy48_o
   OVF  : OUT  std_logic;
   CAO  : OUT  std_logic_vector(17 downto 0);
   CBO  : OUT  std_logic_vector(17 downto 0);
   CZO  : OUT  std_logic_vector(55 downto 0);
   CCO  : OUT  std_logic  -- ccy_o
  );
end NX_DSP_SPLIT;

-- architecture NX_RTL of NX_DSP_SPLIT#{{{#
architecture NX_RTL of NX_DSP_SPLIT is

----------------------------------------------------------
-- Internal signals to be mapped to the NX_DSP component
----------------------------------------------------------
signal A1         : std_logic := '0';
signal A2         : std_logic := '0';
signal A3         : std_logic := '0';
signal A4         : std_logic := '0';
signal A5         : std_logic := '0';
signal A6         : std_logic := '0';
signal A7         : std_logic := '0';
signal A8         : std_logic := '0';
signal A9         : std_logic := '0';
signal A10        : std_logic := '0';
signal A11        : std_logic := '0';
signal A12        : std_logic := '0';
signal A13        : std_logic := '0';
signal A14        : std_logic := '0';
signal A15        : std_logic := '0';
signal A16        : std_logic := '0';
signal A17        : std_logic := '0';
signal A18        : std_logic := '0';
signal A19        : std_logic := '0';
signal A20        : std_logic := '0';
signal A21        : std_logic := '0';
signal A22        : std_logic := '0';
signal A23        : std_logic := '0';
signal A24        : std_logic := '0';

signal B1         : std_logic := '0';
signal B2         : std_logic := '0';
signal B3         : std_logic := '0';
signal B4         : std_logic := '0';
signal B5         : std_logic := '0';
signal B6         : std_logic := '0';
signal B7         : std_logic := '0';
signal B8         : std_logic := '0';
signal B9         : std_logic := '0';
signal B10        : std_logic := '0';
signal B11        : std_logic := '0';
signal B12        : std_logic := '0';
signal B13        : std_logic := '0';
signal B14        : std_logic := '0';
signal B15        : std_logic := '0';
signal B16        : std_logic := '0';
signal B17        : std_logic := '0';
signal B18        : std_logic := '0';
         
signal C1         : std_logic := '0';
signal C2         : std_logic := '0';
signal C3         : std_logic := '0';
signal C4         : std_logic := '0';
signal C5         : std_logic := '0';
signal C6         : std_logic := '0';
signal C7         : std_logic := '0';
signal C8         : std_logic := '0';
signal C9         : std_logic := '0';
signal C10        : std_logic := '0';
signal C11        : std_logic := '0';
signal C12        : std_logic := '0';
signal C13        : std_logic := '0';
signal C14        : std_logic := '0';
signal C15        : std_logic := '0';
signal C16        : std_logic := '0';
signal C17        : std_logic := '0';
signal C18        : std_logic := '0';
signal C19        : std_logic := '0';
signal C20        : std_logic := '0';
signal C21        : std_logic := '0';
signal C22        : std_logic := '0';
signal C23        : std_logic := '0';
signal C24        : std_logic := '0';
signal C25        : std_logic := '0';
signal C26        : std_logic := '0';
signal C27        : std_logic := '0';
signal C28        : std_logic := '0';
signal C29        : std_logic := '0';
signal C30        : std_logic := '0';
signal C31        : std_logic := '0';
signal C32        : std_logic := '0';
signal C33        : std_logic := '0';
signal C34        : std_logic := '0';
signal C35        : std_logic := '0';
signal C36        : std_logic := '0';

signal CAI1       : std_logic := '0';
signal CAI2       : std_logic := '0';
signal CAI3       : std_logic := '0';
signal CAI4       : std_logic := '0';
signal CAI5       : std_logic := '0';
signal CAI6       : std_logic := '0';
signal CAI7       : std_logic := '0';
signal CAI8       : std_logic := '0';
signal CAI9       : std_logic := '0';
signal CAI10      : std_logic := '0';
signal CAI11      : std_logic := '0';
signal CAI12      : std_logic := '0';
signal CAI13      : std_logic := '0';
signal CAI14      : std_logic := '0';
signal CAI15      : std_logic := '0';
signal CAI16      : std_logic := '0';
signal CAI17      : std_logic := '0';
signal CAI18      : std_logic := '0';

signal CAO1       : std_logic := '0';
signal CAO2       : std_logic := '0';
signal CAO3       : std_logic := '0';
signal CAO4       : std_logic := '0';
signal CAO5       : std_logic := '0';
signal CAO6       : std_logic := '0';
signal CAO7       : std_logic := '0';
signal CAO8       : std_logic := '0';
signal CAO9       : std_logic := '0';
signal CAO10      : std_logic := '0';
signal CAO11      : std_logic := '0';
signal CAO12      : std_logic := '0';
signal CAO13      : std_logic := '0';
signal CAO14      : std_logic := '0';
signal CAO15      : std_logic := '0';
signal CAO16      : std_logic := '0';
signal CAO17      : std_logic := '0';
signal CAO18      : std_logic := '0';

signal CBI1       : std_logic := '0';
signal CBI2       : std_logic := '0';
signal CBI3       : std_logic := '0';
signal CBI4       : std_logic := '0';
signal CBI5       : std_logic := '0';
signal CBI6       : std_logic := '0';
signal CBI7       : std_logic := '0';
signal CBI8       : std_logic := '0';
signal CBI9       : std_logic := '0';
signal CBI10      : std_logic := '0';
signal CBI11      : std_logic := '0';
signal CBI12      : std_logic := '0';
signal CBI13      : std_logic := '0';
signal CBI14      : std_logic := '0';
signal CBI15      : std_logic := '0';
signal CBI16      : std_logic := '0';
signal CBI17      : std_logic := '0';
signal CBI18      : std_logic := '0';

signal CBO1       : std_logic := '0';
signal CBO2       : std_logic := '0';
signal CBO3       : std_logic := '0';
signal CBO4       : std_logic := '0';
signal CBO5       : std_logic := '0';
signal CBO6       : std_logic := '0';
signal CBO7       : std_logic := '0';
signal CBO8       : std_logic := '0';
signal CBO9       : std_logic := '0';
signal CBO10      : std_logic := '0';
signal CBO11      : std_logic := '0';
signal CBO12      : std_logic := '0';
signal CBO13      : std_logic := '0';
signal CBO14      : std_logic := '0';
signal CBO15      : std_logic := '0';
signal CBO16      : std_logic := '0';
signal CBO17      : std_logic := '0';
signal CBO18      : std_logic := '0';

signal CO37       : std_logic := '0';
signal CO49       : std_logic := '0';

signal CZI1       : std_logic := '0';
signal CZI2       : std_logic := '0';
signal CZI3       : std_logic := '0';
signal CZI4       : std_logic := '0';
signal CZI5       : std_logic := '0';
signal CZI6       : std_logic := '0';
signal CZI7       : std_logic := '0';
signal CZI8       : std_logic := '0';
signal CZI9       : std_logic := '0';
signal CZI10      : std_logic := '0';
signal CZI11      : std_logic := '0';
signal CZI12      : std_logic := '0';
signal CZI13      : std_logic := '0';
signal CZI14      : std_logic := '0';
signal CZI15      : std_logic := '0';
signal CZI16      : std_logic := '0';
signal CZI17      : std_logic := '0';
signal CZI18      : std_logic := '0';
signal CZI19      : std_logic := '0';
signal CZI20      : std_logic := '0';
signal CZI21      : std_logic := '0';
signal CZI22      : std_logic := '0';
signal CZI23      : std_logic := '0';
signal CZI24      : std_logic := '0';
signal CZI25      : std_logic := '0';
signal CZI26      : std_logic := '0';
signal CZI27      : std_logic := '0';
signal CZI28      : std_logic := '0';
signal CZI29      : std_logic := '0';
signal CZI30      : std_logic := '0';
signal CZI31      : std_logic := '0';
signal CZI32      : std_logic := '0';
signal CZI33      : std_logic := '0';
signal CZI34      : std_logic := '0';
signal CZI35      : std_logic := '0';
signal CZI36      : std_logic := '0';
signal CZI37      : std_logic := '0';
signal CZI38      : std_logic := '0';
signal CZI39      : std_logic := '0';
signal CZI40      : std_logic := '0';
signal CZI41      : std_logic := '0';
signal CZI42      : std_logic := '0';
signal CZI43      : std_logic := '0';
signal CZI44      : std_logic := '0';
signal CZI45      : std_logic := '0';
signal CZI46      : std_logic := '0';
signal CZI47      : std_logic := '0';
signal CZI48      : std_logic := '0';
signal CZI49      : std_logic := '0';
signal CZI50      : std_logic := '0';
signal CZI51      : std_logic := '0';
signal CZI52      : std_logic := '0';
signal CZI53      : std_logic := '0';
signal CZI54      : std_logic := '0';
signal CZI55      : std_logic := '0';
signal CZI56      : std_logic := '0';

signal CZO1       : std_logic := '0';
signal CZO2       : std_logic := '0';
signal CZO3       : std_logic := '0';
signal CZO4       : std_logic := '0';
signal CZO5       : std_logic := '0';
signal CZO6       : std_logic := '0';
signal CZO7       : std_logic := '0';
signal CZO8       : std_logic := '0';
signal CZO9       : std_logic := '0';
signal CZO10      : std_logic := '0';
signal CZO11      : std_logic := '0';
signal CZO12      : std_logic := '0';
signal CZO13      : std_logic := '0';
signal CZO14      : std_logic := '0';
signal CZO15      : std_logic := '0';
signal CZO16      : std_logic := '0';
signal CZO17      : std_logic := '0';
signal CZO18      : std_logic := '0';
signal CZO19      : std_logic := '0';
signal CZO20      : std_logic := '0';
signal CZO21      : std_logic := '0';
signal CZO22      : std_logic := '0';
signal CZO23      : std_logic := '0';
signal CZO24      : std_logic := '0';
signal CZO25      : std_logic := '0';
signal CZO26      : std_logic := '0';
signal CZO27      : std_logic := '0';
signal CZO28      : std_logic := '0';
signal CZO29      : std_logic := '0';
signal CZO30      : std_logic := '0';
signal CZO31      : std_logic := '0';
signal CZO32      : std_logic := '0';
signal CZO33      : std_logic := '0';
signal CZO34      : std_logic := '0';
signal CZO35      : std_logic := '0';
signal CZO36      : std_logic := '0';
signal CZO37      : std_logic := '0';
signal CZO38      : std_logic := '0';
signal CZO39      : std_logic := '0';
signal CZO40      : std_logic := '0';
signal CZO41      : std_logic := '0';
signal CZO42      : std_logic := '0';
signal CZO43      : std_logic := '0';
signal CZO44      : std_logic := '0';
signal CZO45      : std_logic := '0';
signal CZO46      : std_logic := '0';
signal CZO47      : std_logic := '0';
signal CZO48      : std_logic := '0';
signal CZO49      : std_logic := '0';
signal CZO50      : std_logic := '0';
signal CZO51      : std_logic := '0';
signal CZO52      : std_logic := '0';
signal CZO53      : std_logic := '0';
signal CZO54      : std_logic := '0';
signal CZO55      : std_logic := '0';
signal CZO56      : std_logic := '0';

signal D1         : std_logic := '0';
signal D2         : std_logic := '0';
signal D3         : std_logic := '0';
signal D4         : std_logic := '0';
signal D5         : std_logic := '0';
signal D6         : std_logic := '0';
signal D7         : std_logic := '0';
signal D8         : std_logic := '0';
signal D9         : std_logic := '0';
signal D10        : std_logic := '0';
signal D11        : std_logic := '0';
signal D12        : std_logic := '0';
signal D13        : std_logic := '0';
signal D14        : std_logic := '0';
signal D15        : std_logic := '0';
signal D16        : std_logic := '0';
signal D17        : std_logic := '0';
signal D18        : std_logic := '0';

signal Z1         : std_logic := '0';
signal Z2         : std_logic := '0';
signal Z3         : std_logic := '0';
signal Z4         : std_logic := '0';
signal Z5         : std_logic := '0';
signal Z6         : std_logic := '0';
signal Z7         : std_logic := '0';
signal Z8         : std_logic := '0';
signal Z9         : std_logic := '0';
signal Z10        : std_logic := '0';
signal Z11        : std_logic := '0';
signal Z12        : std_logic := '0';
signal Z13        : std_logic := '0';
signal Z14        : std_logic := '0';
signal Z15        : std_logic := '0';
signal Z16        : std_logic := '0';
signal Z17        : std_logic := '0';
signal Z18        : std_logic := '0';
signal Z19        : std_logic := '0';
signal Z20        : std_logic := '0';
signal Z21        : std_logic := '0';
signal Z22        : std_logic := '0';
signal Z23        : std_logic := '0';
signal Z24        : std_logic := '0';
signal Z25        : std_logic := '0';
signal Z26        : std_logic := '0';
signal Z27        : std_logic := '0';
signal Z28        : std_logic := '0';
signal Z29        : std_logic := '0';
signal Z30        : std_logic := '0';
signal Z31        : std_logic := '0';
signal Z32        : std_logic := '0';
signal Z33        : std_logic := '0';
signal Z34        : std_logic := '0';
signal Z35        : std_logic := '0';
signal Z36        : std_logic := '0';
signal Z37        : std_logic := '0';
signal Z38        : std_logic := '0';
signal Z39        : std_logic := '0';
signal Z40        : std_logic := '0';
signal Z41        : std_logic := '0';
signal Z42        : std_logic := '0';
signal Z43        : std_logic := '0';
signal Z44        : std_logic := '0';
signal Z45        : std_logic := '0';
signal Z46        : std_logic := '0';
signal Z47        : std_logic := '0';
signal Z48        : std_logic := '0';
signal Z49        : std_logic := '0';
signal Z50        : std_logic := '0';
signal Z51        : std_logic := '0';
signal Z52        : std_logic := '0';
signal Z53        : std_logic := '0';
signal Z54        : std_logic := '0';
signal Z55        : std_logic := '0';


constant raw_config0_gen : bit_vector(19 downto 0)
    := CO_SEL & ALU_DYNAMIC_OP & SATURATION_RANK & ENABLE_SATURATION & Z_FEEDBACK_SHL12 & MUX_Z &
       MUX_CI & MUX_Y & MUX_X & MUX_P & MUX_B & MUX_A & PRE_ADDER_OP & SIGNED_MODE;

constant raw_config1_gen : bit_vector(21 downto 0)
    := "000" & PR_OV_MUX & PR_CO_MUX & PR_Z_MUX & PR_ALU_MUX & PR_MULT_MUX & PR_Y_MUX & PR_X_MUX &
       PR_P_MUX & PR_CI_MUX & PR_D_MUX & PR_C_MUX & PR_B_CASCADE_MUX & PR_B_MUX & PR_A_CASCADE_MUX &
       PR_A_MUX;

constant raw_config2_gen : bit_vector(12 downto 0)
    := ENABLE_PR_OV_RST & ENABLE_PR_CO_RST & ENABLE_PR_Z_RST & ENABLE_PR_ALU_RST &
       ENABLE_PR_MULT_RST & ENABLE_PR_Y_RST & ENABLE_PR_X_RST & ENABLE_PR_P_RST & ENABLE_PR_CI_RST &
       ENABLE_PR_D_RST & ENABLE_PR_C_RST & ENABLE_PR_B_RST & ENABLE_PR_A_RST;

constant raw_config3_gen : bit_vector(6 downto 0) := ALU_MUX & ALU_OP;


----------------------------------------------------------
-- NX_DSP declaration
----------------------------------------------------------
component NX_DSP
generic (
   std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
   raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";      -- PRC
   raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
   raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
   );
port (
   A1         : in std_logic := '0';
   A2         : in std_logic := '0';
   A3         : in std_logic := '0';
   A4         : in std_logic := '0';
   A5         : in std_logic := '0';
   A6         : in std_logic := '0';
   A7         : in std_logic := '0';
   A8         : in std_logic := '0';
   A9         : in std_logic := '0';
   A10        : in std_logic := '0';
   A11        : in std_logic := '0';
   A12        : in std_logic := '0';
   A13        : in std_logic := '0';
   A14        : in std_logic := '0';
   A15        : in std_logic := '0';
   A16        : in std_logic := '0';
   A17        : in std_logic := '0';
   A18        : in std_logic := '0';
   A19        : in std_logic := '0';
   A20        : in std_logic := '0';
   A21        : in std_logic := '0';
   A22        : in std_logic := '0';
   A23        : in std_logic := '0';
   A24        : in std_logic := '0';

   B1         : in std_logic := '0';
   B2         : in std_logic := '0';
   B3         : in std_logic := '0';
   B4         : in std_logic := '0';
   B5         : in std_logic := '0';
   B6         : in std_logic := '0';
   B7         : in std_logic := '0';
   B8         : in std_logic := '0';
   B9         : in std_logic := '0';
   B10        : in std_logic := '0';
   B11        : in std_logic := '0';
   B12        : in std_logic := '0';
   B13        : in std_logic := '0';
   B14        : in std_logic := '0';
   B15        : in std_logic := '0';
   B16        : in std_logic := '0';
   B17        : in std_logic := '0';
   B18        : in std_logic := '0';

   C1         : in std_logic := '0';
   C2         : in std_logic := '0';
   C3         : in std_logic := '0';
   C4         : in std_logic := '0';
   C5         : in std_logic := '0';
   C6         : in std_logic := '0';
   C7         : in std_logic := '0';
   C8         : in std_logic := '0';
   C9         : in std_logic := '0';
   C10        : in std_logic := '0';
   C11        : in std_logic := '0';
   C12        : in std_logic := '0';
   C13        : in std_logic := '0';
   C14        : in std_logic := '0';
   C15        : in std_logic := '0';
   C16        : in std_logic := '0';
   C17        : in std_logic := '0';
   C18        : in std_logic := '0';
   C19        : in std_logic := '0';
   C20        : in std_logic := '0';
   C21        : in std_logic := '0';
   C22        : in std_logic := '0';
   C23        : in std_logic := '0';
   C24        : in std_logic := '0';
   C25        : in std_logic := '0';
   C26        : in std_logic := '0';
   C27        : in std_logic := '0';
   C28        : in std_logic := '0';
   C29        : in std_logic := '0';
   C30        : in std_logic := '0';
   C31        : in std_logic := '0';
   C32        : in std_logic := '0';
   C33        : in std_logic := '0';
   C34        : in std_logic := '0';
   C35        : in std_logic := '0';
   C36        : in std_logic := '0';

   CAI1       : in std_logic := '0';
   CAI2       : in std_logic := '0';
   CAI3       : in std_logic := '0';
   CAI4       : in std_logic := '0';
   CAI5       : in std_logic := '0';
   CAI6       : in std_logic := '0';
   CAI7       : in std_logic := '0';
   CAI8       : in std_logic := '0';
   CAI9       : in std_logic := '0';
   CAI10      : in std_logic := '0';
   CAI11      : in std_logic := '0';
   CAI12      : in std_logic := '0';
   CAI13      : in std_logic := '0';
   CAI14      : in std_logic := '0';
   CAI15      : in std_logic := '0';
   CAI16      : in std_logic := '0';
   CAI17      : in std_logic := '0';
   CAI18      : in std_logic := '0';

   CAO1       : out std_logic := '0';
   CAO2       : out std_logic := '0';
   CAO3       : out std_logic := '0';
   CAO4       : out std_logic := '0';
   CAO5       : out std_logic := '0';
   CAO6       : out std_logic := '0';
   CAO7       : out std_logic := '0';
   CAO8       : out std_logic := '0';
   CAO9       : out std_logic := '0';
   CAO10      : out std_logic := '0';
   CAO11      : out std_logic := '0';
   CAO12      : out std_logic := '0';
   CAO13      : out std_logic := '0';
   CAO14      : out std_logic := '0';
   CAO15      : out std_logic := '0';
   CAO16      : out std_logic := '0';
   CAO17      : out std_logic := '0';
   CAO18      : out std_logic := '0';

   CBI1       : in std_logic := '0';
   CBI2       : in std_logic := '0';
   CBI3       : in std_logic := '0';
   CBI4       : in std_logic := '0';
   CBI5       : in std_logic := '0';
   CBI6       : in std_logic := '0';
   CBI7       : in std_logic := '0';
   CBI8       : in std_logic := '0';
   CBI9       : in std_logic := '0';
   CBI10      : in std_logic := '0';
   CBI11      : in std_logic := '0';
   CBI12      : in std_logic := '0';
   CBI13      : in std_logic := '0';
   CBI14      : in std_logic := '0';
   CBI15      : in std_logic := '0';
   CBI16      : in std_logic := '0';
   CBI17      : in std_logic := '0';
   CBI18      : in std_logic := '0';

   CBO1       : out std_logic := '0';
   CBO2       : out std_logic := '0';
   CBO3       : out std_logic := '0';
   CBO4       : out std_logic := '0';
   CBO5       : out std_logic := '0';
   CBO6       : out std_logic := '0';
   CBO7       : out std_logic := '0';
   CBO8       : out std_logic := '0';
   CBO9       : out std_logic := '0';
   CBO10      : out std_logic := '0';
   CBO11      : out std_logic := '0';
   CBO12      : out std_logic := '0';
   CBO13      : out std_logic := '0';
   CBO14      : out std_logic := '0';
   CBO15      : out std_logic := '0';
   CBO16      : out std_logic := '0';
   CBO17      : out std_logic := '0';
   CBO18      : out std_logic := '0';

   CCI        : in std_logic := '0';
   CCO        : out std_logic := '0';
   CI         : in std_logic := '0';
   CK         : in std_logic := '0';
   CO         : out std_logic := '0';
   CO37       : out std_logic := '0';
   CO49       : out std_logic := '0';

   CZI1       : in std_logic := '0';
   CZI2       : in std_logic := '0';
   CZI3       : in std_logic := '0';
   CZI4       : in std_logic := '0';
   CZI5       : in std_logic := '0';
   CZI6       : in std_logic := '0';
   CZI7       : in std_logic := '0';
   CZI8       : in std_logic := '0';
   CZI9       : in std_logic := '0';
   CZI10      : in std_logic := '0';
   CZI11      : in std_logic := '0';
   CZI12      : in std_logic := '0';
   CZI13      : in std_logic := '0';
   CZI14      : in std_logic := '0';
   CZI15      : in std_logic := '0';
   CZI16      : in std_logic := '0';
   CZI17      : in std_logic := '0';
   CZI18      : in std_logic := '0';
   CZI19      : in std_logic := '0';
   CZI20      : in std_logic := '0';
   CZI21      : in std_logic := '0';
   CZI22      : in std_logic := '0';
   CZI23      : in std_logic := '0';
   CZI24      : in std_logic := '0';
   CZI25      : in std_logic := '0';
   CZI26      : in std_logic := '0';
   CZI27      : in std_logic := '0';
   CZI28      : in std_logic := '0';
   CZI29      : in std_logic := '0';
   CZI30      : in std_logic := '0';
   CZI31      : in std_logic := '0';
   CZI32      : in std_logic := '0';
   CZI33      : in std_logic := '0';
   CZI34      : in std_logic := '0';
   CZI35      : in std_logic := '0';
   CZI36      : in std_logic := '0';
   CZI37      : in std_logic := '0';
   CZI38      : in std_logic := '0';
   CZI39      : in std_logic := '0';
   CZI40      : in std_logic := '0';
   CZI41      : in std_logic := '0';
   CZI42      : in std_logic := '0';
   CZI43      : in std_logic := '0';
   CZI44      : in std_logic := '0';
   CZI45      : in std_logic := '0';
   CZI46      : in std_logic := '0';
   CZI47      : in std_logic := '0';
   CZI48      : in std_logic := '0';
   CZI49      : in std_logic := '0';
   CZI50      : in std_logic := '0';
   CZI51      : in std_logic := '0';
   CZI52      : in std_logic := '0';
   CZI53      : in std_logic := '0';
   CZI54      : in std_logic := '0';
   CZI55      : in std_logic := '0';
   CZI56      : in std_logic := '0';

   CZO1       : out std_logic := '0';
   CZO2       : out std_logic := '0';
   CZO3       : out std_logic := '0';
   CZO4       : out std_logic := '0';
   CZO5       : out std_logic := '0';
   CZO6       : out std_logic := '0';
   CZO7       : out std_logic := '0';
   CZO8       : out std_logic := '0';
   CZO9       : out std_logic := '0';
   CZO10      : out std_logic := '0';
   CZO11      : out std_logic := '0';
   CZO12      : out std_logic := '0';
   CZO13      : out std_logic := '0';
   CZO14      : out std_logic := '0';
   CZO15      : out std_logic := '0';
   CZO16      : out std_logic := '0';
   CZO17      : out std_logic := '0';
   CZO18      : out std_logic := '0';
   CZO19      : out std_logic := '0';
   CZO20      : out std_logic := '0';
   CZO21      : out std_logic := '0';
   CZO22      : out std_logic := '0';
   CZO23      : out std_logic := '0';
   CZO24      : out std_logic := '0';
   CZO25      : out std_logic := '0';
   CZO26      : out std_logic := '0';
   CZO27      : out std_logic := '0';
   CZO28      : out std_logic := '0';
   CZO29      : out std_logic := '0';
   CZO30      : out std_logic := '0';
   CZO31      : out std_logic := '0';
   CZO32      : out std_logic := '0';
   CZO33      : out std_logic := '0';
   CZO34      : out std_logic := '0';
   CZO35      : out std_logic := '0';
   CZO36      : out std_logic := '0';
   CZO37      : out std_logic := '0';
   CZO38      : out std_logic := '0';
   CZO39      : out std_logic := '0';
   CZO40      : out std_logic := '0';
   CZO41      : out std_logic := '0';
   CZO42      : out std_logic := '0';
   CZO43      : out std_logic := '0';
   CZO44      : out std_logic := '0';
   CZO45      : out std_logic := '0';
   CZO46      : out std_logic := '0';
   CZO47      : out std_logic := '0';
   CZO48      : out std_logic := '0';
   CZO49      : out std_logic := '0';
   CZO50      : out std_logic := '0';
   CZO51      : out std_logic := '0';
   CZO52      : out std_logic := '0';
   CZO53      : out std_logic := '0';
   CZO54      : out std_logic := '0';
   CZO55      : out std_logic := '0';
   CZO56      : out std_logic := '0';

   D1         : in std_logic := '0';
   D2         : in std_logic := '0';
   D3         : in std_logic := '0';
   D4         : in std_logic := '0';
   D5         : in std_logic := '0';
   D6         : in std_logic := '0';
   D7         : in std_logic := '0';
   D8         : in std_logic := '0';
   D9         : in std_logic := '0';
   D10        : in std_logic := '0';
   D11        : in std_logic := '0';
   D12        : in std_logic := '0';
   D13        : in std_logic := '0';
   D14        : in std_logic := '0';
   D15        : in std_logic := '0';
   D16        : in std_logic := '0';
   D17        : in std_logic := '0';
   D18        : in std_logic := '0';

   OVF        : out std_logic := '0';
   R          : in std_logic := '0';
   RZ         : in std_logic := '0';
   WE         : in std_logic := '0';

   Z1         : out std_logic := '0';
   Z2         : out std_logic := '0';
   Z3         : out std_logic := '0';
   Z4         : out std_logic := '0';
   Z5         : out std_logic := '0';
   Z6         : out std_logic := '0';
   Z7         : out std_logic := '0';
   Z8         : out std_logic := '0';
   Z9         : out std_logic := '0';
   Z10        : out std_logic := '0';
   Z11        : out std_logic := '0';
   Z12        : out std_logic := '0';
   Z13        : out std_logic := '0';
   Z14        : out std_logic := '0';
   Z15        : out std_logic := '0';
   Z16        : out std_logic := '0';
   Z17        : out std_logic := '0';
   Z18        : out std_logic := '0';
   Z19        : out std_logic := '0';
   Z20        : out std_logic := '0';
   Z21        : out std_logic := '0';
   Z22        : out std_logic := '0';
   Z23        : out std_logic := '0';
   Z24        : out std_logic := '0';
   Z25        : out std_logic := '0';
   Z26        : out std_logic := '0';
   Z27        : out std_logic := '0';
   Z28        : out std_logic := '0';
   Z29        : out std_logic := '0';
   Z30        : out std_logic := '0';
   Z31        : out std_logic := '0';
   Z32        : out std_logic := '0';
   Z33        : out std_logic := '0';
   Z34        : out std_logic := '0';
   Z35        : out std_logic := '0';
   Z36        : out std_logic := '0';
   Z37        : out std_logic := '0';
   Z38        : out std_logic := '0';
   Z39        : out std_logic := '0';
   Z40        : out std_logic := '0';
   Z41        : out std_logic := '0';
   Z42        : out std_logic := '0';
   Z43        : out std_logic := '0';
   Z44        : out std_logic := '0';
   Z45        : out std_logic := '0';
   Z46        : out std_logic := '0';
   Z47        : out std_logic := '0';
   Z48        : out std_logic := '0';
   Z49        : out std_logic := '0';
   Z50        : out std_logic := '0';
   Z51        : out std_logic := '0';
   Z52        : out std_logic := '0';
   Z53        : out std_logic := '0';
   Z54        : out std_logic := '0';
   Z55        : out std_logic := '0';
   Z56        : out std_logic := '0'
   );
end component;

begin

----------------------------------------------------------
-- Instantiation the NX_DSP component
----------------------------------------------------------
DSP_INST : NX_DSP
generic map (
   std_mode    => "", -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 => raw_config0_gen, -- MODE and MUXes
   raw_config1 => raw_config1_gen, -- Pipeline Registers
   raw_config2 => raw_config2_gen, -- Reset Enable for internal registers
   raw_config3 => raw_config3_gen   -- ALU modes
   )
port map (
   A1         => A(0),
   A2         => A(1),
   A3         => A(2),
   A4         => A(3),
   A5         => A(4),
   A6         => A(5),
   A7         => A(6),
   A8         => A(7),
   A9         => A(8),
   A10        => A(9),
   A11        => A(10),
   A12        => A(11),
   A13        => A(12),
   A14        => A(13),
   A15        => A(14),
   A16        => A(15),
   A17        => A(16),
   A18        => A(17),
   A19        => A(18),
   A20        => A(19),
   A21        => A(20),
   A22        => A(21),
   A23        => A(22),
   A24        => A(23),

   B1         => B(0),
   B2         => B(1),
   B3         => B(2),
   B4         => B(3),
   B5         => B(4),
   B6         => B(5),
   B7         => B(6),
   B8         => B(7),
   B9         => B(8),
   B10        => B(9),
   B11        => B(10),
   B12        => B(11),
   B13        => B(12),
   B14        => B(13),
   B15        => B(14),
   B16        => B(15),
   B17        => B(16),
   B18        => B(17),

   C1         => C(0),
   C2         => C(1),
   C3         => C(2),
   C4         => C(3),
   C5         => C(4),
   C6         => C(5),
   C7         => C(6),
   C8         => C(7),
   C9         => C(8),
   C10        => C(9),
   C11        => C(10),
   C12        => C(11),
   C13        => C(12),
   C14        => C(13),
   C15        => C(14),
   C16        => C(15),
   C17        => C(16),
   C18        => C(17),
   C19        => C(18),
   C20        => C(19),
   C21        => C(20),
   C22        => C(21),
   C23        => C(22),
   C24        => C(23),
   C25        => C(24),
   C26        => C(25),
   C27        => C(26),
   C28        => C(27),
   C29        => C(28),
   C30        => C(29),
   C31        => C(30),
   C32        => C(31),
   C33        => C(32),
   C34        => C(33),
   C35        => C(34),
   C36        => C(35),

   CAI1       => CAI(0),
   CAI2       => CAI(1),
   CAI3       => CAI(2),
   CAI4       => CAI(3),
   CAI5       => CAI(4),
   CAI6       => CAI(5),
   CAI7       => CAI(6),
   CAI8       => CAI(7),
   CAI9       => CAI(8),
   CAI10      => CAI(9),
   CAI11      => CAI(10),
   CAI12      => CAI(11),
   CAI13      => CAI(12),
   CAI14      => CAI(13),
   CAI15      => CAI(14),
   CAI16      => CAI(15),
   CAI17      => CAI(16),
   CAI18      => CAI(17),

   CAO1       => CAO(0),
   CAO2       => CAO(1),
   CAO3       => CAO(2),
   CAO4       => CAO(3),
   CAO5       => CAO(4),
   CAO6       => CAO(5),
   CAO7       => CAO(6),
   CAO8       => CAO(7),
   CAO9       => CAO(8),
   CAO10      => CAO(9),
   CAO11      => CAO(10),
   CAO12      => CAO(11),
   CAO13      => CAO(12),
   CAO14      => CAO(13),
   CAO15      => CAO(14),
   CAO16      => CAO(15),
   CAO17      => CAO(16),
   CAO18      => CAO(17),

   CBI1       => CBI(0),
   CBI2       => CBI(1),
   CBI3       => CBI(2),
   CBI4       => CBI(3),
   CBI5       => CBI(4),
   CBI6       => CBI(5),
   CBI7       => CBI(6),
   CBI8       => CBI(7),
   CBI9       => CBI(8),
   CBI10      => CBI(9),
   CBI11      => CBI(10),
   CBI12      => CBI(11),
   CBI13      => CBI(12),
   CBI14      => CBI(13),
   CBI15      => CBI(14),
   CBI16      => CBI(15),
   CBI17      => CBI(16),
   CBI18      => CBI(17),

   CBO1       => CBO(0),
   CBO2       => CBO(1),
   CBO3       => CBO(2),
   CBO4       => CBO(3),
   CBO5       => CBO(4),
   CBO6       => CBO(5),
   CBO7       => CBO(6),
   CBO8       => CBO(7),
   CBO9       => CBO(8),
   CBO10      => CBO(9),
   CBO11      => CBO(10),
   CBO12      => CBO(11),
   CBO13      => CBO(12),
   CBO14      => CBO(13),
   CBO15      => CBO(14),
   CBO16      => CBO(15),
   CBO17      => CBO(16),
   CBO18      => CBO(17),

   CCI        => CCI,
   CCO        => CCO,
   CI         => CI,
   CK         => CK,
   CO         => CO,
   CO37       => CO36,
   CO49       => CO48,

   CZI1       => CZI(0),
   CZI2       => CZI(1),
   CZI3       => CZI(2),
   CZI4       => CZI(3),
   CZI5       => CZI(4),
   CZI6       => CZI(5),
   CZI7       => CZI(6),
   CZI8       => CZI(7),
   CZI9       => CZI(8),
   CZI10      => CZI(9),
   CZI11      => CZI(10),
   CZI12      => CZI(11),
   CZI13      => CZI(12),
   CZI14      => CZI(13),
   CZI15      => CZI(14),
   CZI16      => CZI(15),
   CZI17      => CZI(16),
   CZI18      => CZI(17),
   CZI19      => CZI(18),
   CZI20      => CZI(19),
   CZI21      => CZI(20),
   CZI22      => CZI(21),
   CZI23      => CZI(22),
   CZI24      => CZI(23),
   CZI25      => CZI(24),
   CZI26      => CZI(25),
   CZI27      => CZI(26),
   CZI28      => CZI(27),
   CZI29      => CZI(28),
   CZI30      => CZI(29),
   CZI31      => CZI(30),
   CZI32      => CZI(31),
   CZI33      => CZI(32),
   CZI34      => CZI(33),
   CZI35      => CZI(34),
   CZI36      => CZI(35),
   CZI37      => CZI(36),
   CZI38      => CZI(37),
   CZI39      => CZI(38),
   CZI40      => CZI(39),
   CZI41      => CZI(40),
   CZI42      => CZI(41),
   CZI43      => CZI(42),
   CZI44      => CZI(43),
   CZI45      => CZI(44),
   CZI46      => CZI(45),
   CZI47      => CZI(46),
   CZI48      => CZI(47),
   CZI49      => CZI(48),
   CZI50      => CZI(49),
   CZI51      => CZI(50),
   CZI52      => CZI(51),
   CZI53      => CZI(52),
   CZI54      => CZI(53),
   CZI55      => CZI(54),
   CZI56      => CZI(55),

   CZO1       => CZO(0),
   CZO2       => CZO(1),
   CZO3       => CZO(2),
   CZO4       => CZO(3),
   CZO5       => CZO(4),
   CZO6       => CZO(5),
   CZO7       => CZO(6),
   CZO8       => CZO(7),
   CZO9       => CZO(8),
   CZO10      => CZO(9),
   CZO11      => CZO(10),
   CZO12      => CZO(11),
   CZO13      => CZO(12),
   CZO14      => CZO(13),
   CZO15      => CZO(14),
   CZO16      => CZO(15),
   CZO17      => CZO(16),
   CZO18      => CZO(17),
   CZO19      => CZO(18),
   CZO20      => CZO(19),
   CZO21      => CZO(20),
   CZO22      => CZO(21),
   CZO23      => CZO(22),
   CZO24      => CZO(23),
   CZO25      => CZO(24),
   CZO26      => CZO(25),
   CZO27      => CZO(26),
   CZO28      => CZO(27),
   CZO29      => CZO(28),
   CZO30      => CZO(29),
   CZO31      => CZO(30),
   CZO32      => CZO(31),
   CZO33      => CZO(32),
   CZO34      => CZO(33),
   CZO35      => CZO(34),
   CZO36      => CZO(35),
   CZO37      => CZO(36),
   CZO38      => CZO(37),
   CZO39      => CZO(38),
   CZO40      => CZO(39),
   CZO41      => CZO(40),
   CZO42      => CZO(41),
   CZO43      => CZO(42),
   CZO44      => CZO(43),
   CZO45      => CZO(44),
   CZO46      => CZO(45),
   CZO47      => CZO(46),
   CZO48      => CZO(47),
   CZO49      => CZO(48),
   CZO50      => CZO(49),
   CZO51      => CZO(50),
   CZO52      => CZO(51),
   CZO53      => CZO(52),
   CZO54      => CZO(53),
   CZO55      => CZO(54),
   CZO56      => CZO(55),

   D1         => D(0),
   D2         => D(1),
   D3         => D(2),
   D4         => D(3),
   D5         => D(4),
   D6         => D(5),
   D7         => D(6),
   D8         => D(7),
   D9         => D(8),
   D10        => D(9),
   D11        => D(10),
   D12        => D(11),
   D13        => D(12),
   D14        => D(13),
   D15        => D(14),
   D16        => D(15),
   D17        => D(16),
   D18        => D(17),

   OVF        => OVF,
   R          => R,
   RZ         => RZ,
   WE         => WE,

   Z1         => Z(0),
   Z2         => Z(1),
   Z3         => Z(2),
   Z4         => Z(3),
   Z5         => Z(4),
   Z6         => Z(5),
   Z7         => Z(6),
   Z8         => Z(7),
   Z9         => Z(8),
   Z10        => Z(9),
   Z11        => Z(10),
   Z12        => Z(11),
   Z13        => Z(12),
   Z14        => Z(13),
   Z15        => Z(14),
   Z16        => Z(15),
   Z17        => Z(16),
   Z18        => Z(17),
   Z19        => Z(18),
   Z20        => Z(19),
   Z21        => Z(20),
   Z22        => Z(21),
   Z23        => Z(22),
   Z24        => Z(23),
   Z25        => Z(24),
   Z26        => Z(25),
   Z27        => Z(26),
   Z28        => Z(27),
   Z29        => Z(28),
   Z30        => Z(29),
   Z31        => Z(30),
   Z32        => Z(31),
   Z33        => Z(32),
   Z34        => Z(33),
   Z35        => Z(34),
   Z36        => Z(35),
   Z37        => Z(36),
   Z38        => Z(37),
   Z39        => Z(38),
   Z40        => Z(39),
   Z41        => Z(40),
   Z42        => Z(41),
   Z43        => Z(42),
   Z44        => Z(43),
   Z45        => Z(44),
   Z46        => Z(45),
   Z47        => Z(46),
   Z48        => Z(47),
   Z49        => Z(48),
   Z50        => Z(49),
   Z51        => Z(50),
   Z52        => Z(51),
   Z53        => Z(52),
   Z54        => Z(53),
   Z55        => Z(54),
   Z56        => Z(55)
   );

end NX_RTL;
-- #}}}#

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
HjvwrzgMIfgV264UruSNzR9JQeACpraNtSspNsDjn2KDbvrJbHRa0hvcTLbp8fYf
lHFSG0QSB93K6ZtcAkNIerhlpjFw7E6pun2i+dZUiAeyWczaNvTOqUTf2pyxkao1
ickAfBFS2ZBVfuA5sgNDswF+XZ9J94h5e73PUnEtGM2p0h+SYqmpucSPUMTv+50O
VANeBmvxdDIhye85tqNu8jfgTLdObCGx7KiTnjWLuERyPswdkT8eUUMn61LcOGSz
1In/MXCR/jKKF14PZUnEL3uUJkGjgdqLoH5+H2Sww/c3tLViQc8nDkWPSYypf1NF
Wqg1leYmH4S1MPe0gbQ0dw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 40320)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_DSP_L definition                                                                2018/11/30
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_DSP_L is
generic (
    std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";   -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000"; -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";          -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                 -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;
    CAI19 : in  std_logic;
    CAI20 : in  std_logic;
    CAI21 : in  std_logic;
    CAI22 : in  std_logic;
    CAI23 : in  std_logic;
    CAI24 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;
    CAO19 : out std_logic;
    CAO20 : out std_logic;
    CAO21 : out std_logic;
    CAO22 : out std_logic;
    CAO23 : out std_logic;
    CAO24 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO57  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end NX_DSP_L;

architecture NX_RTL of NX_DSP_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_DSP_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_L_WRAP definition                                                           2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity NX_DSP_L_WRAP is
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";      -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
);
port (
    A    : in  std_logic_vector(23 downto 0);
    B    : in  std_logic_vector(17 downto 0);
    C    : in  std_logic_vector(35 downto 0);

    CAI  : in  std_logic_vector(23 downto 0);
    CAO  : out std_logic_vector(23 downto 0);
    CBI  : in  std_logic_vector(17 downto 0);
    CBO  : out std_logic_vector(17 downto 0);

    CCI  : in  std_logic;
    CCO  : out std_logic;
    CI   : in  std_logic;
    CK   : in  std_logic;
    CO   : out std_logic;
    CO37 : out std_logic;
    CO57 : out std_logic;

    CZI  : in  std_logic_vector(55 downto 0);
    CZO  : out std_logic_vector(55 downto 0);

    D    : in  std_logic_vector(17 downto 0);

    OVF  : out std_logic;
    R    : in  std_logic;
    RZ   : in  std_logic;
    WE   : in  std_logic;

    Z    : out std_logic_vector(55 downto 0)
);
end NX_DSP_L_WRAP;

-- architecture NXP_ARCH of NX_DSP_L_WRAP#{{{#
architecture NXP_ARCH of NX_DSP_L_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NXP_ARCH: architecture is "WRAPPER";

component NX_DSP_L
generic (
    std_mode    : string := "";
    raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";      -- MUX
    raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";    -- PRC
    raw_config2 : bit_vector(12 downto 0) := B"0000000000000";             -- PRR
    raw_config3 : bit_vector( 6 downto 0) := B"0000000"                    -- ALU
);
port (
    A1    : in  std_logic;
    A2    : in  std_logic;
    A3    : in  std_logic;
    A4    : in  std_logic;
    A5    : in  std_logic;
    A6    : in  std_logic;
    A7    : in  std_logic;
    A8    : in  std_logic;
    A9    : in  std_logic;
    A10   : in  std_logic;
    A11   : in  std_logic;
    A12   : in  std_logic;
    A13   : in  std_logic;
    A14   : in  std_logic;
    A15   : in  std_logic;
    A16   : in  std_logic;
    A17   : in  std_logic;
    A18   : in  std_logic;
    A19   : in  std_logic;
    A20   : in  std_logic;
    A21   : in  std_logic;
    A22   : in  std_logic;
    A23   : in  std_logic;
    A24   : in  std_logic;

    B1    : in  std_logic;
    B2    : in  std_logic;
    B3    : in  std_logic;
    B4    : in  std_logic;
    B5    : in  std_logic;
    B6    : in  std_logic;
    B7    : in  std_logic;
    B8    : in  std_logic;
    B9    : in  std_logic;
    B10   : in  std_logic;
    B11   : in  std_logic;
    B12   : in  std_logic;
    B13   : in  std_logic;
    B14   : in  std_logic;
    B15   : in  std_logic;
    B16   : in  std_logic;
    B17   : in  std_logic;
    B18   : in  std_logic;

    C1    : in  std_logic;
    C2    : in  std_logic;
    C3    : in  std_logic;
    C4    : in  std_logic;
    C5    : in  std_logic;
    C6    : in  std_logic;
    C7    : in  std_logic;
    C8    : in  std_logic;
    C9    : in  std_logic;
    C10   : in  std_logic;
    C11   : in  std_logic;
    C12   : in  std_logic;
    C13   : in  std_logic;
    C14   : in  std_logic;
    C15   : in  std_logic;
    C16   : in  std_logic;
    C17   : in  std_logic;
    C18   : in  std_logic;
    C19   : in  std_logic;
    C20   : in  std_logic;
    C21   : in  std_logic;
    C22   : in  std_logic;
    C23   : in  std_logic;
    C24   : in  std_logic;
    C25   : in  std_logic;
    C26   : in  std_logic;
    C27   : in  std_logic;
    C28   : in  std_logic;
    C29   : in  std_logic;
    C30   : in  std_logic;
    C31   : in  std_logic;
    C32   : in  std_logic;
    C33   : in  std_logic;
    C34   : in  std_logic;
    C35   : in  std_logic;
    C36   : in  std_logic;

    CAI1  : in  std_logic;
    CAI2  : in  std_logic;
    CAI3  : in  std_logic;
    CAI4  : in  std_logic;
    CAI5  : in  std_logic;
    CAI6  : in  std_logic;
    CAI7  : in  std_logic;
    CAI8  : in  std_logic;
    CAI9  : in  std_logic;
    CAI10 : in  std_logic;
    CAI11 : in  std_logic;
    CAI12 : in  std_logic;
    CAI13 : in  std_logic;
    CAI14 : in  std_logic;
    CAI15 : in  std_logic;
    CAI16 : in  std_logic;
    CAI17 : in  std_logic;
    CAI18 : in  std_logic;
    CAI19 : in  std_logic;
    CAI20 : in  std_logic;
    CAI21 : in  std_logic;
    CAI22 : in  std_logic;
    CAI23 : in  std_logic;
    CAI24 : in  std_logic;

    CAO1  : out std_logic;
    CAO2  : out std_logic;
    CAO3  : out std_logic;
    CAO4  : out std_logic;
    CAO5  : out std_logic;
    CAO6  : out std_logic;
    CAO7  : out std_logic;
    CAO8  : out std_logic;
    CAO9  : out std_logic;
    CAO10 : out std_logic;
    CAO11 : out std_logic;
    CAO12 : out std_logic;
    CAO13 : out std_logic;
    CAO14 : out std_logic;
    CAO15 : out std_logic;
    CAO16 : out std_logic;
    CAO17 : out std_logic;
    CAO18 : out std_logic;
    CAO19 : out std_logic;
    CAO20 : out std_logic;
    CAO21 : out std_logic;
    CAO22 : out std_logic;
    CAO23 : out std_logic;
    CAO24 : out std_logic;

    CBI1  : in  std_logic;
    CBI2  : in  std_logic;
    CBI3  : in  std_logic;
    CBI4  : in  std_logic;
    CBI5  : in  std_logic;
    CBI6  : in  std_logic;
    CBI7  : in  std_logic;
    CBI8  : in  std_logic;
    CBI9  : in  std_logic;
    CBI10 : in  std_logic;
    CBI11 : in  std_logic;
    CBI12 : in  std_logic;
    CBI13 : in  std_logic;
    CBI14 : in  std_logic;
    CBI15 : in  std_logic;
    CBI16 : in  std_logic;
    CBI17 : in  std_logic;
    CBI18 : in  std_logic;

    CBO1  : out std_logic;
    CBO2  : out std_logic;
    CBO3  : out std_logic;
    CBO4  : out std_logic;
    CBO5  : out std_logic;
    CBO6  : out std_logic;
    CBO7  : out std_logic;
    CBO8  : out std_logic;
    CBO9  : out std_logic;
    CBO10 : out std_logic;
    CBO11 : out std_logic;
    CBO12 : out std_logic;
    CBO13 : out std_logic;
    CBO14 : out std_logic;
    CBO15 : out std_logic;
    CBO16 : out std_logic;
    CBO17 : out std_logic;
    CBO18 : out std_logic;

    CCI   : in  std_logic;
    CCO   : out std_logic;
    CI    : in  std_logic;
    CK    : in  std_logic;
    CO    : out std_logic;
    CO37  : out std_logic;
    CO57  : out std_logic;

    CZI1  : in  std_logic;
    CZI2  : in  std_logic;
    CZI3  : in  std_logic;
    CZI4  : in  std_logic;
    CZI5  : in  std_logic;
    CZI6  : in  std_logic;
    CZI7  : in  std_logic;
    CZI8  : in  std_logic;
    CZI9  : in  std_logic;
    CZI10 : in  std_logic;
    CZI11 : in  std_logic;
    CZI12 : in  std_logic;
    CZI13 : in  std_logic;
    CZI14 : in  std_logic;
    CZI15 : in  std_logic;
    CZI16 : in  std_logic;
    CZI17 : in  std_logic;
    CZI18 : in  std_logic;
    CZI19 : in  std_logic;
    CZI20 : in  std_logic;
    CZI21 : in  std_logic;
    CZI22 : in  std_logic;
    CZI23 : in  std_logic;
    CZI24 : in  std_logic;
    CZI25 : in  std_logic;
    CZI26 : in  std_logic;
    CZI27 : in  std_logic;
    CZI28 : in  std_logic;
    CZI29 : in  std_logic;
    CZI30 : in  std_logic;
    CZI31 : in  std_logic;
    CZI32 : in  std_logic;
    CZI33 : in  std_logic;
    CZI34 : in  std_logic;
    CZI35 : in  std_logic;
    CZI36 : in  std_logic;
    CZI37 : in  std_logic;
    CZI38 : in  std_logic;
    CZI39 : in  std_logic;
    CZI40 : in  std_logic;
    CZI41 : in  std_logic;
    CZI42 : in  std_logic;
    CZI43 : in  std_logic;
    CZI44 : in  std_logic;
    CZI45 : in  std_logic;
    CZI46 : in  std_logic;
    CZI47 : in  std_logic;
    CZI48 : in  std_logic;
    CZI49 : in  std_logic;
    CZI50 : in  std_logic;
    CZI51 : in  std_logic;
    CZI52 : in  std_logic;
    CZI53 : in  std_logic;
    CZI54 : in  std_logic;
    CZI55 : in  std_logic;
    CZI56 : in  std_logic;

    CZO1  : out std_logic;
    CZO2  : out std_logic;
    CZO3  : out std_logic;
    CZO4  : out std_logic;
    CZO5  : out std_logic;
    CZO6  : out std_logic;
    CZO7  : out std_logic;
    CZO8  : out std_logic;
    CZO9  : out std_logic;
    CZO10 : out std_logic;
    CZO11 : out std_logic;
    CZO12 : out std_logic;
    CZO13 : out std_logic;
    CZO14 : out std_logic;
    CZO15 : out std_logic;
    CZO16 : out std_logic;
    CZO17 : out std_logic;
    CZO18 : out std_logic;
    CZO19 : out std_logic;
    CZO20 : out std_logic;
    CZO21 : out std_logic;
    CZO22 : out std_logic;
    CZO23 : out std_logic;
    CZO24 : out std_logic;
    CZO25 : out std_logic;
    CZO26 : out std_logic;
    CZO27 : out std_logic;
    CZO28 : out std_logic;
    CZO29 : out std_logic;
    CZO30 : out std_logic;
    CZO31 : out std_logic;
    CZO32 : out std_logic;
    CZO33 : out std_logic;
    CZO34 : out std_logic;
    CZO35 : out std_logic;
    CZO36 : out std_logic;
    CZO37 : out std_logic;
    CZO38 : out std_logic;
    CZO39 : out std_logic;
    CZO40 : out std_logic;
    CZO41 : out std_logic;
    CZO42 : out std_logic;
    CZO43 : out std_logic;
    CZO44 : out std_logic;
    CZO45 : out std_logic;
    CZO46 : out std_logic;
    CZO47 : out std_logic;
    CZO48 : out std_logic;
    CZO49 : out std_logic;
    CZO50 : out std_logic;
    CZO51 : out std_logic;
    CZO52 : out std_logic;
    CZO53 : out std_logic;
    CZO54 : out std_logic;
    CZO55 : out std_logic;
    CZO56 : out std_logic;

    D1    : in  std_logic;
    D2    : in  std_logic;
    D3    : in  std_logic;
    D4    : in  std_logic;
    D5    : in  std_logic;
    D6    : in  std_logic;
    D7    : in  std_logic;
    D8    : in  std_logic;
    D9    : in  std_logic;
    D10   : in  std_logic;
    D11   : in  std_logic;
    D12   : in  std_logic;
    D13   : in  std_logic;
    D14   : in  std_logic;
    D15   : in  std_logic;
    D16   : in  std_logic;
    D17   : in  std_logic;
    D18   : in  std_logic;

    OVF   : out std_logic;
    R     : in  std_logic;
    RZ    : in  std_logic;
    WE    : in  std_logic;

    Z1    : out std_logic;
    Z2    : out std_logic;
    Z3    : out std_logic;
    Z4    : out std_logic;
    Z5    : out std_logic;
    Z6    : out std_logic;
    Z7    : out std_logic;
    Z8    : out std_logic;
    Z9    : out std_logic;
    Z10   : out std_logic;
    Z11   : out std_logic;
    Z12   : out std_logic;
    Z13   : out std_logic;
    Z14   : out std_logic;
    Z15   : out std_logic;
    Z16   : out std_logic;
    Z17   : out std_logic;
    Z18   : out std_logic;
    Z19   : out std_logic;
    Z20   : out std_logic;
    Z21   : out std_logic;
    Z22   : out std_logic;
    Z23   : out std_logic;
    Z24   : out std_logic;
    Z25   : out std_logic;
    Z26   : out std_logic;
    Z27   : out std_logic;
    Z28   : out std_logic;
    Z29   : out std_logic;
    Z30   : out std_logic;
    Z31   : out std_logic;
    Z32   : out std_logic;
    Z33   : out std_logic;
    Z34   : out std_logic;
    Z35   : out std_logic;
    Z36   : out std_logic;
    Z37   : out std_logic;
    Z38   : out std_logic;
    Z39   : out std_logic;
    Z40   : out std_logic;
    Z41   : out std_logic;
    Z42   : out std_logic;
    Z43   : out std_logic;
    Z44   : out std_logic;
    Z45   : out std_logic;
    Z46   : out std_logic;
    Z47   : out std_logic;
    Z48   : out std_logic;
    Z49   : out std_logic;
    Z50   : out std_logic;
    Z51   : out std_logic;
    Z52   : out std_logic;
    Z53   : out std_logic;
    Z54   : out std_logic;
    Z55   : out std_logic;
    Z56   : out std_logic
);
end component;

begin

dsp: NX_DSP_L generic map (
    std_mode    => std_mode,
    raw_config0 => raw_config0,
    raw_config1 => raw_config1,
    raw_config2 => raw_config2,
    raw_config3 => raw_config3)
port map (
    A1    => A(0),
    A2    => A(1),
    A3    => A(2),
    A4    => A(3),
    A5    => A(4),
    A6    => A(5),
    A7    => A(6),
    A8    => A(7),
    A9    => A(8),
    A10   => A(9),
    A11   => A(10),
    A12   => A(11),
    A13   => A(12),
    A14   => A(13),
    A15   => A(14),
    A16   => A(15),
    A17   => A(16),
    A18   => A(17),
    A19   => A(18),
    A20   => A(19),
    A21   => A(20),
    A22   => A(21),
    A23   => A(22),
    A24   => A(23),

    B1    => B(0),
    B2    => B(1),
    B3    => B(2),
    B4    => B(3),
    B5    => B(4),
    B6    => B(5),
    B7    => B(6),
    B8    => B(7),
    B9    => B(8),
    B10   => B(9),
    B11   => B(10),
    B12   => B(11),
    B13   => B(12),
    B14   => B(13),
    B15   => B(14),
    B16   => B(15),
    B17   => B(16),
    B18   => B(17),

    C1    => C(0),
    C2    => C(1),
    C3    => C(2),
    C4    => C(3),
    C5    => C(4),
    C6    => C(5),
    C7    => C(6),
    C8    => C(7),
    C9    => C(8),
    C10   => C(9),
    C11   => C(10),
    C12   => C(11),
    C13   => C(12),
    C14   => C(13),
    C15   => C(14),
    C16   => C(15),
    C17   => C(16),
    C18   => C(17),
    C19   => C(18),
    C20   => C(19),
    C21   => C(20),
    C22   => C(21),
    C23   => C(22),
    C24   => C(23),
    C25   => C(24),
    C26   => C(25),
    C27   => C(26),
    C28   => C(27),
    C29   => C(28),
    C30   => C(29),
    C31   => C(30),
    C32   => C(31),
    C33   => C(32),
    C34   => C(33),
    C35   => C(34),
    C36   => C(35),

    CAI1  => CAI(0),
    CAI2  => CAI(1),
    CAI3  => CAI(2),
    CAI4  => CAI(3),
    CAI5  => CAI(4),
    CAI6  => CAI(5),
    CAI7  => CAI(6),
    CAI8  => CAI(7),
    CAI9  => CAI(8),
    CAI10 => CAI(9),
    CAI11 => CAI(10),
    CAI12 => CAI(11),
    CAI13 => CAI(12),
    CAI14 => CAI(13),
    CAI15 => CAI(14),
    CAI16 => CAI(15),
    CAI17 => CAI(16),
    CAI18 => CAI(17),
    CAI19 => CAI(18),
    CAI20 => CAI(19),
    CAI21 => CAI(20),
    CAI22 => CAI(21),
    CAI23 => CAI(22),
    CAI24 => CAI(23),

    CAO1  => CAO(0),
    CAO2  => CAO(1),
    CAO3  => CAO(2),
    CAO4  => CAO(3),
    CAO5  => CAO(4),
    CAO6  => CAO(5),
    CAO7  => CAO(6),
    CAO8  => CAO(7),
    CAO9  => CAO(8),
    CAO10 => CAO(9),
    CAO11 => CAO(10),
    CAO12 => CAO(11),
    CAO13 => CAO(12),
    CAO14 => CAO(13),
    CAO15 => CAO(14),
    CAO16 => CAO(15),
    CAO17 => CAO(16),
    CAO18 => CAO(17),
    CAO19 => CAO(18),
    CAO20 => CAO(19),
    CAO21 => CAO(20),
    CAO22 => CAO(21),
    CAO23 => CAO(22),
    CAO24 => CAO(23),

    CBI1  => CBI(0),
    CBI2  => CBI(1),
    CBI3  => CBI(2),
    CBI4  => CBI(3),
    CBI5  => CBI(4),
    CBI6  => CBI(5),
    CBI7  => CBI(6),
    CBI8  => CBI(7),
    CBI9  => CBI(8),
    CBI10 => CBI(9),
    CBI11 => CBI(10),
    CBI12 => CBI(11),
    CBI13 => CBI(12),
    CBI14 => CBI(13),
    CBI15 => CBI(14),
    CBI16 => CBI(15),
    CBI17 => CBI(16),
    CBI18 => CBI(17),

    CBO1  => CBO(0),
    CBO2  => CBO(1),
    CBO3  => CBO(2),
    CBO4  => CBO(3),
    CBO5  => CBO(4),
    CBO6  => CBO(5),
    CBO7  => CBO(6),
    CBO8  => CBO(7),
    CBO9  => CBO(8),
    CBO10 => CBO(9),
    CBO11 => CBO(10),
    CBO12 => CBO(11),
    CBO13 => CBO(12),
    CBO14 => CBO(13),
    CBO15 => CBO(14),
    CBO16 => CBO(15),
    CBO17 => CBO(16),
    CBO18 => CBO(17),

    CCI   => CCI,
    CCO   => CCO,
    CI    => CI,
    CK    => CK,
    CO    => CO,
    CO37  => CO37,
    CO57  => CO57,

    CZI1  => CZI(0),
    CZI2  => CZI(1),
    CZI3  => CZI(2),
    CZI4  => CZI(3),
    CZI5  => CZI(4),
    CZI6  => CZI(5),
    CZI7  => CZI(6),
    CZI8  => CZI(7),
    CZI9  => CZI(8),
    CZI10 => CZI(9),
    CZI11 => CZI(10),
    CZI12 => CZI(11),
    CZI13 => CZI(12),
    CZI14 => CZI(13),
    CZI15 => CZI(14),
    CZI16 => CZI(15),
    CZI17 => CZI(16),
    CZI18 => CZI(17),
    CZI19 => CZI(18),
    CZI20 => CZI(19),
    CZI21 => CZI(20),
    CZI22 => CZI(21),
    CZI23 => CZI(22),
    CZI24 => CZI(23),
    CZI25 => CZI(24),
    CZI26 => CZI(25),
    CZI27 => CZI(26),
    CZI28 => CZI(27),
    CZI29 => CZI(28),
    CZI30 => CZI(29),
    CZI31 => CZI(30),
    CZI32 => CZI(31),
    CZI33 => CZI(32),
    CZI34 => CZI(33),
    CZI35 => CZI(34),
    CZI36 => CZI(35),
    CZI37 => CZI(36),
    CZI38 => CZI(37),
    CZI39 => CZI(38),
    CZI40 => CZI(39),
    CZI41 => CZI(40),
    CZI42 => CZI(41),
    CZI43 => CZI(42),
    CZI44 => CZI(43),
    CZI45 => CZI(44),
    CZI46 => CZI(45),
    CZI47 => CZI(46),
    CZI48 => CZI(47),
    CZI49 => CZI(48),
    CZI50 => CZI(49),
    CZI51 => CZI(50),
    CZI52 => CZI(51),
    CZI53 => CZI(52),
    CZI54 => CZI(53),
    CZI55 => CZI(54),
    CZI56 => CZI(55),

    CZO1  => CZO(0),
    CZO2  => CZO(1),
    CZO3  => CZO(2),
    CZO4  => CZO(3),
    CZO5  => CZO(4),
    CZO6  => CZO(5),
    CZO7  => CZO(6),
    CZO8  => CZO(7),
    CZO9  => CZO(8),
    CZO10 => CZO(9),
    CZO11 => CZO(10),
    CZO12 => CZO(11),
    CZO13 => CZO(12),
    CZO14 => CZO(13),
    CZO15 => CZO(14),
    CZO16 => CZO(15),
    CZO17 => CZO(16),
    CZO18 => CZO(17),
    CZO19 => CZO(18),
    CZO20 => CZO(19),
    CZO21 => CZO(20),
    CZO22 => CZO(21),
    CZO23 => CZO(22),
    CZO24 => CZO(23),
    CZO25 => CZO(24),
    CZO26 => CZO(25),
    CZO27 => CZO(26),
    CZO28 => CZO(27),
    CZO29 => CZO(28),
    CZO30 => CZO(29),
    CZO31 => CZO(30),
    CZO32 => CZO(31),
    CZO33 => CZO(32),
    CZO34 => CZO(33),
    CZO35 => CZO(34),
    CZO36 => CZO(35),
    CZO37 => CZO(36),
    CZO38 => CZO(37),
    CZO39 => CZO(38),
    CZO40 => CZO(39),
    CZO41 => CZO(40),
    CZO42 => CZO(41),
    CZO43 => CZO(42),
    CZO44 => CZO(43),
    CZO45 => CZO(44),
    CZO46 => CZO(45),
    CZO47 => CZO(46),
    CZO48 => CZO(47),
    CZO49 => CZO(48),
    CZO50 => CZO(49),
    CZO51 => CZO(50),
    CZO52 => CZO(51),
    CZO53 => CZO(52),
    CZO54 => CZO(53),
    CZO55 => CZO(54),
    CZO56 => CZO(55),

    D1    => D(0),
    D2    => D(1),
    D3    => D(2),
    D4    => D(3),
    D5    => D(4),
    D6    => D(5),
    D7    => D(6),
    D8    => D(7),
    D9    => D(8),
    D10   => D(9),
    D11   => D(10),
    D12   => D(11),
    D13   => D(12),
    D14   => D(13),
    D15   => D(14),
    D16   => D(15),
    D17   => D(16),
    D18   => D(17),

    OVF   => OVF,
    R     => R,
    RZ    => RZ,
    WE    => WE,

    Z1    => Z(0),
    Z2    => Z(1),
    Z3    => Z(2),
    Z4    => Z(3),
    Z5    => Z(4),
    Z6    => Z(5),
    Z7    => Z(6),
    Z8    => Z(7),
    Z9    => Z(8),
    Z10   => Z(9),
    Z11   => Z(10),
    Z12   => Z(11),
    Z13   => Z(12),
    Z14   => Z(13),
    Z15   => Z(14),
    Z16   => Z(15),
    Z17   => Z(16),
    Z18   => Z(17),
    Z19   => Z(18),
    Z20   => Z(19),
    Z21   => Z(20),
    Z22   => Z(21),
    Z23   => Z(22),
    Z24   => Z(23),
    Z25   => Z(24),
    Z26   => Z(25),
    Z27   => Z(26),
    Z28   => Z(27),
    Z29   => Z(28),
    Z30   => Z(29),
    Z31   => Z(30),
    Z32   => Z(31),
    Z33   => Z(32),
    Z34   => Z(33),
    Z35   => Z(34),
    Z36   => Z(35),
    Z37   => Z(36),
    Z38   => Z(37),
    Z39   => Z(38),
    Z40   => Z(39),
    Z41   => Z(40),
    Z42   => Z(41),
    Z43   => Z(42),
    Z44   => Z(43),
    Z45   => Z(44),
    Z46   => Z(45),
    Z47   => Z(46),
    Z48   => Z(47),
    Z49   => Z(48),
    Z50   => Z(49),
    Z51   => Z(50),
    Z52   => Z(51),
    Z53   => Z(52),
    Z54   => Z(53),
    Z55   => Z(54),
    Z56   => Z(55)
);

end NXP_ARCH;
-- #}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_DSP_L_SPLIT definition                                                          2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_signed.ALL;

entity NX_DSP_L_SPLIT is
generic (
-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config0" (cfg_mode). Defines :
------------------------------------------------------------------------- 
   SIGNED_MODE          : bit                    := '0';
   PRE_ADDER_OP         : bit                    := '0';       -- '0' = Additon, '1' = Subraction
   MUX_A                : bit                    := '0';       -- '0' = A input, '1' = CAI input
   MUX_B                : bit                    := '0';       -- '0' = B input, '1' = CBI input
   MUX_P                : bit                    := '0';       -- '0' for PRE_ADDER, '0' for B input
   MUX_X                : bit_vector(1 downto 0) := B"00";     -- Select X operand   "00" = C,
                                                               --                    "01" = CZI,
                                                               --                    "11" = SHFT(CZI) & C(11:0),
                                                               --                    "10" Select Z feedback
   MUX_Y                : bit                    := '0';       -- '0' Select MULT output, '1' for (B & A)
   MUX_CI               : bit                    := '0';       -- Select fabric input (not cascade)
   MUX_Z                : bit                    := '0';       -- Select ALU output
                                                               -- (not ALU input operand coming from PR_Y)

   Z_FEEDBACK_SHL12     : bit                    := '0';       -- '0' for No shift, '1' for 12-bit left shift
   ENABLE_SATURATION    : bit                    := '0';       -- '0' for Disable,  '1' for Enable
   SATURATION_RANK      : bit_vector(5 downto 0) := B"000000"; -- Weight of useful MSB
                                                               --        on Z and CZO result
                                                               --(to define saturation and overflow)

   ALU_DYNAMIC_OP       : bit                    := '0';       -- '0' for Static,
                                                               -- '1' for Dynamic
                                                               -- (D6 ... D1 is not used for dynamic operation)
   CO_SEL               : bit                    := '0';       -- '0' for C0 = ALU(36), '1' for CO = ALU(48)

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config1" (cfg_pipe_mux)
-------------------------------------------------------------------------
   PR_A_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on A input
   PR_A_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output
   PR_B_MUX                : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        on B input
   PR_B_CASCADE_MUX        : bit_vector(1 downto 0) := B"00"; -- Number of pipe reg levels
                                                              --        for CAO output

   PR_C_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_D_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_CI_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_P_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg (Pre-adder)
   PR_X_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_Y_MUX                : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

   PR_MULT_MUX             : bit                    := '0';   -- No pipe reg  -- Register inside MULT
   PR_ALU_MUX              : bit                    := '0';   -- No pipe reg  -- Register inside ALU
   PR_Z_MUX                : bit                    := '0';   -- Registered output

   PR_CO_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg
   PR_OV_MUX               : bit                    := '0';   -- '0' for No pipe reg, '1' for 1 pipe reg

-------------------------------------------------------------------------
-- Generic declaration to define the "raw_config2" (cfg_pipe_rst)
-------------------------------------------------------------------------
   ENABLE_PR_A_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_B_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_C_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_D_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CI_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_P_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_X_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Y_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_MULT_RST      : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_ALU_RST       : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_Z_RST         : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_CO_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 
   ENABLE_PR_OV_RST        : bit                    := '0';   -- '0' for Disable, '1' for Enable 

-------------------------------------------------------------------------
-- Constants declaration to define the "cfg_pipe_rst" -- raw_config3(6 downto 0)
-------------------------------------------------------------------------
   ALU_OP                  : bit_vector(5 downto 0) := B"000000"; -- Addition = "000000", Subtract = "001010"
   ALU_MUX                 : bit                    := '0'        -- '0' for Don't swap ALU operands,
                                                                  -- '1' for ALU Swap operands
    );
port(
   CK   : IN  std_logic;
   R    : IN  std_logic;
   RZ   : IN  std_logic;
   WE   : IN  std_logic;

   CI   : IN  std_logic;     -- cy_i
   A    : IN  std_logic_vector(23 downto 0);
   B    : IN  std_logic_vector(17 downto 0);
   C    : IN  std_logic_vector(35 downto 0);
   D    : IN  std_logic_vector(17 downto 0);
   CAI  : IN  std_logic_vector(23 downto 0);
   CBI  : IN  std_logic_vector(17 downto 0);
   CZI  : IN  std_logic_vector(55 downto 0);
   CCI  : IN  std_logic;  -- ccy_i

   Z    : out  std_logic_vector(55 downto 0);
   CO   : OUT  std_logic;  -- cy_o
   CO36 : OUT  std_logic;  -- cy36_o
   CO56 : OUT  std_logic;  -- cy56_o
   OVF  : OUT  std_logic;
   CAO  : OUT  std_logic_vector(23 downto 0);
   CBO  : OUT  std_logic_vector(17 downto 0);
   CZO  : OUT  std_logic_vector(55 downto 0);
   CCO  : OUT  std_logic  -- ccy_o
  );
end NX_DSP_L_SPLIT;

-- architecture NX_RTL of NX_DSP_L_SPLIT#{{{#
architecture NX_RTL of NX_DSP_L_SPLIT is

----------------------------------------------------------
-- Internal signals to be mapped to the NX_DSP_L component
----------------------------------------------------------
signal A1         : std_logic := '0';
signal A2         : std_logic := '0';
signal A3         : std_logic := '0';
signal A4         : std_logic := '0';
signal A5         : std_logic := '0';
signal A6         : std_logic := '0';
signal A7         : std_logic := '0';
signal A8         : std_logic := '0';
signal A9         : std_logic := '0';
signal A10        : std_logic := '0';
signal A11        : std_logic := '0';
signal A12        : std_logic := '0';
signal A13        : std_logic := '0';
signal A14        : std_logic := '0';
signal A15        : std_logic := '0';
signal A16        : std_logic := '0';
signal A17        : std_logic := '0';
signal A18        : std_logic := '0';
signal A19        : std_logic := '0';
signal A20        : std_logic := '0';
signal A21        : std_logic := '0';
signal A22        : std_logic := '0';
signal A23        : std_logic := '0';
signal A24        : std_logic := '0';

signal B1         : std_logic := '0';
signal B2         : std_logic := '0';
signal B3         : std_logic := '0';
signal B4         : std_logic := '0';
signal B5         : std_logic := '0';
signal B6         : std_logic := '0';
signal B7         : std_logic := '0';
signal B8         : std_logic := '0';
signal B9         : std_logic := '0';
signal B10        : std_logic := '0';
signal B11        : std_logic := '0';
signal B12        : std_logic := '0';
signal B13        : std_logic := '0';
signal B14        : std_logic := '0';
signal B15        : std_logic := '0';
signal B16        : std_logic := '0';
signal B17        : std_logic := '0';
signal B18        : std_logic := '0';
         
signal C1         : std_logic := '0';
signal C2         : std_logic := '0';
signal C3         : std_logic := '0';
signal C4         : std_logic := '0';
signal C5         : std_logic := '0';
signal C6         : std_logic := '0';
signal C7         : std_logic := '0';
signal C8         : std_logic := '0';
signal C9         : std_logic := '0';
signal C10        : std_logic := '0';
signal C11        : std_logic := '0';
signal C12        : std_logic := '0';
signal C13        : std_logic := '0';
signal C14        : std_logic := '0';
signal C15        : std_logic := '0';
signal C16        : std_logic := '0';
signal C17        : std_logic := '0';
signal C18        : std_logic := '0';
signal C19        : std_logic := '0';
signal C20        : std_logic := '0';
signal C21        : std_logic := '0';
signal C22        : std_logic := '0';
signal C23        : std_logic := '0';
signal C24        : std_logic := '0';
signal C25        : std_logic := '0';
signal C26        : std_logic := '0';
signal C27        : std_logic := '0';
signal C28        : std_logic := '0';
signal C29        : std_logic := '0';
signal C30        : std_logic := '0';
signal C31        : std_logic := '0';
signal C32        : std_logic := '0';
signal C33        : std_logic := '0';
signal C34        : std_logic := '0';
signal C35        : std_logic := '0';
signal C36        : std_logic := '0';

signal CAI1       : std_logic := '0';
signal CAI2       : std_logic := '0';
signal CAI3       : std_logic := '0';
signal CAI4       : std_logic := '0';
signal CAI5       : std_logic := '0';
signal CAI6       : std_logic := '0';
signal CAI7       : std_logic := '0';
signal CAI8       : std_logic := '0';
signal CAI9       : std_logic := '0';
signal CAI10      : std_logic := '0';
signal CAI11      : std_logic := '0';
signal CAI12      : std_logic := '0';
signal CAI13      : std_logic := '0';
signal CAI14      : std_logic := '0';
signal CAI15      : std_logic := '0';
signal CAI16      : std_logic := '0';
signal CAI17      : std_logic := '0';
signal CAI18      : std_logic := '0';
signal CAI19      : std_logic := '0';
signal CAI20      : std_logic := '0';
signal CAI21      : std_logic := '0';
signal CAI22      : std_logic := '0';
signal CAI23      : std_logic := '0';
signal CAI24      : std_logic := '0';

signal CAO1       : std_logic := '0';
signal CAO2       : std_logic := '0';
signal CAO3       : std_logic := '0';
signal CAO4       : std_logic := '0';
signal CAO5       : std_logic := '0';
signal CAO6       : std_logic := '0';
signal CAO7       : std_logic := '0';
signal CAO8       : std_logic := '0';
signal CAO9       : std_logic := '0';
signal CAO10      : std_logic := '0';
signal CAO11      : std_logic := '0';
signal CAO12      : std_logic := '0';
signal CAO13      : std_logic := '0';
signal CAO14      : std_logic := '0';
signal CAO15      : std_logic := '0';
signal CAO16      : std_logic := '0';
signal CAO17      : std_logic := '0';
signal CAO18      : std_logic := '0';
signal CAO19      : std_logic := '0';
signal CAO20      : std_logic := '0';
signal CAO21      : std_logic := '0';
signal CAO22      : std_logic := '0';
signal CAO23      : std_logic := '0';
signal CAO24      : std_logic := '0';

signal CBI1       : std_logic := '0';
signal CBI2       : std_logic := '0';
signal CBI3       : std_logic := '0';
signal CBI4       : std_logic := '0';
signal CBI5       : std_logic := '0';
signal CBI6       : std_logic := '0';
signal CBI7       : std_logic := '0';
signal CBI8       : std_logic := '0';
signal CBI9       : std_logic := '0';
signal CBI10      : std_logic := '0';
signal CBI11      : std_logic := '0';
signal CBI12      : std_logic := '0';
signal CBI13      : std_logic := '0';
signal CBI14      : std_logic := '0';
signal CBI15      : std_logic := '0';
signal CBI16      : std_logic := '0';
signal CBI17      : std_logic := '0';
signal CBI18      : std_logic := '0';

signal CBO1       : std_logic := '0';
signal CBO2       : std_logic := '0';
signal CBO3       : std_logic := '0';
signal CBO4       : std_logic := '0';
signal CBO5       : std_logic := '0';
signal CBO6       : std_logic := '0';
signal CBO7       : std_logic := '0';
signal CBO8       : std_logic := '0';
signal CBO9       : std_logic := '0';
signal CBO10      : std_logic := '0';
signal CBO11      : std_logic := '0';
signal CBO12      : std_logic := '0';
signal CBO13      : std_logic := '0';
signal CBO14      : std_logic := '0';
signal CBO15      : std_logic := '0';
signal CBO16      : std_logic := '0';
signal CBO17      : std_logic := '0';
signal CBO18      : std_logic := '0';

signal CO37       : std_logic := '0';
signal CO57       : std_logic := '0';

signal CZI1       : std_logic := '0';
signal CZI2       : std_logic := '0';
signal CZI3       : std_logic := '0';
signal CZI4       : std_logic := '0';
signal CZI5       : std_logic := '0';
signal CZI6       : std_logic := '0';
signal CZI7       : std_logic := '0';
signal CZI8       : std_logic := '0';
signal CZI9       : std_logic := '0';
signal CZI10      : std_logic := '0';
signal CZI11      : std_logic := '0';
signal CZI12      : std_logic := '0';
signal CZI13      : std_logic := '0';
signal CZI14      : std_logic := '0';
signal CZI15      : std_logic := '0';
signal CZI16      : std_logic := '0';
signal CZI17      : std_logic := '0';
signal CZI18      : std_logic := '0';
signal CZI19      : std_logic := '0';
signal CZI20      : std_logic := '0';
signal CZI21      : std_logic := '0';
signal CZI22      : std_logic := '0';
signal CZI23      : std_logic := '0';
signal CZI24      : std_logic := '0';
signal CZI25      : std_logic := '0';
signal CZI26      : std_logic := '0';
signal CZI27      : std_logic := '0';
signal CZI28      : std_logic := '0';
signal CZI29      : std_logic := '0';
signal CZI30      : std_logic := '0';
signal CZI31      : std_logic := '0';
signal CZI32      : std_logic := '0';
signal CZI33      : std_logic := '0';
signal CZI34      : std_logic := '0';
signal CZI35      : std_logic := '0';
signal CZI36      : std_logic := '0';
signal CZI37      : std_logic := '0';
signal CZI38      : std_logic := '0';
signal CZI39      : std_logic := '0';
signal CZI40      : std_logic := '0';
signal CZI41      : std_logic := '0';
signal CZI42      : std_logic := '0';
signal CZI43      : std_logic := '0';
signal CZI44      : std_logic := '0';
signal CZI45      : std_logic := '0';
signal CZI46      : std_logic := '0';
signal CZI47      : std_logic := '0';
signal CZI48      : std_logic := '0';
signal CZI49      : std_logic := '0';
signal CZI50      : std_logic := '0';
signal CZI51      : std_logic := '0';
signal CZI52      : std_logic := '0';
signal CZI53      : std_logic := '0';
signal CZI54      : std_logic := '0';
signal CZI55      : std_logic := '0';
signal CZI56      : std_logic := '0';

signal CZO1       : std_logic := '0';
signal CZO2       : std_logic := '0';
signal CZO3       : std_logic := '0';
signal CZO4       : std_logic := '0';
signal CZO5       : std_logic := '0';
signal CZO6       : std_logic := '0';
signal CZO7       : std_logic := '0';
signal CZO8       : std_logic := '0';
signal CZO9       : std_logic := '0';
signal CZO10      : std_logic := '0';
signal CZO11      : std_logic := '0';
signal CZO12      : std_logic := '0';
signal CZO13      : std_logic := '0';
signal CZO14      : std_logic := '0';
signal CZO15      : std_logic := '0';
signal CZO16      : std_logic := '0';
signal CZO17      : std_logic := '0';
signal CZO18      : std_logic := '0';
signal CZO19      : std_logic := '0';
signal CZO20      : std_logic := '0';
signal CZO21      : std_logic := '0';
signal CZO22      : std_logic := '0';
signal CZO23      : std_logic := '0';
signal CZO24      : std_logic := '0';
signal CZO25      : std_logic := '0';
signal CZO26      : std_logic := '0';
signal CZO27      : std_logic := '0';
signal CZO28      : std_logic := '0';
signal CZO29      : std_logic := '0';
signal CZO30      : std_logic := '0';
signal CZO31      : std_logic := '0';
signal CZO32      : std_logic := '0';
signal CZO33      : std_logic := '0';
signal CZO34      : std_logic := '0';
signal CZO35      : std_logic := '0';
signal CZO36      : std_logic := '0';
signal CZO37      : std_logic := '0';
signal CZO38      : std_logic := '0';
signal CZO39      : std_logic := '0';
signal CZO40      : std_logic := '0';
signal CZO41      : std_logic := '0';
signal CZO42      : std_logic := '0';
signal CZO43      : std_logic := '0';
signal CZO44      : std_logic := '0';
signal CZO45      : std_logic := '0';
signal CZO46      : std_logic := '0';
signal CZO47      : std_logic := '0';
signal CZO48      : std_logic := '0';
signal CZO49      : std_logic := '0';
signal CZO50      : std_logic := '0';
signal CZO51      : std_logic := '0';
signal CZO52      : std_logic := '0';
signal CZO53      : std_logic := '0';
signal CZO54      : std_logic := '0';
signal CZO55      : std_logic := '0';
signal CZO56      : std_logic := '0';

signal D1         : std_logic := '0';
signal D2         : std_logic := '0';
signal D3         : std_logic := '0';
signal D4         : std_logic := '0';
signal D5         : std_logic := '0';
signal D6         : std_logic := '0';
signal D7         : std_logic := '0';
signal D8         : std_logic := '0';
signal D9         : std_logic := '0';
signal D10        : std_logic := '0';
signal D11        : std_logic := '0';
signal D12        : std_logic := '0';
signal D13        : std_logic := '0';
signal D14        : std_logic := '0';
signal D15        : std_logic := '0';
signal D16        : std_logic := '0';
signal D17        : std_logic := '0';
signal D18        : std_logic := '0';

signal Z1         : std_logic := '0';
signal Z2         : std_logic := '0';
signal Z3         : std_logic := '0';
signal Z4         : std_logic := '0';
signal Z5         : std_logic := '0';
signal Z6         : std_logic := '0';
signal Z7         : std_logic := '0';
signal Z8         : std_logic := '0';
signal Z9         : std_logic := '0';
signal Z10        : std_logic := '0';
signal Z11        : std_logic := '0';
signal Z12        : std_logic := '0';
signal Z13        : std_logic := '0';
signal Z14        : std_logic := '0';
signal Z15        : std_logic := '0';
signal Z16        : std_logic := '0';
signal Z17        : std_logic := '0';
signal Z18        : std_logic := '0';
signal Z19        : std_logic := '0';
signal Z20        : std_logic := '0';
signal Z21        : std_logic := '0';
signal Z22        : std_logic := '0';
signal Z23        : std_logic := '0';
signal Z24        : std_logic := '0';
signal Z25        : std_logic := '0';
signal Z26        : std_logic := '0';
signal Z27        : std_logic := '0';
signal Z28        : std_logic := '0';
signal Z29        : std_logic := '0';
signal Z30        : std_logic := '0';
signal Z31        : std_logic := '0';
signal Z32        : std_logic := '0';
signal Z33        : std_logic := '0';
signal Z34        : std_logic := '0';
signal Z35        : std_logic := '0';
signal Z36        : std_logic := '0';
signal Z37        : std_logic := '0';
signal Z38        : std_logic := '0';
signal Z39        : std_logic := '0';
signal Z40        : std_logic := '0';
signal Z41        : std_logic := '0';
signal Z42        : std_logic := '0';
signal Z43        : std_logic := '0';
signal Z44        : std_logic := '0';
signal Z45        : std_logic := '0';
signal Z46        : std_logic := '0';
signal Z47        : std_logic := '0';
signal Z48        : std_logic := '0';
signal Z49        : std_logic := '0';
signal Z50        : std_logic := '0';
signal Z51        : std_logic := '0';
signal Z52        : std_logic := '0';
signal Z53        : std_logic := '0';
signal Z54        : std_logic := '0';
signal Z55        : std_logic := '0';


constant raw_config0_gen : bit_vector(19 downto 0)
    := CO_SEL & ALU_DYNAMIC_OP & SATURATION_RANK & ENABLE_SATURATION & Z_FEEDBACK_SHL12 & MUX_Z &
       MUX_CI & MUX_Y & MUX_X & MUX_P & MUX_B & MUX_A & PRE_ADDER_OP & SIGNED_MODE;

constant raw_config1_gen : bit_vector(21 downto 0)
    := "000" & PR_OV_MUX & PR_CO_MUX & PR_Z_MUX & PR_ALU_MUX & PR_MULT_MUX & PR_Y_MUX & PR_X_MUX &
       PR_P_MUX & PR_CI_MUX & PR_D_MUX & PR_C_MUX & PR_B_CASCADE_MUX & PR_B_MUX & PR_A_CASCADE_MUX &
       PR_A_MUX;

constant raw_config2_gen : bit_vector(12 downto 0)
    := ENABLE_PR_OV_RST & ENABLE_PR_CO_RST & ENABLE_PR_Z_RST & ENABLE_PR_ALU_RST &
       ENABLE_PR_MULT_RST & ENABLE_PR_Y_RST & ENABLE_PR_X_RST & ENABLE_PR_P_RST & ENABLE_PR_CI_RST &
       ENABLE_PR_D_RST & ENABLE_PR_C_RST & ENABLE_PR_B_RST & ENABLE_PR_A_RST;

constant raw_config3_gen : bit_vector(6 downto 0) := ALU_MUX & ALU_OP;


----------------------------------------------------------
-- NX_DSP_L declaration
----------------------------------------------------------
component NX_DSP_L
generic (
   std_mode    : string := ""; -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 : bit_vector(19 downto 0) := B"00000000000000000000";        -- MUX
   raw_config1 : bit_vector(21 downto 0) := B"0000000000000000000000";      -- PRC
   raw_config2 : bit_vector(12 downto 0) := B"0000000000000";               -- PRR
   raw_config3 : bit_vector( 6 downto 0) := B"0000000"                      -- ALU
   );
port (
   A1         : in std_logic := '0';
   A2         : in std_logic := '0';
   A3         : in std_logic := '0';
   A4         : in std_logic := '0';
   A5         : in std_logic := '0';
   A6         : in std_logic := '0';
   A7         : in std_logic := '0';
   A8         : in std_logic := '0';
   A9         : in std_logic := '0';
   A10        : in std_logic := '0';
   A11        : in std_logic := '0';
   A12        : in std_logic := '0';
   A13        : in std_logic := '0';
   A14        : in std_logic := '0';
   A15        : in std_logic := '0';
   A16        : in std_logic := '0';
   A17        : in std_logic := '0';
   A18        : in std_logic := '0';
   A19        : in std_logic := '0';
   A20        : in std_logic := '0';
   A21        : in std_logic := '0';
   A22        : in std_logic := '0';
   A23        : in std_logic := '0';
   A24        : in std_logic := '0';

   B1         : in std_logic := '0';
   B2         : in std_logic := '0';
   B3         : in std_logic := '0';
   B4         : in std_logic := '0';
   B5         : in std_logic := '0';
   B6         : in std_logic := '0';
   B7         : in std_logic := '0';
   B8         : in std_logic := '0';
   B9         : in std_logic := '0';
   B10        : in std_logic := '0';
   B11        : in std_logic := '0';
   B12        : in std_logic := '0';
   B13        : in std_logic := '0';
   B14        : in std_logic := '0';
   B15        : in std_logic := '0';
   B16        : in std_logic := '0';
   B17        : in std_logic := '0';
   B18        : in std_logic := '0';

   C1         : in std_logic := '0';
   C2         : in std_logic := '0';
   C3         : in std_logic := '0';
   C4         : in std_logic := '0';
   C5         : in std_logic := '0';
   C6         : in std_logic := '0';
   C7         : in std_logic := '0';
   C8         : in std_logic := '0';
   C9         : in std_logic := '0';
   C10        : in std_logic := '0';
   C11        : in std_logic := '0';
   C12        : in std_logic := '0';
   C13        : in std_logic := '0';
   C14        : in std_logic := '0';
   C15        : in std_logic := '0';
   C16        : in std_logic := '0';
   C17        : in std_logic := '0';
   C18        : in std_logic := '0';
   C19        : in std_logic := '0';
   C20        : in std_logic := '0';
   C21        : in std_logic := '0';
   C22        : in std_logic := '0';
   C23        : in std_logic := '0';
   C24        : in std_logic := '0';
   C25        : in std_logic := '0';
   C26        : in std_logic := '0';
   C27        : in std_logic := '0';
   C28        : in std_logic := '0';
   C29        : in std_logic := '0';
   C30        : in std_logic := '0';
   C31        : in std_logic := '0';
   C32        : in std_logic := '0';
   C33        : in std_logic := '0';
   C34        : in std_logic := '0';
   C35        : in std_logic := '0';
   C36        : in std_logic := '0';

   CAI1       : in std_logic := '0';
   CAI2       : in std_logic := '0';
   CAI3       : in std_logic := '0';
   CAI4       : in std_logic := '0';
   CAI5       : in std_logic := '0';
   CAI6       : in std_logic := '0';
   CAI7       : in std_logic := '0';
   CAI8       : in std_logic := '0';
   CAI9       : in std_logic := '0';
   CAI10      : in std_logic := '0';
   CAI11      : in std_logic := '0';
   CAI12      : in std_logic := '0';
   CAI13      : in std_logic := '0';
   CAI14      : in std_logic := '0';
   CAI15      : in std_logic := '0';
   CAI16      : in std_logic := '0';
   CAI17      : in std_logic := '0';
   CAI18      : in std_logic := '0';
   CAI19      : in std_logic := '0';
   CAI20      : in std_logic := '0';
   CAI21      : in std_logic := '0';
   CAI22      : in std_logic := '0';
   CAI23      : in std_logic := '0';
   CAI24      : in std_logic := '0';

   CAO1       : out std_logic := '0';
   CAO2       : out std_logic := '0';
   CAO3       : out std_logic := '0';
   CAO4       : out std_logic := '0';
   CAO5       : out std_logic := '0';
   CAO6       : out std_logic := '0';
   CAO7       : out std_logic := '0';
   CAO8       : out std_logic := '0';
   CAO9       : out std_logic := '0';
   CAO10      : out std_logic := '0';
   CAO11      : out std_logic := '0';
   CAO12      : out std_logic := '0';
   CAO13      : out std_logic := '0';
   CAO14      : out std_logic := '0';
   CAO15      : out std_logic := '0';
   CAO16      : out std_logic := '0';
   CAO17      : out std_logic := '0';
   CAO18      : out std_logic := '0';
   CAO19      : out std_logic := '0';
   CAO20      : out std_logic := '0';
   CAO21      : out std_logic := '0';
   CAO22      : out std_logic := '0';
   CAO23      : out std_logic := '0';
   CAO24      : out std_logic := '0';

   CBI1       : in std_logic := '0';
   CBI2       : in std_logic := '0';
   CBI3       : in std_logic := '0';
   CBI4       : in std_logic := '0';
   CBI5       : in std_logic := '0';
   CBI6       : in std_logic := '0';
   CBI7       : in std_logic := '0';
   CBI8       : in std_logic := '0';
   CBI9       : in std_logic := '0';
   CBI10      : in std_logic := '0';
   CBI11      : in std_logic := '0';
   CBI12      : in std_logic := '0';
   CBI13      : in std_logic := '0';
   CBI14      : in std_logic := '0';
   CBI15      : in std_logic := '0';
   CBI16      : in std_logic := '0';
   CBI17      : in std_logic := '0';
   CBI18      : in std_logic := '0';

   CBO1       : out std_logic := '0';
   CBO2       : out std_logic := '0';
   CBO3       : out std_logic := '0';
   CBO4       : out std_logic := '0';
   CBO5       : out std_logic := '0';
   CBO6       : out std_logic := '0';
   CBO7       : out std_logic := '0';
   CBO8       : out std_logic := '0';
   CBO9       : out std_logic := '0';
   CBO10      : out std_logic := '0';
   CBO11      : out std_logic := '0';
   CBO12      : out std_logic := '0';
   CBO13      : out std_logic := '0';
   CBO14      : out std_logic := '0';
   CBO15      : out std_logic := '0';
   CBO16      : out std_logic := '0';
   CBO17      : out std_logic := '0';
   CBO18      : out std_logic := '0';

   CCI        : in std_logic := '0';
   CCO        : out std_logic := '0';
   CI         : in std_logic := '0';
   CK         : in std_logic := '0';
   CO         : out std_logic := '0';
   CO37       : out std_logic := '0';
   CO57       : out std_logic := '0';

   CZI1       : in std_logic := '0';
   CZI2       : in std_logic := '0';
   CZI3       : in std_logic := '0';
   CZI4       : in std_logic := '0';
   CZI5       : in std_logic := '0';
   CZI6       : in std_logic := '0';
   CZI7       : in std_logic := '0';
   CZI8       : in std_logic := '0';
   CZI9       : in std_logic := '0';
   CZI10      : in std_logic := '0';
   CZI11      : in std_logic := '0';
   CZI12      : in std_logic := '0';
   CZI13      : in std_logic := '0';
   CZI14      : in std_logic := '0';
   CZI15      : in std_logic := '0';
   CZI16      : in std_logic := '0';
   CZI17      : in std_logic := '0';
   CZI18      : in std_logic := '0';
   CZI19      : in std_logic := '0';
   CZI20      : in std_logic := '0';
   CZI21      : in std_logic := '0';
   CZI22      : in std_logic := '0';
   CZI23      : in std_logic := '0';
   CZI24      : in std_logic := '0';
   CZI25      : in std_logic := '0';
   CZI26      : in std_logic := '0';
   CZI27      : in std_logic := '0';
   CZI28      : in std_logic := '0';
   CZI29      : in std_logic := '0';
   CZI30      : in std_logic := '0';
   CZI31      : in std_logic := '0';
   CZI32      : in std_logic := '0';
   CZI33      : in std_logic := '0';
   CZI34      : in std_logic := '0';
   CZI35      : in std_logic := '0';
   CZI36      : in std_logic := '0';
   CZI37      : in std_logic := '0';
   CZI38      : in std_logic := '0';
   CZI39      : in std_logic := '0';
   CZI40      : in std_logic := '0';
   CZI41      : in std_logic := '0';
   CZI42      : in std_logic := '0';
   CZI43      : in std_logic := '0';
   CZI44      : in std_logic := '0';
   CZI45      : in std_logic := '0';
   CZI46      : in std_logic := '0';
   CZI47      : in std_logic := '0';
   CZI48      : in std_logic := '0';
   CZI49      : in std_logic := '0';
   CZI50      : in std_logic := '0';
   CZI51      : in std_logic := '0';
   CZI52      : in std_logic := '0';
   CZI53      : in std_logic := '0';
   CZI54      : in std_logic := '0';
   CZI55      : in std_logic := '0';
   CZI56      : in std_logic := '0';

   CZO1       : out std_logic := '0';
   CZO2       : out std_logic := '0';
   CZO3       : out std_logic := '0';
   CZO4       : out std_logic := '0';
   CZO5       : out std_logic := '0';
   CZO6       : out std_logic := '0';
   CZO7       : out std_logic := '0';
   CZO8       : out std_logic := '0';
   CZO9       : out std_logic := '0';
   CZO10      : out std_logic := '0';
   CZO11      : out std_logic := '0';
   CZO12      : out std_logic := '0';
   CZO13      : out std_logic := '0';
   CZO14      : out std_logic := '0';
   CZO15      : out std_logic := '0';
   CZO16      : out std_logic := '0';
   CZO17      : out std_logic := '0';
   CZO18      : out std_logic := '0';
   CZO19      : out std_logic := '0';
   CZO20      : out std_logic := '0';
   CZO21      : out std_logic := '0';
   CZO22      : out std_logic := '0';
   CZO23      : out std_logic := '0';
   CZO24      : out std_logic := '0';
   CZO25      : out std_logic := '0';
   CZO26      : out std_logic := '0';
   CZO27      : out std_logic := '0';
   CZO28      : out std_logic := '0';
   CZO29      : out std_logic := '0';
   CZO30      : out std_logic := '0';
   CZO31      : out std_logic := '0';
   CZO32      : out std_logic := '0';
   CZO33      : out std_logic := '0';
   CZO34      : out std_logic := '0';
   CZO35      : out std_logic := '0';
   CZO36      : out std_logic := '0';
   CZO37      : out std_logic := '0';
   CZO38      : out std_logic := '0';
   CZO39      : out std_logic := '0';
   CZO40      : out std_logic := '0';
   CZO41      : out std_logic := '0';
   CZO42      : out std_logic := '0';
   CZO43      : out std_logic := '0';
   CZO44      : out std_logic := '0';
   CZO45      : out std_logic := '0';
   CZO46      : out std_logic := '0';
   CZO47      : out std_logic := '0';
   CZO48      : out std_logic := '0';
   CZO49      : out std_logic := '0';
   CZO50      : out std_logic := '0';
   CZO51      : out std_logic := '0';
   CZO52      : out std_logic := '0';
   CZO53      : out std_logic := '0';
   CZO54      : out std_logic := '0';
   CZO55      : out std_logic := '0';
   CZO56      : out std_logic := '0';

   D1         : in std_logic := '0';
   D2         : in std_logic := '0';
   D3         : in std_logic := '0';
   D4         : in std_logic := '0';
   D5         : in std_logic := '0';
   D6         : in std_logic := '0';
   D7         : in std_logic := '0';
   D8         : in std_logic := '0';
   D9         : in std_logic := '0';
   D10        : in std_logic := '0';
   D11        : in std_logic := '0';
   D12        : in std_logic := '0';
   D13        : in std_logic := '0';
   D14        : in std_logic := '0';
   D15        : in std_logic := '0';
   D16        : in std_logic := '0';
   D17        : in std_logic := '0';
   D18        : in std_logic := '0';

   OVF        : out std_logic := '0';
   R          : in std_logic := '0';
   RZ         : in std_logic := '0';
   WE         : in std_logic := '0';

   Z1         : out std_logic := '0';
   Z2         : out std_logic := '0';
   Z3         : out std_logic := '0';
   Z4         : out std_logic := '0';
   Z5         : out std_logic := '0';
   Z6         : out std_logic := '0';
   Z7         : out std_logic := '0';
   Z8         : out std_logic := '0';
   Z9         : out std_logic := '0';
   Z10        : out std_logic := '0';
   Z11        : out std_logic := '0';
   Z12        : out std_logic := '0';
   Z13        : out std_logic := '0';
   Z14        : out std_logic := '0';
   Z15        : out std_logic := '0';
   Z16        : out std_logic := '0';
   Z17        : out std_logic := '0';
   Z18        : out std_logic := '0';
   Z19        : out std_logic := '0';
   Z20        : out std_logic := '0';
   Z21        : out std_logic := '0';
   Z22        : out std_logic := '0';
   Z23        : out std_logic := '0';
   Z24        : out std_logic := '0';
   Z25        : out std_logic := '0';
   Z26        : out std_logic := '0';
   Z27        : out std_logic := '0';
   Z28        : out std_logic := '0';
   Z29        : out std_logic := '0';
   Z30        : out std_logic := '0';
   Z31        : out std_logic := '0';
   Z32        : out std_logic := '0';
   Z33        : out std_logic := '0';
   Z34        : out std_logic := '0';
   Z35        : out std_logic := '0';
   Z36        : out std_logic := '0';
   Z37        : out std_logic := '0';
   Z38        : out std_logic := '0';
   Z39        : out std_logic := '0';
   Z40        : out std_logic := '0';
   Z41        : out std_logic := '0';
   Z42        : out std_logic := '0';
   Z43        : out std_logic := '0';
   Z44        : out std_logic := '0';
   Z45        : out std_logic := '0';
   Z46        : out std_logic := '0';
   Z47        : out std_logic := '0';
   Z48        : out std_logic := '0';
   Z49        : out std_logic := '0';
   Z50        : out std_logic := '0';
   Z51        : out std_logic := '0';
   Z52        : out std_logic := '0';
   Z53        : out std_logic := '0';
   Z54        : out std_logic := '0';
   Z55        : out std_logic := '0';
   Z56        : out std_logic := '0'
   );
end component;

begin

----------------------------------------------------------
-- Instantiation the NX_DSP_L component
----------------------------------------------------------
DSP_INST : NX_DSP_L
generic map (
   std_mode    => "", -- standard mode [ADD36, SUB36, SMUL18, UMUL18, ...] empty for raw
   raw_config0 => raw_config0_gen, -- MODE and MUXes
   raw_config1 => raw_config1_gen, -- Pipeline Registers
   raw_config2 => raw_config2_gen, -- Reset Enable for internal registers
   raw_config3 => raw_config3_gen   -- ALU modes
   )
port map (
   A1         => A(0),
   A2         => A(1),
   A3         => A(2),
   A4         => A(3),
   A5         => A(4),
   A6         => A(5),
   A7         => A(6),
   A8         => A(7),
   A9         => A(8),
   A10        => A(9),
   A11        => A(10),
   A12        => A(11),
   A13        => A(12),
   A14        => A(13),
   A15        => A(14),
   A16        => A(15),
   A17        => A(16),
   A18        => A(17),
   A19        => A(18),
   A20        => A(19),
   A21        => A(20),
   A22        => A(21),
   A23        => A(22),
   A24        => A(23),
         
   B1         => B(0),
   B2         => B(1),
   B3         => B(2),
   B4         => B(3),
   B5         => B(4),
   B6         => B(5),
   B7         => B(6),
   B8         => B(7),
   B9         => B(8),
   B10        => B(9),
   B11        => B(10),
   B12        => B(11),
   B13        => B(12),
   B14        => B(13),
   B15        => B(14),
   B16        => B(15),
   B17        => B(16),
   B18        => B(17),
        
   C1         => C(0),
   C2         => C(1),
   C3         => C(2),
   C4         => C(3),
   C5         => C(4),
   C6         => C(5),
   C7         => C(6),
   C8         => C(7),
   C9         => C(8),
   C10        => C(9),
   C11        => C(10),
   C12        => C(11),
   C13        => C(12),
   C14        => C(13),
   C15        => C(14),
   C16        => C(15),
   C17        => C(16),
   C18        => C(17),
   C19        => C(18),
   C20        => C(19),
   C21        => C(20),
   C22        => C(21),
   C23        => C(22),
   C24        => C(23),
   C25        => C(24),
   C26        => C(25),
   C27        => C(26),
   C28        => C(27),
   C29        => C(28),
   C30        => C(29),
   C31        => C(30),
   C32        => C(31),
   C33        => C(32),
   C34        => C(33),
   C35        => C(34),
   C36        => C(35),

   CAI1       => CAI(0),
   CAI2       => CAI(1),
   CAI3       => CAI(2),
   CAI4       => CAI(3),
   CAI5       => CAI(4),
   CAI6       => CAI(5),
   CAI7       => CAI(6),
   CAI8       => CAI(7),
   CAI9       => CAI(8),
   CAI10      => CAI(9),
   CAI11      => CAI(10),
   CAI12      => CAI(11),
   CAI13      => CAI(12),
   CAI14      => CAI(13),
   CAI15      => CAI(14),
   CAI16      => CAI(15),
   CAI17      => CAI(16),
   CAI18      => CAI(17),
   CAI19      => CAI(18),
   CAI20      => CAI(19),
   CAI21      => CAI(20),
   CAI22      => CAI(21),
   CAI23      => CAI(22),
   CAI24      => CAI(23),

   CAO1       => CAO(0),
   CAO2       => CAO(1),
   CAO3       => CAO(2),
   CAO4       => CAO(3),
   CAO5       => CAO(4),
   CAO6       => CAO(5),
   CAO7       => CAO(6),
   CAO8       => CAO(7),
   CAO9       => CAO(8),
   CAO10      => CAO(9),
   CAO11      => CAO(10),
   CAO12      => CAO(11),
   CAO13      => CAO(12),
   CAO14      => CAO(13),
   CAO15      => CAO(14),
   CAO16      => CAO(15),
   CAO17      => CAO(16),
   CAO18      => CAO(17),
   CAO19      => CAO(18),
   CAO20      => CAO(19),
   CAO21      => CAO(20),
   CAO22      => CAO(21),
   CAO23      => CAO(22),
   CAO24      => CAO(23),

   CBI1       => CBI(0),
   CBI2       => CBI(1),
   CBI3       => CBI(2),
   CBI4       => CBI(3),
   CBI5       => CBI(4),
   CBI6       => CBI(5),
   CBI7       => CBI(6),
   CBI8       => CBI(7),
   CBI9       => CBI(8),
   CBI10      => CBI(9),
   CBI11      => CBI(10),
   CBI12      => CBI(11),
   CBI13      => CBI(12),
   CBI14      => CBI(13),
   CBI15      => CBI(14),
   CBI16      => CBI(15),
   CBI17      => CBI(16),
   CBI18      => CBI(17),

   CBO1       => CBO(0),
   CBO2       => CBO(1),
   CBO3       => CBO(2),
   CBO4       => CBO(3),
   CBO5       => CBO(4),
   CBO6       => CBO(5),
   CBO7       => CBO(6),
   CBO8       => CBO(7),
   CBO9       => CBO(8),
   CBO10      => CBO(9),
   CBO11      => CBO(10),
   CBO12      => CBO(11),
   CBO13      => CBO(12),
   CBO14      => CBO(13),
   CBO15      => CBO(14),
   CBO16      => CBO(15),
   CBO17      => CBO(16),
   CBO18      => CBO(17),

   CCI        => CCI,
   CCO        => CCO,
   CI         => CI,
   CK         => CK,
   CO         => CO,
   CO37       => CO36,
   CO57       => CO56,

   CZI1       => CZI(0),
   CZI2       => CZI(1),
   CZI3       => CZI(2),
   CZI4       => CZI(3),
   CZI5       => CZI(4),
   CZI6       => CZI(5),
   CZI7       => CZI(6),
   CZI8       => CZI(7),
   CZI9       => CZI(8),
   CZI10      => CZI(9),
   CZI11      => CZI(10),
   CZI12      => CZI(11),
   CZI13      => CZI(12),
   CZI14      => CZI(13),
   CZI15      => CZI(14),
   CZI16      => CZI(15),
   CZI17      => CZI(16),
   CZI18      => CZI(17),
   CZI19      => CZI(18),
   CZI20      => CZI(19),
   CZI21      => CZI(20),
   CZI22      => CZI(21),
   CZI23      => CZI(22),
   CZI24      => CZI(23),
   CZI25      => CZI(24),
   CZI26      => CZI(25),
   CZI27      => CZI(26),
   CZI28      => CZI(27),
   CZI29      => CZI(28),
   CZI30      => CZI(29),
   CZI31      => CZI(30),
   CZI32      => CZI(31),
   CZI33      => CZI(32),
   CZI34      => CZI(33),
   CZI35      => CZI(34),
   CZI36      => CZI(35),
   CZI37      => CZI(36),
   CZI38      => CZI(37),
   CZI39      => CZI(38),
   CZI40      => CZI(39),
   CZI41      => CZI(40),
   CZI42      => CZI(41),
   CZI43      => CZI(42),
   CZI44      => CZI(43),
   CZI45      => CZI(44),
   CZI46      => CZI(45),
   CZI47      => CZI(46),
   CZI48      => CZI(47),
   CZI49      => CZI(48),
   CZI50      => CZI(49),
   CZI51      => CZI(50),
   CZI52      => CZI(51),
   CZI53      => CZI(52),
   CZI54      => CZI(53),
   CZI55      => CZI(54),
   CZI56      => CZI(55),

   CZO1       => CZO(0),
   CZO2       => CZO(1),
   CZO3       => CZO(2),
   CZO4       => CZO(3),
   CZO5       => CZO(4),
   CZO6       => CZO(5),
   CZO7       => CZO(6),
   CZO8       => CZO(7),
   CZO9       => CZO(8),
   CZO10      => CZO(9),
   CZO11      => CZO(10),
   CZO12      => CZO(11),
   CZO13      => CZO(12),
   CZO14      => CZO(13),
   CZO15      => CZO(14),
   CZO16      => CZO(15),
   CZO17      => CZO(16),
   CZO18      => CZO(17),
   CZO19      => CZO(18),
   CZO20      => CZO(19),
   CZO21      => CZO(20),
   CZO22      => CZO(21),
   CZO23      => CZO(22),
   CZO24      => CZO(23),
   CZO25      => CZO(24),
   CZO26      => CZO(25),
   CZO27      => CZO(26),
   CZO28      => CZO(27),
   CZO29      => CZO(28),
   CZO30      => CZO(29),
   CZO31      => CZO(30),
   CZO32      => CZO(31),
   CZO33      => CZO(32),
   CZO34      => CZO(33),
   CZO35      => CZO(34),
   CZO36      => CZO(35),
   CZO37      => CZO(36),
   CZO38      => CZO(37),
   CZO39      => CZO(38),
   CZO40      => CZO(39),
   CZO41      => CZO(40),
   CZO42      => CZO(41),
   CZO43      => CZO(42),
   CZO44      => CZO(43),
   CZO45      => CZO(44),
   CZO46      => CZO(45),
   CZO47      => CZO(46),
   CZO48      => CZO(47),
   CZO49      => CZO(48),
   CZO50      => CZO(49),
   CZO51      => CZO(50),
   CZO52      => CZO(51),
   CZO53      => CZO(52),
   CZO54      => CZO(53),
   CZO55      => CZO(54),
   CZO56      => CZO(55),

   D1         => D(0),
   D2         => D(1),
   D3         => D(2),
   D4         => D(3),
   D5         => D(4),
   D6         => D(5),
   D7         => D(6),
   D8         => D(7),
   D9         => D(8),
   D10        => D(9),
   D11        => D(10),
   D12        => D(11),
   D13        => D(12),
   D14        => D(13),
   D15        => D(14),
   D16        => D(15),
   D17        => D(16),
   D18        => D(17),

   OVF        => OVF,
   R          => R,
   RZ         => RZ,
   WE         => WE,

   Z1         => Z(0),
   Z2         => Z(1),
   Z3         => Z(2),
   Z4         => Z(3),
   Z5         => Z(4),
   Z6         => Z(5),
   Z7         => Z(6),
   Z8         => Z(7),
   Z9         => Z(8),
   Z10        => Z(9),
   Z11        => Z(10),
   Z12        => Z(11),
   Z13        => Z(12),
   Z14        => Z(13),
   Z15        => Z(14),
   Z16        => Z(15),
   Z17        => Z(16),
   Z18        => Z(17),
   Z19        => Z(18),
   Z20        => Z(19),
   Z21        => Z(20),
   Z22        => Z(21),
   Z23        => Z(22),
   Z24        => Z(23),
   Z25        => Z(24),
   Z26        => Z(25),
   Z27        => Z(26),
   Z28        => Z(27),
   Z29        => Z(28),
   Z30        => Z(29),
   Z31        => Z(30),
   Z32        => Z(31),
   Z33        => Z(32),
   Z34        => Z(33),
   Z35        => Z(34),
   Z36        => Z(35),
   Z37        => Z(36),
   Z38        => Z(37),
   Z39        => Z(38),
   Z40        => Z(39),
   Z41        => Z(40),
   Z42        => Z(41),
   Z43        => Z(42),
   Z44        => Z(43),
   Z45        => Z(44),
   Z46        => Z(45),
   Z47        => Z(46),
   Z48        => Z(47),
   Z49        => Z(48),
   Z50        => Z(49),
   Z51        => Z(50),
   Z52        => Z(51),
   Z53        => Z(52),
   Z54        => Z(53),
   Z55        => Z(54),
   Z56        => Z(55)
   );

end NX_RTL;
-- #}}}#

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
bvGiIxGpiPXUPToFV2j12B8YgiBAer4tQd9MJKUhqSSpfwV00DMd+JHtAId1jWv+
KLZsOKKctbEwyUqZW1Lrd9ud9ErZAnooLBD8FeVII2SknPyTFEuZ2LSpBU7iZgVM
9hSjnnjOG+aLF2uPj3cOZqj/8J46Kx1+6/YSFfjnDUp7ABOS26/PJv53Tr+1HcvA
RHADx8sw+SeCQ9uLdnLtfaTJDscZTZlMQMdi4wYUchenUJki7r/MIzRzNm7he1tF
2vBCXvmxbxMvFHyroRNzaU7j4nKbPQ8P+DTmIAV9eTaqz4QidknjvKbToNg7DNo6
CcwCRm9JrR34W2xo8jLIzg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 41152)
`protect data_block
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
SCYhSMxZc/cbvxcR81x4DA==
`protect end_protected

-- =================================================================================================
--   NX_RAM definition                                                                  2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM is
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK   : in  std_logic;
    ACKC  : in  std_logic;
    ACKD  : in  std_logic;
    ACKR  : in  std_logic;
    BCK   : in  std_logic;
    BCKC  : in  std_logic;
    BCKD  : in  std_logic;
    BCKR  : in  std_logic;

    AI1   : in  std_logic;
    AI2   : in  std_logic;
    AI3   : in  std_logic;
    AI4   : in  std_logic;
    AI5   : in  std_logic;
    AI6   : in  std_logic;
    AI7   : in  std_logic;
    AI8   : in  std_logic;
    AI9   : in  std_logic;
    AI10  : in  std_logic;
    AI11  : in  std_logic;
    AI12  : in  std_logic;
    AI13  : in  std_logic;
    AI14  : in  std_logic;
    AI15  : in  std_logic;
    AI16  : in  std_logic;

    AI17  : in  std_logic;
    AI18  : in  std_logic;
    AI19  : in  std_logic;
    AI20  : in  std_logic;
    AI21  : in  std_logic;
    AI22  : in  std_logic;
    AI23  : in  std_logic;
    AI24  : in  std_logic;

    BI1   : in  std_logic;
    BI2   : in  std_logic;
    BI3   : in  std_logic;
    BI4   : in  std_logic;
    BI5   : in  std_logic;
    BI6   : in  std_logic;
    BI7   : in  std_logic;
    BI8   : in  std_logic;
    BI9   : in  std_logic;
    BI10  : in  std_logic;
    BI11  : in  std_logic;
    BI12  : in  std_logic;
    BI13  : in  std_logic;
    BI14  : in  std_logic;
    BI15  : in  std_logic;
    BI16  : in  std_logic;

    BI17  : in  std_logic;
    BI18  : in  std_logic;
    BI19  : in  std_logic;
    BI20  : in  std_logic;
    BI21  : in  std_logic;
    BI22  : in  std_logic;
    BI23  : in  std_logic;
    BI24  : in  std_logic;

    ACOR  : out std_logic;
    AERR  : out std_logic;
    BCOR  : out std_logic;
    BERR  : out std_logic;

    AO1   : out std_logic;
    AO2   : out std_logic;
    AO3   : out std_logic;
    AO4   : out std_logic;
    AO5   : out std_logic;
    AO6   : out std_logic;
    AO7   : out std_logic;
    AO8   : out std_logic;
    AO9   : out std_logic;
    AO10  : out std_logic;
    AO11  : out std_logic;
    AO12  : out std_logic;
    AO13  : out std_logic;
    AO14  : out std_logic;
    AO15  : out std_logic;
    AO16  : out std_logic;

    AO17  : out std_logic;
    AO18  : out std_logic;
    AO19  : out std_logic;
    AO20  : out std_logic;
    AO21  : out std_logic;
    AO22  : out std_logic;
    AO23  : out std_logic;
    AO24  : out std_logic;

    BO1   : out std_logic;
    BO2   : out std_logic;
    BO3   : out std_logic;
    BO4   : out std_logic;
    BO5   : out std_logic;
    BO6   : out std_logic;
    BO7   : out std_logic;
    BO8   : out std_logic;
    BO9   : out std_logic;
    BO10  : out std_logic;
    BO11  : out std_logic;
    BO12  : out std_logic;
    BO13  : out std_logic;
    BO14  : out std_logic;
    BO15  : out std_logic;
    BO16  : out std_logic;

    BO17  : out std_logic;
    BO18  : out std_logic;
    BO19  : out std_logic;
    BO20  : out std_logic;
    BO21  : out std_logic;
    BO22  : out std_logic;
    BO23  : out std_logic;
    BO24  : out std_logic;

    AA1   : in  std_logic;
    AA2   : in  std_logic;
    AA3   : in  std_logic;
    AA4   : in  std_logic;
    AA5   : in  std_logic;
    AA6   : in  std_logic;

    AA7   : in  std_logic;
    AA8   : in  std_logic;
    AA9   : in  std_logic;
    AA10  : in  std_logic;
    AA11  : in  std_logic;
    AA12  : in  std_logic;
    AA13  : in  std_logic;
    AA14  : in  std_logic;
    AA15  : in  std_logic;
    AA16  : in  std_logic;

    ACS   : in  std_logic;
    AWE   : in  std_logic;
    AR    : in  std_logic;

    BA1   : in  std_logic;
    BA2   : in  std_logic;
    BA3   : in  std_logic;
    BA4   : in  std_logic;
    BA5   : in  std_logic;
    BA6   : in  std_logic;

    BA7   : in  std_logic;
    BA8   : in  std_logic;
    BA9   : in  std_logic;
    BA10  : in  std_logic;
    BA11  : in  std_logic;
    BA12  : in  std_logic;
    BA13  : in  std_logic;
    BA14  : in  std_logic;
    BA15  : in  std_logic;
    BA16  : in  std_logic;

    BCS   : in  std_logic;
    BWE   : in  std_logic;
    BR    : in  std_logic
);
end NX_RAM;

architecture NX_RTL of NX_RAM is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RAM";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RAM_WRAP definition                                                             2017/09/25
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity NX_RAM_WRAP is
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK  : in  std_logic;
    ACKD : in  std_logic;
    ACKR : in  std_logic;
    BCK  : in  std_logic;
    BCKD : in  std_logic;
    BCKR : in  std_logic;

    AI   : in  std_logic_vector(23 downto 0);
    BI   : in  std_logic_vector(23 downto 0);

    ACOR : out std_logic;
    AERR : out std_logic;
    BCOR : out std_logic;
    BERR : out std_logic;

    AO   : out std_logic_vector(23 downto 0);
    BO   : out std_logic_vector(23 downto 0);
    AA   : in  std_logic_vector(15 downto 0);

    ACS  : in  std_logic;
    AWE  : in  std_logic;
    AR   : in  std_logic;

    BA   : in  std_logic_vector(15 downto 0);

    BCS  : in  std_logic;
    BWE  : in  std_logic;
    BR   : in  std_logic
);
end NX_RAM_WRAP;

architecture NX_RTL of NX_RAM_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RAM
generic (
    std_mode    : string := ""; -- standard mode [FAST_2kx18, SLOW_2kx18, NOECNOECC24, ...] empty for raw
    mcka_edge   : bit := '0';   -- 0: rising edge for port A clock - 1: falling edge
    mckb_edge   : bit := '0';   -- 0: rising edge for port B clock - 1: falling edge
    pcka_edge   : bit := '0';   -- 0: rising edge for pipe A clock - 1: falling edge
    pckb_edge   : bit := '0';   -- 0: rising edge for pipe B clock - 1: falling edge
    mem_ctxt    : string := ""; -- context initialization
    pipe_ia     : bit := '0';   -- 0: no pipe on port A input  - 1: pipe on port A input
    pipe_ib     : bit := '0';   -- 0: no pipe on port B input  - 1: pipe on port A input
    pipe_oa     : bit := '0';   -- 0: no pipe on port A output - 1: pipe on port B output
    pipe_ob     : bit := '0';   -- 0: no pipe on port B output - 1: pipe on port B output
    raw_config0 : bit_vector( 3 downto 0) := B"0000";			-- PRC
    raw_config1 : bit_vector(15 downto 0) := B"0000000000000000"	-- MOD
);
port (
    ACK   : in  std_logic;
    ACKC  : in  std_logic;
    ACKD  : in  std_logic;
    ACKR  : in  std_logic;
    BCK   : in  std_logic;
    BCKC  : in  std_logic;
    BCKD  : in  std_logic;
    BCKR  : in  std_logic;

    AI1   : in  std_logic;
    AI2   : in  std_logic;
    AI3   : in  std_logic;
    AI4   : in  std_logic;
    AI5   : in  std_logic;
    AI6   : in  std_logic;
    AI7   : in  std_logic;
    AI8   : in  std_logic;
    AI9   : in  std_logic;
    AI10  : in  std_logic;
    AI11  : in  std_logic;
    AI12  : in  std_logic;
    AI13  : in  std_logic;
    AI14  : in  std_logic;
    AI15  : in  std_logic;
    AI16  : in  std_logic;

    AI17  : in  std_logic;
    AI18  : in  std_logic;
    AI19  : in  std_logic;
    AI20  : in  std_logic;
    AI21  : in  std_logic;
    AI22  : in  std_logic;
    AI23  : in  std_logic;
    AI24  : in  std_logic;

    BI1   : in  std_logic;
    BI2   : in  std_logic;
    BI3   : in  std_logic;
    BI4   : in  std_logic;
    BI5   : in  std_logic;
    BI6   : in  std_logic;
    BI7   : in  std_logic;
    BI8   : in  std_logic;
    BI9   : in  std_logic;
    BI10  : in  std_logic;
    BI11  : in  std_logic;
    BI12  : in  std_logic;
    BI13  : in  std_logic;
    BI14  : in  std_logic;
    BI15  : in  std_logic;
    BI16  : in  std_logic;

    BI17  : in  std_logic;
    BI18  : in  std_logic;
    BI19  : in  std_logic;
    BI20  : in  std_logic;
    BI21  : in  std_logic;
    BI22  : in  std_logic;
    BI23  : in  std_logic;
    BI24  : in  std_logic;

    ACOR  : out std_logic;
    AERR  : out std_logic;
    BCOR  : out std_logic;
    BERR  : out std_logic;

    AO1   : out std_logic;
    AO2   : out std_logic;
    AO3   : out std_logic;
    AO4   : out std_logic;
    AO5   : out std_logic;
    AO6   : out std_logic;
    AO7   : out std_logic;
    AO8   : out std_logic;
    AO9   : out std_logic;
    AO10  : out std_logic;
    AO11  : out std_logic;
    AO12  : out std_logic;
    AO13  : out std_logic;
    AO14  : out std_logic;
    AO15  : out std_logic;
    AO16  : out std_logic;

    AO17  : out std_logic;
    AO18  : out std_logic;
    AO19  : out std_logic;
    AO20  : out std_logic;
    AO21  : out std_logic;
    AO22  : out std_logic;
    AO23  : out std_logic;
    AO24  : out std_logic;

    BO1   : out std_logic;
    BO2   : out std_logic;
    BO3   : out std_logic;
    BO4   : out std_logic;
    BO5   : out std_logic;
    BO6   : out std_logic;
    BO7   : out std_logic;
    BO8   : out std_logic;
    BO9   : out std_logic;
    BO10  : out std_logic;
    BO11  : out std_logic;
    BO12  : out std_logic;
    BO13  : out std_logic;
    BO14  : out std_logic;
    BO15  : out std_logic;
    BO16  : out std_logic;

    BO17  : out std_logic;
    BO18  : out std_logic;
    BO19  : out std_logic;
    BO20  : out std_logic;
    BO21  : out std_logic;
    BO22  : out std_logic;
    BO23  : out std_logic;
    BO24  : out std_logic;

    AA1   : in  std_logic;
    AA2   : in  std_logic;
    AA3   : in  std_logic;
    AA4   : in  std_logic;
    AA5   : in  std_logic;
    AA6   : in  std_logic;

    AA7   : in  std_logic;
    AA8   : in  std_logic;
    AA9   : in  std_logic;
    AA10  : in  std_logic;
    AA11  : in  std_logic;
    AA12  : in  std_logic;
    AA13  : in  std_logic;
    AA14  : in  std_logic;
    AA15  : in  std_logic;
    AA16  : in  std_logic;

    ACS   : in  std_logic;
    AWE   : in  std_logic;
    AR    : in  std_logic;

    BA1   : in  std_logic;
    BA2   : in  std_logic;
    BA3   : in  std_logic;
    BA4   : in  std_logic;
    BA5   : in  std_logic;
    BA6   : in  std_logic;

    BA7   : in  std_logic;
    BA8   : in  std_logic;
    BA9   : in  std_logic;
    BA10  : in  std_logic;
    BA11  : in  std_logic;
    BA12  : in  std_logic;
    BA13  : in  std_logic;
    BA14  : in  std_logic;
    BA15  : in  std_logic;
    BA16  : in  std_logic;

    BCS   : in  std_logic;
    BWE   : in  std_logic;
    BR    : in  std_logic
);
end component;

begin

ram: NX_RAM generic map (
    std_mode    => std_mode,
    mcka_edge   => mcka_edge,
    mckb_edge   => mckb_edge,
    pcka_edge   => pcka_edge,
    pckb_edge   => pckb_edge,
    mem_ctxt    => mem_ctxt,
    pipe_ia     => pipe_ia,
    pipe_ib     => pipe_ib,
    pipe_oa     => pipe_oa,
    pipe_ob     => pipe_ob,
    raw_config0 => raw_config0,
    raw_config1 => raw_config1)
port map(
    ACK   => ACK,
    ACKC  => ACK,
    ACKD  => ACKD,
    ACKR  => ACKR,
    BCK   => BCK,
    BCKC  => BCK,
    BCKD  => BCKD,
    BCKR  => BCKR,

    AI1   => AI(0),
    AI2   => AI(1),
    AI3   => AI(2),
    AI4   => AI(3),
    AI5   => AI(4),
    AI6   => AI(5),
    AI7   => AI(6),
    AI8   => AI(7),
    AI9   => AI(8),
    AI10  => AI(9),
    AI11  => AI(10),
    AI12  => AI(11),
    AI13  => AI(12),
    AI14  => AI(13),
    AI15  => AI(14),
    AI16  => AI(15),

    AI17  => AI(16),
    AI18  => AI(17),
    AI19  => AI(18),
    AI20  => AI(19),
    AI21  => AI(20),
    AI22  => AI(21),
    AI23  => AI(22),
    AI24  => AI(23),

    BI1   => BI(0),
    BI2   => BI(1),
    BI3   => BI(2),
    BI4   => BI(3),
    BI5   => BI(4),
    BI6   => BI(5),
    BI7   => BI(6),
    BI8   => BI(7),
    BI9   => BI(8),
    BI10  => BI(9),
    BI11  => BI(10),
    BI12  => BI(11),
    BI13  => BI(12),
    BI14  => BI(13),
    BI15  => BI(14),
    BI16  => BI(15),

    BI17  => BI(16),
    BI18  => BI(17),
    BI19  => BI(18),
    BI20  => BI(19),
    BI21  => BI(20),
    BI22  => BI(21),
    BI23  => BI(22),
    BI24  => BI(23),

    ACOR  => ACOR,
    AERR  => AERR,
    BCOR  => BCOR,
    BERR  => BERR,

    AO1   => AO(0),
    AO2   => AO(1),
    AO3   => AO(2),
    AO4   => AO(3),
    AO5   => AO(4),
    AO6   => AO(5),
    AO7   => AO(6),
    AO8   => AO(7),
    AO9   => AO(8),
    AO10  => AO(9),
    AO11  => AO(10),
    AO12  => AO(11),
    AO13  => AO(12),
    AO14  => AO(13),
    AO15  => AO(14),
    AO16  => AO(15),

    AO17  => AO(16),
    AO18  => AO(17),
    AO19  => AO(18),
    AO20  => AO(19),
    AO21  => AO(20),
    AO22  => AO(21),
    AO23  => AO(22),
    AO24  => AO(23),

    BO1   => BO(0),
    BO2   => BO(1),
    BO3   => BO(2),
    BO4   => BO(3),
    BO5   => BO(4),
    BO6   => BO(5),
    BO7   => BO(6),
    BO8   => BO(7),
    BO9   => BO(8),
    BO10  => BO(9),
    BO11  => BO(10),
    BO12  => BO(11),
    BO13  => BO(12),
    BO14  => BO(13),
    BO15  => BO(14),
    BO16  => BO(15),

    BO17  => BO(16),
    BO18  => BO(17),
    BO19  => BO(18),
    BO20  => BO(19),
    BO21  => BO(20),
    BO22  => BO(21),
    BO23  => BO(22),
    BO24  => BO(23),

    AA1   => AA(0),
    AA2   => AA(1),
    AA3   => AA(2),
    AA4   => AA(3),
    AA5   => AA(4),
    AA6   => AA(5),

    AA7   => AA(6),
    AA8   => AA(7),
    AA9   => AA(8),
    AA10  => AA(9),
    AA11  => AA(10),
    AA12  => AA(11),
    AA13  => AA(12),
    AA14  => AA(13),
    AA15  => AA(14),
    AA16  => AA(15),

    ACS   => ACS,
    AWE   => AWE,
    AR    => AR,

    BA1   => BA(0),
    BA2   => BA(1),
    BA3   => BA(2),
    BA4   => BA(3),
    BA5   => BA(4),
    BA6   => BA(5),

    BA7   => BA(6),
    BA8   => BA(7),
    BA9   => BA(8),
    BA10  => BA(9),
    BA11  => BA(10),
    BA12  => BA(11),
    BA13  => BA(12),
    BA14  => BA(13),
    BA15  => BA(14),
    BA16  => BA(15),

    BCS   => BCS,
    BWE   => BWE,
    BR    => BR);

end NX_RTL;

----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use ieee.std_logic_unsigned.all;

entity NX_ECC is
    port(
	CKD : in std_logic;
	CHK : in std_logic;
	COR : out std_logic;
	ERR : out std_logic
    );
end NX_ECC;

architecture NX_RTL of NX_ECC is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_ECC";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
p+99nrdzJTB4acRdrrC/IhkHpSI2pa7LP+pcbQBLn8VT/L7PPys2jneSRa9mqt+l
LPs8C+M2I7+ufUBhOgtV1SCQQySasU7PAPWoe7pRf/tnpfBttUKBpNU69Vj7xIGI
RK1KU4CNvXFABu3elkXqn/Wnh9KCcBhEBSJMpSMarjBz0BM5ZhEcuyd0EP6tp//K
lS3F+Ials8XVOjfEtR1IMUEBdgd+r9MFeAh7yNLnh1AQQSNXdE+niYtH07a7nS6h
a6PYSfMam9IxfH3er9cn5egnEE85IDQSik2odRRfsme/DylVUxex/CB0HbhJSahb
U5O5iHAw8dahkOZn0AnGiQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 114592)
`protect data_block
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
YjJCaypL2o/mO9iZJs7+OA==
`protect end_protected

-- =================================================================================================
--   NX_PLL definition                                                                  2017/09/19
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_PLL is
generic (
    location     : string := "";

    vco_range    : integer   range 0 to 2 := 0;   -- 0 to 3
    ref_div_on   : bit := '0';                    -- bypass :: %2
    fbk_div_on   : bit := '0';                    -- bypass :: %2
    ext_fbk_on   : bit := '0';                    -- 0: disabled - 1: enabled

    fbk_intdiv   : integer   range 1 to 31 := 2;  -- 0 to 31  (%1 to %32)

    fbk_delay_on : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay    : integer   range 0 to 63 := 0;  -- 0 to 63

    clk_outdiv1  : integer   range 0 to 7 := 0;   -- 0 to 7   (%1 to %2^7)
    clk_outdiv2  : integer   range 0 to 7 := 0;   -- 0 to 7   (%1 to %2^7)
    clk_outdiv3  : integer   range 0 to 7 := 0    -- 0 to 7   (%1 to %2^7)
);
port (
    REF : in  std_logic;
    FBK : in  std_logic;

    VCO : out std_logic;

    D1  : out std_logic;
    D2  : out std_logic;
    D3  : out std_logic;
    OSC : out std_logic;

    RDY : out std_logic
);
end NX_PLL;

architecture NX_RTL of NX_PLL is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_PLL";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_WFG is
generic (
    location    : string := "";

    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
    mode        : bit := '0';                              -- 0: no pattern - 1: pattern

    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    SI  : in  std_logic;
    ZI  : in  std_logic;
    RDY : in  std_logic := '1';
    SO  : out std_logic;
    ZO  : out std_logic
);
end NX_WFG;

architecture NX_RTL of NX_WFG is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_WFG";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
FotpfkdsTChBRDGJR3GyVpmoJQGX8Csc9upaeEEkaZAp/p1Lx2wivDZ+vAXCkyRy
sc1CGgHm98JMF1vP5ROGWNJKBsmYnCGFlbYRW+6MsCTp1mwR/u/Jpyicv1TDG/NQ
XY1mjOif6l8FXgTUQc5KfEcIkYJX4Zg7cyCjZ9yUPPS/f1QrLv+vs7t9ihSeP/4x
/XOFbzZdDdEKrb9Ct7SpG160NKKbTsIXFmAJtbQsD0hCuwnXco4tvddXJX+/yAL4
C12dNs1zoFgbQjzinFhRx2256mVbnIfscuqHyd7fj+1R0b7dEOYaQr3wy01cZ704
ZskkNaClHYVQDqstfm6MAA==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 15632)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_PLL_L definition                                                                2018/11/30
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_PLL_L is
generic (
    location       : string := "";

    ref_intdiv     : integer   range 0 to 31 := 0;  -- 0 to 31  (%1 to %32)
    ref_osc_on     : bit := '0';                    -- 0: disabled - 1: enabled

    ext_fbk_on     : bit := '0';                    -- 0: disabled - 1: enabled

    fbk_intdiv     : integer   range 0 to 31 := 2;  -- 0 to 31  use_pll=0 (%2 to %33 by step 1)
                                                    --          use_pll=1 (%4 to %66 by step 2)

    fbk_delay_on   : bit := '0';                    -- 0: no delay - 1: delay
    fbk_delay      : integer   range 0 to 63 := 0;  -- 0 to 63

    pll_lock_on    : bit := '0';                    -- 0: disabled - 1: enabled
    cal_lock_on    : bit := '0';                    -- 0: disabled - 1: enabled

    clk_outdivp1   : integer   range 0 to 7 := 0;   -- 0 to 7  P1 (2^n    : %1 to %128)
    clk_outdivp2   : integer   range 0 to 7 := 0;   -- 0 to 7  P2 (2^(n+1): %2 to %256)
    clk_outdivo1   : integer   range 0 to 7 := 0;   -- 0 to 7  O1 ((2n)+3 : %3 to  %17)
    clk_outdivp3o2 : integer   range 0 to 7 := 0    -- 0 to 7  P3 (2^(n+2): %4 to %512)
                                                    --         O2 ((2n)+5 : %5 to  %19)
);
port (
    REF : in  std_logic;
    FBK : in  std_logic;

    R   : in  std_logic := '0';

    VCO : out std_logic;
    LDFO: out std_logic;
    REFO: out std_logic;

    DIVO1  : out std_logic;
    DIVO2  : out std_logic;

    DIVP1  : out std_logic;
    DIVP2  : out std_logic;
    DIVP3  : out std_logic;
    OSC : out std_logic;

    LOCKED : out std_logic;
    CAL_LOCKED : out std_logic
);
end NX_PLL_L;

architecture NX_RTL of NX_PLL_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_PLL_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_WFG_L is
generic (
    location    : string := "";

    wfg_edge    : bit := '0';                              -- 0: no invert / Rising
    mode        : bit := '0';                              -- 0: no pattern - 1: pattern

    pattern_end : integer   range 0 to 15 := 1;            -- 0: to 15 (1 step to 16 steps)
    pattern     : bit_vector(0 to 15) := (others => '0');  -- pattern p0 ... p15

    delay_on    : bit := '0';                              -- 0: no delay - 1: delay
    delay       : integer   range 0 to 63 := 0             -- 0 to 63 (1 unit to 64 unit)
);
port (
    R   : in  std_logic := '0';
    SI  : in  std_logic;
    ZI  : in  std_logic;
    RDY : in  std_logic := '1';
    SO  : out std_logic;
    ZO  : out std_logic
);
end NX_WFG_L;

architecture NX_RTL of NX_WFG_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_WFG_L";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
qGuqEdzrQpxUjjp7nzKZwNqyivC47h5AVMwgpd9E9LXDkccHX2m8Gp2C4n4tJbPD
tZ/TAeCNkAyD2ugPMjyZwZhGmbSq5y4kZUELpHxCn7PSf2uS+NILww7g0J0wP3g4
rQALBYEsIv5UGSyqMyVgEno7eZgb0XSG9OKIiNQLzn606EkHh0Id2USqra6gduAU
8BXSryR2/+Zdus6RBASFLYPwC6AOvCSPqbVaNHBEhimCQFaruHSR5e7wUY9dDwwX
8rPe+aU8KA/7RMygrgNP6kHyARnEGNifhfDDwPvIkKBBdjZq9ZY2LdCCHK3BR63E
JS86Wz+Up2zywVa8fTfm8w==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 16752)
`protect data_block
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
`protect end_protected

-- beware following components are only intended for internal use. Do not try to instantiate them.

-- =================================================================================================
--   NX_BUFFER definition                                                               2017/09/11
-- =================================================================================================

-- NX_BUFFER#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_BUFFER is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_BUFFER;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
g7vXe87mEs5VsOYFoKWyRScIm9NWOhcrSwMWyE1Lm3fcRVSJz3tvbIvqvBKGV4Eu
DLI00hcY+6qpLy+HUf65eBwC7q3NfgAg6wCNxVOSx6dcnZC2DN+gcuzRI4aG9DOi
Cb9n4NZYC20FBeY+bgSSeqsJMH9KoNFLtKVVu0SvESD6PDqahjRcLTMkksfeC0mS
09MsInholEOIGo0w74Qb82mq2sVJY4PsAH/DgGXz7pytmpUg5swX+oxwXMsxlMGR
3yrt/omz+J7PnI0KMIpG5TETcVaGTB7/3PFK7X0GRUC+scwT3Hp34eomwTaFHQl2
VYyNtgVMI82Dq+Si10heOg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
qqX8A8Lfl73pp+qlXCyxkGd6D9u4ilhZzHKQ7joCnnnKNSn0gH4WPhfdcdK6JB4w
lY9vkox7eyIDoWRnqLFLg9d9D5EjAy6WRfXhAdR9wK7xCVmufTzKX0yAnDvfPIoH
ponIEQXzIH5pevYkIkBX62XX3H+G3euWydgljL7YUUVXLTxnUAoXgQBbVAAEX5P1
s0RNhciJeXb77B/8Y+ndHlr6VOasJnbRSmDggJk/2kAlwRtHkufzziZDDikbeVUO
e08nD0cZjhvdtVSjo3u0LpHU0/z09S4JZeI1dykEUL7HB06IQJ7wyvPgGERHBZ2o
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_CSC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_CSC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_CSC is
port (
    I  : in  std_logic;
    O  : out std_logic
);
end NX_CSC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
LPvv72P8efpY9EC47Pc8NJGz5hTxd1+MwN4GlATCCQTVH64Q7AQ5ezphY3hDAs/J
QxuJzhrYdpyeclVRGl/vCnKI1mO5V5GGxnDZJdO/bAsv1/0wIBkcaOTC/XB/VtFS
tzJjvtyWTk7xGfm8sxoWgryj3tF3o/2eU6HRWPHPXPzhsK27whbcmQ2HWcs7CAT7
5tGIOYjxLWYBIX/1FLacsca182+BSX+tkp8ZP0o15hO9cmgzWQoYgP/IV2dzX0s3
eDamXD349DvNhNcuJH1fcL06zNajGZbOEZ9qxhOKQMkvyNa7/hEx/v6dy6Fl3+Gg
2U14ZRhFEqk1/LOP2VFDEw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
cJxpGXdLRXHtxRK09rjp72m+fcGD9EQlC8c9FQSzct3LCDz08Zy82yC+vWA384lQ
RdY97rAgeUplitZT35DtiHgeb+/DBpd72Sg1oDCK0uV5RMjJBUidTIJVjq/nQBe3
g5jaAFbpV628+NOMwXGrTeBBH6Qe8St6il1ZLXLQss9G+3e8zaJlu2GtG7FwF6RF
iXE1p6342WYWgoM3wzVr5gbLGxHJQKb8tUaK6AaK01Yh2VBoD2tgfgyKDus1B9T7
mhjajagwUEo3l/sAksc2IvyZNIivVz33Rn5sqYHXvVeaUyNxNvmE75CaACUGcHXx
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_SCC definition                                                                  2017/09/26
-- =================================================================================================

-- NX_SCC#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_SCC is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_SCC;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
GmFpKaC6B7Y36sS9TfN+YI5fJ2+Qil2MvXSvcUn7xXQUNEPnE0YUNoUa0LY/5KVD
wce1jM0INE4vexp02K8TLfimw11bAfCg0Ly7KXKy3wN07kBXWzdwmUCOJJI0Qu6s
2MGzCngGhTw9YNXB1fe3uJWGcF0LL0+c4qlbSR/o2yMzOlrDeJPSc/P3kppAAjYa
NxACXxs9PUqFo3oHkNfQ2040nAOpvCLxvzLa6mCIpurOqwT4VdynyMkaD977+ifs
2uyyVstnk18pOqeOY4zsAKwIPhj5D1tS/kFAf3FSVX2byzvPaxh4euWfQ8jZvn4y
O33+jjrI7cPBGjCT4mgX5Q==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
H0uUnWkOVtZgRprZWmrh7XP4ZSjEGPkOjV2CTaFkgW2/GxbJe0KnLFmtPm0/Vt5q
8fQ07bxMl+uJaDwt0OCB3TuSrRHra8bGfPXQ6P3pQ08AFHY//Dd5SYYPmJDZfbGW
wqdmOyyafBgyvYBFr+IaAOQpZv1FSL5uJ9YPR1goZ9SQnYfghz7MBWYiF4BwGojn
HUNW1wXtuH7HhToMpeDbeZK3gYtiKRAaIz835ON7vfW3jVe7G8vwOoLKbOywdF+b
VvlTtZ57QBW5QUfuuqUzCIh/vTuoNoh/mfpJNSYZ/0FJ7q3X5tro3g/J7Uep+IAw
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_syn_tp definition                                                               2017/09/11
-- =================================================================================================

-- NX_syn_tp#{{{#
----------------------------------------------------------------------------------------------------
library ieee;
use ieee.std_logic_1164.all;

entity NX_syn_tp is
port (
    I : in  std_logic
);
end NX_syn_tp;

architecture NX_RTL of NX_syn_tp is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_syn_tp";
begin
end NX_RTL;

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
XsJUnnK8an1IYfpfVar2kOHd7HU3/mxAxiaVw4mWM/Ww0r2cXSQ4t+wk7touCMjV
Q/OomsmIapTtYX/SBVxjz6WKISJ3OOwrA10YetnLYq1wHbbydEm37SKowN//oaVf
OqTwWgbrWZiPvTcVCt7QKlnO7bIWx+HVQkq4GXETkldyIQPI6xywY30L6aSYaW8P
oF3Yd1YijGAUfyTDiRa0Up5RPJcIf4Ng4ZyFEFSViGV/VU0BdcZqXWytOnry4vkF
cjoSiwrArc+Zt/EJIu9PyYgrVuHLAAZ94Y/887gjhgZokinCHzAbmPQ+0AGKEXy0
2dG3P47oKWg8jn8YVQpD3A==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 208)
`protect data_block
n6ILD1ucprg3wwAJDVQ2vP35jeGKhQyVyTmdZ9koOq8d1xLel/6dc9MzX10vV87P
+oJ3C6YIef6ARJJVWANbSrVQhbHHwwxG0+I8EMwnyH36i3puyrhJpTYFlBIPbVAR
L/OEgdjYMb7fdhmj1r5LxvrmJYiV3GmSRHkWH9w62MNYRPoy7k2tVbWZ+1MG5FUU
zUHTJ2j0XNG6SyRNU9A/RkoYqau5mtBt7Up3ij0e6AL/lnfebEONChYmR9ygpAvq
tuQvw3BxvC8xFniiAMR6Qg==
`protect end_protected

-- #}}}#

-- =================================================================================================
--   NX_RB definition                                                                   2018/06/18
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RB is
port (
    CK   : in  std_logic;
    EI1   : in  std_logic;
    EI2   : in  std_logic;
    EI3   : in  std_logic;
    EI4   : in  std_logic;
    EI5   : in  std_logic;
    EI6   : in  std_logic;
    EI7   : in  std_logic;
    EI8   : in  std_logic;
    EI9   : in  std_logic;
    EI10  : in  std_logic;
    EI11  : in  std_logic;
    EI12  : in  std_logic;
    EI13  : in  std_logic;
    EI14  : in  std_logic;
    EI15  : in  std_logic;
    EI16  : in  std_logic;
    EI17  : in  std_logic;
    EI18  : in  std_logic;
    EI19  : in  std_logic;
    EI20  : in  std_logic;
    EI21  : in  std_logic;
    EI22  : in  std_logic;
    EI23  : in  std_logic;
    EI24  : in  std_logic;
    EI25  : in  std_logic;
    EI26  : in  std_logic;
    EI27  : in  std_logic;
    EI28  : in  std_logic;
    EI29  : in  std_logic;
    EI30  : in  std_logic;
    EI31  : in  std_logic;
    EI32  : in  std_logic;
    EI33  : in  std_logic;
    EI34  : in  std_logic;
    EI35  : in  std_logic;
    EI36  : in  std_logic;
    EI37  : in  std_logic;
    EI38  : in  std_logic;
    EI39  : in  std_logic;
    EI40  : in  std_logic;
    EI41  : in  std_logic;
    EI42  : in  std_logic;
    EI43  : in  std_logic;
    EI44  : in  std_logic;
    EI45  : in  std_logic;
    EI46  : in  std_logic;
    EI47  : in  std_logic;
    EI48  : in  std_logic;
    EI49  : in  std_logic;
    EI50  : in  std_logic;
    EI51  : in  std_logic;
    EI52  : in  std_logic;
    EI53  : in  std_logic;
    EI54  : in  std_logic;
    EI55  : in  std_logic;
    EI56  : in  std_logic;
    EI57  : in  std_logic;
    EI58  : in  std_logic;
    EI59  : in  std_logic;
    EI60  : in  std_logic;
    EI61  : in  std_logic;
    EI62  : in  std_logic;
    EI63  : in  std_logic;
    EI64  : in  std_logic;
    EI65  : in  std_logic;
    EI66  : in  std_logic;
    EI67  : in  std_logic;
    EI68  : in  std_logic;
    EI69  : in  std_logic;
    EI70  : in  std_logic;
    EI71  : in  std_logic;
    EI72  : in  std_logic;
    EI73  : in  std_logic;
    EI74  : in  std_logic;
    EI75  : in  std_logic;
    EI76  : in  std_logic;
    EI77  : in  std_logic;
    EI78  : in  std_logic;
    EI79  : in  std_logic;
    EI80  : in  std_logic;
    EI81  : in  std_logic;
    EI82  : in  std_logic;
    EI83  : in  std_logic;
    EI84  : in  std_logic;
    EI85  : in  std_logic;
    EI86  : in  std_logic;
    EI87  : in  std_logic;
    EI88  : in  std_logic;
    EI89  : in  std_logic;
    EI90  : in  std_logic;
    EI91  : in  std_logic;
    EI92  : in  std_logic;
    EI93  : in  std_logic;
    EI94  : in  std_logic;
    EI95  : in  std_logic;
    EI96  : in  std_logic;
    EI97  : in  std_logic;
    EI98  : in  std_logic;
    EI99  : in  std_logic;
    EI100 : in  std_logic;
    EI101 : in  std_logic;
    EI102 : in  std_logic;
    EI103 : in  std_logic;
    EI104 : in  std_logic;
    EI105 : in  std_logic;
    EI106 : in  std_logic;
    EI107 : in  std_logic;
    EI108 : in  std_logic;
    EI109 : in  std_logic;
    EI110 : in  std_logic;
    EI111 : in  std_logic;
    EI112 : in  std_logic;
    EI113 : in  std_logic;
    EI114 : in  std_logic;
    EI115 : in  std_logic;
    EI116 : in  std_logic;
    EI117 : in  std_logic;
    EI118 : in  std_logic;
    EI119 : in  std_logic;
    EI120 : in  std_logic;
    EI121 : in  std_logic;
    EI122 : in  std_logic;
    EI123 : in  std_logic;
    EI124 : in  std_logic;
    EI125 : in  std_logic;
    EI126 : in  std_logic;
    EI127 : in  std_logic;
    EI128 : in  std_logic;
    EI129 : in  std_logic;
    EI130 : in  std_logic;
    EI131 : in  std_logic;
    EI132 : in  std_logic;
    EI133 : in  std_logic;
    EI134 : in  std_logic;
    EI135 : in  std_logic;
    EI136 : in  std_logic;
    EI137 : in  std_logic;
    EI138 : in  std_logic;
    EI139 : in  std_logic;
    EI140 : in  std_logic;
    EI141 : in  std_logic;
    EI142 : in  std_logic;
    EI143 : in  std_logic;
    EI144 : in  std_logic;
    EO1   : out std_logic;
    EO2   : out std_logic;
    EO3   : out std_logic;
    EO4   : out std_logic;
    EO5   : out std_logic;
    EO6   : out std_logic;
    EO7   : out std_logic;
    EO8   : out std_logic;
    EO9   : out std_logic;
    EO10  : out std_logic;
    EO11  : out std_logic;
    EO12  : out std_logic;
    EO13  : out std_logic;
    EO14  : out std_logic;
    EO15  : out std_logic;
    EO16  : out std_logic;
    EO17  : out std_logic;
    EO18  : out std_logic;
    EO19  : out std_logic;
    EO20  : out std_logic;
    EO21  : out std_logic;
    EO22  : out std_logic;
    EO23  : out std_logic;
    EO24  : out std_logic;
    EO25  : out std_logic;
    EO26  : out std_logic;
    EO27  : out std_logic;
    EO28  : out std_logic;
    EO29  : out std_logic;
    EO30  : out std_logic;
    EO31  : out std_logic;
    EO32  : out std_logic;
    EO33  : out std_logic;
    EO34  : out std_logic;
    EO35  : out std_logic;
    EO36  : out std_logic;
    EO37  : out std_logic;
    EO38  : out std_logic;
    EO39  : out std_logic;
    EO40  : out std_logic;
    EO41  : out std_logic;
    EO42  : out std_logic;
    EO43  : out std_logic;
    EO44  : out std_logic;
    EO45  : out std_logic;
    EO46  : out std_logic;
    EO47  : out std_logic;
    EO48  : out std_logic;
    EO49  : out std_logic;
    EO50  : out std_logic;
    EO51  : out std_logic;
    EO52  : out std_logic;
    EO53  : out std_logic;
    EO54  : out std_logic;
    EO55  : out std_logic;
    EO56  : out std_logic;
    EO57  : out std_logic;
    EO58  : out std_logic;
    EO59  : out std_logic;
    EO60  : out std_logic;
    EO61  : out std_logic;
    EO62  : out std_logic;
    EO63  : out std_logic;
    EO64  : out std_logic;
    EO65  : out std_logic;
    EO66  : out std_logic;
    EO67  : out std_logic;
    EO68  : out std_logic;
    EO69  : out std_logic;
    EO70  : out std_logic;
    EO71  : out std_logic;
    EO72  : out std_logic;
    EO73  : out std_logic;
    EO74  : out std_logic;
    EO75  : out std_logic;
    EO76  : out std_logic;
    EO77  : out std_logic;
    EO78  : out std_logic;
    EO79  : out std_logic;
    EO80  : out std_logic;
    EO81  : out std_logic;
    EO82  : out std_logic;
    EO83  : out std_logic;
    EO84  : out std_logic;
    EO85  : out std_logic;
    EO86  : out std_logic;
    EO87  : out std_logic;
    EO88  : out std_logic;
    EO89  : out std_logic;
    EO90  : out std_logic;
    EO91  : out std_logic;
    EO92  : out std_logic;
    EO93  : out std_logic;
    EO94  : out std_logic;
    EO95  : out std_logic;
    EO96  : out std_logic;
    EO97  : out std_logic;
    EO98  : out std_logic;
    EO99  : out std_logic;
    EO100 : out std_logic;
    EO101 : out std_logic;
    EO102 : out std_logic;
    EO103 : out std_logic;
    EO104 : out std_logic;
    EO105 : out std_logic;
    EO106 : out std_logic;
    EO107 : out std_logic;
    EO108 : out std_logic;
    EO109 : out std_logic;
    EO110 : out std_logic;
    EO111 : out std_logic;
    EO112 : out std_logic;
    EO113 : out std_logic;
    EO114 : out std_logic;
    EO115 : out std_logic;
    EO116 : out std_logic;
    EO117 : out std_logic;
    EO118 : out std_logic;
    EO119 : out std_logic;
    EO120 : out std_logic;
    EO121 : out std_logic;
    EO122 : out std_logic;
    EO123 : out std_logic;
    EO124 : out std_logic;
    EO125 : out std_logic;
    EO126 : out std_logic;
    EO127 : out std_logic;
    EO128 : out std_logic;
    EO129 : out std_logic;
    EO130 : out std_logic;
    EO131 : out std_logic;
    EO132 : out std_logic;
    EO133 : out std_logic;
    EO134 : out std_logic;
    EO135 : out std_logic;
    EO136 : out std_logic;
    EO137 : out std_logic;
    EO138 : out std_logic;
    EO139 : out std_logic;
    EO140 : out std_logic;
    EO141 : out std_logic;
    EO142 : out std_logic;
    EO143 : out std_logic;
    EO144 : out std_logic;
    FI1   : in  std_logic;
    FI2   : in  std_logic;
    FI3   : in  std_logic;
    FI4   : in  std_logic;
    FI5   : in  std_logic;
    FI6   : in  std_logic;
    FI7   : in  std_logic;
    FI8   : in  std_logic;
    FI9   : in  std_logic;
    FI10  : in  std_logic;
    FI11  : in  std_logic;
    FI12  : in  std_logic;
    FI13  : in  std_logic;
    FI14  : in  std_logic;
    FI15  : in  std_logic;
    FI16  : in  std_logic;
    FI17  : in  std_logic;
    FI18  : in  std_logic;
    FI19  : in  std_logic;
    FI20  : in  std_logic;
    FI21  : in  std_logic;
    FI22  : in  std_logic;
    FI23  : in  std_logic;
    FI24  : in  std_logic;
    FI25  : in  std_logic;
    FI26  : in  std_logic;
    FI27  : in  std_logic;
    FI28  : in  std_logic;
    FI29  : in  std_logic;
    FI30  : in  std_logic;
    FI31  : in  std_logic;
    FI32  : in  std_logic;
    FI33  : in  std_logic;
    FI34  : in  std_logic;
    FI35  : in  std_logic;
    FI36  : in  std_logic;
    FI37  : in  std_logic;
    FI38  : in  std_logic;
    FI39  : in  std_logic;
    FI40  : in  std_logic;
    FI41  : in  std_logic;
    FI42  : in  std_logic;
    FI43  : in  std_logic;
    FI44  : in  std_logic;
    FI45  : in  std_logic;
    FI46  : in  std_logic;
    FI47  : in  std_logic;
    FI48  : in  std_logic;
    FI49  : in  std_logic;
    FI50  : in  std_logic;
    FI51  : in  std_logic;
    FI52  : in  std_logic;
    FI53  : in  std_logic;
    FI54  : in  std_logic;
    FI55  : in  std_logic;
    FI56  : in  std_logic;
    FI57  : in  std_logic;
    FI58  : in  std_logic;
    FI59  : in  std_logic;
    FI60  : in  std_logic;
    FI61  : in  std_logic;
    FI62  : in  std_logic;
    FI63  : in  std_logic;
    FI64  : in  std_logic;
    FI65  : in  std_logic;
    FI66  : in  std_logic;
    FI67  : in  std_logic;
    FI68  : in  std_logic;
    FI69  : in  std_logic;
    FI70  : in  std_logic;
    FI71  : in  std_logic;
    FI72  : in  std_logic;
    FI73  : in  std_logic;
    FI74  : in  std_logic;
    FI75  : in  std_logic;
    FI76  : in  std_logic;
    FI77  : in  std_logic;
    FI78  : in  std_logic;
    FI79  : in  std_logic;
    FI80  : in  std_logic;
    FI81  : in  std_logic;
    FI82  : in  std_logic;
    FI83  : in  std_logic;
    FI84  : in  std_logic;
    FI85  : in  std_logic;
    FI86  : in  std_logic;
    FI87  : in  std_logic;
    FI88  : in  std_logic;
    FI89  : in  std_logic;
    FI90  : in  std_logic;
    FI91  : in  std_logic;
    FI92  : in  std_logic;
    FI93  : in  std_logic;
    FI94  : in  std_logic;
    FI95  : in  std_logic;
    FI96  : in  std_logic;
    FI97  : in  std_logic;
    FI98  : in  std_logic;
    FI99  : in  std_logic;
    FI100 : in  std_logic;
    FI101 : in  std_logic;
    FI102 : in  std_logic;
    FI103 : in  std_logic;
    FI104 : in  std_logic;
    FI105 : in  std_logic;
    FI106 : in  std_logic;
    FI107 : in  std_logic;
    FI108 : in  std_logic;
    FI109 : in  std_logic;
    FI110 : in  std_logic;
    FI111 : in  std_logic;
    FI112 : in  std_logic;
    FI113 : in  std_logic;
    FI114 : in  std_logic;
    FI115 : in  std_logic;
    FI116 : in  std_logic;
    FI117 : in  std_logic;
    FI118 : in  std_logic;
    FI119 : in  std_logic;
    FI120 : in  std_logic;
    FI121 : in  std_logic;
    FI122 : in  std_logic;
    FI123 : in  std_logic;
    FI124 : in  std_logic;
    FI125 : in  std_logic;
    FI126 : in  std_logic;
    FI127 : in  std_logic;
    FI128 : in  std_logic;
    FI129 : in  std_logic;
    FI130 : in  std_logic;
    FI131 : in  std_logic;
    FI132 : in  std_logic;
    FI133 : in  std_logic;
    FI134 : in  std_logic;
    FI135 : in  std_logic;
    FI136 : in  std_logic;
    FI137 : in  std_logic;
    FI138 : in  std_logic;
    FI139 : in  std_logic;
    FI140 : in  std_logic;
    FI141 : in  std_logic;
    FI142 : in  std_logic;
    FI143 : in  std_logic;
    FI144 : in  std_logic;
    FO1   : out std_logic;
    FO2   : out std_logic;
    FO3   : out std_logic;
    FO4   : out std_logic;
    FO5   : out std_logic;
    FO6   : out std_logic;
    FO7   : out std_logic;
    FO8   : out std_logic;
    FO9   : out std_logic;
    FO10  : out std_logic;
    FO11  : out std_logic;
    FO12  : out std_logic;
    FO13  : out std_logic;
    FO14  : out std_logic;
    FO15  : out std_logic;
    FO16  : out std_logic;
    FO17  : out std_logic;
    FO18  : out std_logic;
    FO19  : out std_logic;
    FO20  : out std_logic;
    FO21  : out std_logic;
    FO22  : out std_logic;
    FO23  : out std_logic;
    FO24  : out std_logic;
    FO25  : out std_logic;
    FO26  : out std_logic;
    FO27  : out std_logic;
    FO28  : out std_logic;
    FO29  : out std_logic;
    FO30  : out std_logic;
    FO31  : out std_logic;
    FO32  : out std_logic;
    FO33  : out std_logic;
    FO34  : out std_logic;
    FO35  : out std_logic;
    FO36  : out std_logic;
    FO37  : out std_logic;
    FO38  : out std_logic;
    FO39  : out std_logic;
    FO40  : out std_logic;
    FO41  : out std_logic;
    FO42  : out std_logic;
    FO43  : out std_logic;
    FO44  : out std_logic;
    FO45  : out std_logic;
    FO46  : out std_logic;
    FO47  : out std_logic;
    FO48  : out std_logic;
    FO49  : out std_logic;
    FO50  : out std_logic;
    FO51  : out std_logic;
    FO52  : out std_logic;
    FO53  : out std_logic;
    FO54  : out std_logic;
    FO55  : out std_logic;
    FO56  : out std_logic;
    FO57  : out std_logic;
    FO58  : out std_logic;
    FO59  : out std_logic;
    FO60  : out std_logic;
    FO61  : out std_logic;
    FO62  : out std_logic;
    FO63  : out std_logic;
    FO64  : out std_logic;
    FO65  : out std_logic;
    FO66  : out std_logic;
    FO67  : out std_logic;
    FO68  : out std_logic;
    FO69  : out std_logic;
    FO70  : out std_logic;
    FO71  : out std_logic;
    FO72  : out std_logic;
    FO73  : out std_logic;
    FO74  : out std_logic;
    FO75  : out std_logic;
    FO76  : out std_logic;
    FO77  : out std_logic;
    FO78  : out std_logic;
    FO79  : out std_logic;
    FO80  : out std_logic;
    FO81  : out std_logic;
    FO82  : out std_logic;
    FO83  : out std_logic;
    FO84  : out std_logic;
    FO85  : out std_logic;
    FO86  : out std_logic;
    FO87  : out std_logic;
    FO88  : out std_logic;
    FO89  : out std_logic;
    FO90  : out std_logic;
    FO91  : out std_logic;
    FO92  : out std_logic;
    FO93  : out std_logic;
    FO94  : out std_logic;
    FO95  : out std_logic;
    FO96  : out std_logic;
    FO97  : out std_logic;
    FO98  : out std_logic;
    FO99  : out std_logic;
    FO100 : out std_logic;
    FO101 : out std_logic;
    FO102 : out std_logic;
    FO103 : out std_logic;
    FO104 : out std_logic;
    FO105 : out std_logic;
    FO106 : out std_logic;
    FO107 : out std_logic;
    FO108 : out std_logic;
    FO109 : out std_logic;
    FO110 : out std_logic;
    FO111 : out std_logic;
    FO112 : out std_logic;
    FO113 : out std_logic;
    FO114 : out std_logic;
    FO115 : out std_logic;
    FO116 : out std_logic;
    FO117 : out std_logic;
    FO118 : out std_logic;
    FO119 : out std_logic;
    FO120 : out std_logic;
    FO121 : out std_logic;
    FO122 : out std_logic;
    FO123 : out std_logic;
    FO124 : out std_logic;
    FO125 : out std_logic;
    FO126 : out std_logic;
    FO127 : out std_logic;
    FO128 : out std_logic;
    FO129 : out std_logic;
    FO130 : out std_logic;
    FO131 : out std_logic;
    FO132 : out std_logic;
    FO133 : out std_logic;
    FO134 : out std_logic;
    FO135 : out std_logic;
    FO136 : out std_logic;
    FO137 : out std_logic;
    FO138 : out std_logic;
    FO139 : out std_logic;
    FO140 : out std_logic;
    FO141 : out std_logic;
    FO142 : out std_logic;
    FO143 : out std_logic;
    FO144 : out std_logic
);
end NX_RB;

architecture NX_RTL of NX_RB is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_RB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_RB_WRAP definition                                                              2017/06/18
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_RB_WRAP is
port (
    CK : in  std_logic;
    EI  : in  std_logic_vector(143 downto 0);
    EO  : out std_logic_vector(143 downto 0);
    FI  : in  std_logic_vector(143 downto 0);
    FO  : out std_logic_vector(143 downto 0)
);
end NX_RB_WRAP;

architecture NX_RTL of NX_RB_WRAP is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "WRAPPER";

component NX_RB
port (
    CK   : in  std_logic;
    EI1   : in  std_logic;
    EI2   : in  std_logic;
    EI3   : in  std_logic;
    EI4   : in  std_logic;
    EI5   : in  std_logic;
    EI6   : in  std_logic;
    EI7   : in  std_logic;
    EI8   : in  std_logic;
    EI9   : in  std_logic;
    EI10  : in  std_logic;
    EI11  : in  std_logic;
    EI12  : in  std_logic;
    EI13  : in  std_logic;
    EI14  : in  std_logic;
    EI15  : in  std_logic;
    EI16  : in  std_logic;
    EI17  : in  std_logic;
    EI18  : in  std_logic;
    EI19  : in  std_logic;
    EI20  : in  std_logic;
    EI21  : in  std_logic;
    EI22  : in  std_logic;
    EI23  : in  std_logic;
    EI24  : in  std_logic;
    EI25  : in  std_logic;
    EI26  : in  std_logic;
    EI27  : in  std_logic;
    EI28  : in  std_logic;
    EI29  : in  std_logic;
    EI30  : in  std_logic;
    EI31  : in  std_logic;
    EI32  : in  std_logic;
    EI33  : in  std_logic;
    EI34  : in  std_logic;
    EI35  : in  std_logic;
    EI36  : in  std_logic;
    EI37  : in  std_logic;
    EI38  : in  std_logic;
    EI39  : in  std_logic;
    EI40  : in  std_logic;
    EI41  : in  std_logic;
    EI42  : in  std_logic;
    EI43  : in  std_logic;
    EI44  : in  std_logic;
    EI45  : in  std_logic;
    EI46  : in  std_logic;
    EI47  : in  std_logic;
    EI48  : in  std_logic;
    EI49  : in  std_logic;
    EI50  : in  std_logic;
    EI51  : in  std_logic;
    EI52  : in  std_logic;
    EI53  : in  std_logic;
    EI54  : in  std_logic;
    EI55  : in  std_logic;
    EI56  : in  std_logic;
    EI57  : in  std_logic;
    EI58  : in  std_logic;
    EI59  : in  std_logic;
    EI60  : in  std_logic;
    EI61  : in  std_logic;
    EI62  : in  std_logic;
    EI63  : in  std_logic;
    EI64  : in  std_logic;
    EI65  : in  std_logic;
    EI66  : in  std_logic;
    EI67  : in  std_logic;
    EI68  : in  std_logic;
    EI69  : in  std_logic;
    EI70  : in  std_logic;
    EI71  : in  std_logic;
    EI72  : in  std_logic;
    EI73  : in  std_logic;
    EI74  : in  std_logic;
    EI75  : in  std_logic;
    EI76  : in  std_logic;
    EI77  : in  std_logic;
    EI78  : in  std_logic;
    EI79  : in  std_logic;
    EI80  : in  std_logic;
    EI81  : in  std_logic;
    EI82  : in  std_logic;
    EI83  : in  std_logic;
    EI84  : in  std_logic;
    EI85  : in  std_logic;
    EI86  : in  std_logic;
    EI87  : in  std_logic;
    EI88  : in  std_logic;
    EI89  : in  std_logic;
    EI90  : in  std_logic;
    EI91  : in  std_logic;
    EI92  : in  std_logic;
    EI93  : in  std_logic;
    EI94  : in  std_logic;
    EI95  : in  std_logic;
    EI96  : in  std_logic;
    EI97  : in  std_logic;
    EI98  : in  std_logic;
    EI99  : in  std_logic;
    EI100 : in  std_logic;
    EI101 : in  std_logic;
    EI102 : in  std_logic;
    EI103 : in  std_logic;
    EI104 : in  std_logic;
    EI105 : in  std_logic;
    EI106 : in  std_logic;
    EI107 : in  std_logic;
    EI108 : in  std_logic;
    EI109 : in  std_logic;
    EI110 : in  std_logic;
    EI111 : in  std_logic;
    EI112 : in  std_logic;
    EI113 : in  std_logic;
    EI114 : in  std_logic;
    EI115 : in  std_logic;
    EI116 : in  std_logic;
    EI117 : in  std_logic;
    EI118 : in  std_logic;
    EI119 : in  std_logic;
    EI120 : in  std_logic;
    EI121 : in  std_logic;
    EI122 : in  std_logic;
    EI123 : in  std_logic;
    EI124 : in  std_logic;
    EI125 : in  std_logic;
    EI126 : in  std_logic;
    EI127 : in  std_logic;
    EI128 : in  std_logic;
    EI129 : in  std_logic;
    EI130 : in  std_logic;
    EI131 : in  std_logic;
    EI132 : in  std_logic;
    EI133 : in  std_logic;
    EI134 : in  std_logic;
    EI135 : in  std_logic;
    EI136 : in  std_logic;
    EI137 : in  std_logic;
    EI138 : in  std_logic;
    EI139 : in  std_logic;
    EI140 : in  std_logic;
    EI141 : in  std_logic;
    EI142 : in  std_logic;
    EI143 : in  std_logic;
    EI144 : in  std_logic;
    EO1   : out std_logic;
    EO2   : out std_logic;
    EO3   : out std_logic;
    EO4   : out std_logic;
    EO5   : out std_logic;
    EO6   : out std_logic;
    EO7   : out std_logic;
    EO8   : out std_logic;
    EO9   : out std_logic;
    EO10  : out std_logic;
    EO11  : out std_logic;
    EO12  : out std_logic;
    EO13  : out std_logic;
    EO14  : out std_logic;
    EO15  : out std_logic;
    EO16  : out std_logic;
    EO17  : out std_logic;
    EO18  : out std_logic;
    EO19  : out std_logic;
    EO20  : out std_logic;
    EO21  : out std_logic;
    EO22  : out std_logic;
    EO23  : out std_logic;
    EO24  : out std_logic;
    EO25  : out std_logic;
    EO26  : out std_logic;
    EO27  : out std_logic;
    EO28  : out std_logic;
    EO29  : out std_logic;
    EO30  : out std_logic;
    EO31  : out std_logic;
    EO32  : out std_logic;
    EO33  : out std_logic;
    EO34  : out std_logic;
    EO35  : out std_logic;
    EO36  : out std_logic;
    EO37  : out std_logic;
    EO38  : out std_logic;
    EO39  : out std_logic;
    EO40  : out std_logic;
    EO41  : out std_logic;
    EO42  : out std_logic;
    EO43  : out std_logic;
    EO44  : out std_logic;
    EO45  : out std_logic;
    EO46  : out std_logic;
    EO47  : out std_logic;
    EO48  : out std_logic;
    EO49  : out std_logic;
    EO50  : out std_logic;
    EO51  : out std_logic;
    EO52  : out std_logic;
    EO53  : out std_logic;
    EO54  : out std_logic;
    EO55  : out std_logic;
    EO56  : out std_logic;
    EO57  : out std_logic;
    EO58  : out std_logic;
    EO59  : out std_logic;
    EO60  : out std_logic;
    EO61  : out std_logic;
    EO62  : out std_logic;
    EO63  : out std_logic;
    EO64  : out std_logic;
    EO65  : out std_logic;
    EO66  : out std_logic;
    EO67  : out std_logic;
    EO68  : out std_logic;
    EO69  : out std_logic;
    EO70  : out std_logic;
    EO71  : out std_logic;
    EO72  : out std_logic;
    EO73  : out std_logic;
    EO74  : out std_logic;
    EO75  : out std_logic;
    EO76  : out std_logic;
    EO77  : out std_logic;
    EO78  : out std_logic;
    EO79  : out std_logic;
    EO80  : out std_logic;
    EO81  : out std_logic;
    EO82  : out std_logic;
    EO83  : out std_logic;
    EO84  : out std_logic;
    EO85  : out std_logic;
    EO86  : out std_logic;
    EO87  : out std_logic;
    EO88  : out std_logic;
    EO89  : out std_logic;
    EO90  : out std_logic;
    EO91  : out std_logic;
    EO92  : out std_logic;
    EO93  : out std_logic;
    EO94  : out std_logic;
    EO95  : out std_logic;
    EO96  : out std_logic;
    EO97  : out std_logic;
    EO98  : out std_logic;
    EO99  : out std_logic;
    EO100 : out std_logic;
    EO101 : out std_logic;
    EO102 : out std_logic;
    EO103 : out std_logic;
    EO104 : out std_logic;
    EO105 : out std_logic;
    EO106 : out std_logic;
    EO107 : out std_logic;
    EO108 : out std_logic;
    EO109 : out std_logic;
    EO110 : out std_logic;
    EO111 : out std_logic;
    EO112 : out std_logic;
    EO113 : out std_logic;
    EO114 : out std_logic;
    EO115 : out std_logic;
    EO116 : out std_logic;
    EO117 : out std_logic;
    EO118 : out std_logic;
    EO119 : out std_logic;
    EO120 : out std_logic;
    EO121 : out std_logic;
    EO122 : out std_logic;
    EO123 : out std_logic;
    EO124 : out std_logic;
    EO125 : out std_logic;
    EO126 : out std_logic;
    EO127 : out std_logic;
    EO128 : out std_logic;
    EO129 : out std_logic;
    EO130 : out std_logic;
    EO131 : out std_logic;
    EO132 : out std_logic;
    EO133 : out std_logic;
    EO134 : out std_logic;
    EO135 : out std_logic;
    EO136 : out std_logic;
    EO137 : out std_logic;
    EO138 : out std_logic;
    EO139 : out std_logic;
    EO140 : out std_logic;
    EO141 : out std_logic;
    EO142 : out std_logic;
    EO143 : out std_logic;
    EO144 : out std_logic;
    FI1   : in  std_logic;
    FI2   : in  std_logic;
    FI3   : in  std_logic;
    FI4   : in  std_logic;
    FI5   : in  std_logic;
    FI6   : in  std_logic;
    FI7   : in  std_logic;
    FI8   : in  std_logic;
    FI9   : in  std_logic;
    FI10  : in  std_logic;
    FI11  : in  std_logic;
    FI12  : in  std_logic;
    FI13  : in  std_logic;
    FI14  : in  std_logic;
    FI15  : in  std_logic;
    FI16  : in  std_logic;
    FI17  : in  std_logic;
    FI18  : in  std_logic;
    FI19  : in  std_logic;
    FI20  : in  std_logic;
    FI21  : in  std_logic;
    FI22  : in  std_logic;
    FI23  : in  std_logic;
    FI24  : in  std_logic;
    FI25  : in  std_logic;
    FI26  : in  std_logic;
    FI27  : in  std_logic;
    FI28  : in  std_logic;
    FI29  : in  std_logic;
    FI30  : in  std_logic;
    FI31  : in  std_logic;
    FI32  : in  std_logic;
    FI33  : in  std_logic;
    FI34  : in  std_logic;
    FI35  : in  std_logic;
    FI36  : in  std_logic;
    FI37  : in  std_logic;
    FI38  : in  std_logic;
    FI39  : in  std_logic;
    FI40  : in  std_logic;
    FI41  : in  std_logic;
    FI42  : in  std_logic;
    FI43  : in  std_logic;
    FI44  : in  std_logic;
    FI45  : in  std_logic;
    FI46  : in  std_logic;
    FI47  : in  std_logic;
    FI48  : in  std_logic;
    FI49  : in  std_logic;
    FI50  : in  std_logic;
    FI51  : in  std_logic;
    FI52  : in  std_logic;
    FI53  : in  std_logic;
    FI54  : in  std_logic;
    FI55  : in  std_logic;
    FI56  : in  std_logic;
    FI57  : in  std_logic;
    FI58  : in  std_logic;
    FI59  : in  std_logic;
    FI60  : in  std_logic;
    FI61  : in  std_logic;
    FI62  : in  std_logic;
    FI63  : in  std_logic;
    FI64  : in  std_logic;
    FI65  : in  std_logic;
    FI66  : in  std_logic;
    FI67  : in  std_logic;
    FI68  : in  std_logic;
    FI69  : in  std_logic;
    FI70  : in  std_logic;
    FI71  : in  std_logic;
    FI72  : in  std_logic;
    FI73  : in  std_logic;
    FI74  : in  std_logic;
    FI75  : in  std_logic;
    FI76  : in  std_logic;
    FI77  : in  std_logic;
    FI78  : in  std_logic;
    FI79  : in  std_logic;
    FI80  : in  std_logic;
    FI81  : in  std_logic;
    FI82  : in  std_logic;
    FI83  : in  std_logic;
    FI84  : in  std_logic;
    FI85  : in  std_logic;
    FI86  : in  std_logic;
    FI87  : in  std_logic;
    FI88  : in  std_logic;
    FI89  : in  std_logic;
    FI90  : in  std_logic;
    FI91  : in  std_logic;
    FI92  : in  std_logic;
    FI93  : in  std_logic;
    FI94  : in  std_logic;
    FI95  : in  std_logic;
    FI96  : in  std_logic;
    FI97  : in  std_logic;
    FI98  : in  std_logic;
    FI99  : in  std_logic;
    FI100 : in  std_logic;
    FI101 : in  std_logic;
    FI102 : in  std_logic;
    FI103 : in  std_logic;
    FI104 : in  std_logic;
    FI105 : in  std_logic;
    FI106 : in  std_logic;
    FI107 : in  std_logic;
    FI108 : in  std_logic;
    FI109 : in  std_logic;
    FI110 : in  std_logic;
    FI111 : in  std_logic;
    FI112 : in  std_logic;
    FI113 : in  std_logic;
    FI114 : in  std_logic;
    FI115 : in  std_logic;
    FI116 : in  std_logic;
    FI117 : in  std_logic;
    FI118 : in  std_logic;
    FI119 : in  std_logic;
    FI120 : in  std_logic;
    FI121 : in  std_logic;
    FI122 : in  std_logic;
    FI123 : in  std_logic;
    FI124 : in  std_logic;
    FI125 : in  std_logic;
    FI126 : in  std_logic;
    FI127 : in  std_logic;
    FI128 : in  std_logic;
    FI129 : in  std_logic;
    FI130 : in  std_logic;
    FI131 : in  std_logic;
    FI132 : in  std_logic;
    FI133 : in  std_logic;
    FI134 : in  std_logic;
    FI135 : in  std_logic;
    FI136 : in  std_logic;
    FI137 : in  std_logic;
    FI138 : in  std_logic;
    FI139 : in  std_logic;
    FI140 : in  std_logic;
    FI141 : in  std_logic;
    FI142 : in  std_logic;
    FI143 : in  std_logic;
    FI144 : in  std_logic;
    FO1   : out std_logic;
    FO2   : out std_logic;
    FO3   : out std_logic;
    FO4   : out std_logic;
    FO5   : out std_logic;
    FO6   : out std_logic;
    FO7   : out std_logic;
    FO8   : out std_logic;
    FO9   : out std_logic;
    FO10  : out std_logic;
    FO11  : out std_logic;
    FO12  : out std_logic;
    FO13  : out std_logic;
    FO14  : out std_logic;
    FO15  : out std_logic;
    FO16  : out std_logic;
    FO17  : out std_logic;
    FO18  : out std_logic;
    FO19  : out std_logic;
    FO20  : out std_logic;
    FO21  : out std_logic;
    FO22  : out std_logic;
    FO23  : out std_logic;
    FO24  : out std_logic;
    FO25  : out std_logic;
    FO26  : out std_logic;
    FO27  : out std_logic;
    FO28  : out std_logic;
    FO29  : out std_logic;
    FO30  : out std_logic;
    FO31  : out std_logic;
    FO32  : out std_logic;
    FO33  : out std_logic;
    FO34  : out std_logic;
    FO35  : out std_logic;
    FO36  : out std_logic;
    FO37  : out std_logic;
    FO38  : out std_logic;
    FO39  : out std_logic;
    FO40  : out std_logic;
    FO41  : out std_logic;
    FO42  : out std_logic;
    FO43  : out std_logic;
    FO44  : out std_logic;
    FO45  : out std_logic;
    FO46  : out std_logic;
    FO47  : out std_logic;
    FO48  : out std_logic;
    FO49  : out std_logic;
    FO50  : out std_logic;
    FO51  : out std_logic;
    FO52  : out std_logic;
    FO53  : out std_logic;
    FO54  : out std_logic;
    FO55  : out std_logic;
    FO56  : out std_logic;
    FO57  : out std_logic;
    FO58  : out std_logic;
    FO59  : out std_logic;
    FO60  : out std_logic;
    FO61  : out std_logic;
    FO62  : out std_logic;
    FO63  : out std_logic;
    FO64  : out std_logic;
    FO65  : out std_logic;
    FO66  : out std_logic;
    FO67  : out std_logic;
    FO68  : out std_logic;
    FO69  : out std_logic;
    FO70  : out std_logic;
    FO71  : out std_logic;
    FO72  : out std_logic;
    FO73  : out std_logic;
    FO74  : out std_logic;
    FO75  : out std_logic;
    FO76  : out std_logic;
    FO77  : out std_logic;
    FO78  : out std_logic;
    FO79  : out std_logic;
    FO80  : out std_logic;
    FO81  : out std_logic;
    FO82  : out std_logic;
    FO83  : out std_logic;
    FO84  : out std_logic;
    FO85  : out std_logic;
    FO86  : out std_logic;
    FO87  : out std_logic;
    FO88  : out std_logic;
    FO89  : out std_logic;
    FO90  : out std_logic;
    FO91  : out std_logic;
    FO92  : out std_logic;
    FO93  : out std_logic;
    FO94  : out std_logic;
    FO95  : out std_logic;
    FO96  : out std_logic;
    FO97  : out std_logic;
    FO98  : out std_logic;
    FO99  : out std_logic;
    FO100 : out std_logic;
    FO101 : out std_logic;
    FO102 : out std_logic;
    FO103 : out std_logic;
    FO104 : out std_logic;
    FO105 : out std_logic;
    FO106 : out std_logic;
    FO107 : out std_logic;
    FO108 : out std_logic;
    FO109 : out std_logic;
    FO110 : out std_logic;
    FO111 : out std_logic;
    FO112 : out std_logic;
    FO113 : out std_logic;
    FO114 : out std_logic;
    FO115 : out std_logic;
    FO116 : out std_logic;
    FO117 : out std_logic;
    FO118 : out std_logic;
    FO119 : out std_logic;
    FO120 : out std_logic;
    FO121 : out std_logic;
    FO122 : out std_logic;
    FO123 : out std_logic;
    FO124 : out std_logic;
    FO125 : out std_logic;
    FO126 : out std_logic;
    FO127 : out std_logic;
    FO128 : out std_logic;
    FO129 : out std_logic;
    FO130 : out std_logic;
    FO131 : out std_logic;
    FO132 : out std_logic;
    FO133 : out std_logic;
    FO134 : out std_logic;
    FO135 : out std_logic;
    FO136 : out std_logic;
    FO137 : out std_logic;
    FO138 : out std_logic;
    FO139 : out std_logic;
    FO140 : out std_logic;
    FO141 : out std_logic;
    FO142 : out std_logic;
    FO143 : out std_logic;
    FO144 : out std_logic
);
end component NX_RB;

begin

rb: NX_RB port map (
    CK   => CK,
    EI1   => EI(0),
    EI2   => EI(1),
    EI3   => EI(2),
    EI4   => EI(3),
    EI5   => EI(4),
    EI6   => EI(5),
    EI7   => EI(6),
    EI8   => EI(7),
    EI9   => EI(8),
    EI10  => EI(9),
    EI11  => EI(10),
    EI12  => EI(11),
    EI13  => EI(12),
    EI14  => EI(13),
    EI15  => EI(14),
    EI16  => EI(15),
    EI17  => EI(16),
    EI18  => EI(17),
    EI19  => EI(18),
    EI20  => EI(19),
    EI21  => EI(20),
    EI22  => EI(21),
    EI23  => EI(22),
    EI24  => EI(23),
    EI25  => EI(24),
    EI26  => EI(25),
    EI27  => EI(26),
    EI28  => EI(27),
    EI29  => EI(28),
    EI30  => EI(29),
    EI31  => EI(30),
    EI32  => EI(31),
    EI33  => EI(32),
    EI34  => EI(33),
    EI35  => EI(34),
    EI36  => EI(35),
    EI37  => EI(36),
    EI38  => EI(37),
    EI39  => EI(38),
    EI40  => EI(39),
    EI41  => EI(40),
    EI42  => EI(41),
    EI43  => EI(42),
    EI44  => EI(43),
    EI45  => EI(44),
    EI46  => EI(45),
    EI47  => EI(46),
    EI48  => EI(47),
    EI49  => EI(48),
    EI50  => EI(49),
    EI51  => EI(50),
    EI52  => EI(51),
    EI53  => EI(52),
    EI54  => EI(53),
    EI55  => EI(54),
    EI56  => EI(55),
    EI57  => EI(56),
    EI58  => EI(57),
    EI59  => EI(58),
    EI60  => EI(59),
    EI61  => EI(60),
    EI62  => EI(61),
    EI63  => EI(62),
    EI64  => EI(63),
    EI65  => EI(64),
    EI66  => EI(65),
    EI67  => EI(66),
    EI68  => EI(67),
    EI69  => EI(68),
    EI70  => EI(69),
    EI71  => EI(70),
    EI72  => EI(71),
    EI73  => EI(72),
    EI74  => EI(73),
    EI75  => EI(74),
    EI76  => EI(75),
    EI77  => EI(76),
    EI78  => EI(77),
    EI79  => EI(78),
    EI80  => EI(79),
    EI81  => EI(80),
    EI82  => EI(81),
    EI83  => EI(82),
    EI84  => EI(83),
    EI85  => EI(84),
    EI86  => EI(85),
    EI87  => EI(86),
    EI88  => EI(87),
    EI89  => EI(88),
    EI90  => EI(89),
    EI91  => EI(90),
    EI92  => EI(91),
    EI93  => EI(92),
    EI94  => EI(93),
    EI95  => EI(94),
    EI96  => EI(95),
    EI97  => EI(96),
    EI98  => EI(97),
    EI99  => EI(98),
    EI100 => EI(99),
    EI101 => EI(100),
    EI102 => EI(101),
    EI103 => EI(102),
    EI104 => EI(103),
    EI105 => EI(104),
    EI106 => EI(105),
    EI107 => EI(106),
    EI108 => EI(107),
    EI109 => EI(108),
    EI110 => EI(109),
    EI111 => EI(110),
    EI112 => EI(111),
    EI113 => EI(112),
    EI114 => EI(113),
    EI115 => EI(114),
    EI116 => EI(115),
    EI117 => EI(116),
    EI118 => EI(117),
    EI119 => EI(118),
    EI120 => EI(119),
    EI121 => EI(120),
    EI122 => EI(121),
    EI123 => EI(122),
    EI124 => EI(123),
    EI125 => EI(124),
    EI126 => EI(125),
    EI127 => EI(126),
    EI128 => EI(127),
    EI129 => EI(128),
    EI130 => EI(129),
    EI131 => EI(130),
    EI132 => EI(131),
    EI133 => EI(132),
    EI134 => EI(133),
    EI135 => EI(134),
    EI136 => EI(135),
    EI137 => EI(136),
    EI138 => EI(137),
    EI139 => EI(138),
    EI140 => EI(139),
    EI141 => EI(140),
    EI142 => EI(141),
    EI143 => EI(142),
    EI144 => EI(143),
    EO1   => EO(0),
    EO2   => EO(1),
    EO3   => EO(2),
    EO4   => EO(3),
    EO5   => EO(4),
    EO6   => EO(5),
    EO7   => EO(6),
    EO8   => EO(7),
    EO9   => EO(8),
    EO10  => EO(9),
    EO11  => EO(10),
    EO12  => EO(11),
    EO13  => EO(12),
    EO14  => EO(13),
    EO15  => EO(14),
    EO16  => EO(15),
    EO17  => EO(16),
    EO18  => EO(17),
    EO19  => EO(18),
    EO20  => EO(19),
    EO21  => EO(20),
    EO22  => EO(21),
    EO23  => EO(22),
    EO24  => EO(23),
    EO25  => EO(24),
    EO26  => EO(25),
    EO27  => EO(26),
    EO28  => EO(27),
    EO29  => EO(28),
    EO30  => EO(29),
    EO31  => EO(30),
    EO32  => EO(31),
    EO33  => EO(32),
    EO34  => EO(33),
    EO35  => EO(34),
    EO36  => EO(35),
    EO37  => EO(36),
    EO38  => EO(37),
    EO39  => EO(38),
    EO40  => EO(39),
    EO41  => EO(40),
    EO42  => EO(41),
    EO43  => EO(42),
    EO44  => EO(43),
    EO45  => EO(44),
    EO46  => EO(45),
    EO47  => EO(46),
    EO48  => EO(47),
    EO49  => EO(48),
    EO50  => EO(49),
    EO51  => EO(50),
    EO52  => EO(51),
    EO53  => EO(52),
    EO54  => EO(53),
    EO55  => EO(54),
    EO56  => EO(55),
    EO57  => EO(56),
    EO58  => EO(57),
    EO59  => EO(58),
    EO60  => EO(59),
    EO61  => EO(60),
    EO62  => EO(61),
    EO63  => EO(62),
    EO64  => EO(63),
    EO65  => EO(64),
    EO66  => EO(65),
    EO67  => EO(66),
    EO68  => EO(67),
    EO69  => EO(68),
    EO70  => EO(69),
    EO71  => EO(70),
    EO72  => EO(71),
    EO73  => EO(72),
    EO74  => EO(73),
    EO75  => EO(74),
    EO76  => EO(75),
    EO77  => EO(76),
    EO78  => EO(77),
    EO79  => EO(78),
    EO80  => EO(79),
    EO81  => EO(80),
    EO82  => EO(81),
    EO83  => EO(82),
    EO84  => EO(83),
    EO85  => EO(84),
    EO86  => EO(85),
    EO87  => EO(86),
    EO88  => EO(87),
    EO89  => EO(88),
    EO90  => EO(89),
    EO91  => EO(90),
    EO92  => EO(91),
    EO93  => EO(92),
    EO94  => EO(93),
    EO95  => EO(94),
    EO96  => EO(95),
    EO97  => EO(96),
    EO98  => EO(97),
    EO99  => EO(98),
    EO100 => EO(99),
    EO101 => EO(100),
    EO102 => EO(101),
    EO103 => EO(102),
    EO104 => EO(103),
    EO105 => EO(104),
    EO106 => EO(105),
    EO107 => EO(106),
    EO108 => EO(107),
    EO109 => EO(108),
    EO110 => EO(109),
    EO111 => EO(110),
    EO112 => EO(111),
    EO113 => EO(112),
    EO114 => EO(113),
    EO115 => EO(114),
    EO116 => EO(115),
    EO117 => EO(116),
    EO118 => EO(117),
    EO119 => EO(118),
    EO120 => EO(119),
    EO121 => EO(120),
    EO122 => EO(121),
    EO123 => EO(122),
    EO124 => EO(123),
    EO125 => EO(124),
    EO126 => EO(125),
    EO127 => EO(126),
    EO128 => EO(127),
    EO129 => EO(128),
    EO130 => EO(129),
    EO131 => EO(130),
    EO132 => EO(131),
    EO133 => EO(132),
    EO134 => EO(133),
    EO135 => EO(134),
    EO136 => EO(135),
    EO137 => EO(136),
    EO138 => EO(137),
    EO139 => EO(138),
    EO140 => EO(139),
    EO141 => EO(140),
    EO142 => EO(141),
    EO143 => EO(142),
    EO144 => EO(143),
    FI1   => FI(0),
    FI2   => FI(1),
    FI3   => FI(2),
    FI4   => FI(3),
    FI5   => FI(4),
    FI6   => FI(5),
    FI7   => FI(6),
    FI8   => FI(7),
    FI9   => FI(8),
    FI10  => FI(9),
    FI11  => FI(10),
    FI12  => FI(11),
    FI13  => FI(12),
    FI14  => FI(13),
    FI15  => FI(14),
    FI16  => FI(15),
    FI17  => FI(16),
    FI18  => FI(17),
    FI19  => FI(18),
    FI20  => FI(19),
    FI21  => FI(20),
    FI22  => FI(21),
    FI23  => FI(22),
    FI24  => FI(23),
    FI25  => FI(24),
    FI26  => FI(25),
    FI27  => FI(26),
    FI28  => FI(27),
    FI29  => FI(28),
    FI30  => FI(29),
    FI31  => FI(30),
    FI32  => FI(31),
    FI33  => FI(32),
    FI34  => FI(33),
    FI35  => FI(34),
    FI36  => FI(35),
    FI37  => FI(36),
    FI38  => FI(37),
    FI39  => FI(38),
    FI40  => FI(39),
    FI41  => FI(40),
    FI42  => FI(41),
    FI43  => FI(42),
    FI44  => FI(43),
    FI45  => FI(44),
    FI46  => FI(45),
    FI47  => FI(46),
    FI48  => FI(47),
    FI49  => FI(48),
    FI50  => FI(49),
    FI51  => FI(50),
    FI52  => FI(51),
    FI53  => FI(52),
    FI54  => FI(53),
    FI55  => FI(54),
    FI56  => FI(55),
    FI57  => FI(56),
    FI58  => FI(57),
    FI59  => FI(58),
    FI60  => FI(59),
    FI61  => FI(60),
    FI62  => FI(61),
    FI63  => FI(62),
    FI64  => FI(63),
    FI65  => FI(64),
    FI66  => FI(65),
    FI67  => FI(66),
    FI68  => FI(67),
    FI69  => FI(68),
    FI70  => FI(69),
    FI71  => FI(70),
    FI72  => FI(71),
    FI73  => FI(72),
    FI74  => FI(73),
    FI75  => FI(74),
    FI76  => FI(75),
    FI77  => FI(76),
    FI78  => FI(77),
    FI79  => FI(78),
    FI80  => FI(79),
    FI81  => FI(80),
    FI82  => FI(81),
    FI83  => FI(82),
    FI84  => FI(83),
    FI85  => FI(84),
    FI86  => FI(85),
    FI87  => FI(86),
    FI88  => FI(87),
    FI89  => FI(88),
    FI90  => FI(89),
    FI91  => FI(90),
    FI92  => FI(91),
    FI93  => FI(92),
    FI94  => FI(93),
    FI95  => FI(94),
    FI96  => FI(95),
    FI97  => FI(96),
    FI98  => FI(97),
    FI99  => FI(98),
    FI100 => FI(99),
    FI101 => FI(100),
    FI102 => FI(101),
    FI103 => FI(102),
    FI104 => FI(103),
    FI105 => FI(104),
    FI106 => FI(105),
    FI107 => FI(106),
    FI108 => FI(107),
    FI109 => FI(108),
    FI110 => FI(109),
    FI111 => FI(110),
    FI112 => FI(111),
    FI113 => FI(112),
    FI114 => FI(113),
    FI115 => FI(114),
    FI116 => FI(115),
    FI117 => FI(116),
    FI118 => FI(117),
    FI119 => FI(118),
    FI120 => FI(119),
    FI121 => FI(120),
    FI122 => FI(121),
    FI123 => FI(122),
    FI124 => FI(123),
    FI125 => FI(124),
    FI126 => FI(125),
    FI127 => FI(126),
    FI128 => FI(127),
    FI129 => FI(128),
    FI130 => FI(129),
    FI131 => FI(130),
    FI132 => FI(131),
    FI133 => FI(132),
    FI134 => FI(133),
    FI135 => FI(134),
    FI136 => FI(135),
    FI137 => FI(136),
    FI138 => FI(137),
    FI139 => FI(138),
    FI140 => FI(139),
    FI141 => FI(140),
    FI142 => FI(141),
    FI143 => FI(142),
    FI144 => FI(143),
    FO1   => FO(0),
    FO2   => FO(1),
    FO3   => FO(2),
    FO4   => FO(3),
    FO5   => FO(4),
    FO6   => FO(5),
    FO7   => FO(6),
    FO8   => FO(7),
    FO9   => FO(8),
    FO10  => FO(9),
    FO11  => FO(10),
    FO12  => FO(11),
    FO13  => FO(12),
    FO14  => FO(13),
    FO15  => FO(14),
    FO16  => FO(15),
    FO17  => FO(16),
    FO18  => FO(17),
    FO19  => FO(18),
    FO20  => FO(19),
    FO21  => FO(20),
    FO22  => FO(21),
    FO23  => FO(22),
    FO24  => FO(23),
    FO25  => FO(24),
    FO26  => FO(25),
    FO27  => FO(26),
    FO28  => FO(27),
    FO29  => FO(28),
    FO30  => FO(29),
    FO31  => FO(30),
    FO32  => FO(31),
    FO33  => FO(32),
    FO34  => FO(33),
    FO35  => FO(34),
    FO36  => FO(35),
    FO37  => FO(36),
    FO38  => FO(37),
    FO39  => FO(38),
    FO40  => FO(39),
    FO41  => FO(40),
    FO42  => FO(41),
    FO43  => FO(42),
    FO44  => FO(43),
    FO45  => FO(44),
    FO46  => FO(45),
    FO47  => FO(46),
    FO48  => FO(47),
    FO49  => FO(48),
    FO50  => FO(49),
    FO51  => FO(50),
    FO52  => FO(51),
    FO53  => FO(52),
    FO54  => FO(53),
    FO55  => FO(54),
    FO56  => FO(55),
    FO57  => FO(56),
    FO58  => FO(57),
    FO59  => FO(58),
    FO60  => FO(59),
    FO61  => FO(60),
    FO62  => FO(61),
    FO63  => FO(62),
    FO64  => FO(63),
    FO65  => FO(64),
    FO66  => FO(65),
    FO67  => FO(66),
    FO68  => FO(67),
    FO69  => FO(68),
    FO70  => FO(69),
    FO71  => FO(70),
    FO72  => FO(71),
    FO73  => FO(72),
    FO74  => FO(73),
    FO75  => FO(74),
    FO76  => FO(75),
    FO77  => FO(76),
    FO78  => FO(77),
    FO79  => FO(78),
    FO80  => FO(79),
    FO81  => FO(80),
    FO82  => FO(81),
    FO83  => FO(82),
    FO84  => FO(83),
    FO85  => FO(84),
    FO86  => FO(85),
    FO87  => FO(86),
    FO88  => FO(87),
    FO89  => FO(88),
    FO90  => FO(89),
    FO91  => FO(90),
    FO92  => FO(91),
    FO93  => FO(92),
    FO94  => FO(93),
    FO95  => FO(94),
    FO96  => FO(95),
    FO97  => FO(96),
    FO98  => FO(97),
    FO99  => FO(98),
    FO100 => FO(99),
    FO101 => FO(100),
    FO102 => FO(101),
    FO103 => FO(102),
    FO104 => FO(103),
    FO105 => FO(104),
    FO106 => FO(105),
    FO107 => FO(106),
    FO108 => FO(107),
    FO109 => FO(108),
    FO110 => FO(109),
    FO111 => FO(110),
    FO112 => FO(111),
    FO113 => FO(112),
    FO114 => FO(113),
    FO115 => FO(114),
    FO116 => FO(115),
    FO117 => FO(116),
    FO118 => FO(117),
    FO119 => FO(118),
    FO120 => FO(119),
    FO121 => FO(120),
    FO122 => FO(121),
    FO123 => FO(122),
    FO124 => FO(123),
    FO125 => FO(124),
    FO126 => FO(125),
    FO127 => FO(126),
    FO128 => FO(127),
    FO129 => FO(128),
    FO130 => FO(129),
    FO131 => FO(130),
    FO132 => FO(131),
    FO133 => FO(132),
    FO134 => FO(133),
    FO135 => FO(134),
    FO136 => FO(135),
    FO137 => FO(136),
    FO138 => FO(137),
    FO139 => FO(138),
    FO140 => FO(139),
    FO141 => FO(140),
    FO142 => FO(141),
    FO143 => FO(142),
    FO144 => FO(143)
);
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
tIeK4gK/L8ocSYaQqCBTLZmq4gFsQNV8f9ALFXfjDlUiITWJcUwMILCMQgmNPanV
7MlZC5f4yT6kqGX2LbYblXN99QjFzlzdCi6mIZcuvOFjWQDvKmpqW767/FRlbfAP
+649jVZlu2BL5qBz0i6tLuD7GsySsEVW56+q2pjWnpDiZvy/Og+F1DxjjT6bcl2D
sRNF9wBxO+jpZA3eo5524f5fNwfLCjFJ7z8XJ8t+wMXrod/cAfwFmwfgK89nmSLW
CxGedwMQT1ZRKUsUa/eFwdO06A0PxT2o8l9xhOCfxDwrNgZS/5uTyg5eIiI5Ms0x
vJ7QbIk0Wd1M0T34zCxGnQ==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 7520)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_CKB definition                                                                  2018/06/19
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

entity NX_CKB is
port (
    I : in  std_logic;
    O : out std_logic
);
end NX_CKB;

architecture NX_RTL of NX_CKB is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CKB";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
fih/ngumK528eoQERBdSJKVx4W/c0TG3TUPOjpxnKTxxi8e2QTcIGmmkZnSTralH
w9HbmdmzWTvdaTHOoefS8os2v/RR3lK9GpCuRNUUftg0yaFWmyDWoGfFukw5lGTa
ZFFowmv8WlbZcNYfXehlcHMic31yzipLhtOvzje8pk4PMoQDJZKlQX7RMaRFauWr
E7g2rkFEQuZppHnGXKIu9EN99tjiBD2MljnvdQM620BajdCYXZrjVgJw0ryPw7nZ
MA+flE9FHuQP1kvIHug8wsNPGyiTcnYrq+xKu47Rkro8WutTGHRR7K7e50LE05ZI
2j2myLYJKO37NJHAEAOnyw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 240)
`protect data_block
5+zLXJcsNG6ptT0MJ+e1Sgg9Pep2GyVjEosXjawmA72QlF2pyAdbsVLFuMQMSawn
4FuZBQBkZ5+LBDRYZkEf0reoF02JgyMGC98+N6i1muyTHiKoS5XX16FdyEbyA24w
PXkgCITWOWLrAw+P3oN/qHWO2a18IIUImKwCFeoYVycfJQstMJRryLBgwuF9Fozj
RODMOqVOOR1RY3pJ5kpgSBy4JAqdOvJIkMYSdxgb4dpc4KjVmm0AYtptzo5FInJ9
uHqV7qtbXPPMbmjLU6TbQkYgDIhSdqHltvwHyum717vJEIzzGbkDEn+SQ/Fa83jZ
`protect end_protected

-- =================================================================================================
--   NX_CORTEX_R5 definition                                                            2017/09/19
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.all;
use IEEE.STD_LOGIC_arith.ALL;
use IEEE.STD_LOGIC_unsigned.ALL;

entity NX_CORTEX_R5 is
port (
    CK  : in  std_logic;

    DI1 : in  std_logic;
    DI2 : in  std_logic;
    DI3 : in  std_logic;
    DI4 : in  std_logic;
    DI5 : in  std_logic;
    DI6 : in  std_logic;
    DI7 : in  std_logic;
    DI8 : in  std_logic;

    I1  : in  std_logic;
    I2  : in  std_logic;
    I3  : in  std_logic;
    I4  : in  std_logic;
    I5  : in  std_logic;
    I6  : in  std_logic;
    I7  : in  std_logic;
    I8  : in  std_logic;
    I9  : in  std_logic;
    I10 : in  std_logic;
    I11 : in  std_logic;
    I12 : in  std_logic;
    I13 : in  std_logic;
    I14 : in  std_logic;
    I15 : in  std_logic;
    I16 : in  std_logic;
    I17 : in  std_logic;
    I18 : in  std_logic;
    I19 : in  std_logic;
    I20 : in  std_logic;
    I21 : in  std_logic;
    I22 : in  std_logic;
    I23 : in  std_logic;
    I24 : in  std_logic;
    I25 : in  std_logic;
    I26 : in  std_logic;
    I27 : in  std_logic;
    I28 : in  std_logic;
    I29 : in  std_logic;
    I30 : in  std_logic;
    I31 : in  std_logic;
    I32 : in  std_logic;
    I33 : in  std_logic;
    I34 : in  std_logic;
    I35 : in  std_logic;
    I36 : in  std_logic;
    I37 : in  std_logic;
    I38 : in  std_logic;
    I39 : in  std_logic;
    I40 : in  std_logic;
    I41 : in  std_logic;
    I42 : in  std_logic;
    I43 : in  std_logic;
    I44 : in  std_logic;
    I45 : in  std_logic;
    I46 : in  std_logic;
    I47 : in  std_logic;
    I48 : in  std_logic;
    I49 : in  std_logic;
    I50 : in  std_logic;
    I51 : in  std_logic;
    I52 : in  std_logic;
    I53 : in  std_logic;
    I54 : in  std_logic;
    I55 : in  std_logic;
    I56 : in  std_logic;
    I57 : in  std_logic;
    I58 : in  std_logic;
    I59 : in  std_logic;
    I60 : in  std_logic;
    I61 : in  std_logic;
    I62 : in  std_logic;
    I63 : in  std_logic;
    I64 : in  std_logic;
    I65 : in  std_logic;
    I66 : in  std_logic;
    I67 : in  std_logic;
    I68 : in  std_logic;
    I69 : in  std_logic;
    I70 : in  std_logic;
    I71 : in  std_logic;
    I72 : in  std_logic;
    I73 : in  std_logic;
    I74 : in  std_logic;
    I75 : in  std_logic;
    I76 : in  std_logic;
    I77 : in  std_logic;
    I78 : in  std_logic;
    I79 : in  std_logic;
    I80 : in  std_logic;
    I81 : in  std_logic;
    I82 : in  std_logic;
    I83 : in  std_logic;
    I84 : in  std_logic;
    I85 : in  std_logic;
    I86 : in  std_logic;
    I87 : in  std_logic;
    I88 : in  std_logic;
    I89 : in  std_logic;
    I90 : in  std_logic;
    I91 : in  std_logic;
    I92 : in  std_logic;
    I93 : in  std_logic;
    I94 : in  std_logic;
    I95 : in  std_logic;
    I96 : in  std_logic;
    I97 : in  std_logic;
    I98 : in  std_logic;
    I99 : in  std_logic;
    I100: in  std_logic;
    I101: in  std_logic;
    I102: in  std_logic;
    I103: in  std_logic;
    I104: in  std_logic;
    I105: in  std_logic;
    I106: in  std_logic;
    I107: in  std_logic;
    I108: in  std_logic;
    I109: in  std_logic;
    I110: in  std_logic;
    I111: in  std_logic;
    I112: in  std_logic;
    I113: in  std_logic;
    I114: in  std_logic;
    I115: in  std_logic;
    I116: in  std_logic;
    I117: in  std_logic;
    I118: in  std_logic;
    I119: in  std_logic;
    I120: in  std_logic;
    I121: in  std_logic;
    I122: in  std_logic;
    I123: in  std_logic;
    I124: in  std_logic;
    I125: in  std_logic;
    I126: in  std_logic;
    I127: in  std_logic;
    I128: in  std_logic;
    I129: in  std_logic;
    I130: in  std_logic;
    I131: in  std_logic;
    I132: in  std_logic;
    I133: in  std_logic;
    I134: in  std_logic;
    I135: in  std_logic;
    I136: in  std_logic;
    I137: in  std_logic;
    I138: in  std_logic;
    I139: in  std_logic;
    I140: in  std_logic;
    I141: in  std_logic;
    I142: in  std_logic;
    I143: in  std_logic;
    I144: in  std_logic;
    I145: in  std_logic;
    I146: in  std_logic;
    I147: in  std_logic;
    I148: in  std_logic;
    I149: in  std_logic;
    I150: in  std_logic;
    I151: in  std_logic;
    I152: in  std_logic;
    I153: in  std_logic;
    I154: in  std_logic;
    I155: in  std_logic;
    I156: in  std_logic;
    I157: in  std_logic;
    I158: in  std_logic;
    I159: in  std_logic;
    I160: in  std_logic;
    I161: in  std_logic;
    I162: in  std_logic;
    I163: in  std_logic;
    I164: in  std_logic;
    I165: in  std_logic;
    I166: in  std_logic;
    I167: in  std_logic;
    I168: in  std_logic;
    I169: in  std_logic;
    I170: in  std_logic;
    I171: in  std_logic;
    I172: in  std_logic;
    I173: in  std_logic;
    I174: in  std_logic;
    I175: in  std_logic;
    I176: in  std_logic;
    I177: in  std_logic;
    I178: in  std_logic;
    I179: in  std_logic;
    I180: in  std_logic;
    I181: in  std_logic;
    I182: in  std_logic;
    I183: in  std_logic;
    I184: in  std_logic;
    I185: in  std_logic;
    I186: in  std_logic;
    I187: in  std_logic;
    I188: in  std_logic;
    I189: in  std_logic;
    I190: in  std_logic;
    I191: in  std_logic;
    I192: in  std_logic;
    I193: in  std_logic;
    I194: in  std_logic;
    I195: in  std_logic;
    I196: in  std_logic;
    I197: in  std_logic;
    I198: in  std_logic;
    I199: in  std_logic;
    I200: in  std_logic;
    I201: in  std_logic;
    I202: in  std_logic;
    I203: in  std_logic;
    I204: in  std_logic;
    I205: in  std_logic;
    I206: in  std_logic;
    I207: in  std_logic;
    I208: in  std_logic;
    I209: in  std_logic;
    I210: in  std_logic;
    I211: in  std_logic;
    I212: in  std_logic;
    I213: in  std_logic;
    I214: in  std_logic;
    I215: in  std_logic;
    I216: in  std_logic;
    I217: in  std_logic;
    I218: in  std_logic;
    I219: in  std_logic;
    I220: in  std_logic;
    I221: in  std_logic;
    I222: in  std_logic;
    I223: in  std_logic;
    I224: in  std_logic;
    I225: in  std_logic;
    I226: in  std_logic;
    I227: in  std_logic;
    I228: in  std_logic;
    I229: in  std_logic;
    I230: in  std_logic;
    I231: in  std_logic;
    I232: in  std_logic;
    I233: in  std_logic;
    I234: in  std_logic;
    I235: in  std_logic;
    I236: in  std_logic;
    I237: in  std_logic;
    I238: in  std_logic;
    I239: in  std_logic;
    I240: in  std_logic;
    I241: in  std_logic;
    I242: in  std_logic;
    I243: in  std_logic;
    I244: in  std_logic;
    I245: in  std_logic;
    I246: in  std_logic;
    I247: in  std_logic;
    I248: in  std_logic;
    I249: in  std_logic;
    I250: in  std_logic;
    I251: in  std_logic;
    I252: in  std_logic;
    I253: in  std_logic;
    I254: in  std_logic;
    I255: in  std_logic;
    I256: in  std_logic;
    I257: in  std_logic;
    I258: in  std_logic;
    I259: in  std_logic;
    I260: in  std_logic;
    I261: in  std_logic;
    I262: in  std_logic;
    I263: in  std_logic;
    I264: in  std_logic;
    I265: in  std_logic;
    I266: in  std_logic;
    I267: in  std_logic;
    I268: in  std_logic;
    I269: in  std_logic;
    I270: in  std_logic;
    I271: in  std_logic;
    I272: in  std_logic;
    I273: in  std_logic;
    I274: in  std_logic;
    I275: in  std_logic;
    I276: in  std_logic;
    I277: in  std_logic;
    I278: in  std_logic;
    I279: in  std_logic;
    I280: in  std_logic;
    I281: in  std_logic;
    I282: in  std_logic;
    I283: in  std_logic;
    I284: in  std_logic;
    I285: in  std_logic;
    I286: in  std_logic;
    I287: in  std_logic;
    I288: in  std_logic;
    I289: in  std_logic;
    I290: in  std_logic;
    I291: in  std_logic;
    I292: in  std_logic;
    I293: in  std_logic;
    I294: in  std_logic;
    I295: in  std_logic;
    I296: in  std_logic;
    I297: in  std_logic;
    I298: in  std_logic;
    I299: in  std_logic;
    I300: in  std_logic;
    I301: in  std_logic;
    I302: in  std_logic;
    I303: in  std_logic;
    I304: in  std_logic;
    I305: in  std_logic;
    I306: in  std_logic;
    I307: in  std_logic;
    I308: in  std_logic;
    I309: in  std_logic;
    I310: in  std_logic;
    I311: in  std_logic;
    I312: in  std_logic;
    I313: in  std_logic;
    I314: in  std_logic;
    I315: in  std_logic;
    I316: in  std_logic;
    I317: in  std_logic;
    I318: in  std_logic;
    I319: in  std_logic;
    I320: in  std_logic;
    I321: in  std_logic;
    I322: in  std_logic;
    I323: in  std_logic;
    I324: in  std_logic;
    I325: in  std_logic;
    I326: in  std_logic;
    I327: in  std_logic;
    I328: in  std_logic;
    I329: in  std_logic;
    I330: in  std_logic;
    I331: in  std_logic;
    I332: in  std_logic;
    I333: in  std_logic;
    I334: in  std_logic;
    I335: in  std_logic;
    I336: in  std_logic;
    I337: in  std_logic;
    I338: in  std_logic;
    I339: in  std_logic;
    I340: in  std_logic;
    I341: in  std_logic;
    I342: in  std_logic;
    I343: in  std_logic;
    I344: in  std_logic;
    I345: in  std_logic;
    I346: in  std_logic;
    I347: in  std_logic;

    DO1 : out std_logic;
    DO2 : out std_logic;
    DO3 : out std_logic;
    DO4 : out std_logic;
    DO5 : out std_logic;
    DO6 : out std_logic;
    DO7 : out std_logic;
    DO8 : out std_logic;

    O1  : out std_logic;
    O2  : out std_logic;
    O3  : out std_logic;
    O4  : out std_logic;
    O5  : out std_logic;
    O6  : out std_logic;
    O7  : out std_logic;
    O8  : out std_logic;
    O9  : out std_logic;
    O10 : out std_logic;
    O11 : out std_logic;
    O12 : out std_logic;
    O13 : out std_logic;
    O14 : out std_logic;
    O15 : out std_logic;
    O16 : out std_logic;
    O17 : out std_logic;
    O18 : out std_logic;
    O19 : out std_logic;
    O20 : out std_logic;
    O21 : out std_logic;
    O22 : out std_logic;
    O23 : out std_logic;
    O24 : out std_logic;
    O25 : out std_logic;
    O26 : out std_logic;
    O27 : out std_logic;
    O28 : out std_logic;
    O29 : out std_logic;
    O30 : out std_logic;
    O31 : out std_logic;
    O32 : out std_logic;
    O33 : out std_logic;
    O34 : out std_logic;
    O35 : out std_logic;
    O36 : out std_logic;
    O37 : out std_logic;
    O38 : out std_logic;
    O39 : out std_logic;
    O40 : out std_logic;
    O41 : out std_logic;
    O42 : out std_logic;
    O43 : out std_logic;
    O44 : out std_logic;
    O45 : out std_logic;
    O46 : out std_logic;
    O47 : out std_logic;
    O48 : out std_logic;
    O49 : out std_logic;
    O50 : out std_logic;
    O51 : out std_logic;
    O52 : out std_logic;
    O53 : out std_logic;
    O54 : out std_logic;
    O55 : out std_logic;
    O56 : out std_logic;
    O57 : out std_logic;
    O58 : out std_logic;
    O59 : out std_logic;
    O60 : out std_logic;
    O61 : out std_logic;
    O62 : out std_logic;
    O63 : out std_logic;
    O64 : out std_logic;
    O65 : out std_logic;
    O66 : out std_logic;
    O67 : out std_logic;
    O68 : out std_logic;
    O69 : out std_logic;
    O70 : out std_logic;
    O71 : out std_logic;
    O72 : out std_logic;
    O73 : out std_logic;
    O74 : out std_logic;
    O75 : out std_logic;
    O76 : out std_logic;
    O77 : out std_logic;
    O78 : out std_logic;
    O79 : out std_logic;
    O80 : out std_logic;
    O81 : out std_logic;
    O82 : out std_logic;
    O83 : out std_logic;
    O84 : out std_logic;
    O85 : out std_logic;
    O86 : out std_logic;
    O87 : out std_logic;
    O88 : out std_logic;
    O89 : out std_logic;
    O90 : out std_logic;
    O91 : out std_logic;
    O92 : out std_logic;
    O93 : out std_logic;
    O94 : out std_logic;
    O95 : out std_logic;
    O96 : out std_logic;
    O97 : out std_logic;
    O98 : out std_logic;
    O99 : out std_logic;
    O100: out std_logic;
    O101: out std_logic;
    O102: out std_logic;
    O103: out std_logic;
    O104: out std_logic;
    O105: out std_logic;
    O106: out std_logic;
    O107: out std_logic;
    O108: out std_logic;
    O109: out std_logic;
    O110: out std_logic;
    O111: out std_logic;
    O112: out std_logic;
    O113: out std_logic;
    O114: out std_logic;
    O115: out std_logic;
    O116: out std_logic;
    O117: out std_logic;
    O118: out std_logic;
    O119: out std_logic;
    O120: out std_logic;
    O121: out std_logic;
    O122: out std_logic;
    O123: out std_logic;
    O124: out std_logic;
    O125: out std_logic;
    O126: out std_logic;
    O127: out std_logic;
    O128: out std_logic;
    O129: out std_logic;
    O130: out std_logic;
    O131: out std_logic;
    O132: out std_logic;
    O133: out std_logic;
    O134: out std_logic;
    O135: out std_logic;
    O136: out std_logic;
    O137: out std_logic;
    O138: out std_logic;
    O139: out std_logic;
    O140: out std_logic;
    O141: out std_logic;
    O142: out std_logic;
    O143: out std_logic;
    O144: out std_logic;
    O145: out std_logic;
    O146: out std_logic;
    O147: out std_logic;
    O148: out std_logic;
    O149: out std_logic;
    O150: out std_logic;
    O151: out std_logic;
    O152: out std_logic;
    O153: out std_logic;
    O154: out std_logic;
    O155: out std_logic;
    O156: out std_logic;
    O157: out std_logic;
    O158: out std_logic;
    O159: out std_logic;
    O160: out std_logic;
    O161: out std_logic;
    O162: out std_logic;
    O163: out std_logic;
    O164: out std_logic;
    O165: out std_logic;
    O166: out std_logic;
    O167: out std_logic;
    O168: out std_logic;
    O169: out std_logic;
    O170: out std_logic;
    O171: out std_logic;
    O172: out std_logic;
    O173: out std_logic;
    O174: out std_logic;
    O175: out std_logic;
    O176: out std_logic;
    O177: out std_logic;
    O178: out std_logic;
    O179: out std_logic;
    O180: out std_logic;
    O181: out std_logic;
    O182: out std_logic;
    O183: out std_logic;
    O184: out std_logic;
    O185: out std_logic;
    O186: out std_logic;
    O187: out std_logic;
    O188: out std_logic;
    O189: out std_logic;
    O190: out std_logic;
    O191: out std_logic;
    O192: out std_logic;
    O193: out std_logic;
    O194: out std_logic;
    O195: out std_logic;
    O196: out std_logic;
    O197: out std_logic;
    O198: out std_logic;
    O199: out std_logic;
    O200: out std_logic;
    O201: out std_logic;
    O202: out std_logic;
    O203: out std_logic;
    O204: out std_logic;
    O205: out std_logic;
    O206: out std_logic;
    O207: out std_logic;
    O208: out std_logic;
    O209: out std_logic;
    O210: out std_logic;
    O211: out std_logic;
    O212: out std_logic;
    O213: out std_logic;
    O214: out std_logic;
    O215: out std_logic;
    O216: out std_logic;
    O217: out std_logic;
    O218: out std_logic;
    O219: out std_logic;
    O220: out std_logic;
    O221: out std_logic;
    O222: out std_logic;
    O223: out std_logic;
    O224: out std_logic;
    O225: out std_logic;
    O226: out std_logic;
    O227: out std_logic;
    O228: out std_logic;
    O229: out std_logic;
    O230: out std_logic;
    O231: out std_logic;
    O232: out std_logic;
    O233: out std_logic;
    O234: out std_logic;
    O235: out std_logic;
    O236: out std_logic;
    O237: out std_logic;
    O238: out std_logic;
    O239: out std_logic;
    O240: out std_logic;
    O241: out std_logic;
    O242: out std_logic;
    O243: out std_logic;
    O244: out std_logic;
    O245: out std_logic;
    O246: out std_logic;
    O247: out std_logic;
    O248: out std_logic;
    O249: out std_logic;
    O250: out std_logic;
    O251: out std_logic;
    O252: out std_logic;
    O253: out std_logic;
    O254: out std_logic;
    O255: out std_logic;
    O256: out std_logic;
    O257: out std_logic;
    O258: out std_logic;
    O259: out std_logic;
    O260: out std_logic;
    O261: out std_logic;
    O262: out std_logic;
    O263: out std_logic;
    O264: out std_logic;
    O265: out std_logic;
    O266: out std_logic;
    O267: out std_logic;
    O268: out std_logic;
    O269: out std_logic;
    O270: out std_logic;
    O271: out std_logic;
    O272: out std_logic;
    O273: out std_logic;
    O274: out std_logic;
    O275: out std_logic;
    O276: out std_logic;
    O277: out std_logic;
    O278: out std_logic;
    O279: out std_logic;
    O280: out std_logic;
    O281: out std_logic;
    O282: out std_logic;
    O283: out std_logic;
    O284: out std_logic;
    O285: out std_logic;
    O286: out std_logic;
    O287: out std_logic;
    O288: out std_logic;
    O289: out std_logic;
    O290: out std_logic;
    O291: out std_logic;
    O292: out std_logic;
    O293: out std_logic;
    O294: out std_logic;
    O295: out std_logic;
    O296: out std_logic;
    O297: out std_logic;
    O298: out std_logic;
    O299: out std_logic;
    O300: out std_logic;
    O301: out std_logic;
    O302: out std_logic;
    O303: out std_logic;
    O304: out std_logic;
    O305: out std_logic;
    O306: out std_logic;
    O307: out std_logic;
    O308: out std_logic;
    O309: out std_logic;
    O310: out std_logic;
    O311: out std_logic;
    O312: out std_logic;
    O313: out std_logic;
    O314: out std_logic;
    O315: out std_logic;
    O316: out std_logic;
    O317: out std_logic;
    O318: out std_logic;
    O319: out std_logic;
    O320: out std_logic;
    O321: out std_logic;
    O322: out std_logic;
    O323: out std_logic;
    O324: out std_logic;
    O325: out std_logic;
    O326: out std_logic;
    O327: out std_logic;
    O328: out std_logic;
    O329: out std_logic;
    O330: out std_logic;
    O331: out std_logic;
    O332: out std_logic;
    O333: out std_logic;
    O334: out std_logic;
    O335: out std_logic;
    O336: out std_logic;
    O337: out std_logic;
    O338: out std_logic;
    O339: out std_logic;
    O340: out std_logic;
    O341: out std_logic;
    O342: out std_logic;
    O343: out std_logic;
    O344: out std_logic;
    O345: out std_logic;
    O346: out std_logic;
    O347: out std_logic;
    O348: out std_logic;
    O349: out std_logic;
    O350: out std_logic;
    O351: out std_logic;
    O352: out std_logic;
    O353: out std_logic;
    O354: out std_logic;
    O355: out std_logic;
    O356: out std_logic;
    O357: out std_logic;
    O358: out std_logic;
    O359: out std_logic;
    O360: out std_logic;
    O361: out std_logic;
    O362: out std_logic;
    O363: out std_logic;
    O364: out std_logic;
    O365: out std_logic;
    O366: out std_logic;
    O367: out std_logic;
    O368: out std_logic;
    O369: out std_logic;
    O370: out std_logic;
    O371: out std_logic;
    O372: out std_logic;
    O373: out std_logic;
    O374: out std_logic;
    O375: out std_logic;
    O376: out std_logic;
    O377: out std_logic;
    O378: out std_logic;
    O379: out std_logic;
    O380: out std_logic;
    O381: out std_logic;
    O382: out std_logic;
    O383: out std_logic;
    O384: out std_logic;
    O385: out std_logic;
    O386: out std_logic;
    O387: out std_logic;
    O388: out std_logic;
    O389: out std_logic;
    O390: out std_logic;
    O391: out std_logic;
    O392: out std_logic;
    O393: out std_logic;
    O394: out std_logic;
    O395: out std_logic;
    O396: out std_logic;
    O397: out std_logic;
    O398: out std_logic;
    O399: out std_logic;
    O400: out std_logic;
    O401: out std_logic;
    O402: out std_logic;
    O403: out std_logic;
    O404: out std_logic;
    O405: out std_logic;
    O406: out std_logic;
    O407: out std_logic;
    O408: out std_logic;
    O409: out std_logic;
    O410: out std_logic;
    O411: out std_logic;
    O412: out std_logic;
    O413: out std_logic;
    O414: out std_logic;
    O415: out std_logic;
    O416: out std_logic;
    O417: out std_logic;
    O418: out std_logic;
    O419: out std_logic;
    O420: out std_logic;
    O421: out std_logic;
    O422: out std_logic;
    O423: out std_logic;
    O424: out std_logic;
    O425: out std_logic;
    O426: out std_logic;
    O427: out std_logic;
    O428: out std_logic;
    O429: out std_logic;
    O430: out std_logic;
    O431: out std_logic;
    O432: out std_logic;
    O433: out std_logic;
    O434: out std_logic;
    O435: out std_logic;
    O436: out std_logic;
    O437: out std_logic;
    O438: out std_logic;
    O439: out std_logic;
    O440: out std_logic;
    O441: out std_logic;
    O442: out std_logic;
    O443: out std_logic;
    O444: out std_logic;
    O445: out std_logic;
    O446: out std_logic;
    O447: out std_logic;
    O448: out std_logic;
    O449: out std_logic;
    O450: out std_logic;
    O451: out std_logic;
    O452: out std_logic;
    O453: out std_logic;
    O454: out std_logic;
    O455: out std_logic;
    O456: out std_logic;
    O457: out std_logic;
    O458: out std_logic;
    O459: out std_logic;
    O460: out std_logic;
    O461: out std_logic;
    O462: out std_logic;
    O463: out std_logic;
    O464: out std_logic;
    O465: out std_logic
);
end NX_CORTEX_R5;

architecture NX_RTL of NX_CORTEX_R5 is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CORTEX_R5";
begin
end NX_RTL;

----------------------------------------------------------------------------------------------------

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
TV9qO5LwiJyVUBGB4JqOMT7F00bjB2bOSZEqgPqmLZEVbyAZU8lCGHJTDEybPCLR
EZdC3Wf6vgvp1eJXYFT2ORKAIu94+o8pemRsoLHEcJ2nREjnedLRyd0V7oUm8iBO
Sf8kqNohTJaURCzRttxLyFlFBDI96Lu8cQIPRvnJo/emW53n54u+n7H2xqZBCO5T
C4jOuQ1Y4gFlZAZ8KhXr5oH8oICToNzvrD5/mi15e2CiWzLOFcJMnb43Y7Hi2yEX
+TKXwvMUnAA46mScXBwzctkQ+dr/ifyqUC/wOVMzJJR3lf7uLNrznNUb7aYY+o5g
sC8BLHIKoIFJDLegISHjYg==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 448)
`protect data_block
mlVIFQmFU6LV2bhlFkJpmbyW3gCZ66yYqBK65I5cSwfZSRjbD8zdSMNYPfKSJaNe
EajgQiWV/FRLRAsZpovwYh9uid20nJkOjvsBgErw755Mc5GxBZ0+Xl+eZMF3Nr3O
JxvxzUuzGdwuTrxuzL1Y9jBKnuPCxBMI6qoyQqGc/EBeXOpCzFSZgXsndTj6vtVi
1Ri9rHFL4r+11jzmgYpP0zljITFdBNtQ/annoMBIIYi8OU6PR3XuR+OHxvZW6D6+
ZA7x22zoiCOavqyVdQYKCKrL/zxOv3+Uwy83aktXkA16VNcnGeKWeJxmN3H/62Xb
7MFo+z2hQwwOk6XxeSKPJYtxEn4Ffv4LIHmZOrMajaBssSLLFv9YGUpTEqlHZvtX
UZakPtGaZy+V4q/3+aL/SRorBYmdurskR7HBS/UynwQVJxlQ6rzzrI/dWZoK/hrV
iiw1ysiu04GGykioZ7HtWV+m0sbjhOvK0BJ58EV6tcbZ0TPRXASF5P+sBCqjtmkO
9CVRfOH338KYJXHeGskFG4ZiesKhgJWK7vbHQ06F8tokLYDh6LJwKjRVnp4osXnJ
ef9bYMKQZFiSjPfZQGDkTw==
`protect end_protected

-- =================================================================================================
--   NX_SER definition                                                                  2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_SER is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Number of serialization factor
    location             : string := "";		-- Pad location
    padType              : string := "";		-- Pad electrical standard
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    outputDelayLine      : string := "";		-- "0_to_63_delay_value"
    outputCapacity       : string := ""			-- 0 to 40 (value in pF)
);
port (
    FCK   : in  std_logic;
    SCK   : in  std_logic;
    R     : in  std_logic;
    I     : in  std_logic_vector(data_size - 1 downto 0);
    IO    : out std_logic;
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(4 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(4 downto 0)
);
end NX_SER;

-- =================================================================================================
--   NX_DES definition                                                                  2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_DES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- -- Pad locationNumber of deserialization factor
    location             : string := "";		-- Pad location
    padType              : string := "";		-- Pad electrical standard
    differential         : string := "";		-- Single ended ("0") or differential ("1")
    termination          : string := "";		-- Input impedance adaptatio    terminationReference : string := "";
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- Input impedance adaptation
    weakTermination      : string := "";		-- "floating" or "VTT"
    inputDelayLine       : string := "";		-- "0_to_63_delay_value"
    inputSignalSlope     : string := ""			-- Decimal value "0.5" to "20" (value in V/ns)
);
port (
    FCK   : in  std_logic;
    SCK   : in  std_logic;
    R     : in  std_logic;
    IO    : in  std_logic;
    O     : out std_logic_vector(data_size - 1 downto 0);
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(4 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(4 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic
);
end NX_DES;

-- =================================================================================================
--   NX_SERDES definition                                                               2018/10/16
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;

library NX;
use NX.nxPackage.all;

entity NX_SERDES is
generic (
    data_size            : integer range 2 to 10 := 5;	-- Serialiser/deserializer factor 
    location             : string := "";		-- Pad location
    padType              : string := "";		-- Pad electrical standard
    differential         : string := "";		-- Single ended ("0" or differential ("1")
    slewRate             : string := "";		-- Slow, Medium or Fast
    termination          : string := "";		-- Input impedance adaptation
    terminationReference : string := "";		-- "floating" or "VTT"
    turbo                : string := "";		-- "true" or "false"
    weakTermination      : string := "";		-- "PullUp" or "None"
    inputDelayLine       : string := "";		-- "O_to_63_delay_value"
    outputDelayLine      : string := "";		-- "O_to_63_delay_value"
    inputSignalSlope     : string := "";		-- Decimal value "0.5" to "20" (value in V/ns)
    outputCapacity       : string := "";		-- "0" to "40" (value in pF)
    cpath_registered     : bit := '0'			-- Use Register in Enable Path ('1')
);
port (
    FCK   : in    std_logic;
    SCK   : in    std_logic;
    RTX   : in    std_logic;
    RRX   : in    std_logic;
    CI    : in    std_logic;
    CCK   : in    std_logic;
    CL    : in    std_logic;
    CR    : in    std_logic;
    I     : in    std_logic_vector(data_size - 1 downto 0);
    IO    : inout std_logic;
    O     : out   std_logic_vector(data_size - 1 downto 0);
    -- Delay Control
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(4 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(4 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic
);
end NX_SERDES;

-- =================================================================================================
--   NX_IOC_SERDES definition                                                             2018/10/15
-- =================================================================================================

library ieee;
use ieee.std_logic_1164.all;
use ieee.std_logic_unsigned.all;
use ieee.numeric_std.all;

library NX;
use NX.nxPackage.all;

entity NX_IOC_SERDES is
generic (
    data_size : integer range 2 to 10 := 5;
    location  : string := ""
);
port (
    RTCK  : in std_logic;
    WRCK  : in std_logic;
    WTCK  : in std_logic;
    RRCK  : in std_logic;
    TRST  : in std_logic;
    RRST  : in std_logic;
    DCK   : in std_logic;
    DRL   : in std_logic;
    DIG   : in std_logic;
    DS    : in std_logic_vector(1 downto 0);
    DRA   : in std_logic_vector(4 downto 0);
    DRI   : in std_logic_vector(5 downto 0);
    FZ    : in std_logic;
    DRO   : out std_logic_vector(5 downto 0);
    DID   : out std_logic_vector(4 downto 0);
    FLD   : out std_logic;
    FLG   : out std_logic;
    LINKN : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINKP : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0)
);
end NX_IOC_SERDES;

architecture NX_RTL of NX_IOC_SERDES is
    attribute NX_TYPE: string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE: string;
    attribute NX_USE of NX_RTL: architecture is "NX_IOC_SERDES";
    attribute NX_USE of LINKP: signal is "LINK";
    attribute NX_USE of LINKN: signal is "LINK";
begin
end NX_RTL;

-- NX_SER#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_SER is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal I_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOC_LINK_SIZE - 1 downto 0);

attribute syn_noprune : boolean;

begin

I_net: for j in 0 to (data_size - 1) generate
    I_int(j) <= I(j);
end generate;

I_dummy: for j in data_size to 9 generate
    I_int(j) <= '0';
end generate;

single_ser: if (data_size <= 5) generate
attribute syn_noprune of iodx : label is true;
begin

    iobx: NX_IOB_O generic map (
	  location             => location
	, padType              => padType
	, differential         => differential
	, slewRate             => slewRate
	, outputDelayLine      => outputDelayLine
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOD generic map (
		   epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , location        => location
		 )
		 port map (
			   EI   => I_int(0)
			 , EXI1 => I_int(1)
			 , EXI2 => I_int(2)
			 , EXI3 => I_int(3)
			 , EXI4 => I_int(4)
			 , RI   => O_pad
			 , ER   => R
			 , ECK  => FCK
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);
end generate;

large_ser: if (5 < data_size) generate
attribute syn_noprune of iodp : label is true;
attribute syn_noprune of iodn : label is true;
begin

    iobp: NX_IOB_O generic map (
	  location             => location
	, padType              => padType
	, differential         => differential
	, slewRate             => slewRate
	, outputDelayLine      => outputDelayLine
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOD generic map (
		   epath_init      => '1'
		 , epath_mode      => b"0100"
		 , cpath_mode      => b"0001"
		 , location        => location
		 )
		 port map (
			    EI   => I_int(0)
			  , EXI1 => I_int(1)
			  , EXI2 => I_int(2)
			  , EXI3 => I_int(3)
			  , EXI4 => I_int(4)
			  , RI   => O_pad
			  , ER   => R
			  , ECK  => FCK
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);

    iodn: NX_IOD generic map (
		   epath_init => '1'
		 , epath_mode => b"0100"
		 , cpath_mode => b"0001"
		 )
		 port map (
			    EI   => I_int(5)
			  , EXI1 => I_int(6)
			  , EXI2 => I_int(7)
			  , EXI3 => I_int(8)
			  , EXI4 => I_int(9)
			  , RI   => OPEN
			  , ER   => R
			  , ECK  => FCK
			  , EO   => OPEN
			  , CO   => OPEN
			  , LINK => LINKN
		);
end generate;

ioc: NX_IOC_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RTCK  => FCK
			    , WTCK  => SCK
			    , TRST  => R
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , DRO   => DRO
			    , DID   => DID
		   );

end NX_RTL;
-- #}}}#

-- NX_DES#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_DES is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal O_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOC_LINK_SIZE - 1 downto 0);

type     switch_dynamic is array (boolean) of bit;
constant switch_dpath : switch_dynamic := (true => '1', false => '0');
constant dpath_dynamic : bit := switch_dpath(inputDelayLine = "");

begin

O_net: for j in 0 to (data_size - 1) generate
    O(j) <= O_int(j);
end generate;

single_des: if (data_size <= 5) generate
    iobx: NX_IOB_I generic map (
	  location             => location
	, padType              => padType
	, differential         => differential
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOD generic map (
		   rpath_init      => '1'
		 , rpath_mode      => b"0100"
		 , rpath_dynamic   => dpath_dynamic
		 , cpath_mode      => b"0000"
		 , location        => location
		 )
		 port map (
			    RO   => O_int(4)
			  , RXO1 => O_int(3)
			  , RXO2 => O_int(2)
			  , RXO3 => O_int(1)
			  , RXO4 => O_int(0)
			  , RI   => O_pad
			  , RR   => R
			  , RCK  => FCK
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);
end generate;

large_des: if (5 < data_size) generate
    iobp: NX_IOB_I generic map (
	  location             => location
	, padType              => padType
	, differential         => differential
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOD generic map (
		   rpath_init      => '1'
		 , rpath_mode      => b"0100"
		 , rpath_dynamic   => dpath_dynamic
		 , cpath_mode      => b"0000"
		 , location        => location
		 )
		 port map (
			    RO   => O_int(9)
			  , RXO1 => O_int(8)
			  , RXO2 => O_int(7)
			  , RXO3 => O_int(6)
			  , RXO4 => O_int(5)
			  , RI   => O_pad
			  , RR   => R
			  , RCK  => FCK
			  , EO   => I_pad
			  , CO   => C_pad
			  , LINK => LINKP
		);

    iodn: NX_IOD generic map (
		  rpath_init => '1'
		, rpath_mode => b"0100"
		, cpath_mode => b"0000"
		, chained    => '1'
		)
		port map (
			   RO   => O_int(4)
			 , RXO1 => O_int(3)
			 , RXO2 => O_int(2)
			 , RXO3 => O_int(1)
			 , RXO4 => O_int(0)
			 , RI   => OPEN
			 , RR   => R
			 , RCK  => FCK
			 , EO   => OPEN
			 , CO   => OPEN
			 , LINK => LINKN
		);
end generate;

ioc: NX_IOC_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RRCK  => SCK
			    , WRCK  => FCK
			    , RRST  => R
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DIG   => DIG
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , FZ    => FZ
			    , DRO   => DRO
			    , DID   => DID
			    , FLD   => FLD
			    , FLG   => FLG
		   );

end NX_RTL;
-- #}}}#

-- NX_SERDES#{{{#
----------------------------------------------------------------------------------------------------
architecture NX_RTL of NX_SERDES is

signal I_pad : std_logic;
signal O_pad : std_logic;
signal C_pad : std_logic;
signal sync  : std_logic;
signal I_int : std_logic_vector(9 downto 0);
signal O_int : std_logic_vector(9 downto 0);
signal LINKN : std_logic_vector(IOC_LINK_SIZE - 1 downto 0);
signal LINKP : std_logic_vector(IOC_LINK_SIZE - 1 downto 0);

type switch_mode is array(bit) of bit_vector(3 downto 0);
constant switch : switch_mode := ('0' => b"0010", '1' => b"0011");
constant cpath_mode : bit_vector(3 downto 0) := switch(cpath_registered);

type     switch_dynamic is array (boolean) of bit;
constant switch_dpath : switch_dynamic := (true => '1', false => '0');
constant dpath_dynamic : bit := switch_dpath(inputDelayLine = "");

begin

I_net: for j in 0 to (data_size - 1) generate
    I_int(j) <= I(j);
end generate;

I_dummy: for j in (data_size - 1) to 9 generate
    I_int(j) <= '0';
end generate;

O_net: for j in 0 to (data_size - 1) generate
    O(j) <= O_int(j);
end generate;

single_serdes: if (data_size <= 5) generate
    iobx: NX_IOB generic map (
	  location             => location
	, padType              => padType
	, differential         => differential
	, slewRate             => slewRate
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, outputDelayLine      => outputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		 port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodx: NX_IOD generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , rpath_dynamic   => dpath_dynamic
			     , cpath_mode      => cpath_mode
			     , location        => location
		)
		port map (
			   EI   => I_int(0)
			 , EXI1 => I_int(1)
			 , EXI2 => I_int(2)
			 , EXI3 => I_int(3)
			 , EXI4 => I_int(4)
			 , ER   => RTX
			 , ECK  => FCK
			 , RO   => O_int(4)
			 , RXO1 => O_int(3)
			 , RXO2 => O_int(2)
			 , RXO3 => O_int(1)
			 , RXO4 => O_int(0)
			 , RR   => RRX
			 , RCK  => FCK
			 , CI   => CI
			 , CCK  => CCK
			 , CL   => CL
			 , CR   => CR
			 , RI   => O_pad
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);
end generate;

large_serdes: if (5 < data_size) generate
    iobp: NX_IOB_I generic map (
	  location             => location
	, padType              => padType
	, differential         => differential
	, slewRate             => slewRate
	, termination          => termination
	, terminationReference => terminationReference
	, turbo                => turbo
	, weakTermination      => weakTermination
	, inputDelayLine       => inputDelayLine
	, outputDelayLine      => outputDelayLine
	, inputSignalSlope     => inputSignalSlope
	, outputCapacity       => outputCapacity
	, locked               => '1'
    )
		   port map (I => I_pad, O => O_pad, C => C_pad, IO => IO);

    iodp: NX_IOD generic map (
			       epath_init      => '1'
			     , epath_mode      => b"0100"
			     , rpath_init      => '1'
			     , rpath_mode      => b"0100"
			     , rpath_dynamic   => dpath_dynamic
			     , cpath_mode      => cpath_mode
			     , location        => location
		)
		port map (
			   EI   => I_int(5)
			 , EXI1 => I_int(6)
			 , EXI2 => I_int(7)
			 , EXI3 => I_int(8)
			 , EXI4 => I_int(9)
			 , ER   => RTX
			 , ECK  => FCK
			 , RO   => O_int(9)
			 , RXO1 => O_int(8)
			 , RXO2 => O_int(7)
			 , RXO3 => O_int(6)
			 , RXO4 => O_int(5)
			 , RR   => RRX
			 , RCK  => FCK
			 , CI   => CI
			 , CCK  => CCK
			 , CL   => CL
			 , CR   => CR
			 , RI   => O_pad
			 , EO   => I_pad
			 , CO   => C_pad
			 , LINK => LINKP
		);

    iodn: NX_IOD generic map (
			       epath_init => '1'
			     , epath_mode => b"0100"
			     , rpath_init => '1'
			     , rpath_mode => b"0100"
			     , cpath_mode => cpath_mode
			     , chained    => '1'
		)
		port map (
			   EI   => I_int(0)
			 , EXI1 => I_int(1)
			 , EXI2 => I_int(2)
			 , EXI3 => I_int(3)
			 , EXI4 => I_int(4)
			 , ER   => RTX
			 , ECK  => FCK
			 , RO   => O_int(4)
			 , RXO1 => O_int(3)
			 , RXO2 => O_int(2)
			 , RXO3 => O_int(1)
			 , RXO4 => O_int(0)
			 , RR   => RRX
			 , RCK  => FCK
			 , CI   => CI
			 , CCK  => CCK
			 , CL   => CL
			 , CR   => CR
			 , RI   => OPEN
			 , EO   => OPEN
			 , CO   => OPEN
			 , LINK => LINKN
		);
end generate;

ioc: NX_IOC_SERDES generic map (data_size => data_size, location => location)
		   port map (
			      RTCK  => FCK
			    , WTCK  => SCK
			    , RRCK  => SCK
			    , WRCK  => FCK
			    , TRST  => RTX
			    , RRST  => RRX
			    , LINKN => LINKN
			    , LINKP => LINKP
			    , DCK   => DCK
			    , DRL   => DRL
			    , DIG   => DIG
			    , DS    => DS
			    , DRA   => DRA
			    , DRI   => DRI
			    , FZ    => FZ
			    , DRO   => DRO
			    , DID   => DID
			    , FLD   => FLD
			    , FLG   => FLG
		   );

end NX_RTL;
-- #}}}#

`protect begin_protected
`protect version = 1
`protect encrypt_agent = "NanoXplore"
`protect key_keyowner = "Mentor Graphics Corporation", key_keyname = "MGC-VERIF-SIM-RSA-2", key_method = "rsa"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 256)
`protect key_block
bbtFUbLyrOktXiUSYRxeD/Dmd0uVp0VJDY0nFQvk0XWHNxym3xAxv2wn4o1rhGH7
UnU9kvokYEjh1gG1KMOQPo2OdZG1fqjePRo+ZMx3U85RH/7q1AQrRaC8VXB4CAYV
MyDZ0OEMGWSFPMsiLUsPe2vi8ANxC3zh9ldmJzeBJzRP5RAHnIhe+lO/QUwo2+mO
T6gRumRsdh0z2MJwGvYwMKZbYjinOGLWcecFWZFrp2MhJVHgIcfC+XQUk00/Jx0G
58mOsllwAvZ7vieA2ap0/Ei53qwUxtFD7Uo4IxG4pFrY0A4QDiTob7U3Wolg347J
19SeFnp5siEa/+ww5zRWWw==
`protect data_method = "aes256-cbc"
`protect encoding = (enctype = "base64", line_length = 64, bytes = 5808)
`protect data_block
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
`protect end_protected

-- =================================================================================================
--   NX_HSSL_FULL_L declaration                                                          2019/06/20
-- =================================================================================================

-- NX_HSSL_FULL_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_HSSL_FULL_L is
generic (
   cfg_main_i : bit_vector( 33 downto 0) := (others => '0');
   cfg_tx0_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx0_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx1_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx1_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx2_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx2_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx3_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx3_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx4_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx4_i  : bit_vector(159 downto 0) := (others => '0');
   cfg_tx5_i  : bit_vector( 31 downto 0) := (others => '0');
   cfg_rx5_i  : bit_vector(159 downto 0) := (others => '0');
   location   : string := ""
 );
port (
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ MAIN ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- Fabric Interface
   hssl_clk_user_i                       : in  std_logic;
   hssl_clk_ref_i                        : in  std_logic;
   hssl_clock_o                          : out std_logic;
   usr_com_tx_pma_pre_sign_i             : in  std_logic;
   usr_com_tx_pma_pre_en_i               : in  std_logic;
   usr_com_tx_pma_pre_input_sel_i        : in  std_logic_vector(3 downto 0);
   usr_com_tx_pma_main_sign_i            : in  std_logic;
   usr_com_rx_pma_m_eye_i                : in  std_logic;
   usr_com_tx_pma_main_en_i              : in  std_logic_vector(5 downto 0);
   usr_com_tx_pma_margin_sel_i           : in  std_logic_vector(3 downto 0);
   usr_com_tx_pma_margin_input_sel_i     : in  std_logic_vector(3 downto 0);
   usr_com_tx_pma_margin_sel_var_i       : in  std_logic_vector(4 downto 0);
   usr_com_tx_pma_margin_input_sel_var_i : in  std_logic_vector(4 downto 0);
   usr_com_tx_pma_post_en_i              : in  std_logic_vector(4 downto 0);
   usr_com_tx_pma_post_sign_i            : in  std_logic;
   usr_com_tx_pma_post_input_sel_i       : in  std_logic_vector(3 downto 0);
   usr_com_tx_pma_post_input_sel_var_i   : in  std_logic_vector(3 downto 0);
   usr_com_rx_pma_ctle_cap_i             : in  std_logic_vector(3 downto 0);
   usr_com_rx_pma_ctle_resp_i            : in  std_logic_vector(3 downto 0);
   usr_com_rx_pma_ctle_resn_i            : in  std_logic_vector(3 downto 0);
   usr_com_ctrl_tx_sel_i                 : in  std_logic_vector(5 downto 0);
   usr_com_ctrl_rx_sel_i                 : in  std_logic_vector(5 downto 0);
   usr_pll_pma_rst_n_i                   : in  std_logic;
   usr_main_rst_n_i                      : in  std_logic;
   usr_calibrate_pma_res_p1_i            : in  std_logic_vector(7 downto 0);
   usr_calibrate_pma_res_n2_i            : in  std_logic_vector(7 downto 0);
   usr_calibrate_pma_res_n3_i            : in  std_logic_vector(7 downto 0);
   usr_calibrate_pma_res_p4_i            : in  std_logic_vector(7 downto 0);
   usr_calibrate_pma_sel_i               : in  std_logic_vector(3 downto 0);
   usr_calibrate_pma_en_i                : in  std_logic;
   usr_pcs_ctrl_pll_lock_en_i            : in  std_logic;
   usr_pcs_ctrl_ovs_en_i                 : in  std_logic;
   usr_main_test_i                       : in  std_logic_vector(7 downto 0);
   usr_pll_lock_o                        : out std_logic;
   usr_calibrate_pma_out_o               : out std_logic;
   usr_main_test_o                       : out std_logic_vector(7 downto 0);
   pma_clk_ext_i                         : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 0 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx0_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx0_ctrl_replace_en_i        : in  std_logic;
   usr_tx0_rst_n_i                  : in  std_logic;
   usr_tx0_pma_clk_en_i             : in  std_logic;
   usr_tx0_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx0_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx0_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx0_busy_o                   : out std_logic;
   pma_tx0_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx0_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx0_ctrl_dscr_en_i         : in  std_logic;
   usr_rx0_ctrl_dec_en_i          : in  std_logic;
   usr_rx0_ctrl_align_en_i        : in  std_logic;
   usr_rx0_ctrl_align_sync_i      : in  std_logic;
   usr_rx0_ctrl_replace_en_i      : in  std_logic;
   usr_rx0_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx0_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx0_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx0_rst_n_i                : in  std_logic;
   usr_rx0_pma_cdr_rst_i          : in  std_logic;
   usr_rx0_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx0_pma_pll_rst_n_i        : in  std_logic;
   usr_rx0_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx0_pma_loss_of_signal_o   : out std_logic;
   usr_rx0_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx0_ctrl_char_is_aligned_o : out std_logic;
   usr_rx0_busy_o                 : out std_logic;
   usr_rx0_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx0_pll_lock_o             : out std_logic;
   pma_rx0_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 1 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx1_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx1_ctrl_replace_en_i        : in  std_logic;
   usr_tx1_rst_n_i                  : in  std_logic;
   usr_tx1_pma_clk_en_i             : in  std_logic;
   usr_tx1_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx1_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx1_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx1_busy_o                   : out std_logic;
   pma_tx1_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx1_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx1_ctrl_dscr_en_i         : in  std_logic;
   usr_rx1_ctrl_dec_en_i          : in  std_logic;
   usr_rx1_ctrl_align_en_i        : in  std_logic;
   usr_rx1_ctrl_align_sync_i      : in  std_logic;
   usr_rx1_ctrl_replace_en_i      : in  std_logic;
   usr_rx1_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx1_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx1_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx1_rst_n_i                : in  std_logic;
   usr_rx1_pma_cdr_rst_i          : in  std_logic;
   usr_rx1_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx1_pma_pll_rst_n_i        : in  std_logic;
   usr_rx1_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx1_pma_loss_of_signal_o   : out std_logic;
   usr_rx1_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx1_ctrl_char_is_aligned_o : out std_logic;
   usr_rx1_busy_o                 : out std_logic;
   usr_rx1_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx1_pll_lock_o             : out std_logic;
   pma_rx1_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 2 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx2_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx2_ctrl_replace_en_i        : in  std_logic;
   usr_tx2_rst_n_i                  : in  std_logic;
   usr_tx2_pma_clk_en_i             : in  std_logic;
   usr_tx2_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx2_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx2_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx2_busy_o                   : out std_logic;
   pma_tx2_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx2_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx2_ctrl_dscr_en_i         : in  std_logic;
   usr_rx2_ctrl_dec_en_i          : in  std_logic;
   usr_rx2_ctrl_align_en_i        : in  std_logic;
   usr_rx2_ctrl_align_sync_i      : in  std_logic;
   usr_rx2_ctrl_replace_en_i      : in  std_logic;
   usr_rx2_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx2_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx2_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx2_rst_n_i                : in  std_logic;
   usr_rx2_pma_cdr_rst_i          : in  std_logic;
   usr_rx2_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx2_pma_pll_rst_n_i        : in  std_logic;
   usr_rx2_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx2_pma_loss_of_signal_o   : out std_logic;
   usr_rx2_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx2_ctrl_char_is_aligned_o : out std_logic;
   usr_rx2_busy_o                 : out std_logic;
   usr_rx2_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx2_pll_lock_o             : out std_logic;
   pma_rx2_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 3 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx3_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx3_ctrl_replace_en_i        : in  std_logic;
   usr_tx3_rst_n_i                  : in  std_logic;
   usr_tx3_pma_clk_en_i             : in  std_logic;
   usr_tx3_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx3_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx3_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx3_busy_o                   : out std_logic;
   pma_tx3_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx3_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx3_ctrl_dscr_en_i         : in  std_logic;
   usr_rx3_ctrl_dec_en_i          : in  std_logic;
   usr_rx3_ctrl_align_en_i        : in  std_logic;
   usr_rx3_ctrl_align_sync_i      : in  std_logic;
   usr_rx3_ctrl_replace_en_i      : in  std_logic;
   usr_rx3_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx3_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx3_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx3_rst_n_i                : in  std_logic;
   usr_rx3_pma_cdr_rst_i          : in  std_logic;
   usr_rx3_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx3_pma_pll_rst_n_i        : in  std_logic;
   usr_rx3_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx3_pma_loss_of_signal_o   : out std_logic;
   usr_rx3_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx3_ctrl_char_is_aligned_o : out std_logic;
   usr_rx3_busy_o                 : out std_logic;
   usr_rx3_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx3_pll_lock_o             : out std_logic;
   pma_rx3_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 4 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx4_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx4_ctrl_replace_en_i        : in  std_logic;
   usr_tx4_rst_n_i                  : in  std_logic;
   usr_tx4_pma_clk_en_i             : in  std_logic;
   usr_tx4_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx4_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx4_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx4_busy_o                   : out std_logic;
   pma_tx4_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx4_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx4_ctrl_dscr_en_i         : in  std_logic;
   usr_rx4_ctrl_dec_en_i          : in  std_logic;
   usr_rx4_ctrl_align_en_i        : in  std_logic;
   usr_rx4_ctrl_align_sync_i      : in  std_logic;
   usr_rx4_ctrl_replace_en_i      : in  std_logic;
   usr_rx4_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx4_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx4_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx4_rst_n_i                : in  std_logic;
   usr_rx4_pma_cdr_rst_i          : in  std_logic;
   usr_rx4_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx4_pma_pll_rst_n_i        : in  std_logic;
   usr_rx4_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx4_pma_loss_of_signal_o   : out std_logic;
   usr_rx4_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx4_ctrl_char_is_aligned_o : out std_logic;
   usr_rx4_busy_o                 : out std_logic;
   usr_rx4_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx4_pll_lock_o             : out std_logic;
   pma_rx4_i                      : in  std_logic;

   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   --~~~ LANE 5 ~~~
   --~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    -- TX - Fabric Interface
   usr_tx5_ctrl_enc_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_char_is_k_i         : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_scr_en_i            : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_end_of_multiframe_i : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_end_of_frame_i      : in  std_logic_vector(7 downto 0);
   usr_tx5_ctrl_replace_en_i        : in  std_logic;
   usr_tx5_rst_n_i                  : in  std_logic;
   usr_tx5_pma_clk_en_i             : in  std_logic;
   usr_tx5_test_i                   : in  std_logic_vector(3 downto 0);
   usr_tx5_data_i                   : in  std_logic_vector(63 downto 0);
   usr_tx5_test_o                   : out std_logic_vector(3 downto 0);
   usr_tx5_busy_o                   : out std_logic;
   pma_tx5_o                        : out std_logic;
    -- RX - Fabric Interface
   usr_rx5_data_o                 : out std_logic_vector(63 downto 0);
   usr_rx5_ctrl_dscr_en_i         : in  std_logic;
   usr_rx5_ctrl_dec_en_i          : in  std_logic;
   usr_rx5_ctrl_align_en_i        : in  std_logic;
   usr_rx5_ctrl_align_sync_i      : in  std_logic;
   usr_rx5_ctrl_replace_en_i      : in  std_logic;
   usr_rx5_ctrl_el_buff_rst_i     : in  std_logic;
   usr_rx5_ctrl_ovs_bit_sel_i     : in  std_logic_vector(1 downto 0);
   usr_rx5_ctrl_el_buff_fifo_en_i : in  std_logic;
   usr_rx5_rst_n_i                : in  std_logic;
   usr_rx5_pma_cdr_rst_i          : in  std_logic;
   usr_rx5_pma_ckgen_rst_n_i      : in  std_logic;
   usr_rx5_pma_pll_rst_n_i        : in  std_logic;
   usr_rx5_test_i                 : in  std_logic_vector(3 downto 0);
   usr_rx5_pma_loss_of_signal_o   : out std_logic;
   usr_rx5_ctrl_char_is_comma_o   : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_char_is_k_o       : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_not_in_table_o    : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_disp_err_o        : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_char_is_a_o       : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_char_is_f_o       : out std_logic_vector(7 downto 0);
   usr_rx5_ctrl_char_is_aligned_o : out std_logic;
   usr_rx5_busy_o                 : out std_logic;
   usr_rx5_test_o                 : out std_logic_vector(7 downto 0);
   usr_rx5_pll_lock_o             : out std_logic;
   pma_rx5_i                      : in  std_logic
);
end NX_HSSL_FULL_L;
--#}}}#

-- =================================================================================================
--   NX_CTX_L definition                                                                2018/11/30
-- =================================================================================================

-- NX_CTX_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_CTX_L is
 generic (
     pma_clk_pos          : bit := '0';
     pcs_protocol_size    : bit := '0';
     pcs_8b_scr_sel       : bit := '0';
     pcs_scr_init         : bit_vector(16 downto 0) := (others => '0');
     pcs_scr_bypass       : bit := '0';
     pcs_sync_supported   : bit := '0';
     pcs_replace_bypass   : bit := '0';
     pcs_enc_bypass       : bit := '0';
     pcs_loopback         : bit := '0';
     pcs_polarity         : bit := '0';
     pcs_esistream_fsm_en : bit := '0';
     test                 : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc   : bit := '0';
     pcs_bypass_usr_cdc   : bit := '0';
     pma_loopback         : bit := '0';
     location             : string := ""
 );
port (
    ENC_E_I1 : in  std_logic;
    ENC_E_I2 : in  std_logic;
    ENC_E_I3 : in  std_logic;
    ENC_E_I4 : in  std_logic;
    ENC_E_I5 : in  std_logic;
    ENC_E_I6 : in  std_logic;
    ENC_E_I7 : in  std_logic;
    ENC_E_I8 : in  std_logic;

    CH_K_I1  : in  std_logic;
    CH_K_I2  : in  std_logic;
    CH_K_I3  : in  std_logic;
    CH_K_I4  : in  std_logic;
    CH_K_I5  : in  std_logic;
    CH_K_I6  : in  std_logic;
    CH_K_I7  : in  std_logic;
    CH_K_I8  : in  std_logic;

    SCR_E_I1 : in  std_logic;
    SCR_E_I2 : in  std_logic;
    SCR_E_I3 : in  std_logic;
    SCR_E_I4 : in  std_logic;
    SCR_E_I5 : in  std_logic;
    SCR_E_I6 : in  std_logic;
    SCR_E_I7 : in  std_logic;
    SCR_E_I8 : in  std_logic;

    EOMF_I1  : in  std_logic;
    EOMF_I2  : in  std_logic;
    EOMF_I3  : in  std_logic;
    EOMF_I4  : in  std_logic;
    EOMF_I5  : in  std_logic;
    EOMF_I6  : in  std_logic;
    EOMF_I7  : in  std_logic;
    EOMF_I8  : in  std_logic;

    EOF_I1   : in  std_logic;
    EOF_I2   : in  std_logic;
    EOF_I3   : in  std_logic;
    EOF_I4   : in  std_logic;
    EOF_I5   : in  std_logic;
    EOF_I6   : in  std_logic;
    EOF_I7   : in  std_logic;
    EOF_I8   : in  std_logic;

    REP_E_I  : in  std_logic;
    RST_N_I  : in  std_logic;

    TST_I1   : in  std_logic;
    TST_I2   : in  std_logic;
    TST_I3   : in  std_logic;
    TST_I4   : in  std_logic;

    DATA_I1  : in  std_logic;
    DATA_I2  : in  std_logic;
    DATA_I3  : in  std_logic;
    DATA_I4  : in  std_logic;
    DATA_I5  : in  std_logic;
    DATA_I6  : in  std_logic;
    DATA_I7  : in  std_logic;
    DATA_I8  : in  std_logic;
    DATA_I9  : in  std_logic;
    DATA_I10 : in  std_logic;
    DATA_I11 : in  std_logic;
    DATA_I12 : in  std_logic;
    DATA_I13 : in  std_logic;
    DATA_I14 : in  std_logic;
    DATA_I15 : in  std_logic;
    DATA_I16 : in  std_logic;
    DATA_I17 : in  std_logic;
    DATA_I18 : in  std_logic;
    DATA_I19 : in  std_logic;
    DATA_I20 : in  std_logic;
    DATA_I21 : in  std_logic;
    DATA_I22 : in  std_logic;
    DATA_I23 : in  std_logic;
    DATA_I24 : in  std_logic;
    DATA_I25 : in  std_logic;
    DATA_I26 : in  std_logic;
    DATA_I27 : in  std_logic;
    DATA_I28 : in  std_logic;
    DATA_I29 : in  std_logic;
    DATA_I30 : in  std_logic;
    DATA_I31 : in  std_logic;
    DATA_I32 : in  std_logic;
    DATA_I33 : in  std_logic;
    DATA_I34 : in  std_logic;
    DATA_I35 : in  std_logic;
    DATA_I36 : in  std_logic;
    DATA_I37 : in  std_logic;
    DATA_I38 : in  std_logic;
    DATA_I39 : in  std_logic;
    DATA_I40 : in  std_logic;
    DATA_I41 : in  std_logic;
    DATA_I42 : in  std_logic;
    DATA_I43 : in  std_logic;
    DATA_I44 : in  std_logic;
    DATA_I45 : in  std_logic;
    DATA_I46 : in  std_logic;
    DATA_I47 : in  std_logic;
    DATA_I48 : in  std_logic;
    DATA_I49 : in  std_logic;
    DATA_I50 : in  std_logic;
    DATA_I51 : in  std_logic;
    DATA_I52 : in  std_logic;
    DATA_I53 : in  std_logic;
    DATA_I54 : in  std_logic;
    DATA_I55 : in  std_logic;
    DATA_I56 : in  std_logic;
    DATA_I57 : in  std_logic;
    DATA_I58 : in  std_logic;
    DATA_I59 : in  std_logic;
    DATA_I60 : in  std_logic;
    DATA_I61 : in  std_logic;
    DATA_I62 : in  std_logic;
    DATA_I63 : in  std_logic;
    DATA_I64 : in  std_logic;

    TST_O1   : out std_logic;
    TST_O2   : out std_logic;
    TST_O3   : out std_logic;
    TST_O4   : out std_logic;

    BUSY_O   : out std_logic;
    CLK_E_I  : in  std_logic;

    LINK     : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);

    TX_O     : out std_logic
);
end NX_CTX_L;

architecture NX_RTL of NX_CTX_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CTX_L";
    attribute NX_USE of LINK: signal is "LINK";
begin
end NX_RTL;
--#}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_CRX_L definition                                                                2018/11/30
-- =================================================================================================

-- NX_CRX_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_CRX_L is
 generic (
     test                         : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc           : bit := '0';
     pcs_bypass_usr_cdc           : bit := '0';
     pcs_debug_en                 : bit := '0';
     pcs_fsm_watchdog_en          : bit := '0';
     pma_clk_pos                  : bit := '0';
     pcs_protocol_size            : bit := '0';
     pcs_loopback                 : bit := '0';
     pcs_polarity                 : bit := '0';
     pcs_p_comma_en               : bit := '0';
     pcs_p_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_m_comma_en               : bit := '0';
     pcs_m_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_comma_mask               : bit_vector(9 downto 0) := (others => '0');
     pcs_nb_comma_bef_realign     : bit_vector(1 downto 0) := (others => '0');
     pcs_align_bypass             : bit := '0';
     pcs_dec_bypass               : bit := '0';
     pcs_el_buff_max_comp         : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_diff_bef_comp    : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_only_one_skp     : bit := '0';
     pcs_el_buff_underflow_handle : bit := '0';
     pcs_el_buff_skp_seq_size     : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_char_0       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_1       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_2       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_3       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_size  : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_header_0     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_1     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_2     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_3     : bit_vector(8 downto 0) := (others => '0');
     pcs_buffers_use_cdc          : bit := '0';
     pcs_buffers_bypass           : bit := '0';
     pcs_sync_supported           : bit := '0';
     pcs_replace_bypass           : bit := '0';
     pcs_dscr_bypass              : bit := '0';
     pcs_8b_dscr_sel              : bit := '0';
     pcs_fsm_sel                  : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divf_en_n            : bit := '0';
     pma_pll_divm_en_n            : bit := '0';
     pma_pll_divn_en_n            : bit := '0';
     pma_cdr_cp                   : bit_vector(3 downto 0) := (others => '0');
     pma_ctrl_term                : bit_vector(5 downto 0) := (others => '0');
     pma_pll_cpump_n              : bit_vector(2 downto 0) := (others => '0');
     pma_pll_divf                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divm                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divn                 : bit := '0';
     pma_loopback                 : bit := '0';
     location                     : string := ""
 );
port (
    DSCR_E_I  : in  std_logic;
    DEC_E_I   : in  std_logic;
    ALIGN_E_I : in  std_logic;
    ALIGN_S_I : in  std_logic;
    REP_E_I   : in  std_logic;
    BUF_R_I   : in  std_logic;

    OVS_BS_I1 : in  std_logic;
    OVS_BS_I2 : in  std_logic;

    BUF_FE_I  : in  std_logic;
    RST_N_I   : in  std_logic;
    CDR_R_I   : in  std_logic;
    CKG_RN_I  : in  std_logic;
    PLL_RN_I  : in  std_logic;

    TST_I1    : in  std_logic;
    TST_I2    : in  std_logic;
    TST_I3    : in  std_logic;
    TST_I4    : in  std_logic;

    LOS_O     : out std_logic;

    DATA_O1   : out std_logic;
    DATA_O2   : out std_logic;
    DATA_O3   : out std_logic;
    DATA_O4   : out std_logic;
    DATA_O5   : out std_logic;
    DATA_O6   : out std_logic;
    DATA_O7   : out std_logic;
    DATA_O8   : out std_logic;
    DATA_O9   : out std_logic;
    DATA_O10  : out std_logic;
    DATA_O11  : out std_logic;
    DATA_O12  : out std_logic;
    DATA_O13  : out std_logic;
    DATA_O14  : out std_logic;
    DATA_O15  : out std_logic;
    DATA_O16  : out std_logic;
    DATA_O17  : out std_logic;
    DATA_O18  : out std_logic;
    DATA_O19  : out std_logic;
    DATA_O20  : out std_logic;
    DATA_O21  : out std_logic;
    DATA_O22  : out std_logic;
    DATA_O23  : out std_logic;
    DATA_O24  : out std_logic;
    DATA_O25  : out std_logic;
    DATA_O26  : out std_logic;
    DATA_O27  : out std_logic;
    DATA_O28  : out std_logic;
    DATA_O29  : out std_logic;
    DATA_O30  : out std_logic;
    DATA_O31  : out std_logic;
    DATA_O32  : out std_logic;
    DATA_O33  : out std_logic;
    DATA_O34  : out std_logic;
    DATA_O35  : out std_logic;
    DATA_O36  : out std_logic;
    DATA_O37  : out std_logic;
    DATA_O38  : out std_logic;
    DATA_O39  : out std_logic;
    DATA_O40  : out std_logic;
    DATA_O41  : out std_logic;
    DATA_O42  : out std_logic;
    DATA_O43  : out std_logic;
    DATA_O44  : out std_logic;
    DATA_O45  : out std_logic;
    DATA_O46  : out std_logic;
    DATA_O47  : out std_logic;
    DATA_O48  : out std_logic;
    DATA_O49  : out std_logic;
    DATA_O50  : out std_logic;
    DATA_O51  : out std_logic;
    DATA_O52  : out std_logic;
    DATA_O53  : out std_logic;
    DATA_O54  : out std_logic;
    DATA_O55  : out std_logic;
    DATA_O56  : out std_logic;
    DATA_O57  : out std_logic;
    DATA_O58  : out std_logic;
    DATA_O59  : out std_logic;
    DATA_O60  : out std_logic;
    DATA_O61  : out std_logic;
    DATA_O62  : out std_logic;
    DATA_O63  : out std_logic;
    DATA_O64  : out std_logic;

    CH_COM_O1 : out std_logic;
    CH_COM_O2 : out std_logic;
    CH_COM_O3 : out std_logic;
    CH_COM_O4 : out std_logic;
    CH_COM_O5 : out std_logic;
    CH_COM_O6 : out std_logic;
    CH_COM_O7 : out std_logic;
    CH_COM_O8 : out std_logic;

    CH_K_O1   : out std_logic;
    CH_K_O2   : out std_logic;
    CH_K_O3   : out std_logic;
    CH_K_O4   : out std_logic;
    CH_K_O5   : out std_logic;
    CH_K_O6   : out std_logic;
    CH_K_O7   : out std_logic;
    CH_K_O8   : out std_logic;

    NIT_O1    : out std_logic;
    NIT_O2    : out std_logic;
    NIT_O3    : out std_logic;
    NIT_O4    : out std_logic;
    NIT_O5    : out std_logic;
    NIT_O6    : out std_logic;
    NIT_O7    : out std_logic;
    NIT_O8    : out std_logic;

    D_ERR_O1  : out std_logic;
    D_ERR_O2  : out std_logic;
    D_ERR_O3  : out std_logic;
    D_ERR_O4  : out std_logic;
    D_ERR_O5  : out std_logic;
    D_ERR_O6  : out std_logic;
    D_ERR_O7  : out std_logic;
    D_ERR_O8  : out std_logic;

    CH_A_O1   : out std_logic;
    CH_A_O2   : out std_logic;
    CH_A_O3   : out std_logic;
    CH_A_O4   : out std_logic;
    CH_A_O5   : out std_logic;
    CH_A_O6   : out std_logic;
    CH_A_O7   : out std_logic;
    CH_A_O8   : out std_logic;

    CH_F_O1   : out std_logic;
    CH_F_O2   : out std_logic;
    CH_F_O3   : out std_logic;
    CH_F_O4   : out std_logic;
    CH_F_O5   : out std_logic;
    CH_F_O6   : out std_logic;
    CH_F_O7   : out std_logic;
    CH_F_O8   : out std_logic;

    ALIGN_O   : out std_logic;
    BUSY_O    : out std_logic;

    TST_O1    : out std_logic;
    TST_O2    : out std_logic;
    TST_O3    : out std_logic;
    TST_O4    : out std_logic;
    TST_O5    : out std_logic;
    TST_O6    : out std_logic;
    TST_O7    : out std_logic;
    TST_O8    : out std_logic;

    LOCK_O    : out std_logic;

    LINK      : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);

    RX_I      : in  std_logic
);
end NX_CRX_L;

architecture NX_RTL of NX_CRX_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_CRX_L";
    attribute NX_USE of LINK: signal is "LINK";
begin
end NX_RTL;
--#}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_PMA_L definition                                                                2018/11/30
-- =================================================================================================

-- NX_PMA_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_PMA_L is
 generic (
     main_test                   : bit_vector(7 downto 0) := (others => '0');
     rx_pma_half_step            : bit := '0';
     pll_pma_int_data_len        : bit := '0';
     pll_pma_cpump_n             : bit_vector(2 downto 0) := (others => '0');
     pll_pma_divf                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divm                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divn                : bit := '0';
     pll_pma_lvds_mux            : bit := '0';
     pll_pma_mux_ckref           : bit := '0';
     pll_pma_divf_en_n           : bit := '0';
     pll_pma_divm_en_n           : bit := '0';
     pll_pma_divn_en_n           : bit := '0';
     main_clk_to_fabric_div_mode : bit := '0';
     main_clk_to_fabric_div_en   : bit := '0';
     main_clk_to_fabric_sel      : bit := '0';
     main_use_only_usr_clock     : bit := '0';
     main_use_pcs_clk_2          : bit := '0';
     pcs_word_len                : bit_vector(1 downto 0) := (others => '0');
     pcs_ovs_mode                : bit := '0';
     pcs_pll_lock_count          : bit_vector(2 downto 0) := (others => '0');
     location                    : string := ""
 );
port (
    CLK_USER_I  : in  std_logic;
    CLK_REF_I   : in  std_logic;
--    CLK_I1      : in  std_logic;
--    CLK_I2      : in  std_logic;
--    CLK_I3      : in  std_logic;
--    CLK_I4      : in  std_logic;
--    CLK_I5      : in  std_logic;
--    CLK_I6      : in  std_logic;
--    CLK_I7      : in  std_logic;
--    CLK_I8      : in  std_logic;

    PRE_SG_I    : in  std_logic;
    PRE_EN_I    : in  std_logic;

    PRE_IS_I1   : in  std_logic;
    PRE_IS_I2   : in  std_logic;
    PRE_IS_I3   : in  std_logic;
    PRE_IS_I4   : in  std_logic;

    MAIN_SG_I   : in  std_logic;

    MAIN_EN_I1  : in  std_logic;
    MAIN_EN_I2  : in  std_logic;
    MAIN_EN_I3  : in  std_logic;
    MAIN_EN_I4  : in  std_logic;
    MAIN_EN_I5  : in  std_logic;
    MAIN_EN_I6  : in  std_logic;

    MARG_S_I1   : in  std_logic;
    MARG_S_I2   : in  std_logic;
    MARG_S_I3   : in  std_logic;
    MARG_S_I4   : in  std_logic;

    MARG_IS_I1  : in  std_logic;
    MARG_IS_I2  : in  std_logic;
    MARG_IS_I3  : in  std_logic;
    MARG_IS_I4  : in  std_logic;

    MARG_SV_I1  : in  std_logic;
    MARG_SV_I2  : in  std_logic;
    MARG_SV_I3  : in  std_logic;
    MARG_SV_I4  : in  std_logic;
    MARG_SV_I5  : in  std_logic;

    MARG_ISV_I1 : in  std_logic;
    MARG_ISV_I2 : in  std_logic;
    MARG_ISV_I3 : in  std_logic;
    MARG_ISV_I4 : in  std_logic;
    MARG_ISV_I5 : in  std_logic;

    POST_EN_I1  : in  std_logic;
    POST_EN_I2  : in  std_logic;
    POST_EN_I3  : in  std_logic;
    POST_EN_I4  : in  std_logic;
    POST_EN_I5  : in  std_logic;

    POST_SG_I   : in  std_logic;

    POST_IS_I1  : in  std_logic;
    POST_IS_I2  : in  std_logic;
    POST_IS_I3  : in  std_logic;
    POST_IS_I4  : in  std_logic;

    POST_ISV_I1 : in  std_logic;
    POST_ISV_I2 : in  std_logic;
    POST_ISV_I3 : in  std_logic;
    POST_ISV_I4 : in  std_logic;

    TX_SEL_I1   : in  std_logic;
    TX_SEL_I2   : in  std_logic;
    TX_SEL_I3   : in  std_logic;
    TX_SEL_I4   : in  std_logic;
    TX_SEL_I5   : in  std_logic;
    TX_SEL_I6   : in  std_logic;

    CT_CAP_I1   : in  std_logic;
    CT_CAP_I2   : in  std_logic;
    CT_CAP_I3   : in  std_logic;
    CT_CAP_I4   : in  std_logic;

    CT_RESP_I1  : in  std_logic;
    CT_RESP_I2  : in  std_logic;
    CT_RESP_I3  : in  std_logic;
    CT_RESP_I4  : in  std_logic;

    CT_RESN_I1  : in  std_logic;
    CT_RESN_I2  : in  std_logic;
    CT_RESN_I3  : in  std_logic;
    CT_RESN_I4  : in  std_logic;

    M_EYE_I     : in  std_logic;

    RX_SEL_I1   : in  std_logic;
    RX_SEL_I2   : in  std_logic;
    RX_SEL_I3   : in  std_logic;
    RX_SEL_I4   : in  std_logic;
    RX_SEL_I5   : in  std_logic;
    RX_SEL_I6   : in  std_logic;

    PLL_RN_I    : in  std_logic;
    RST_N_I     : in  std_logic;

    CAL_1P_I1   : in  std_logic;
    CAL_1P_I2   : in  std_logic;
    CAL_1P_I3   : in  std_logic;
    CAL_1P_I4   : in  std_logic;
    CAL_1P_I5   : in  std_logic;
    CAL_1P_I6   : in  std_logic;
    CAL_1P_I7   : in  std_logic;
    CAL_1P_I8   : in  std_logic;

    CAL_2N_I1   : in  std_logic;
    CAL_2N_I2   : in  std_logic;
    CAL_2N_I3   : in  std_logic;
    CAL_2N_I4   : in  std_logic;
    CAL_2N_I5   : in  std_logic;
    CAL_2N_I6   : in  std_logic;
    CAL_2N_I7   : in  std_logic;
    CAL_2N_I8   : in  std_logic;

    CAL_3N_I1   : in  std_logic;
    CAL_3N_I2   : in  std_logic;
    CAL_3N_I3   : in  std_logic;
    CAL_3N_I4   : in  std_logic;
    CAL_3N_I5   : in  std_logic;
    CAL_3N_I6   : in  std_logic;
    CAL_3N_I7   : in  std_logic;
    CAL_3N_I8   : in  std_logic;

    CAL_4P_I1   : in  std_logic;
    CAL_4P_I2   : in  std_logic;
    CAL_4P_I3   : in  std_logic;
    CAL_4P_I4   : in  std_logic;
    CAL_4P_I5   : in  std_logic;
    CAL_4P_I6   : in  std_logic;
    CAL_4P_I7   : in  std_logic;
    CAL_4P_I8   : in  std_logic;

    CAL_SEL_I1  : in  std_logic;
    CAL_SEL_I2  : in  std_logic;
    CAL_SEL_I3  : in  std_logic;
    CAL_SEL_I4  : in  std_logic;

    CAL_E_I     : in  std_logic;
    LOCK_E_I    : in  std_logic;
    OVS_E_I     : in  std_logic;

    TST_I1      : in  std_logic;
    TST_I2      : in  std_logic;
    TST_I3      : in  std_logic;
    TST_I4      : in  std_logic;
    TST_I5      : in  std_logic;
    TST_I6      : in  std_logic;
    TST_I7      : in  std_logic;
    TST_I8      : in  std_logic;

    CLK_O       : out std_logic;
    LOCK_O      : out std_logic;
    CAL_O       : out std_logic;

    TST_O1      : out std_logic;
    TST_O2      : out std_logic;
    TST_O3      : out std_logic;
    TST_O4      : out std_logic;
    TST_O5      : out std_logic;
    TST_O6      : out std_logic;
    TST_O7      : out std_logic;
    TST_O8      : out std_logic;

    LINK_TX0    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX1    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX2    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX3    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX4    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX5    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX0    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX1    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX2    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX3    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX4    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX5    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);

    CLK_EXT_I   : in  std_logic
);
end NX_PMA_L;

architecture NX_RTL of NX_PMA_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_PMA_L";
    attribute NX_USE of LINK_TX0: signal is "LINK";
    attribute NX_USE of LINK_TX1: signal is "LINK";
    attribute NX_USE of LINK_TX2: signal is "LINK";
    attribute NX_USE of LINK_TX3: signal is "LINK";
    attribute NX_USE of LINK_TX4: signal is "LINK";
    attribute NX_USE of LINK_TX5: signal is "LINK";
    attribute NX_USE of LINK_RX0: signal is "LINK";
    attribute NX_USE of LINK_RX1: signal is "LINK";
    attribute NX_USE of LINK_RX2: signal is "LINK";
    attribute NX_USE of LINK_RX3: signal is "LINK";
    attribute NX_USE of LINK_RX4: signal is "LINK";
    attribute NX_USE of LINK_RX5: signal is "LINK";
begin
end NX_RTL;
--#}}}#

----------------------------------------------------------------------------------------------------

-- =================================================================================================
--   NX_HSSL_FULL_L definition                                                           2019/06/20
-- =================================================================================================

-- NX_HSSL_FULL_L#{{{#
library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

architecture NX_RTL of NX_HSSL_FULL_L is

signal LINK_RX0 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_RX1 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_RX2 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_RX3 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_RX4 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_RX5 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_TX0 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_TX1 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_TX2 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_TX3 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_TX4 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);
signal LINK_TX5 : std_logic_vector(IOC_LINK_SIZE-1 downto 0);

-- component NX_CTX_L#{{{#
component NX_CTX_L
 generic (
     pma_clk_pos          : bit := '0';
     pcs_protocol_size    : bit := '0';
     pcs_8b_scr_sel       : bit := '0';
     pcs_scr_init         : bit_vector(16 downto 0) := (others => '0');
     pcs_scr_bypass       : bit := '0';
     pcs_sync_supported   : bit := '0';
     pcs_replace_bypass   : bit := '0';
     pcs_loopback         : bit := '0';
     pcs_enc_bypass       : bit := '0';
     pcs_polarity         : bit := '0';
     pcs_esistream_fsm_en : bit := '0';
     test                 : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc   : bit := '0';
     pcs_bypass_usr_cdc   : bit := '0';
     pma_loopback         : bit := '0';
     location             : string := ""
 );
port (
    ENC_E_I1 : in  std_logic;
    ENC_E_I2 : in  std_logic;
    ENC_E_I3 : in  std_logic;
    ENC_E_I4 : in  std_logic;
    ENC_E_I5 : in  std_logic;
    ENC_E_I6 : in  std_logic;
    ENC_E_I7 : in  std_logic;
    ENC_E_I8 : in  std_logic;

    CH_K_I1  : in  std_logic;
    CH_K_I2  : in  std_logic;
    CH_K_I3  : in  std_logic;
    CH_K_I4  : in  std_logic;
    CH_K_I5  : in  std_logic;
    CH_K_I6  : in  std_logic;
    CH_K_I7  : in  std_logic;
    CH_K_I8  : in  std_logic;

    SCR_E_I1 : in  std_logic;
    SCR_E_I2 : in  std_logic;
    SCR_E_I3 : in  std_logic;
    SCR_E_I4 : in  std_logic;
    SCR_E_I5 : in  std_logic;
    SCR_E_I6 : in  std_logic;
    SCR_E_I7 : in  std_logic;
    SCR_E_I8 : in  std_logic;

    EOMF_I1  : in  std_logic;
    EOMF_I2  : in  std_logic;
    EOMF_I3  : in  std_logic;
    EOMF_I4  : in  std_logic;
    EOMF_I5  : in  std_logic;
    EOMF_I6  : in  std_logic;
    EOMF_I7  : in  std_logic;
    EOMF_I8  : in  std_logic;

    EOF_I1   : in  std_logic;
    EOF_I2   : in  std_logic;
    EOF_I3   : in  std_logic;
    EOF_I4   : in  std_logic;
    EOF_I5   : in  std_logic;
    EOF_I6   : in  std_logic;
    EOF_I7   : in  std_logic;
    EOF_I8   : in  std_logic;

    REP_E_I  : in  std_logic;
    RST_N_I  : in  std_logic;

    TST_I1   : in  std_logic;
    TST_I2   : in  std_logic;
    TST_I3   : in  std_logic;
    TST_I4   : in  std_logic;

    DATA_I1  : in  std_logic;
    DATA_I2  : in  std_logic;
    DATA_I3  : in  std_logic;
    DATA_I4  : in  std_logic;
    DATA_I5  : in  std_logic;
    DATA_I6  : in  std_logic;
    DATA_I7  : in  std_logic;
    DATA_I8  : in  std_logic;
    DATA_I9  : in  std_logic;
    DATA_I10 : in  std_logic;
    DATA_I11 : in  std_logic;
    DATA_I12 : in  std_logic;
    DATA_I13 : in  std_logic;
    DATA_I14 : in  std_logic;
    DATA_I15 : in  std_logic;
    DATA_I16 : in  std_logic;
    DATA_I17 : in  std_logic;
    DATA_I18 : in  std_logic;
    DATA_I19 : in  std_logic;
    DATA_I20 : in  std_logic;
    DATA_I21 : in  std_logic;
    DATA_I22 : in  std_logic;
    DATA_I23 : in  std_logic;
    DATA_I24 : in  std_logic;
    DATA_I25 : in  std_logic;
    DATA_I26 : in  std_logic;
    DATA_I27 : in  std_logic;
    DATA_I28 : in  std_logic;
    DATA_I29 : in  std_logic;
    DATA_I30 : in  std_logic;
    DATA_I31 : in  std_logic;
    DATA_I32 : in  std_logic;
    DATA_I33 : in  std_logic;
    DATA_I34 : in  std_logic;
    DATA_I35 : in  std_logic;
    DATA_I36 : in  std_logic;
    DATA_I37 : in  std_logic;
    DATA_I38 : in  std_logic;
    DATA_I39 : in  std_logic;
    DATA_I40 : in  std_logic;
    DATA_I41 : in  std_logic;
    DATA_I42 : in  std_logic;
    DATA_I43 : in  std_logic;
    DATA_I44 : in  std_logic;
    DATA_I45 : in  std_logic;
    DATA_I46 : in  std_logic;
    DATA_I47 : in  std_logic;
    DATA_I48 : in  std_logic;
    DATA_I49 : in  std_logic;
    DATA_I50 : in  std_logic;
    DATA_I51 : in  std_logic;
    DATA_I52 : in  std_logic;
    DATA_I53 : in  std_logic;
    DATA_I54 : in  std_logic;
    DATA_I55 : in  std_logic;
    DATA_I56 : in  std_logic;
    DATA_I57 : in  std_logic;
    DATA_I58 : in  std_logic;
    DATA_I59 : in  std_logic;
    DATA_I60 : in  std_logic;
    DATA_I61 : in  std_logic;
    DATA_I62 : in  std_logic;
    DATA_I63 : in  std_logic;
    DATA_I64 : in  std_logic;

    TST_O1   : out std_logic;
    TST_O2   : out std_logic;
    TST_O3   : out std_logic;
    TST_O4   : out std_logic;

    BUSY_O   : out std_logic;
    CLK_E_I  : in  std_logic;

    LINK     : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);

    TX_O     : out std_logic
);
end component;
--#}}}#

-- component NX_CRX_L#{{{#
component NX_CRX_L
 generic (
     test                         : bit_vector(1 downto 0) := (others => '0');
     pcs_bypass_pma_cdc           : bit := '0';
     pcs_bypass_usr_cdc           : bit := '0';
     pcs_debug_en                 : bit := '0';
     pcs_fsm_watchdog_en          : bit := '0';
     pma_clk_pos                  : bit := '0';
     pcs_protocol_size            : bit := '0';
     pcs_loopback                 : bit := '0';
     pcs_polarity                 : bit := '0';
     pcs_p_comma_en               : bit := '0';
     pcs_p_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_m_comma_en               : bit := '0';
     pcs_m_comma_val              : bit_vector(9 downto 0) := (others => '0');
     pcs_comma_mask               : bit_vector(9 downto 0) := (others => '0');
     pcs_nb_comma_bef_realign     : bit_vector(1 downto 0) := (others => '0');
     pcs_align_bypass             : bit := '0';
     pcs_dec_bypass               : bit := '0';
     pcs_el_buff_max_comp         : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_diff_bef_comp    : bit_vector(2 downto 0) := (others => '0');
     pcs_el_buff_only_one_skp     : bit := '0';
     pcs_el_buff_underflow_handle : bit := '0';
     pcs_el_buff_skp_seq_size     : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_char_0       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_1       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_2       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_char_3       : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_size  : bit_vector(1 downto 0) := (others => '0');
     pcs_el_buff_skp_header_0     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_1     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_2     : bit_vector(8 downto 0) := (others => '0');
     pcs_el_buff_skp_header_3     : bit_vector(8 downto 0) := (others => '0');
     pcs_buffers_use_cdc          : bit := '0';
     pcs_buffers_bypass           : bit := '0';
     pcs_sync_supported           : bit := '0';
     pcs_replace_bypass           : bit := '0';
     pcs_dscr_bypass              : bit := '0';
     pcs_8b_dscr_sel              : bit := '0';
     pcs_fsm_sel                  : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divf_en_n            : bit := '0';
     pma_pll_divm_en_n            : bit := '0';
     pma_pll_divn_en_n            : bit := '0';
     pma_cdr_cp                   : bit_vector(3 downto 0) := (others => '0');
     pma_ctrl_term                : bit_vector(5 downto 0) := (others => '0');
     pma_pll_cpump_n              : bit_vector(2 downto 0) := (others => '0');
     pma_pll_divf                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divm                 : bit_vector(1 downto 0) := (others => '0');
     pma_pll_divn                 : bit := '0';
     pma_loopback                 : bit := '0';
     location                     : string := ""
 );
port (
    DSCR_E_I  : in  std_logic;
    DEC_E_I   : in  std_logic;
    ALIGN_E_I : in  std_logic;
    ALIGN_S_I : in  std_logic;
    REP_E_I   : in  std_logic;
    BUF_R_I   : in  std_logic;

    OVS_BS_I1 : in  std_logic;
    OVS_BS_I2 : in  std_logic;

    BUF_FE_I  : in  std_logic;
    RST_N_I   : in  std_logic;
    CDR_R_I   : in  std_logic;
    CKG_RN_I  : in  std_logic;
    PLL_RN_I  : in  std_logic;

    TST_I1    : in  std_logic;
    TST_I2    : in  std_logic;
    TST_I3    : in  std_logic;
    TST_I4    : in  std_logic;

    LOS_O     : out std_logic;

    DATA_O1   : out std_logic;
    DATA_O2   : out std_logic;
    DATA_O3   : out std_logic;
    DATA_O4   : out std_logic;
    DATA_O5   : out std_logic;
    DATA_O6   : out std_logic;
    DATA_O7   : out std_logic;
    DATA_O8   : out std_logic;
    DATA_O9   : out std_logic;
    DATA_O10  : out std_logic;
    DATA_O11  : out std_logic;
    DATA_O12  : out std_logic;
    DATA_O13  : out std_logic;
    DATA_O14  : out std_logic;
    DATA_O15  : out std_logic;
    DATA_O16  : out std_logic;
    DATA_O17  : out std_logic;
    DATA_O18  : out std_logic;
    DATA_O19  : out std_logic;
    DATA_O20  : out std_logic;
    DATA_O21  : out std_logic;
    DATA_O22  : out std_logic;
    DATA_O23  : out std_logic;
    DATA_O24  : out std_logic;
    DATA_O25  : out std_logic;
    DATA_O26  : out std_logic;
    DATA_O27  : out std_logic;
    DATA_O28  : out std_logic;
    DATA_O29  : out std_logic;
    DATA_O30  : out std_logic;
    DATA_O31  : out std_logic;
    DATA_O32  : out std_logic;
    DATA_O33  : out std_logic;
    DATA_O34  : out std_logic;
    DATA_O35  : out std_logic;
    DATA_O36  : out std_logic;
    DATA_O37  : out std_logic;
    DATA_O38  : out std_logic;
    DATA_O39  : out std_logic;
    DATA_O40  : out std_logic;
    DATA_O41  : out std_logic;
    DATA_O42  : out std_logic;
    DATA_O43  : out std_logic;
    DATA_O44  : out std_logic;
    DATA_O45  : out std_logic;
    DATA_O46  : out std_logic;
    DATA_O47  : out std_logic;
    DATA_O48  : out std_logic;
    DATA_O49  : out std_logic;
    DATA_O50  : out std_logic;
    DATA_O51  : out std_logic;
    DATA_O52  : out std_logic;
    DATA_O53  : out std_logic;
    DATA_O54  : out std_logic;
    DATA_O55  : out std_logic;
    DATA_O56  : out std_logic;
    DATA_O57  : out std_logic;
    DATA_O58  : out std_logic;
    DATA_O59  : out std_logic;
    DATA_O60  : out std_logic;
    DATA_O61  : out std_logic;
    DATA_O62  : out std_logic;
    DATA_O63  : out std_logic;
    DATA_O64  : out std_logic;

    CH_COM_O1 : out std_logic;
    CH_COM_O2 : out std_logic;
    CH_COM_O3 : out std_logic;
    CH_COM_O4 : out std_logic;
    CH_COM_O5 : out std_logic;
    CH_COM_O6 : out std_logic;
    CH_COM_O7 : out std_logic;
    CH_COM_O8 : out std_logic;

    CH_K_O1   : out std_logic;
    CH_K_O2   : out std_logic;
    CH_K_O3   : out std_logic;
    CH_K_O4   : out std_logic;
    CH_K_O5   : out std_logic;
    CH_K_O6   : out std_logic;
    CH_K_O7   : out std_logic;
    CH_K_O8   : out std_logic;

    NIT_O1    : out std_logic;
    NIT_O2    : out std_logic;
    NIT_O3    : out std_logic;
    NIT_O4    : out std_logic;
    NIT_O5    : out std_logic;
    NIT_O6    : out std_logic;
    NIT_O7    : out std_logic;
    NIT_O8    : out std_logic;

    D_ERR_O1  : out std_logic;
    D_ERR_O2  : out std_logic;
    D_ERR_O3  : out std_logic;
    D_ERR_O4  : out std_logic;
    D_ERR_O5  : out std_logic;
    D_ERR_O6  : out std_logic;
    D_ERR_O7  : out std_logic;
    D_ERR_O8  : out std_logic;

    CH_A_O1   : out std_logic;
    CH_A_O2   : out std_logic;
    CH_A_O3   : out std_logic;
    CH_A_O4   : out std_logic;
    CH_A_O5   : out std_logic;
    CH_A_O6   : out std_logic;
    CH_A_O7   : out std_logic;
    CH_A_O8   : out std_logic;
    CH_F_O1   : out std_logic;
    CH_F_O2   : out std_logic;
    CH_F_O3   : out std_logic;
    CH_F_O4   : out std_logic;
    CH_F_O5   : out std_logic;
    CH_F_O6   : out std_logic;
    CH_F_O7   : out std_logic;
    CH_F_O8   : out std_logic;

    ALIGN_O   : out std_logic;
    BUSY_O    : out std_logic;

    TST_O1    : out std_logic;
    TST_O2    : out std_logic;
    TST_O3    : out std_logic;
    TST_O4    : out std_logic;
    TST_O5    : out std_logic;
    TST_O6    : out std_logic;
    TST_O7    : out std_logic;
    TST_O8    : out std_logic;

    LOCK_O    : out std_logic;

    LINK      : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);

    RX_I      : in  std_logic
);
end component;
--#}}}#

-- component NX_PMA_L#{{{#
component NX_PMA_L
 generic (
     main_test                   : bit_vector(7 downto 0) := (others => '0');
     rx_pma_half_step            : bit := '0';
     pll_pma_int_data_len        : bit := '0';
     pll_pma_cpump_n             : bit_vector(2 downto 0) := (others => '0');
     pll_pma_divf                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divm                : bit_vector(1 downto 0) := (others => '0');
     pll_pma_divn                : bit := '0';
     pll_pma_lvds_mux            : bit := '0';
     pll_pma_mux_ckref           : bit := '0';
     pll_pma_divf_en_n           : bit := '0';
     pll_pma_divm_en_n           : bit := '0';
     pll_pma_divn_en_n           : bit := '0';
     main_clk_to_fabric_div_mode : bit := '0';
     main_clk_to_fabric_div_en   : bit := '0';
     main_clk_to_fabric_sel      : bit := '0';
     main_use_only_usr_clock     : bit := '0';
     main_use_pcs_clk_2          : bit := '0';
     pcs_word_len                : bit_vector(1 downto 0) := (others => '0');
     pcs_ovs_mode                : bit := '0';
     pcs_pll_lock_count          : bit_vector(2 downto 0) := (others => '0');
     location                    : string := ""
 );
port (
    CLK_USER_I  : in  std_logic;
    CLK_REF_I   : in  std_logic;
--    CLK_I1      : in  std_logic;
--    CLK_I2      : in  std_logic;
--    CLK_I3      : in  std_logic;
--    CLK_I4      : in  std_logic;
--    CLK_I5      : in  std_logic;
--    CLK_I6      : in  std_logic;
--    CLK_I7      : in  std_logic;
--    CLK_I8      : in  std_logic;

    PRE_SG_I    : in  std_logic;
    PRE_EN_I    : in  std_logic;

    PRE_IS_I1   : in  std_logic;
    PRE_IS_I2   : in  std_logic;
    PRE_IS_I3   : in  std_logic;
    PRE_IS_I4   : in  std_logic;

    MAIN_SG_I   : in  std_logic;

    MAIN_EN_I1  : in  std_logic;
    MAIN_EN_I2  : in  std_logic;
    MAIN_EN_I3  : in  std_logic;
    MAIN_EN_I4  : in  std_logic;
    MAIN_EN_I5  : in  std_logic;
    MAIN_EN_I6  : in  std_logic;

    MARG_S_I1   : in  std_logic;
    MARG_S_I2   : in  std_logic;
    MARG_S_I3   : in  std_logic;
    MARG_S_I4   : in  std_logic;

    MARG_IS_I1  : in  std_logic;
    MARG_IS_I2  : in  std_logic;
    MARG_IS_I3  : in  std_logic;
    MARG_IS_I4  : in  std_logic;

    MARG_SV_I1  : in  std_logic;
    MARG_SV_I2  : in  std_logic;
    MARG_SV_I3  : in  std_logic;
    MARG_SV_I4  : in  std_logic;
    MARG_SV_I5  : in  std_logic;

    MARG_ISV_I1 : in  std_logic;
    MARG_ISV_I2 : in  std_logic;
    MARG_ISV_I3 : in  std_logic;
    MARG_ISV_I4 : in  std_logic;
    MARG_ISV_I5 : in  std_logic;

    POST_EN_I1  : in  std_logic;
    POST_EN_I2  : in  std_logic;
    POST_EN_I3  : in  std_logic;
    POST_EN_I4  : in  std_logic;
    POST_EN_I5  : in  std_logic;

    POST_SG_I   : in  std_logic;

    POST_IS_I1  : in  std_logic;
    POST_IS_I2  : in  std_logic;
    POST_IS_I3  : in  std_logic;
    POST_IS_I4  : in  std_logic;

    POST_ISV_I1 : in  std_logic;
    POST_ISV_I2 : in  std_logic;
    POST_ISV_I3 : in  std_logic;
    POST_ISV_I4 : in  std_logic;

    TX_SEL_I1   : in  std_logic;
    TX_SEL_I2   : in  std_logic;
    TX_SEL_I3   : in  std_logic;
    TX_SEL_I4   : in  std_logic;
    TX_SEL_I5   : in  std_logic;
    TX_SEL_I6   : in  std_logic;

    CT_CAP_I1   : in  std_logic;
    CT_CAP_I2   : in  std_logic;
    CT_CAP_I3   : in  std_logic;
    CT_CAP_I4   : in  std_logic;

    CT_RESP_I1  : in  std_logic;
    CT_RESP_I2  : in  std_logic;
    CT_RESP_I3  : in  std_logic;
    CT_RESP_I4  : in  std_logic;

    CT_RESN_I1  : in  std_logic;
    CT_RESN_I2  : in  std_logic;
    CT_RESN_I3  : in  std_logic;
    CT_RESN_I4  : in  std_logic;

    M_EYE_I     : in  std_logic;

    RX_SEL_I1   : in  std_logic;
    RX_SEL_I2   : in  std_logic;
    RX_SEL_I3   : in  std_logic;
    RX_SEL_I4   : in  std_logic;
    RX_SEL_I5   : in  std_logic;
    RX_SEL_I6   : in  std_logic;

    PLL_RN_I    : in  std_logic;
    RST_N_I     : in  std_logic;

    CAL_1P_I1   : in  std_logic;
    CAL_1P_I2   : in  std_logic;
    CAL_1P_I3   : in  std_logic;
    CAL_1P_I4   : in  std_logic;
    CAL_1P_I5   : in  std_logic;
    CAL_1P_I6   : in  std_logic;
    CAL_1P_I7   : in  std_logic;
    CAL_1P_I8   : in  std_logic;

    CAL_2N_I1   : in  std_logic;
    CAL_2N_I2   : in  std_logic;
    CAL_2N_I3   : in  std_logic;
    CAL_2N_I4   : in  std_logic;
    CAL_2N_I5   : in  std_logic;
    CAL_2N_I6   : in  std_logic;
    CAL_2N_I7   : in  std_logic;
    CAL_2N_I8   : in  std_logic;

    CAL_3N_I1   : in  std_logic;
    CAL_3N_I2   : in  std_logic;
    CAL_3N_I3   : in  std_logic;
    CAL_3N_I4   : in  std_logic;
    CAL_3N_I5   : in  std_logic;
    CAL_3N_I6   : in  std_logic;
    CAL_3N_I7   : in  std_logic;
    CAL_3N_I8   : in  std_logic;

    CAL_4P_I1   : in  std_logic;
    CAL_4P_I2   : in  std_logic;
    CAL_4P_I3   : in  std_logic;
    CAL_4P_I4   : in  std_logic;
    CAL_4P_I5   : in  std_logic;
    CAL_4P_I6   : in  std_logic;
    CAL_4P_I7   : in  std_logic;
    CAL_4P_I8   : in  std_logic;

    CAL_SEL_I1  : in  std_logic;
    CAL_SEL_I2  : in  std_logic;
    CAL_SEL_I3  : in  std_logic;
    CAL_SEL_I4  : in  std_logic;

    CAL_E_I     : in  std_logic;
    LOCK_E_I    : in  std_logic;
    OVS_E_I     : in  std_logic;

    TST_I1      : in  std_logic;
    TST_I2      : in  std_logic;
    TST_I3      : in  std_logic;
    TST_I4      : in  std_logic;
    TST_I5      : in  std_logic;
    TST_I6      : in  std_logic;
    TST_I7      : in  std_logic;
    TST_I8      : in  std_logic;

    CLK_O       : out std_logic;
    LOCK_O      : out std_logic;
    CAL_O       : out std_logic;

    TST_O1      : out std_logic;
    TST_O2      : out std_logic;
    TST_O3      : out std_logic;
    TST_O4      : out std_logic;
    TST_O5      : out std_logic;
    TST_O6      : out std_logic;
    TST_O7      : out std_logic;
    TST_O8      : out std_logic;

    LINK_TX0    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX1    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX2    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX3    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX4    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_TX5    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX0    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX1    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX2    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX3    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX4    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);
    LINK_RX5    : inout std_logic_vector(IOC_LINK_SIZE-1 downto 0);

    CLK_EXT_I   : in  std_logic
);
end component;
--#}}}#

begin

-- ctrl: NX_PMA_L#{{{#
ctrl: NX_PMA_L generic map (
    main_test                   => cfg_main_i(33 downto 26)
  , rx_pma_half_step            => cfg_main_i(25)
  , pll_pma_int_data_len        => cfg_main_i(24)
  , pll_pma_cpump_n             => cfg_main_i(23 downto 21)
  , pll_pma_divf                => cfg_main_i(20 downto 19)
  , pll_pma_divm                => cfg_main_i(18 downto 17)
  , pll_pma_divn                => cfg_main_i(16)
  , pll_pma_lvds_mux            => cfg_main_i(15)
  , pll_pma_mux_ckref           => cfg_main_i(14)
  , pll_pma_divf_en_n           => cfg_main_i(13)
  , pll_pma_divm_en_n           => cfg_main_i(12)
  , pll_pma_divn_en_n           => cfg_main_i(11)
  , main_clk_to_fabric_div_mode => cfg_main_i(10)
  , main_clk_to_fabric_div_en   => cfg_main_i(9)
  , main_clk_to_fabric_sel      => cfg_main_i(8)
  , main_use_only_usr_clock     => cfg_main_i(7)
  , main_use_pcs_clk_2          => cfg_main_i(6)
  , pcs_word_len                => cfg_main_i(5 downto 4)
  , pcs_ovs_mode                => cfg_main_i(3)
  , pcs_pll_lock_count          => cfg_main_i(2 downto 0)
  , location                    => location & ":CC.PMA"
 )
port map (
    CLK_USER_I  => hssl_clk_user_i
  , CLK_REF_I   => hssl_clk_ref_i
--    CLK_I1      => hssl_clock_i(0)
--  , CLK_I2      => hssl_clock_i(1)
--  , CLK_I3      => hssl_clock_i(2)
--  , CLK_I4      => hssl_clock_i(3)
--  , CLK_I5      => hssl_clock_i(4)
--  , CLK_I6      => hssl_clock_i(5)
--  , CLK_I7      => hssl_clock_i(6)
--  , CLK_I8      => hssl_clock_i(7)

  , PRE_SG_I    => usr_com_tx_pma_pre_sign_i
  , PRE_EN_I    => usr_com_tx_pma_pre_en_i

  , PRE_IS_I1   => usr_com_tx_pma_pre_input_sel_i(0)
  , PRE_IS_I2   => usr_com_tx_pma_pre_input_sel_i(1)
  , PRE_IS_I3   => usr_com_tx_pma_pre_input_sel_i(2)
  , PRE_IS_I4   => usr_com_tx_pma_pre_input_sel_i(3)

  , MAIN_SG_I   => usr_com_tx_pma_main_sign_i

  , MAIN_EN_I1  => usr_com_tx_pma_main_en_i(0)
  , MAIN_EN_I2  => usr_com_tx_pma_main_en_i(1)
  , MAIN_EN_I3  => usr_com_tx_pma_main_en_i(2)
  , MAIN_EN_I4  => usr_com_tx_pma_main_en_i(3)
  , MAIN_EN_I5  => usr_com_tx_pma_main_en_i(4)
  , MAIN_EN_I6  => usr_com_tx_pma_main_en_i(5)

  , MARG_S_I1   => usr_com_tx_pma_margin_sel_i(0)
  , MARG_S_I2   => usr_com_tx_pma_margin_sel_i(1)
  , MARG_S_I3   => usr_com_tx_pma_margin_sel_i(2)
  , MARG_S_I4   => usr_com_tx_pma_margin_sel_i(3)

  , MARG_IS_I1  => usr_com_tx_pma_margin_input_sel_i(0)
  , MARG_IS_I2  => usr_com_tx_pma_margin_input_sel_i(1)
  , MARG_IS_I3  => usr_com_tx_pma_margin_input_sel_i(2)
  , MARG_IS_I4  => usr_com_tx_pma_margin_input_sel_i(3)

  , MARG_SV_I1  => usr_com_tx_pma_margin_sel_var_i(0)
  , MARG_SV_I2  => usr_com_tx_pma_margin_sel_var_i(1)
  , MARG_SV_I3  => usr_com_tx_pma_margin_sel_var_i(2)
  , MARG_SV_I4  => usr_com_tx_pma_margin_sel_var_i(3)
  , MARG_SV_I5  => usr_com_tx_pma_margin_sel_var_i(4)

  , MARG_ISV_I1 => usr_com_tx_pma_margin_input_sel_var_i(0)
  , MARG_ISV_I2 => usr_com_tx_pma_margin_input_sel_var_i(1)
  , MARG_ISV_I3 => usr_com_tx_pma_margin_input_sel_var_i(2)
  , MARG_ISV_I4 => usr_com_tx_pma_margin_input_sel_var_i(3)
  , MARG_ISV_I5 => usr_com_tx_pma_margin_input_sel_var_i(4)

  , POST_EN_I1  => usr_com_tx_pma_post_en_i(0)
  , POST_EN_I2  => usr_com_tx_pma_post_en_i(1)
  , POST_EN_I3  => usr_com_tx_pma_post_en_i(2)
  , POST_EN_I4  => usr_com_tx_pma_post_en_i(3)
  , POST_EN_I5  => usr_com_tx_pma_post_en_i(4)

  , POST_SG_I   => usr_com_tx_pma_post_sign_i

  , POST_IS_I1  => usr_com_tx_pma_post_input_sel_i(0)
  , POST_IS_I2  => usr_com_tx_pma_post_input_sel_i(1)
  , POST_IS_I3  => usr_com_tx_pma_post_input_sel_i(2)
  , POST_IS_I4  => usr_com_tx_pma_post_input_sel_i(3)

  , POST_ISV_I1 => usr_com_tx_pma_post_input_sel_var_i(0)
  , POST_ISV_I2 => usr_com_tx_pma_post_input_sel_var_i(1)
  , POST_ISV_I3 => usr_com_tx_pma_post_input_sel_var_i(2)
  , POST_ISV_I4 => usr_com_tx_pma_post_input_sel_var_i(3)

  , TX_SEL_I1   => usr_com_ctrl_tx_sel_i(0)
  , TX_SEL_I2   => usr_com_ctrl_tx_sel_i(1)
  , TX_SEL_I3   => usr_com_ctrl_tx_sel_i(2)
  , TX_SEL_I4   => usr_com_ctrl_tx_sel_i(3)
  , TX_SEL_I5   => usr_com_ctrl_tx_sel_i(4)
  , TX_SEL_I6   => usr_com_ctrl_tx_sel_i(5)

  , CT_CAP_I1   => usr_com_rx_pma_ctle_cap_i(0)
  , CT_CAP_I2   => usr_com_rx_pma_ctle_cap_i(1)
  , CT_CAP_I3   => usr_com_rx_pma_ctle_cap_i(2)
  , CT_CAP_I4   => usr_com_rx_pma_ctle_cap_i(3)

  , CT_RESP_I1  => usr_com_rx_pma_ctle_resp_i(0)
  , CT_RESP_I2  => usr_com_rx_pma_ctle_resp_i(1)
  , CT_RESP_I3  => usr_com_rx_pma_ctle_resp_i(2)
  , CT_RESP_I4  => usr_com_rx_pma_ctle_resp_i(3)

  , CT_RESN_I1  => usr_com_rx_pma_ctle_resn_i(0)
  , CT_RESN_I2  => usr_com_rx_pma_ctle_resn_i(1)
  , CT_RESN_I3  => usr_com_rx_pma_ctle_resn_i(2)
  , CT_RESN_I4  => usr_com_rx_pma_ctle_resn_i(3)

  , M_EYE_I     => usr_com_rx_pma_m_eye_i

  , RX_SEL_I1   => usr_com_ctrl_rx_sel_i(0)
  , RX_SEL_I2   => usr_com_ctrl_rx_sel_i(1)
  , RX_SEL_I3   => usr_com_ctrl_rx_sel_i(2)
  , RX_SEL_I4   => usr_com_ctrl_rx_sel_i(3)
  , RX_SEL_I5   => usr_com_ctrl_rx_sel_i(4)
  , RX_SEL_I6   => usr_com_ctrl_rx_sel_i(5)

  , PLL_RN_I    => usr_pll_pma_rst_n_i
  , RST_N_I     => usr_main_rst_n_i

  , CAL_1P_I1   => usr_calibrate_pma_res_p1_i(0)
  , CAL_1P_I2   => usr_calibrate_pma_res_p1_i(1)
  , CAL_1P_I3   => usr_calibrate_pma_res_p1_i(2)
  , CAL_1P_I4   => usr_calibrate_pma_res_p1_i(3)
  , CAL_1P_I5   => usr_calibrate_pma_res_p1_i(4)
  , CAL_1P_I6   => usr_calibrate_pma_res_p1_i(5)
  , CAL_1P_I7   => usr_calibrate_pma_res_p1_i(6)
  , CAL_1P_I8   => usr_calibrate_pma_res_p1_i(7)

  , CAL_2N_I1   => usr_calibrate_pma_res_n2_i(0)
  , CAL_2N_I2   => usr_calibrate_pma_res_n2_i(1)
  , CAL_2N_I3   => usr_calibrate_pma_res_n2_i(2)
  , CAL_2N_I4   => usr_calibrate_pma_res_n2_i(3)
  , CAL_2N_I5   => usr_calibrate_pma_res_n2_i(4)
  , CAL_2N_I6   => usr_calibrate_pma_res_n2_i(5)
  , CAL_2N_I7   => usr_calibrate_pma_res_n2_i(6)
  , CAL_2N_I8   => usr_calibrate_pma_res_n2_i(7)

  , CAL_3N_I1   => usr_calibrate_pma_res_n3_i(0)
  , CAL_3N_I2   => usr_calibrate_pma_res_n3_i(1)
  , CAL_3N_I3   => usr_calibrate_pma_res_n3_i(2)
  , CAL_3N_I4   => usr_calibrate_pma_res_n3_i(3)
  , CAL_3N_I5   => usr_calibrate_pma_res_n3_i(4)
  , CAL_3N_I6   => usr_calibrate_pma_res_n3_i(5)
  , CAL_3N_I7   => usr_calibrate_pma_res_n3_i(6)
  , CAL_3N_I8   => usr_calibrate_pma_res_n3_i(7)

  , CAL_4P_I1   => usr_calibrate_pma_res_p4_i(0)
  , CAL_4P_I2   => usr_calibrate_pma_res_p4_i(1)
  , CAL_4P_I3   => usr_calibrate_pma_res_p4_i(2)
  , CAL_4P_I4   => usr_calibrate_pma_res_p4_i(3)
  , CAL_4P_I5   => usr_calibrate_pma_res_p4_i(4)
  , CAL_4P_I6   => usr_calibrate_pma_res_p4_i(5)
  , CAL_4P_I7   => usr_calibrate_pma_res_p4_i(6)
  , CAL_4P_I8   => usr_calibrate_pma_res_p4_i(7)

  , CAL_SEL_I1  => usr_calibrate_pma_sel_i(0)
  , CAL_SEL_I2  => usr_calibrate_pma_sel_i(1)
  , CAL_SEL_I3  => usr_calibrate_pma_sel_i(2)
  , CAL_SEL_I4  => usr_calibrate_pma_sel_i(3)

  , CAL_E_I     => usr_calibrate_pma_en_i
  , LOCK_E_I    => usr_pcs_ctrl_pll_lock_en_i
  , OVS_E_I     => usr_pcs_ctrl_ovs_en_i

  , TST_I1      => usr_main_test_i(0)
  , TST_I2      => usr_main_test_i(1)
  , TST_I3      => usr_main_test_i(2)
  , TST_I4      => usr_main_test_i(3)
  , TST_I5      => usr_main_test_i(4)
  , TST_I6      => usr_main_test_i(5)
  , TST_I7      => usr_main_test_i(6)
  , TST_I8      => usr_main_test_i(7)

  , CLK_O       => hssl_clock_o
  , LOCK_O      => usr_pll_lock_o
  , CAL_O       => usr_calibrate_pma_out_o

  , TST_O1      => usr_main_test_o(0)
  , TST_O2      => usr_main_test_o(1)
  , TST_O3      => usr_main_test_o(2)
  , TST_O4      => usr_main_test_o(3)
  , TST_O5      => usr_main_test_o(4)
  , TST_O6      => usr_main_test_o(5)
  , TST_O7      => usr_main_test_o(6)
  , TST_O8      => usr_main_test_o(7)

  , LINK_TX0    => LINK_TX0
  , LINK_TX1    => LINK_TX1
  , LINK_TX2    => LINK_TX2
  , LINK_TX3    => LINK_TX3
  , LINK_TX4    => LINK_TX4
  , LINK_TX5    => LINK_TX5
  , LINK_RX0    => LINK_RX0
  , LINK_RX1    => LINK_RX1
  , LINK_RX2    => LINK_RX2
  , LINK_RX3    => LINK_RX3
  , LINK_RX4    => LINK_RX4
  , LINK_RX5    => LINK_RX5

  , CLK_EXT_I   => pma_clk_ext_i
);
--#}}}#

-- txlane0: NX_CTX_L#{{{#
txlane0: NX_CTX_L generic map (
   pma_clk_pos          => cfg_tx0_i(31)
 , pcs_protocol_size    => cfg_tx0_i(30)
 , pcs_8b_scr_sel       => cfg_tx0_i(29)
 , pcs_scr_init         => cfg_tx0_i(28 downto 12)
 , pcs_scr_bypass       => cfg_tx0_i(11)
 , pcs_sync_supported   => cfg_tx0_i(10)
 , pcs_replace_bypass   => cfg_tx0_i(9)
 , pcs_enc_bypass       => cfg_tx0_i(8)
 , pcs_loopback         => cfg_tx0_i(7)
 , pcs_polarity         => cfg_tx0_i(6)
 , pcs_esistream_fsm_en => cfg_tx0_i(5)
 , test                 => cfg_tx0_i(4 downto 3)
 , pcs_bypass_pma_cdc   => cfg_tx0_i(2)
 , pcs_bypass_usr_cdc   => cfg_tx0_i(1)
 , pma_loopback         => cfg_tx0_i(0)
 , location             => location & ":C1.TX"
 )
port map (
    ENC_E_I1 => usr_tx0_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx0_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx0_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx0_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx0_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx0_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx0_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx0_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx0_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx0_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx0_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx0_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx0_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx0_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx0_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx0_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx0_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx0_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx0_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx0_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx0_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx0_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx0_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx0_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx0_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx0_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx0_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx0_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx0_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx0_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx0_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx0_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx0_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx0_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx0_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx0_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx0_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx0_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx0_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx0_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx0_ctrl_replace_en_i
  , RST_N_I  => usr_tx0_rst_n_i

  , TST_I1   => usr_tx0_test_i(0)
  , TST_I2   => usr_tx0_test_i(1)
  , TST_I3   => usr_tx0_test_i(2)
  , TST_I4   => usr_tx0_test_i(3)

  , DATA_I1  => usr_tx0_data_i(0)
  , DATA_I2  => usr_tx0_data_i(1)
  , DATA_I3  => usr_tx0_data_i(2)
  , DATA_I4  => usr_tx0_data_i(3)
  , DATA_I5  => usr_tx0_data_i(4)
  , DATA_I6  => usr_tx0_data_i(5)
  , DATA_I7  => usr_tx0_data_i(6)
  , DATA_I8  => usr_tx0_data_i(7)
  , DATA_I9  => usr_tx0_data_i(8)
  , DATA_I10 => usr_tx0_data_i(9)
  , DATA_I11 => usr_tx0_data_i(10)
  , DATA_I12 => usr_tx0_data_i(11)
  , DATA_I13 => usr_tx0_data_i(12)
  , DATA_I14 => usr_tx0_data_i(13)
  , DATA_I15 => usr_tx0_data_i(14)
  , DATA_I16 => usr_tx0_data_i(15)
  , DATA_I17 => usr_tx0_data_i(16)
  , DATA_I18 => usr_tx0_data_i(17)
  , DATA_I19 => usr_tx0_data_i(18)
  , DATA_I20 => usr_tx0_data_i(19)
  , DATA_I21 => usr_tx0_data_i(20)
  , DATA_I22 => usr_tx0_data_i(21)
  , DATA_I23 => usr_tx0_data_i(22)
  , DATA_I24 => usr_tx0_data_i(23)
  , DATA_I25 => usr_tx0_data_i(24)
  , DATA_I26 => usr_tx0_data_i(25)
  , DATA_I27 => usr_tx0_data_i(26)
  , DATA_I28 => usr_tx0_data_i(27)
  , DATA_I29 => usr_tx0_data_i(28)
  , DATA_I30 => usr_tx0_data_i(29)
  , DATA_I31 => usr_tx0_data_i(30)
  , DATA_I32 => usr_tx0_data_i(31)
  , DATA_I33 => usr_tx0_data_i(32)
  , DATA_I34 => usr_tx0_data_i(33)
  , DATA_I35 => usr_tx0_data_i(34)
  , DATA_I36 => usr_tx0_data_i(35)
  , DATA_I37 => usr_tx0_data_i(36)
  , DATA_I38 => usr_tx0_data_i(37)
  , DATA_I39 => usr_tx0_data_i(38)
  , DATA_I40 => usr_tx0_data_i(39)
  , DATA_I41 => usr_tx0_data_i(40)
  , DATA_I42 => usr_tx0_data_i(41)
  , DATA_I43 => usr_tx0_data_i(42)
  , DATA_I44 => usr_tx0_data_i(43)
  , DATA_I45 => usr_tx0_data_i(44)
  , DATA_I46 => usr_tx0_data_i(45)
  , DATA_I47 => usr_tx0_data_i(46)
  , DATA_I48 => usr_tx0_data_i(47)
  , DATA_I49 => usr_tx0_data_i(48)
  , DATA_I50 => usr_tx0_data_i(49)
  , DATA_I51 => usr_tx0_data_i(50)
  , DATA_I52 => usr_tx0_data_i(51)
  , DATA_I53 => usr_tx0_data_i(52)
  , DATA_I54 => usr_tx0_data_i(53)
  , DATA_I55 => usr_tx0_data_i(54)
  , DATA_I56 => usr_tx0_data_i(55)
  , DATA_I57 => usr_tx0_data_i(56)
  , DATA_I58 => usr_tx0_data_i(57)
  , DATA_I59 => usr_tx0_data_i(58)
  , DATA_I60 => usr_tx0_data_i(59)
  , DATA_I61 => usr_tx0_data_i(60)
  , DATA_I62 => usr_tx0_data_i(61)
  , DATA_I63 => usr_tx0_data_i(62)
  , DATA_I64 => usr_tx0_data_i(63)

  , TST_O1   => usr_tx0_test_o(0)
  , TST_O2   => usr_tx0_test_o(1)
  , TST_O3   => usr_tx0_test_o(2)
  , TST_O4   => usr_tx0_test_o(3)

  , BUSY_O   => usr_tx0_busy_o
  , CLK_E_I  => usr_tx0_pma_clk_en_i

  , LINK     => LINK_TX0

  , TX_O     => pma_tx0_o
);
--#}}}#

-- rxlane0: NX_CRX_L#{{{#
rxlane0: NX_CRX_L generic map (
    test                         => cfg_rx0_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx0_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx0_i(156)
  , pcs_debug_en                 => cfg_rx0_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx0_i(154)
  , pma_clk_pos                  => cfg_rx0_i(153)
  , pcs_protocol_size            => cfg_rx0_i(152)
  , pcs_loopback                 => cfg_rx0_i(151)
  , pcs_polarity                 => cfg_rx0_i(150)
  , pcs_p_comma_en               => cfg_rx0_i(149)
  , pcs_p_comma_val              => cfg_rx0_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx0_i(138)
  , pcs_m_comma_val              => cfg_rx0_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx0_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx0_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx0_i(115)
  , pcs_dec_bypass               => cfg_rx0_i(114)
  , pcs_el_buff_max_comp         => cfg_rx0_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx0_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx0_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx0_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx0_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx0_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx0_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx0_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx0_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx0_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx0_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx0_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx0_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx0_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx0_i(29)
  , pcs_buffers_bypass           => cfg_rx0_i(28)
  , pcs_sync_supported           => cfg_rx0_i(27)
  , pcs_replace_bypass           => cfg_rx0_i(26)
  , pcs_dscr_bypass              => cfg_rx0_i(25)
  , pcs_8b_dscr_sel              => cfg_rx0_i(24)
  , pcs_fsm_sel                  => cfg_rx0_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx0_i(21)
  , pma_pll_divm_en_n            => cfg_rx0_i(20)
  , pma_pll_divn_en_n            => cfg_rx0_i(19)
  , pma_cdr_cp                   => cfg_rx0_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx0_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx0_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx0_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx0_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx0_i(1)
  , pma_loopback                 => cfg_rx0_i(0)
  , location                     => location & ":C1.RX"
 )
port map (
    DSCR_E_I  => usr_rx0_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx0_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx0_ctrl_align_en_i
  , ALIGN_S_I => usr_rx0_ctrl_align_sync_i
  , REP_E_I   => usr_rx0_ctrl_replace_en_i
  , BUF_R_I   => usr_rx0_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx0_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx0_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx0_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx0_rst_n_i
  , CDR_R_I   => usr_rx0_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx0_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx0_pma_pll_rst_n_i

  , TST_I1    => usr_rx0_test_i(0)
  , TST_I2    => usr_rx0_test_i(1)
  , TST_I3    => usr_rx0_test_i(2)
  , TST_I4    => usr_rx0_test_i(3)

  , LOS_O     => usr_rx0_pma_loss_of_signal_o

  , DATA_O1   => usr_rx0_data_o(0)
  , DATA_O2   => usr_rx0_data_o(1)
  , DATA_O3   => usr_rx0_data_o(2)
  , DATA_O4   => usr_rx0_data_o(3)
  , DATA_O5   => usr_rx0_data_o(4)
  , DATA_O6   => usr_rx0_data_o(5)
  , DATA_O7   => usr_rx0_data_o(6)
  , DATA_O8   => usr_rx0_data_o(7)
  , DATA_O9   => usr_rx0_data_o(8)
  , DATA_O10  => usr_rx0_data_o(9)
  , DATA_O11  => usr_rx0_data_o(10)
  , DATA_O12  => usr_rx0_data_o(11)
  , DATA_O13  => usr_rx0_data_o(12)
  , DATA_O14  => usr_rx0_data_o(13)
  , DATA_O15  => usr_rx0_data_o(14)
  , DATA_O16  => usr_rx0_data_o(15)
  , DATA_O17  => usr_rx0_data_o(16)
  , DATA_O18  => usr_rx0_data_o(17)
  , DATA_O19  => usr_rx0_data_o(18)
  , DATA_O20  => usr_rx0_data_o(19)
  , DATA_O21  => usr_rx0_data_o(20)
  , DATA_O22  => usr_rx0_data_o(21)
  , DATA_O23  => usr_rx0_data_o(22)
  , DATA_O24  => usr_rx0_data_o(23)
  , DATA_O25  => usr_rx0_data_o(24)
  , DATA_O26  => usr_rx0_data_o(25)
  , DATA_O27  => usr_rx0_data_o(26)
  , DATA_O28  => usr_rx0_data_o(27)
  , DATA_O29  => usr_rx0_data_o(28)
  , DATA_O30  => usr_rx0_data_o(29)
  , DATA_O31  => usr_rx0_data_o(30)
  , DATA_O32  => usr_rx0_data_o(31)
  , DATA_O33  => usr_rx0_data_o(32)
  , DATA_O34  => usr_rx0_data_o(33)
  , DATA_O35  => usr_rx0_data_o(34)
  , DATA_O36  => usr_rx0_data_o(35)
  , DATA_O37  => usr_rx0_data_o(36)
  , DATA_O38  => usr_rx0_data_o(37)
  , DATA_O39  => usr_rx0_data_o(38)
  , DATA_O40  => usr_rx0_data_o(39)
  , DATA_O41  => usr_rx0_data_o(40)
  , DATA_O42  => usr_rx0_data_o(41)
  , DATA_O43  => usr_rx0_data_o(42)
  , DATA_O44  => usr_rx0_data_o(43)
  , DATA_O45  => usr_rx0_data_o(44)
  , DATA_O46  => usr_rx0_data_o(45)
  , DATA_O47  => usr_rx0_data_o(46)
  , DATA_O48  => usr_rx0_data_o(47)
  , DATA_O49  => usr_rx0_data_o(48)
  , DATA_O50  => usr_rx0_data_o(49)
  , DATA_O51  => usr_rx0_data_o(50)
  , DATA_O52  => usr_rx0_data_o(51)
  , DATA_O53  => usr_rx0_data_o(52)
  , DATA_O54  => usr_rx0_data_o(53)
  , DATA_O55  => usr_rx0_data_o(54)
  , DATA_O56  => usr_rx0_data_o(55)
  , DATA_O57  => usr_rx0_data_o(56)
  , DATA_O58  => usr_rx0_data_o(57)
  , DATA_O59  => usr_rx0_data_o(58)
  , DATA_O60  => usr_rx0_data_o(59)
  , DATA_O61  => usr_rx0_data_o(60)
  , DATA_O62  => usr_rx0_data_o(61)
  , DATA_O63  => usr_rx0_data_o(62)
  , DATA_O64  => usr_rx0_data_o(63)

  , CH_COM_O1 => usr_rx0_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx0_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx0_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx0_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx0_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx0_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx0_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx0_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx0_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx0_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx0_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx0_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx0_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx0_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx0_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx0_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx0_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx0_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx0_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx0_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx0_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx0_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx0_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx0_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx0_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx0_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx0_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx0_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx0_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx0_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx0_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx0_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx0_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx0_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx0_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx0_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx0_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx0_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx0_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx0_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx0_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx0_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx0_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx0_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx0_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx0_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx0_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx0_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx0_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx0_busy_o

  , TST_O1    => usr_rx0_test_o(0)
  , TST_O2    => usr_rx0_test_o(1)
  , TST_O3    => usr_rx0_test_o(2)
  , TST_O4    => usr_rx0_test_o(3)
  , TST_O5    => usr_rx0_test_o(4)
  , TST_O6    => usr_rx0_test_o(5)
  , TST_O7    => usr_rx0_test_o(6)
  , TST_O8    => usr_rx0_test_o(7)

  , LOCK_O    => usr_rx0_pll_lock_o

  , LINK      => LINK_RX0

  , RX_I      => pma_rx0_i
);
--#}}}#

-- txlane1: NX_CTX_L#{{{#
txlane1: NX_CTX_L generic map (
   pma_clk_pos          => cfg_tx1_i(31)
 , pcs_protocol_size    => cfg_tx1_i(30)
 , pcs_8b_scr_sel       => cfg_tx1_i(29)
 , pcs_scr_init         => cfg_tx1_i(28 downto 12)
 , pcs_scr_bypass       => cfg_tx1_i(11)
 , pcs_sync_supported   => cfg_tx1_i(10)
 , pcs_replace_bypass   => cfg_tx1_i(9)
 , pcs_enc_bypass       => cfg_tx1_i(8)
 , pcs_loopback         => cfg_tx1_i(7)
 , pcs_polarity         => cfg_tx1_i(6)
 , pcs_esistream_fsm_en => cfg_tx1_i(5)
 , test                 => cfg_tx1_i(4 downto 3)
 , pcs_bypass_pma_cdc   => cfg_tx1_i(2)
 , pcs_bypass_usr_cdc   => cfg_tx1_i(1)
 , pma_loopback         => cfg_tx1_i(0)
 , location             => location & ":C2.TX"
 )
port map (
    ENC_E_I1 => usr_tx1_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx1_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx1_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx1_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx1_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx1_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx1_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx1_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx1_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx1_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx1_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx1_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx1_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx1_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx1_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx1_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx1_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx1_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx1_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx1_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx1_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx1_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx1_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx1_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx1_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx1_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx1_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx1_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx1_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx1_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx1_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx1_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx1_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx1_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx1_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx1_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx1_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx1_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx1_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx1_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx1_ctrl_replace_en_i
  , RST_N_I  => usr_tx1_rst_n_i

  , TST_I1   => usr_tx1_test_i(0)
  , TST_I2   => usr_tx1_test_i(1)
  , TST_I3   => usr_tx1_test_i(2)
  , TST_I4   => usr_tx1_test_i(3)

  , DATA_I1  => usr_tx1_data_i(0)
  , DATA_I2  => usr_tx1_data_i(1)
  , DATA_I3  => usr_tx1_data_i(2)
  , DATA_I4  => usr_tx1_data_i(3)
  , DATA_I5  => usr_tx1_data_i(4)
  , DATA_I6  => usr_tx1_data_i(5)
  , DATA_I7  => usr_tx1_data_i(6)
  , DATA_I8  => usr_tx1_data_i(7)
  , DATA_I9  => usr_tx1_data_i(8)
  , DATA_I10 => usr_tx1_data_i(9)
  , DATA_I11 => usr_tx1_data_i(10)
  , DATA_I12 => usr_tx1_data_i(11)
  , DATA_I13 => usr_tx1_data_i(12)
  , DATA_I14 => usr_tx1_data_i(13)
  , DATA_I15 => usr_tx1_data_i(14)
  , DATA_I16 => usr_tx1_data_i(15)
  , DATA_I17 => usr_tx1_data_i(16)
  , DATA_I18 => usr_tx1_data_i(17)
  , DATA_I19 => usr_tx1_data_i(18)
  , DATA_I20 => usr_tx1_data_i(19)
  , DATA_I21 => usr_tx1_data_i(20)
  , DATA_I22 => usr_tx1_data_i(21)
  , DATA_I23 => usr_tx1_data_i(22)
  , DATA_I24 => usr_tx1_data_i(23)
  , DATA_I25 => usr_tx1_data_i(24)
  , DATA_I26 => usr_tx1_data_i(25)
  , DATA_I27 => usr_tx1_data_i(26)
  , DATA_I28 => usr_tx1_data_i(27)
  , DATA_I29 => usr_tx1_data_i(28)
  , DATA_I30 => usr_tx1_data_i(29)
  , DATA_I31 => usr_tx1_data_i(30)
  , DATA_I32 => usr_tx1_data_i(31)
  , DATA_I33 => usr_tx1_data_i(32)
  , DATA_I34 => usr_tx1_data_i(33)
  , DATA_I35 => usr_tx1_data_i(34)
  , DATA_I36 => usr_tx1_data_i(35)
  , DATA_I37 => usr_tx1_data_i(36)
  , DATA_I38 => usr_tx1_data_i(37)
  , DATA_I39 => usr_tx1_data_i(38)
  , DATA_I40 => usr_tx1_data_i(39)
  , DATA_I41 => usr_tx1_data_i(40)
  , DATA_I42 => usr_tx1_data_i(41)
  , DATA_I43 => usr_tx1_data_i(42)
  , DATA_I44 => usr_tx1_data_i(43)
  , DATA_I45 => usr_tx1_data_i(44)
  , DATA_I46 => usr_tx1_data_i(45)
  , DATA_I47 => usr_tx1_data_i(46)
  , DATA_I48 => usr_tx1_data_i(47)
  , DATA_I49 => usr_tx1_data_i(48)
  , DATA_I50 => usr_tx1_data_i(49)
  , DATA_I51 => usr_tx1_data_i(50)
  , DATA_I52 => usr_tx1_data_i(51)
  , DATA_I53 => usr_tx1_data_i(52)
  , DATA_I54 => usr_tx1_data_i(53)
  , DATA_I55 => usr_tx1_data_i(54)
  , DATA_I56 => usr_tx1_data_i(55)
  , DATA_I57 => usr_tx1_data_i(56)
  , DATA_I58 => usr_tx1_data_i(57)
  , DATA_I59 => usr_tx1_data_i(58)
  , DATA_I60 => usr_tx1_data_i(59)
  , DATA_I61 => usr_tx1_data_i(60)
  , DATA_I62 => usr_tx1_data_i(61)
  , DATA_I63 => usr_tx1_data_i(62)
  , DATA_I64 => usr_tx1_data_i(63)

  , TST_O1   => usr_tx1_test_o(0)
  , TST_O2   => usr_tx1_test_o(1)
  , TST_O3   => usr_tx1_test_o(2)
  , TST_O4   => usr_tx1_test_o(3)

  , BUSY_O   => usr_tx1_busy_o
  , CLK_E_I  => usr_tx1_pma_clk_en_i

  , LINK     => LINK_TX1

  , TX_O     => pma_tx1_o
);
--#}}}#

-- rxlane1: NX_CRX_L#{{{#
rxlane1: NX_CRX_L generic map (
    test                         => cfg_rx1_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx1_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx1_i(156)
  , pcs_debug_en                 => cfg_rx1_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx1_i(154)
  , pma_clk_pos                  => cfg_rx1_i(153)
  , pcs_protocol_size            => cfg_rx1_i(152)
  , pcs_loopback                 => cfg_rx1_i(151)
  , pcs_polarity                 => cfg_rx1_i(150)
  , pcs_p_comma_en               => cfg_rx1_i(149)
  , pcs_p_comma_val              => cfg_rx1_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx1_i(138)
  , pcs_m_comma_val              => cfg_rx1_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx1_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx1_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx1_i(115)
  , pcs_dec_bypass               => cfg_rx1_i(114)
  , pcs_el_buff_max_comp         => cfg_rx1_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx1_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx1_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx1_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx1_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx1_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx1_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx1_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx1_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx1_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx1_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx1_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx1_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx1_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx1_i(29)
  , pcs_buffers_bypass           => cfg_rx1_i(28)
  , pcs_sync_supported           => cfg_rx1_i(27)
  , pcs_replace_bypass           => cfg_rx1_i(26)
  , pcs_dscr_bypass              => cfg_rx1_i(25)
  , pcs_8b_dscr_sel              => cfg_rx1_i(24)
  , pcs_fsm_sel                  => cfg_rx1_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx1_i(21)
  , pma_pll_divm_en_n            => cfg_rx1_i(20)
  , pma_pll_divn_en_n            => cfg_rx1_i(19)
  , pma_cdr_cp                   => cfg_rx1_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx1_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx1_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx1_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx1_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx1_i(1)
  , pma_loopback                 => cfg_rx1_i(0)
  , location                     => location & ":C2.RX"
 )
port map (
    DSCR_E_I  => usr_rx1_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx1_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx1_ctrl_align_en_i
  , ALIGN_S_I => usr_rx1_ctrl_align_sync_i
  , REP_E_I   => usr_rx1_ctrl_replace_en_i
  , BUF_R_I   => usr_rx1_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx1_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx1_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx1_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx1_rst_n_i
  , CDR_R_I   => usr_rx1_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx1_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx1_pma_pll_rst_n_i

  , TST_I1    => usr_rx1_test_i(0)
  , TST_I2    => usr_rx1_test_i(1)
  , TST_I3    => usr_rx1_test_i(2)
  , TST_I4    => usr_rx1_test_i(3)

  , LOS_O     => usr_rx1_pma_loss_of_signal_o

  , DATA_O1   => usr_rx1_data_o(0)
  , DATA_O2   => usr_rx1_data_o(1)
  , DATA_O3   => usr_rx1_data_o(2)
  , DATA_O4   => usr_rx1_data_o(3)
  , DATA_O5   => usr_rx1_data_o(4)
  , DATA_O6   => usr_rx1_data_o(5)
  , DATA_O7   => usr_rx1_data_o(6)
  , DATA_O8   => usr_rx1_data_o(7)
  , DATA_O9   => usr_rx1_data_o(8)
  , DATA_O10  => usr_rx1_data_o(9)
  , DATA_O11  => usr_rx1_data_o(10)
  , DATA_O12  => usr_rx1_data_o(11)
  , DATA_O13  => usr_rx1_data_o(12)
  , DATA_O14  => usr_rx1_data_o(13)
  , DATA_O15  => usr_rx1_data_o(14)
  , DATA_O16  => usr_rx1_data_o(15)
  , DATA_O17  => usr_rx1_data_o(16)
  , DATA_O18  => usr_rx1_data_o(17)
  , DATA_O19  => usr_rx1_data_o(18)
  , DATA_O20  => usr_rx1_data_o(19)
  , DATA_O21  => usr_rx1_data_o(20)
  , DATA_O22  => usr_rx1_data_o(21)
  , DATA_O23  => usr_rx1_data_o(22)
  , DATA_O24  => usr_rx1_data_o(23)
  , DATA_O25  => usr_rx1_data_o(24)
  , DATA_O26  => usr_rx1_data_o(25)
  , DATA_O27  => usr_rx1_data_o(26)
  , DATA_O28  => usr_rx1_data_o(27)
  , DATA_O29  => usr_rx1_data_o(28)
  , DATA_O30  => usr_rx1_data_o(29)
  , DATA_O31  => usr_rx1_data_o(30)
  , DATA_O32  => usr_rx1_data_o(31)
  , DATA_O33  => usr_rx1_data_o(32)
  , DATA_O34  => usr_rx1_data_o(33)
  , DATA_O35  => usr_rx1_data_o(34)
  , DATA_O36  => usr_rx1_data_o(35)
  , DATA_O37  => usr_rx1_data_o(36)
  , DATA_O38  => usr_rx1_data_o(37)
  , DATA_O39  => usr_rx1_data_o(38)
  , DATA_O40  => usr_rx1_data_o(39)
  , DATA_O41  => usr_rx1_data_o(40)
  , DATA_O42  => usr_rx1_data_o(41)
  , DATA_O43  => usr_rx1_data_o(42)
  , DATA_O44  => usr_rx1_data_o(43)
  , DATA_O45  => usr_rx1_data_o(44)
  , DATA_O46  => usr_rx1_data_o(45)
  , DATA_O47  => usr_rx1_data_o(46)
  , DATA_O48  => usr_rx1_data_o(47)
  , DATA_O49  => usr_rx1_data_o(48)
  , DATA_O50  => usr_rx1_data_o(49)
  , DATA_O51  => usr_rx1_data_o(50)
  , DATA_O52  => usr_rx1_data_o(51)
  , DATA_O53  => usr_rx1_data_o(52)
  , DATA_O54  => usr_rx1_data_o(53)
  , DATA_O55  => usr_rx1_data_o(54)
  , DATA_O56  => usr_rx1_data_o(55)
  , DATA_O57  => usr_rx1_data_o(56)
  , DATA_O58  => usr_rx1_data_o(57)
  , DATA_O59  => usr_rx1_data_o(58)
  , DATA_O60  => usr_rx1_data_o(59)
  , DATA_O61  => usr_rx1_data_o(60)
  , DATA_O62  => usr_rx1_data_o(61)
  , DATA_O63  => usr_rx1_data_o(62)
  , DATA_O64  => usr_rx1_data_o(63)

  , CH_COM_O1 => usr_rx1_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx1_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx1_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx1_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx1_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx1_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx1_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx1_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx1_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx1_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx1_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx1_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx1_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx1_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx1_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx1_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx1_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx1_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx1_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx1_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx1_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx1_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx1_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx1_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx1_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx1_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx1_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx1_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx1_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx1_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx1_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx1_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx1_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx1_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx1_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx1_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx1_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx1_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx1_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx1_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx1_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx1_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx1_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx1_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx1_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx1_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx1_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx1_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx1_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx1_busy_o

  , TST_O1    => usr_rx1_test_o(0)
  , TST_O2    => usr_rx1_test_o(1)
  , TST_O3    => usr_rx1_test_o(2)
  , TST_O4    => usr_rx1_test_o(3)
  , TST_O5    => usr_rx1_test_o(4)
  , TST_O6    => usr_rx1_test_o(5)
  , TST_O7    => usr_rx1_test_o(6)
  , TST_O8    => usr_rx1_test_o(7)

  , LOCK_O    => usr_rx1_pll_lock_o

  , LINK      => LINK_RX1

  , RX_I      => pma_rx1_i
);
--#}}}#

-- txlane2: NX_CTX_L#{{{#
txlane2: NX_CTX_L generic map (
   pma_clk_pos          => cfg_tx2_i(31)
 , pcs_protocol_size    => cfg_tx2_i(30)
 , pcs_8b_scr_sel       => cfg_tx2_i(29)
 , pcs_scr_init         => cfg_tx2_i(28 downto 12)
 , pcs_scr_bypass       => cfg_tx2_i(11)
 , pcs_sync_supported   => cfg_tx2_i(10)
 , pcs_replace_bypass   => cfg_tx2_i(9)
 , pcs_enc_bypass       => cfg_tx2_i(8)
 , pcs_loopback         => cfg_tx2_i(7)
 , pcs_polarity         => cfg_tx2_i(6)
 , pcs_esistream_fsm_en => cfg_tx2_i(5)
 , test                 => cfg_tx2_i(4 downto 3)
 , pcs_bypass_pma_cdc   => cfg_tx2_i(2)
 , pcs_bypass_usr_cdc   => cfg_tx2_i(1)
 , pma_loopback         => cfg_tx2_i(0)
 , location             => location & ":C3.TX"
 )
port map (
    ENC_E_I1 => usr_tx2_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx2_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx2_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx2_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx2_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx2_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx2_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx2_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx2_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx2_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx2_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx2_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx2_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx2_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx2_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx2_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx2_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx2_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx2_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx2_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx2_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx2_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx2_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx2_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx2_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx2_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx2_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx2_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx2_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx2_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx2_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx2_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx2_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx2_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx2_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx2_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx2_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx2_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx2_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx2_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx2_ctrl_replace_en_i
  , RST_N_I  => usr_tx2_rst_n_i

  , TST_I1   => usr_tx2_test_i(0)
  , TST_I2   => usr_tx2_test_i(1)
  , TST_I3   => usr_tx2_test_i(2)
  , TST_I4   => usr_tx2_test_i(3)

  , DATA_I1  => usr_tx2_data_i(0)
  , DATA_I2  => usr_tx2_data_i(1)
  , DATA_I3  => usr_tx2_data_i(2)
  , DATA_I4  => usr_tx2_data_i(3)
  , DATA_I5  => usr_tx2_data_i(4)
  , DATA_I6  => usr_tx2_data_i(5)
  , DATA_I7  => usr_tx2_data_i(6)
  , DATA_I8  => usr_tx2_data_i(7)
  , DATA_I9  => usr_tx2_data_i(8)
  , DATA_I10 => usr_tx2_data_i(9)
  , DATA_I11 => usr_tx2_data_i(10)
  , DATA_I12 => usr_tx2_data_i(11)
  , DATA_I13 => usr_tx2_data_i(12)
  , DATA_I14 => usr_tx2_data_i(13)
  , DATA_I15 => usr_tx2_data_i(14)
  , DATA_I16 => usr_tx2_data_i(15)
  , DATA_I17 => usr_tx2_data_i(16)
  , DATA_I18 => usr_tx2_data_i(17)
  , DATA_I19 => usr_tx2_data_i(18)
  , DATA_I20 => usr_tx2_data_i(19)
  , DATA_I21 => usr_tx2_data_i(20)
  , DATA_I22 => usr_tx2_data_i(21)
  , DATA_I23 => usr_tx2_data_i(22)
  , DATA_I24 => usr_tx2_data_i(23)
  , DATA_I25 => usr_tx2_data_i(24)
  , DATA_I26 => usr_tx2_data_i(25)
  , DATA_I27 => usr_tx2_data_i(26)
  , DATA_I28 => usr_tx2_data_i(27)
  , DATA_I29 => usr_tx2_data_i(28)
  , DATA_I30 => usr_tx2_data_i(29)
  , DATA_I31 => usr_tx2_data_i(30)
  , DATA_I32 => usr_tx2_data_i(31)
  , DATA_I33 => usr_tx2_data_i(32)
  , DATA_I34 => usr_tx2_data_i(33)
  , DATA_I35 => usr_tx2_data_i(34)
  , DATA_I36 => usr_tx2_data_i(35)
  , DATA_I37 => usr_tx2_data_i(36)
  , DATA_I38 => usr_tx2_data_i(37)
  , DATA_I39 => usr_tx2_data_i(38)
  , DATA_I40 => usr_tx2_data_i(39)
  , DATA_I41 => usr_tx2_data_i(40)
  , DATA_I42 => usr_tx2_data_i(41)
  , DATA_I43 => usr_tx2_data_i(42)
  , DATA_I44 => usr_tx2_data_i(43)
  , DATA_I45 => usr_tx2_data_i(44)
  , DATA_I46 => usr_tx2_data_i(45)
  , DATA_I47 => usr_tx2_data_i(46)
  , DATA_I48 => usr_tx2_data_i(47)
  , DATA_I49 => usr_tx2_data_i(48)
  , DATA_I50 => usr_tx2_data_i(49)
  , DATA_I51 => usr_tx2_data_i(50)
  , DATA_I52 => usr_tx2_data_i(51)
  , DATA_I53 => usr_tx2_data_i(52)
  , DATA_I54 => usr_tx2_data_i(53)
  , DATA_I55 => usr_tx2_data_i(54)
  , DATA_I56 => usr_tx2_data_i(55)
  , DATA_I57 => usr_tx2_data_i(56)
  , DATA_I58 => usr_tx2_data_i(57)
  , DATA_I59 => usr_tx2_data_i(58)
  , DATA_I60 => usr_tx2_data_i(59)
  , DATA_I61 => usr_tx2_data_i(60)
  , DATA_I62 => usr_tx2_data_i(61)
  , DATA_I63 => usr_tx2_data_i(62)
  , DATA_I64 => usr_tx2_data_i(63)

  , TST_O1   => usr_tx2_test_o(0)
  , TST_O2   => usr_tx2_test_o(1)
  , TST_O3   => usr_tx2_test_o(2)
  , TST_O4   => usr_tx2_test_o(3)

  , BUSY_O   => usr_tx2_busy_o
  , CLK_E_I  => usr_tx2_pma_clk_en_i

  , LINK     => LINK_TX2

  , TX_O     => pma_tx2_o
);
--#}}}#

-- rxlane2: NX_CRX_L#{{{#
rxlane2: NX_CRX_L generic map (
    test                         => cfg_rx2_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx2_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx2_i(156)
  , pcs_debug_en                 => cfg_rx2_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx2_i(154)
  , pma_clk_pos                  => cfg_rx2_i(153)
  , pcs_protocol_size            => cfg_rx2_i(152)
  , pcs_loopback                 => cfg_rx2_i(151)
  , pcs_polarity                 => cfg_rx2_i(150)
  , pcs_p_comma_en               => cfg_rx2_i(149)
  , pcs_p_comma_val              => cfg_rx2_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx2_i(138)
  , pcs_m_comma_val              => cfg_rx2_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx2_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx2_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx2_i(115)
  , pcs_dec_bypass               => cfg_rx2_i(114)
  , pcs_el_buff_max_comp         => cfg_rx2_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx2_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx2_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx2_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx2_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx2_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx2_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx2_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx2_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx2_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx2_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx2_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx2_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx2_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx2_i(29)
  , pcs_buffers_bypass           => cfg_rx2_i(28)
  , pcs_sync_supported           => cfg_rx2_i(27)
  , pcs_replace_bypass           => cfg_rx2_i(26)
  , pcs_dscr_bypass              => cfg_rx2_i(25)
  , pcs_8b_dscr_sel              => cfg_rx2_i(24)
  , pcs_fsm_sel                  => cfg_rx2_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx2_i(21)
  , pma_pll_divm_en_n            => cfg_rx2_i(20)
  , pma_pll_divn_en_n            => cfg_rx2_i(19)
  , pma_cdr_cp                   => cfg_rx2_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx2_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx2_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx2_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx2_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx2_i(1)
  , pma_loopback                 => cfg_rx2_i(0)
  , location                     => location & ":C3.RX"
 )
port map (
    DSCR_E_I  => usr_rx2_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx2_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx2_ctrl_align_en_i
  , ALIGN_S_I => usr_rx2_ctrl_align_sync_i
  , REP_E_I   => usr_rx2_ctrl_replace_en_i
  , BUF_R_I   => usr_rx2_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx2_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx2_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx2_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx2_rst_n_i
  , CDR_R_I   => usr_rx2_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx2_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx2_pma_pll_rst_n_i

  , TST_I1    => usr_rx2_test_i(0)
  , TST_I2    => usr_rx2_test_i(1)
  , TST_I3    => usr_rx2_test_i(2)
  , TST_I4    => usr_rx2_test_i(3)

  , LOS_O     => usr_rx2_pma_loss_of_signal_o

  , DATA_O1   => usr_rx2_data_o(0)
  , DATA_O2   => usr_rx2_data_o(1)
  , DATA_O3   => usr_rx2_data_o(2)
  , DATA_O4   => usr_rx2_data_o(3)
  , DATA_O5   => usr_rx2_data_o(4)
  , DATA_O6   => usr_rx2_data_o(5)
  , DATA_O7   => usr_rx2_data_o(6)
  , DATA_O8   => usr_rx2_data_o(7)
  , DATA_O9   => usr_rx2_data_o(8)
  , DATA_O10  => usr_rx2_data_o(9)
  , DATA_O11  => usr_rx2_data_o(10)
  , DATA_O12  => usr_rx2_data_o(11)
  , DATA_O13  => usr_rx2_data_o(12)
  , DATA_O14  => usr_rx2_data_o(13)
  , DATA_O15  => usr_rx2_data_o(14)
  , DATA_O16  => usr_rx2_data_o(15)
  , DATA_O17  => usr_rx2_data_o(16)
  , DATA_O18  => usr_rx2_data_o(17)
  , DATA_O19  => usr_rx2_data_o(18)
  , DATA_O20  => usr_rx2_data_o(19)
  , DATA_O21  => usr_rx2_data_o(20)
  , DATA_O22  => usr_rx2_data_o(21)
  , DATA_O23  => usr_rx2_data_o(22)
  , DATA_O24  => usr_rx2_data_o(23)
  , DATA_O25  => usr_rx2_data_o(24)
  , DATA_O26  => usr_rx2_data_o(25)
  , DATA_O27  => usr_rx2_data_o(26)
  , DATA_O28  => usr_rx2_data_o(27)
  , DATA_O29  => usr_rx2_data_o(28)
  , DATA_O30  => usr_rx2_data_o(29)
  , DATA_O31  => usr_rx2_data_o(30)
  , DATA_O32  => usr_rx2_data_o(31)
  , DATA_O33  => usr_rx2_data_o(32)
  , DATA_O34  => usr_rx2_data_o(33)
  , DATA_O35  => usr_rx2_data_o(34)
  , DATA_O36  => usr_rx2_data_o(35)
  , DATA_O37  => usr_rx2_data_o(36)
  , DATA_O38  => usr_rx2_data_o(37)
  , DATA_O39  => usr_rx2_data_o(38)
  , DATA_O40  => usr_rx2_data_o(39)
  , DATA_O41  => usr_rx2_data_o(40)
  , DATA_O42  => usr_rx2_data_o(41)
  , DATA_O43  => usr_rx2_data_o(42)
  , DATA_O44  => usr_rx2_data_o(43)
  , DATA_O45  => usr_rx2_data_o(44)
  , DATA_O46  => usr_rx2_data_o(45)
  , DATA_O47  => usr_rx2_data_o(46)
  , DATA_O48  => usr_rx2_data_o(47)
  , DATA_O49  => usr_rx2_data_o(48)
  , DATA_O50  => usr_rx2_data_o(49)
  , DATA_O51  => usr_rx2_data_o(50)
  , DATA_O52  => usr_rx2_data_o(51)
  , DATA_O53  => usr_rx2_data_o(52)
  , DATA_O54  => usr_rx2_data_o(53)
  , DATA_O55  => usr_rx2_data_o(54)
  , DATA_O56  => usr_rx2_data_o(55)
  , DATA_O57  => usr_rx2_data_o(56)
  , DATA_O58  => usr_rx2_data_o(57)
  , DATA_O59  => usr_rx2_data_o(58)
  , DATA_O60  => usr_rx2_data_o(59)
  , DATA_O61  => usr_rx2_data_o(60)
  , DATA_O62  => usr_rx2_data_o(61)
  , DATA_O63  => usr_rx2_data_o(62)
  , DATA_O64  => usr_rx2_data_o(63)

  , CH_COM_O1 => usr_rx2_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx2_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx2_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx2_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx2_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx2_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx2_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx2_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx2_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx2_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx2_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx2_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx2_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx2_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx2_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx2_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx2_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx2_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx2_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx2_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx2_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx2_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx2_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx2_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx2_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx2_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx2_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx2_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx2_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx2_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx2_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx2_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx2_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx2_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx2_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx2_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx2_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx2_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx2_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx2_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx2_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx2_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx2_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx2_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx2_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx2_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx2_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx2_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx2_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx2_busy_o

  , TST_O1    => usr_rx2_test_o(0)
  , TST_O2    => usr_rx2_test_o(1)
  , TST_O3    => usr_rx2_test_o(2)
  , TST_O4    => usr_rx2_test_o(3)
  , TST_O5    => usr_rx2_test_o(4)
  , TST_O6    => usr_rx2_test_o(5)
  , TST_O7    => usr_rx2_test_o(6)
  , TST_O8    => usr_rx2_test_o(7)

  , LOCK_O    => usr_rx2_pll_lock_o

  , LINK      => LINK_RX2

  , RX_I      => pma_rx2_i
);
--#}}}#

-- txlane3: NX_CTX_L#{{{#
txlane3: NX_CTX_L generic map (
     pma_clk_pos          => cfg_tx3_i(31)
  ,  pcs_protocol_size    => cfg_tx3_i(30)
  ,  pcs_8b_scr_sel       => cfg_tx3_i(29)
  ,  pcs_scr_init         => cfg_tx3_i(28 downto 12)
  ,  pcs_scr_bypass       => cfg_tx3_i(11)
  ,  pcs_sync_supported   => cfg_tx3_i(10)
  ,  pcs_replace_bypass   => cfg_tx3_i(9)
  ,  pcs_enc_bypass       => cfg_tx3_i(8)
  ,  pcs_loopback         => cfg_tx3_i(7)
  ,  pcs_polarity         => cfg_tx3_i(6)
  ,  pcs_esistream_fsm_en => cfg_tx3_i(5)
  ,  test                 => cfg_tx3_i(4 downto 3)
  ,  pcs_bypass_pma_cdc   => cfg_tx3_i(2)
  ,  pcs_bypass_usr_cdc   => cfg_tx3_i(1)
  ,  pma_loopback         => cfg_tx3_i(0)
  ,  location             => location & ":C4.TX"
 )
port map (
    ENC_E_I1 => usr_tx3_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx3_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx3_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx3_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx3_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx3_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx3_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx3_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx3_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx3_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx3_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx3_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx3_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx3_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx3_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx3_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx3_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx3_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx3_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx3_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx3_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx3_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx3_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx3_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx3_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx3_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx3_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx3_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx3_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx3_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx3_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx3_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx3_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx3_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx3_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx3_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx3_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx3_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx3_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx3_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx3_ctrl_replace_en_i
  , RST_N_I  => usr_tx3_rst_n_i

  , TST_I1   => usr_tx3_test_i(0)
  , TST_I2   => usr_tx3_test_i(1)
  , TST_I3   => usr_tx3_test_i(2)
  , TST_I4   => usr_tx3_test_i(3)

  , DATA_I1  => usr_tx3_data_i(0)
  , DATA_I2  => usr_tx3_data_i(1)
  , DATA_I3  => usr_tx3_data_i(2)
  , DATA_I4  => usr_tx3_data_i(3)
  , DATA_I5  => usr_tx3_data_i(4)
  , DATA_I6  => usr_tx3_data_i(5)
  , DATA_I7  => usr_tx3_data_i(6)
  , DATA_I8  => usr_tx3_data_i(7)
  , DATA_I9  => usr_tx3_data_i(8)
  , DATA_I10 => usr_tx3_data_i(9)
  , DATA_I11 => usr_tx3_data_i(10)
  , DATA_I12 => usr_tx3_data_i(11)
  , DATA_I13 => usr_tx3_data_i(12)
  , DATA_I14 => usr_tx3_data_i(13)
  , DATA_I15 => usr_tx3_data_i(14)
  , DATA_I16 => usr_tx3_data_i(15)
  , DATA_I17 => usr_tx3_data_i(16)
  , DATA_I18 => usr_tx3_data_i(17)
  , DATA_I19 => usr_tx3_data_i(18)
  , DATA_I20 => usr_tx3_data_i(19)
  , DATA_I21 => usr_tx3_data_i(20)
  , DATA_I22 => usr_tx3_data_i(21)
  , DATA_I23 => usr_tx3_data_i(22)
  , DATA_I24 => usr_tx3_data_i(23)
  , DATA_I25 => usr_tx3_data_i(24)
  , DATA_I26 => usr_tx3_data_i(25)
  , DATA_I27 => usr_tx3_data_i(26)
  , DATA_I28 => usr_tx3_data_i(27)
  , DATA_I29 => usr_tx3_data_i(28)
  , DATA_I30 => usr_tx3_data_i(29)
  , DATA_I31 => usr_tx3_data_i(30)
  , DATA_I32 => usr_tx3_data_i(31)
  , DATA_I33 => usr_tx3_data_i(32)
  , DATA_I34 => usr_tx3_data_i(33)
  , DATA_I35 => usr_tx3_data_i(34)
  , DATA_I36 => usr_tx3_data_i(35)
  , DATA_I37 => usr_tx3_data_i(36)
  , DATA_I38 => usr_tx3_data_i(37)
  , DATA_I39 => usr_tx3_data_i(38)
  , DATA_I40 => usr_tx3_data_i(39)
  , DATA_I41 => usr_tx3_data_i(40)
  , DATA_I42 => usr_tx3_data_i(41)
  , DATA_I43 => usr_tx3_data_i(42)
  , DATA_I44 => usr_tx3_data_i(43)
  , DATA_I45 => usr_tx3_data_i(44)
  , DATA_I46 => usr_tx3_data_i(45)
  , DATA_I47 => usr_tx3_data_i(46)
  , DATA_I48 => usr_tx3_data_i(47)
  , DATA_I49 => usr_tx3_data_i(48)
  , DATA_I50 => usr_tx3_data_i(49)
  , DATA_I51 => usr_tx3_data_i(50)
  , DATA_I52 => usr_tx3_data_i(51)
  , DATA_I53 => usr_tx3_data_i(52)
  , DATA_I54 => usr_tx3_data_i(53)
  , DATA_I55 => usr_tx3_data_i(54)
  , DATA_I56 => usr_tx3_data_i(55)
  , DATA_I57 => usr_tx3_data_i(56)
  , DATA_I58 => usr_tx3_data_i(57)
  , DATA_I59 => usr_tx3_data_i(58)
  , DATA_I60 => usr_tx3_data_i(59)
  , DATA_I61 => usr_tx3_data_i(60)
  , DATA_I62 => usr_tx3_data_i(61)
  , DATA_I63 => usr_tx3_data_i(62)
  , DATA_I64 => usr_tx3_data_i(63)

  , TST_O1   => usr_tx3_test_o(0)
  , TST_O2   => usr_tx3_test_o(1)
  , TST_O3   => usr_tx3_test_o(2)
  , TST_O4   => usr_tx3_test_o(3)

  , BUSY_O   => usr_tx3_busy_o
  , CLK_E_I  => usr_tx3_pma_clk_en_i

  , LINK     => LINK_TX3

  , TX_O     => pma_tx3_o
);
--#}}}#

-- rxlane3: NX_CRX_L#{{{#
rxlane3: NX_CRX_L generic map (
    test                         => cfg_rx3_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx3_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx3_i(156)
  , pcs_debug_en                 => cfg_rx3_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx3_i(154)
  , pma_clk_pos                  => cfg_rx3_i(153)
  , pcs_protocol_size            => cfg_rx3_i(152)
  , pcs_loopback                 => cfg_rx3_i(151)
  , pcs_polarity                 => cfg_rx3_i(150)
  , pcs_p_comma_en               => cfg_rx3_i(149)
  , pcs_p_comma_val              => cfg_rx3_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx3_i(138)
  , pcs_m_comma_val              => cfg_rx3_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx3_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx3_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx3_i(115)
  , pcs_dec_bypass               => cfg_rx3_i(114)
  , pcs_el_buff_max_comp         => cfg_rx3_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx3_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx3_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx3_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx3_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx3_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx3_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx3_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx3_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx3_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx3_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx3_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx3_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx3_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx3_i(29)
  , pcs_buffers_bypass           => cfg_rx3_i(28)
  , pcs_sync_supported           => cfg_rx3_i(27)
  , pcs_replace_bypass           => cfg_rx3_i(26)
  , pcs_dscr_bypass              => cfg_rx3_i(25)
  , pcs_8b_dscr_sel              => cfg_rx3_i(24)
  , pcs_fsm_sel                  => cfg_rx3_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx3_i(21)
  , pma_pll_divm_en_n            => cfg_rx3_i(20)
  , pma_pll_divn_en_n            => cfg_rx3_i(19)
  , pma_cdr_cp                   => cfg_rx3_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx3_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx3_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx3_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx3_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx3_i(1)
  , pma_loopback                 => cfg_rx3_i(0)
  , location                     => location & ":C4.RX"
 )
port map (
    DSCR_E_I  => usr_rx3_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx3_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx3_ctrl_align_en_i
  , ALIGN_S_I => usr_rx3_ctrl_align_sync_i
  , REP_E_I   => usr_rx3_ctrl_replace_en_i
  , BUF_R_I   => usr_rx3_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx3_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx3_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx3_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx3_rst_n_i
  , CDR_R_I   => usr_rx3_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx3_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx3_pma_pll_rst_n_i

  , TST_I1    => usr_rx3_test_i(0)
  , TST_I2    => usr_rx3_test_i(1)
  , TST_I3    => usr_rx3_test_i(2)
  , TST_I4    => usr_rx3_test_i(3)

  , LOS_O     => usr_rx3_pma_loss_of_signal_o

  , DATA_O1   => usr_rx3_data_o(0)
  , DATA_O2   => usr_rx3_data_o(1)
  , DATA_O3   => usr_rx3_data_o(2)
  , DATA_O4   => usr_rx3_data_o(3)
  , DATA_O5   => usr_rx3_data_o(4)
  , DATA_O6   => usr_rx3_data_o(5)
  , DATA_O7   => usr_rx3_data_o(6)
  , DATA_O8   => usr_rx3_data_o(7)
  , DATA_O9   => usr_rx3_data_o(8)
  , DATA_O10  => usr_rx3_data_o(9)
  , DATA_O11  => usr_rx3_data_o(10)
  , DATA_O12  => usr_rx3_data_o(11)
  , DATA_O13  => usr_rx3_data_o(12)
  , DATA_O14  => usr_rx3_data_o(13)
  , DATA_O15  => usr_rx3_data_o(14)
  , DATA_O16  => usr_rx3_data_o(15)
  , DATA_O17  => usr_rx3_data_o(16)
  , DATA_O18  => usr_rx3_data_o(17)
  , DATA_O19  => usr_rx3_data_o(18)
  , DATA_O20  => usr_rx3_data_o(19)
  , DATA_O21  => usr_rx3_data_o(20)
  , DATA_O22  => usr_rx3_data_o(21)
  , DATA_O23  => usr_rx3_data_o(22)
  , DATA_O24  => usr_rx3_data_o(23)
  , DATA_O25  => usr_rx3_data_o(24)
  , DATA_O26  => usr_rx3_data_o(25)
  , DATA_O27  => usr_rx3_data_o(26)
  , DATA_O28  => usr_rx3_data_o(27)
  , DATA_O29  => usr_rx3_data_o(28)
  , DATA_O30  => usr_rx3_data_o(29)
  , DATA_O31  => usr_rx3_data_o(30)
  , DATA_O32  => usr_rx3_data_o(31)
  , DATA_O33  => usr_rx3_data_o(32)
  , DATA_O34  => usr_rx3_data_o(33)
  , DATA_O35  => usr_rx3_data_o(34)
  , DATA_O36  => usr_rx3_data_o(35)
  , DATA_O37  => usr_rx3_data_o(36)
  , DATA_O38  => usr_rx3_data_o(37)
  , DATA_O39  => usr_rx3_data_o(38)
  , DATA_O40  => usr_rx3_data_o(39)
  , DATA_O41  => usr_rx3_data_o(40)
  , DATA_O42  => usr_rx3_data_o(41)
  , DATA_O43  => usr_rx3_data_o(42)
  , DATA_O44  => usr_rx3_data_o(43)
  , DATA_O45  => usr_rx3_data_o(44)
  , DATA_O46  => usr_rx3_data_o(45)
  , DATA_O47  => usr_rx3_data_o(46)
  , DATA_O48  => usr_rx3_data_o(47)
  , DATA_O49  => usr_rx3_data_o(48)
  , DATA_O50  => usr_rx3_data_o(49)
  , DATA_O51  => usr_rx3_data_o(50)
  , DATA_O52  => usr_rx3_data_o(51)
  , DATA_O53  => usr_rx3_data_o(52)
  , DATA_O54  => usr_rx3_data_o(53)
  , DATA_O55  => usr_rx3_data_o(54)
  , DATA_O56  => usr_rx3_data_o(55)
  , DATA_O57  => usr_rx3_data_o(56)
  , DATA_O58  => usr_rx3_data_o(57)
  , DATA_O59  => usr_rx3_data_o(58)
  , DATA_O60  => usr_rx3_data_o(59)
  , DATA_O61  => usr_rx3_data_o(60)
  , DATA_O62  => usr_rx3_data_o(61)
  , DATA_O63  => usr_rx3_data_o(62)
  , DATA_O64  => usr_rx3_data_o(63)

  , CH_COM_O1 => usr_rx3_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx3_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx3_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx3_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx3_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx3_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx3_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx3_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx3_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx3_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx3_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx3_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx3_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx3_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx3_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx3_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx3_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx3_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx3_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx3_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx3_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx3_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx3_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx3_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx3_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx3_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx3_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx3_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx3_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx3_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx3_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx3_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx3_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx3_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx3_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx3_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx3_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx3_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx3_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx3_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx3_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx3_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx3_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx3_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx3_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx3_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx3_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx3_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx3_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx3_busy_o

  , TST_O1    => usr_rx3_test_o(0)
  , TST_O2    => usr_rx3_test_o(1)
  , TST_O3    => usr_rx3_test_o(2)
  , TST_O4    => usr_rx3_test_o(3)
  , TST_O5    => usr_rx3_test_o(4)
  , TST_O6    => usr_rx3_test_o(5)
  , TST_O7    => usr_rx3_test_o(6)
  , TST_O8    => usr_rx3_test_o(7)

  , LOCK_O    => usr_rx3_pll_lock_o

  , LINK      => LINK_RX3

  , RX_I      => pma_rx3_i
);
--#}}}#

-- txlane4: NX_CTX_L#{{{#
txlane4: NX_CTX_L generic map (
     pma_clk_pos          => cfg_tx4_i(31)
  ,  pcs_protocol_size    => cfg_tx4_i(30)
  ,  pcs_8b_scr_sel       => cfg_tx4_i(29)
  ,  pcs_scr_init         => cfg_tx4_i(28 downto 12)
  ,  pcs_scr_bypass       => cfg_tx4_i(11)
  ,  pcs_sync_supported   => cfg_tx4_i(10)
  ,  pcs_replace_bypass   => cfg_tx4_i(9)
  ,  pcs_enc_bypass       => cfg_tx4_i(8)
  ,  pcs_loopback         => cfg_tx4_i(7)
  ,  pcs_polarity         => cfg_tx4_i(6)
  ,  pcs_esistream_fsm_en => cfg_tx4_i(5)
  ,  test                 => cfg_tx4_i(4 downto 3)
  ,  pcs_bypass_pma_cdc   => cfg_tx4_i(2)
  ,  pcs_bypass_usr_cdc   => cfg_tx4_i(1)
  ,  pma_loopback         => cfg_tx4_i(0)
  ,  location             => location & ":C5.TX"
 )
port map (
    ENC_E_I1 => usr_tx4_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx4_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx4_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx4_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx4_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx4_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx4_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx4_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx4_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx4_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx4_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx4_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx4_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx4_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx4_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx4_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx4_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx4_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx4_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx4_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx4_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx4_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx4_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx4_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx4_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx4_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx4_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx4_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx4_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx4_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx4_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx4_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx4_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx4_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx4_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx4_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx4_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx4_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx4_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx4_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx4_ctrl_replace_en_i
  , RST_N_I  => usr_tx4_rst_n_i

  , TST_I1   => usr_tx4_test_i(0)
  , TST_I2   => usr_tx4_test_i(1)
  , TST_I3   => usr_tx4_test_i(2)
  , TST_I4   => usr_tx4_test_i(3)

  , DATA_I1  => usr_tx4_data_i(0)
  , DATA_I2  => usr_tx4_data_i(1)
  , DATA_I3  => usr_tx4_data_i(2)
  , DATA_I4  => usr_tx4_data_i(3)
  , DATA_I5  => usr_tx4_data_i(4)
  , DATA_I6  => usr_tx4_data_i(5)
  , DATA_I7  => usr_tx4_data_i(6)
  , DATA_I8  => usr_tx4_data_i(7)
  , DATA_I9  => usr_tx4_data_i(8)
  , DATA_I10 => usr_tx4_data_i(9)
  , DATA_I11 => usr_tx4_data_i(10)
  , DATA_I12 => usr_tx4_data_i(11)
  , DATA_I13 => usr_tx4_data_i(12)
  , DATA_I14 => usr_tx4_data_i(13)
  , DATA_I15 => usr_tx4_data_i(14)
  , DATA_I16 => usr_tx4_data_i(15)
  , DATA_I17 => usr_tx4_data_i(16)
  , DATA_I18 => usr_tx4_data_i(17)
  , DATA_I19 => usr_tx4_data_i(18)
  , DATA_I20 => usr_tx4_data_i(19)
  , DATA_I21 => usr_tx4_data_i(20)
  , DATA_I22 => usr_tx4_data_i(21)
  , DATA_I23 => usr_tx4_data_i(22)
  , DATA_I24 => usr_tx4_data_i(23)
  , DATA_I25 => usr_tx4_data_i(24)
  , DATA_I26 => usr_tx4_data_i(25)
  , DATA_I27 => usr_tx4_data_i(26)
  , DATA_I28 => usr_tx4_data_i(27)
  , DATA_I29 => usr_tx4_data_i(28)
  , DATA_I30 => usr_tx4_data_i(29)
  , DATA_I31 => usr_tx4_data_i(30)
  , DATA_I32 => usr_tx4_data_i(31)
  , DATA_I33 => usr_tx4_data_i(32)
  , DATA_I34 => usr_tx4_data_i(33)
  , DATA_I35 => usr_tx4_data_i(34)
  , DATA_I36 => usr_tx4_data_i(35)
  , DATA_I37 => usr_tx4_data_i(36)
  , DATA_I38 => usr_tx4_data_i(37)
  , DATA_I39 => usr_tx4_data_i(38)
  , DATA_I40 => usr_tx4_data_i(39)
  , DATA_I41 => usr_tx4_data_i(40)
  , DATA_I42 => usr_tx4_data_i(41)
  , DATA_I43 => usr_tx4_data_i(42)
  , DATA_I44 => usr_tx4_data_i(43)
  , DATA_I45 => usr_tx4_data_i(44)
  , DATA_I46 => usr_tx4_data_i(45)
  , DATA_I47 => usr_tx4_data_i(46)
  , DATA_I48 => usr_tx4_data_i(47)
  , DATA_I49 => usr_tx4_data_i(48)
  , DATA_I50 => usr_tx4_data_i(49)
  , DATA_I51 => usr_tx4_data_i(50)
  , DATA_I52 => usr_tx4_data_i(51)
  , DATA_I53 => usr_tx4_data_i(52)
  , DATA_I54 => usr_tx4_data_i(53)
  , DATA_I55 => usr_tx4_data_i(54)
  , DATA_I56 => usr_tx4_data_i(55)
  , DATA_I57 => usr_tx4_data_i(56)
  , DATA_I58 => usr_tx4_data_i(57)
  , DATA_I59 => usr_tx4_data_i(58)
  , DATA_I60 => usr_tx4_data_i(59)
  , DATA_I61 => usr_tx4_data_i(60)
  , DATA_I62 => usr_tx4_data_i(61)
  , DATA_I63 => usr_tx4_data_i(62)
  , DATA_I64 => usr_tx4_data_i(63)

  , TST_O1   => usr_tx4_test_o(0)
  , TST_O2   => usr_tx4_test_o(1)
  , TST_O3   => usr_tx4_test_o(2)
  , TST_O4   => usr_tx4_test_o(3)

  , BUSY_O   => usr_tx4_busy_o
  , CLK_E_I  => usr_tx4_pma_clk_en_i

  , LINK     => LINK_TX4

  , TX_O     => pma_tx4_o
);
--#}}}#

-- rxlane4: NX_CRX_L#{{{#
rxlane4: NX_CRX_L generic map (
    test                         => cfg_rx4_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx4_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx4_i(156)
  , pcs_debug_en                 => cfg_rx4_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx4_i(154)
  , pma_clk_pos                  => cfg_rx4_i(153)
  , pcs_protocol_size            => cfg_rx4_i(152)
  , pcs_loopback                 => cfg_rx4_i(151)
  , pcs_polarity                 => cfg_rx4_i(150)
  , pcs_p_comma_en               => cfg_rx4_i(149)
  , pcs_p_comma_val              => cfg_rx4_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx4_i(138)
  , pcs_m_comma_val              => cfg_rx4_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx4_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx4_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx4_i(115)
  , pcs_dec_bypass               => cfg_rx4_i(114)
  , pcs_el_buff_max_comp         => cfg_rx4_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx4_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx4_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx4_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx4_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx4_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx4_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx4_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx4_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx4_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx4_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx4_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx4_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx4_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx4_i(29)
  , pcs_buffers_bypass           => cfg_rx4_i(28)
  , pcs_sync_supported           => cfg_rx4_i(27)
  , pcs_replace_bypass           => cfg_rx4_i(26)
  , pcs_dscr_bypass              => cfg_rx4_i(25)
  , pcs_8b_dscr_sel              => cfg_rx4_i(24)
  , pcs_fsm_sel                  => cfg_rx4_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx4_i(21)
  , pma_pll_divm_en_n            => cfg_rx4_i(20)
  , pma_pll_divn_en_n            => cfg_rx4_i(19)
  , pma_cdr_cp                   => cfg_rx4_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx4_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx4_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx4_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx4_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx4_i(1)
  , pma_loopback                 => cfg_rx4_i(0)
  , location                     => location & ":C5.RX"
 )
port map (
    DSCR_E_I  => usr_rx4_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx4_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx4_ctrl_align_en_i
  , ALIGN_S_I => usr_rx4_ctrl_align_sync_i
  , REP_E_I   => usr_rx4_ctrl_replace_en_i
  , BUF_R_I   => usr_rx4_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx4_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx4_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx4_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx4_rst_n_i
  , CDR_R_I   => usr_rx4_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx4_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx4_pma_pll_rst_n_i

  , TST_I1    => usr_rx4_test_i(0)
  , TST_I2    => usr_rx4_test_i(1)
  , TST_I3    => usr_rx4_test_i(2)
  , TST_I4    => usr_rx4_test_i(3)

  , LOS_O     => usr_rx4_pma_loss_of_signal_o

  , DATA_O1   => usr_rx4_data_o(0)
  , DATA_O2   => usr_rx4_data_o(1)
  , DATA_O3   => usr_rx4_data_o(2)
  , DATA_O4   => usr_rx4_data_o(3)
  , DATA_O5   => usr_rx4_data_o(4)
  , DATA_O6   => usr_rx4_data_o(5)
  , DATA_O7   => usr_rx4_data_o(6)
  , DATA_O8   => usr_rx4_data_o(7)
  , DATA_O9   => usr_rx4_data_o(8)
  , DATA_O10  => usr_rx4_data_o(9)
  , DATA_O11  => usr_rx4_data_o(10)
  , DATA_O12  => usr_rx4_data_o(11)
  , DATA_O13  => usr_rx4_data_o(12)
  , DATA_O14  => usr_rx4_data_o(13)
  , DATA_O15  => usr_rx4_data_o(14)
  , DATA_O16  => usr_rx4_data_o(15)
  , DATA_O17  => usr_rx4_data_o(16)
  , DATA_O18  => usr_rx4_data_o(17)
  , DATA_O19  => usr_rx4_data_o(18)
  , DATA_O20  => usr_rx4_data_o(19)
  , DATA_O21  => usr_rx4_data_o(20)
  , DATA_O22  => usr_rx4_data_o(21)
  , DATA_O23  => usr_rx4_data_o(22)
  , DATA_O24  => usr_rx4_data_o(23)
  , DATA_O25  => usr_rx4_data_o(24)
  , DATA_O26  => usr_rx4_data_o(25)
  , DATA_O27  => usr_rx4_data_o(26)
  , DATA_O28  => usr_rx4_data_o(27)
  , DATA_O29  => usr_rx4_data_o(28)
  , DATA_O30  => usr_rx4_data_o(29)
  , DATA_O31  => usr_rx4_data_o(30)
  , DATA_O32  => usr_rx4_data_o(31)
  , DATA_O33  => usr_rx4_data_o(32)
  , DATA_O34  => usr_rx4_data_o(33)
  , DATA_O35  => usr_rx4_data_o(34)
  , DATA_O36  => usr_rx4_data_o(35)
  , DATA_O37  => usr_rx4_data_o(36)
  , DATA_O38  => usr_rx4_data_o(37)
  , DATA_O39  => usr_rx4_data_o(38)
  , DATA_O40  => usr_rx4_data_o(39)
  , DATA_O41  => usr_rx4_data_o(40)
  , DATA_O42  => usr_rx4_data_o(41)
  , DATA_O43  => usr_rx4_data_o(42)
  , DATA_O44  => usr_rx4_data_o(43)
  , DATA_O45  => usr_rx4_data_o(44)
  , DATA_O46  => usr_rx4_data_o(45)
  , DATA_O47  => usr_rx4_data_o(46)
  , DATA_O48  => usr_rx4_data_o(47)
  , DATA_O49  => usr_rx4_data_o(48)
  , DATA_O50  => usr_rx4_data_o(49)
  , DATA_O51  => usr_rx4_data_o(50)
  , DATA_O52  => usr_rx4_data_o(51)
  , DATA_O53  => usr_rx4_data_o(52)
  , DATA_O54  => usr_rx4_data_o(53)
  , DATA_O55  => usr_rx4_data_o(54)
  , DATA_O56  => usr_rx4_data_o(55)
  , DATA_O57  => usr_rx4_data_o(56)
  , DATA_O58  => usr_rx4_data_o(57)
  , DATA_O59  => usr_rx4_data_o(58)
  , DATA_O60  => usr_rx4_data_o(59)
  , DATA_O61  => usr_rx4_data_o(60)
  , DATA_O62  => usr_rx4_data_o(61)
  , DATA_O63  => usr_rx4_data_o(62)
  , DATA_O64  => usr_rx4_data_o(63)

  , CH_COM_O1 => usr_rx4_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx4_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx4_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx4_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx4_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx4_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx4_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx4_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx4_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx4_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx4_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx4_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx4_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx4_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx4_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx4_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx4_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx4_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx4_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx4_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx4_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx4_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx4_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx4_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx4_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx4_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx4_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx4_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx4_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx4_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx4_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx4_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx4_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx4_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx4_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx4_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx4_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx4_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx4_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx4_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx4_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx4_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx4_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx4_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx4_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx4_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx4_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx4_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx4_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx4_busy_o

  , TST_O1    => usr_rx4_test_o(0)
  , TST_O2    => usr_rx4_test_o(1)
  , TST_O3    => usr_rx4_test_o(2)
  , TST_O4    => usr_rx4_test_o(3)
  , TST_O5    => usr_rx4_test_o(4)
  , TST_O6    => usr_rx4_test_o(5)
  , TST_O7    => usr_rx4_test_o(6)
  , TST_O8    => usr_rx4_test_o(7)

  , LOCK_O    => usr_rx4_pll_lock_o

  , LINK      => LINK_RX4

  , RX_I      => pma_rx4_i
);
--#}}}#

-- txlane5: NX_CTX_L#{{{#
txlane5: NX_CTX_L generic map (
     pma_clk_pos          => cfg_tx5_i(31)
  ,  pcs_protocol_size    => cfg_tx5_i(30)
  ,  pcs_8b_scr_sel       => cfg_tx5_i(29)
  ,  pcs_scr_init         => cfg_tx5_i(28 downto 12)
  ,  pcs_scr_bypass       => cfg_tx5_i(11)
  ,  pcs_sync_supported   => cfg_tx5_i(10)
  ,  pcs_replace_bypass   => cfg_tx5_i(9)
  ,  pcs_enc_bypass       => cfg_tx5_i(8)
  ,  pcs_loopback         => cfg_tx5_i(7)
  ,  pcs_polarity         => cfg_tx5_i(6)
  ,  pcs_esistream_fsm_en => cfg_tx5_i(5)
  ,  test                 => cfg_tx5_i(4 downto 3)
  ,  pcs_bypass_pma_cdc   => cfg_tx5_i(2)
  ,  pcs_bypass_usr_cdc   => cfg_tx5_i(1)
  ,  pma_loopback         => cfg_tx5_i(0)
  ,  location             => location & ":C6.TX"
 )
port map (
    ENC_E_I1 => usr_tx5_ctrl_enc_en_i(0)
  , ENC_E_I2 => usr_tx5_ctrl_enc_en_i(1)
  , ENC_E_I3 => usr_tx5_ctrl_enc_en_i(2)
  , ENC_E_I4 => usr_tx5_ctrl_enc_en_i(3)
  , ENC_E_I5 => usr_tx5_ctrl_enc_en_i(4)
  , ENC_E_I6 => usr_tx5_ctrl_enc_en_i(5)
  , ENC_E_I7 => usr_tx5_ctrl_enc_en_i(6)
  , ENC_E_I8 => usr_tx5_ctrl_enc_en_i(7)

  , CH_K_I1  => usr_tx5_ctrl_char_is_k_i(0)
  , CH_K_I2  => usr_tx5_ctrl_char_is_k_i(1)
  , CH_K_I3  => usr_tx5_ctrl_char_is_k_i(2)
  , CH_K_I4  => usr_tx5_ctrl_char_is_k_i(3)
  , CH_K_I5  => usr_tx5_ctrl_char_is_k_i(4)
  , CH_K_I6  => usr_tx5_ctrl_char_is_k_i(5)
  , CH_K_I7  => usr_tx5_ctrl_char_is_k_i(6)
  , CH_K_I8  => usr_tx5_ctrl_char_is_k_i(7)

  , SCR_E_I1 => usr_tx5_ctrl_scr_en_i(0)
  , SCR_E_I2 => usr_tx5_ctrl_scr_en_i(1)
  , SCR_E_I3 => usr_tx5_ctrl_scr_en_i(2)
  , SCR_E_I4 => usr_tx5_ctrl_scr_en_i(3)
  , SCR_E_I5 => usr_tx5_ctrl_scr_en_i(4)
  , SCR_E_I6 => usr_tx5_ctrl_scr_en_i(5)
  , SCR_E_I7 => usr_tx5_ctrl_scr_en_i(6)
  , SCR_E_I8 => usr_tx5_ctrl_scr_en_i(7)

  , EOMF_I1  => usr_tx5_ctrl_end_of_multiframe_i(0)
  , EOMF_I2  => usr_tx5_ctrl_end_of_multiframe_i(1)
  , EOMF_I3  => usr_tx5_ctrl_end_of_multiframe_i(2)
  , EOMF_I4  => usr_tx5_ctrl_end_of_multiframe_i(3)
  , EOMF_I5  => usr_tx5_ctrl_end_of_multiframe_i(4)
  , EOMF_I6  => usr_tx5_ctrl_end_of_multiframe_i(5)
  , EOMF_I7  => usr_tx5_ctrl_end_of_multiframe_i(6)
  , EOMF_I8  => usr_tx5_ctrl_end_of_multiframe_i(7)

  , EOF_I1   => usr_tx5_ctrl_end_of_frame_i(0)
  , EOF_I2   => usr_tx5_ctrl_end_of_frame_i(1)
  , EOF_I3   => usr_tx5_ctrl_end_of_frame_i(2)
  , EOF_I4   => usr_tx5_ctrl_end_of_frame_i(3)
  , EOF_I5   => usr_tx5_ctrl_end_of_frame_i(4)
  , EOF_I6   => usr_tx5_ctrl_end_of_frame_i(5)
  , EOF_I7   => usr_tx5_ctrl_end_of_frame_i(6)
  , EOF_I8   => usr_tx5_ctrl_end_of_frame_i(7)

  , REP_E_I  => usr_tx5_ctrl_replace_en_i
  , RST_N_I  => usr_tx5_rst_n_i

  , TST_I1   => usr_tx5_test_i(0)
  , TST_I2   => usr_tx5_test_i(1)
  , TST_I3   => usr_tx5_test_i(2)
  , TST_I4   => usr_tx5_test_i(3)

  , DATA_I1  => usr_tx5_data_i(0)
  , DATA_I2  => usr_tx5_data_i(1)
  , DATA_I3  => usr_tx5_data_i(2)
  , DATA_I4  => usr_tx5_data_i(3)
  , DATA_I5  => usr_tx5_data_i(4)
  , DATA_I6  => usr_tx5_data_i(5)
  , DATA_I7  => usr_tx5_data_i(6)
  , DATA_I8  => usr_tx5_data_i(7)
  , DATA_I9  => usr_tx5_data_i(8)
  , DATA_I10 => usr_tx5_data_i(9)
  , DATA_I11 => usr_tx5_data_i(10)
  , DATA_I12 => usr_tx5_data_i(11)
  , DATA_I13 => usr_tx5_data_i(12)
  , DATA_I14 => usr_tx5_data_i(13)
  , DATA_I15 => usr_tx5_data_i(14)
  , DATA_I16 => usr_tx5_data_i(15)
  , DATA_I17 => usr_tx5_data_i(16)
  , DATA_I18 => usr_tx5_data_i(17)
  , DATA_I19 => usr_tx5_data_i(18)
  , DATA_I20 => usr_tx5_data_i(19)
  , DATA_I21 => usr_tx5_data_i(20)
  , DATA_I22 => usr_tx5_data_i(21)
  , DATA_I23 => usr_tx5_data_i(22)
  , DATA_I24 => usr_tx5_data_i(23)
  , DATA_I25 => usr_tx5_data_i(24)
  , DATA_I26 => usr_tx5_data_i(25)
  , DATA_I27 => usr_tx5_data_i(26)
  , DATA_I28 => usr_tx5_data_i(27)
  , DATA_I29 => usr_tx5_data_i(28)
  , DATA_I30 => usr_tx5_data_i(29)
  , DATA_I31 => usr_tx5_data_i(30)
  , DATA_I32 => usr_tx5_data_i(31)
  , DATA_I33 => usr_tx5_data_i(32)
  , DATA_I34 => usr_tx5_data_i(33)
  , DATA_I35 => usr_tx5_data_i(34)
  , DATA_I36 => usr_tx5_data_i(35)
  , DATA_I37 => usr_tx5_data_i(36)
  , DATA_I38 => usr_tx5_data_i(37)
  , DATA_I39 => usr_tx5_data_i(38)
  , DATA_I40 => usr_tx5_data_i(39)
  , DATA_I41 => usr_tx5_data_i(40)
  , DATA_I42 => usr_tx5_data_i(41)
  , DATA_I43 => usr_tx5_data_i(42)
  , DATA_I44 => usr_tx5_data_i(43)
  , DATA_I45 => usr_tx5_data_i(44)
  , DATA_I46 => usr_tx5_data_i(45)
  , DATA_I47 => usr_tx5_data_i(46)
  , DATA_I48 => usr_tx5_data_i(47)
  , DATA_I49 => usr_tx5_data_i(48)
  , DATA_I50 => usr_tx5_data_i(49)
  , DATA_I51 => usr_tx5_data_i(50)
  , DATA_I52 => usr_tx5_data_i(51)
  , DATA_I53 => usr_tx5_data_i(52)
  , DATA_I54 => usr_tx5_data_i(53)
  , DATA_I55 => usr_tx5_data_i(54)
  , DATA_I56 => usr_tx5_data_i(55)
  , DATA_I57 => usr_tx5_data_i(56)
  , DATA_I58 => usr_tx5_data_i(57)
  , DATA_I59 => usr_tx5_data_i(58)
  , DATA_I60 => usr_tx5_data_i(59)
  , DATA_I61 => usr_tx5_data_i(60)
  , DATA_I62 => usr_tx5_data_i(61)
  , DATA_I63 => usr_tx5_data_i(62)
  , DATA_I64 => usr_tx5_data_i(63)

  , TST_O1   => usr_tx5_test_o(0)
  , TST_O2   => usr_tx5_test_o(1)
  , TST_O3   => usr_tx5_test_o(2)
  , TST_O4   => usr_tx5_test_o(3)

  , BUSY_O   => usr_tx5_busy_o
  , CLK_E_I  => usr_tx5_pma_clk_en_i

  , LINK     => LINK_TX5

  , TX_O     => pma_tx5_o
);
--#}}}#

-- rxlane5: NX_CRX_L#{{{#
rxlane5: NX_CRX_L generic map (
    test                         => cfg_rx5_i(159 downto 158)
  , pcs_bypass_pma_cdc           => cfg_rx5_i(157)
  , pcs_bypass_usr_cdc           => cfg_rx5_i(156)
  , pcs_debug_en                 => cfg_rx5_i(155)
  , pcs_fsm_watchdog_en          => cfg_rx5_i(154)
  , pma_clk_pos                  => cfg_rx5_i(153)
  , pcs_protocol_size            => cfg_rx5_i(152)
  , pcs_loopback                 => cfg_rx5_i(151)
  , pcs_polarity                 => cfg_rx5_i(150)
  , pcs_p_comma_en               => cfg_rx5_i(149)
  , pcs_p_comma_val              => cfg_rx5_i(148 downto 139)
  , pcs_m_comma_en               => cfg_rx5_i(138)
  , pcs_m_comma_val              => cfg_rx5_i(137 downto 128)
  , pcs_comma_mask               => cfg_rx5_i(127 downto 118)
  , pcs_nb_comma_bef_realign     => cfg_rx5_i(117 downto 116)
  , pcs_align_bypass             => cfg_rx5_i(115)
  , pcs_dec_bypass               => cfg_rx5_i(114)
  , pcs_el_buff_max_comp         => cfg_rx5_i(113 downto 111)
  , pcs_el_buff_diff_bef_comp    => cfg_rx5_i(110 downto 108)
  , pcs_el_buff_only_one_skp     => cfg_rx5_i(107)
  , pcs_el_buff_underflow_handle => cfg_rx5_i(106)
  , pcs_el_buff_skp_seq_size     => cfg_rx5_i(105 downto 104)
  , pcs_el_buff_skp_char_0       => cfg_rx5_i(103 downto 95)
  , pcs_el_buff_skp_char_1       => cfg_rx5_i(94 downto 86)
  , pcs_el_buff_skp_char_2       => cfg_rx5_i(85 downto 77)
  , pcs_el_buff_skp_char_3       => cfg_rx5_i(76 downto 68)
  , pcs_el_buff_skp_header_size  => cfg_rx5_i(67 downto 66)
  , pcs_el_buff_skp_header_0     => cfg_rx5_i(65 downto 57)
  , pcs_el_buff_skp_header_1     => cfg_rx5_i(56 downto 48)
  , pcs_el_buff_skp_header_2     => cfg_rx5_i(47 downto 39)
  , pcs_el_buff_skp_header_3     => cfg_rx5_i(38 downto 30)
  , pcs_buffers_use_cdc          => cfg_rx5_i(29)
  , pcs_buffers_bypass           => cfg_rx5_i(28)
  , pcs_sync_supported           => cfg_rx5_i(27)
  , pcs_replace_bypass           => cfg_rx5_i(26)
  , pcs_dscr_bypass              => cfg_rx5_i(25)
  , pcs_8b_dscr_sel              => cfg_rx5_i(24)
  , pcs_fsm_sel                  => cfg_rx5_i(23 downto 22)
  , pma_pll_divf_en_n            => cfg_rx5_i(21)
  , pma_pll_divm_en_n            => cfg_rx5_i(20)
  , pma_pll_divn_en_n            => cfg_rx5_i(19)
  , pma_cdr_cp                   => cfg_rx5_i(18 downto 15)
  , pma_ctrl_term                => cfg_rx5_i(14 downto 9)
  , pma_pll_cpump_n              => cfg_rx5_i(8 downto 6)
  , pma_pll_divf                 => cfg_rx5_i(5 downto 4)
  , pma_pll_divm                 => cfg_rx5_i(3 downto 2)
  , pma_pll_divn                 => cfg_rx5_i(1)
  , pma_loopback                 => cfg_rx5_i(0)
  , location                     => location & ":C6.RX"
 )
port map (
    DSCR_E_I  => usr_rx5_ctrl_dscr_en_i
  , DEC_E_I   => usr_rx5_ctrl_dec_en_i
  , ALIGN_E_I => usr_rx5_ctrl_align_en_i
  , ALIGN_S_I => usr_rx5_ctrl_align_sync_i
  , REP_E_I   => usr_rx5_ctrl_replace_en_i
  , BUF_R_I   => usr_rx5_ctrl_el_buff_rst_i

  , OVS_BS_I1 => usr_rx5_ctrl_ovs_bit_sel_i(0)
  , OVS_BS_I2 => usr_rx5_ctrl_ovs_bit_sel_i(1)

  , BUF_FE_I  => usr_rx5_ctrl_el_buff_fifo_en_i
  , RST_N_I   => usr_rx5_rst_n_i
  , CDR_R_I   => usr_rx5_pma_cdr_rst_i
  , CKG_RN_I  => usr_rx5_pma_ckgen_rst_n_i
  , PLL_RN_I  => usr_rx5_pma_pll_rst_n_i

  , TST_I1    => usr_rx5_test_i(0)
  , TST_I2    => usr_rx5_test_i(1)
  , TST_I3    => usr_rx5_test_i(2)
  , TST_I4    => usr_rx5_test_i(3)

  , LOS_O     => usr_rx5_pma_loss_of_signal_o

  , DATA_O1   => usr_rx5_data_o(0)
  , DATA_O2   => usr_rx5_data_o(1)
  , DATA_O3   => usr_rx5_data_o(2)
  , DATA_O4   => usr_rx5_data_o(3)
  , DATA_O5   => usr_rx5_data_o(4)
  , DATA_O6   => usr_rx5_data_o(5)
  , DATA_O7   => usr_rx5_data_o(6)
  , DATA_O8   => usr_rx5_data_o(7)
  , DATA_O9   => usr_rx5_data_o(8)
  , DATA_O10  => usr_rx5_data_o(9)
  , DATA_O11  => usr_rx5_data_o(10)
  , DATA_O12  => usr_rx5_data_o(11)
  , DATA_O13  => usr_rx5_data_o(12)
  , DATA_O14  => usr_rx5_data_o(13)
  , DATA_O15  => usr_rx5_data_o(14)
  , DATA_O16  => usr_rx5_data_o(15)
  , DATA_O17  => usr_rx5_data_o(16)
  , DATA_O18  => usr_rx5_data_o(17)
  , DATA_O19  => usr_rx5_data_o(18)
  , DATA_O20  => usr_rx5_data_o(19)
  , DATA_O21  => usr_rx5_data_o(20)
  , DATA_O22  => usr_rx5_data_o(21)
  , DATA_O23  => usr_rx5_data_o(22)
  , DATA_O24  => usr_rx5_data_o(23)
  , DATA_O25  => usr_rx5_data_o(24)
  , DATA_O26  => usr_rx5_data_o(25)
  , DATA_O27  => usr_rx5_data_o(26)
  , DATA_O28  => usr_rx5_data_o(27)
  , DATA_O29  => usr_rx5_data_o(28)
  , DATA_O30  => usr_rx5_data_o(29)
  , DATA_O31  => usr_rx5_data_o(30)
  , DATA_O32  => usr_rx5_data_o(31)
  , DATA_O33  => usr_rx5_data_o(32)
  , DATA_O34  => usr_rx5_data_o(33)
  , DATA_O35  => usr_rx5_data_o(34)
  , DATA_O36  => usr_rx5_data_o(35)
  , DATA_O37  => usr_rx5_data_o(36)
  , DATA_O38  => usr_rx5_data_o(37)
  , DATA_O39  => usr_rx5_data_o(38)
  , DATA_O40  => usr_rx5_data_o(39)
  , DATA_O41  => usr_rx5_data_o(40)
  , DATA_O42  => usr_rx5_data_o(41)
  , DATA_O43  => usr_rx5_data_o(42)
  , DATA_O44  => usr_rx5_data_o(43)
  , DATA_O45  => usr_rx5_data_o(44)
  , DATA_O46  => usr_rx5_data_o(45)
  , DATA_O47  => usr_rx5_data_o(46)
  , DATA_O48  => usr_rx5_data_o(47)
  , DATA_O49  => usr_rx5_data_o(48)
  , DATA_O50  => usr_rx5_data_o(49)
  , DATA_O51  => usr_rx5_data_o(50)
  , DATA_O52  => usr_rx5_data_o(51)
  , DATA_O53  => usr_rx5_data_o(52)
  , DATA_O54  => usr_rx5_data_o(53)
  , DATA_O55  => usr_rx5_data_o(54)
  , DATA_O56  => usr_rx5_data_o(55)
  , DATA_O57  => usr_rx5_data_o(56)
  , DATA_O58  => usr_rx5_data_o(57)
  , DATA_O59  => usr_rx5_data_o(58)
  , DATA_O60  => usr_rx5_data_o(59)
  , DATA_O61  => usr_rx5_data_o(60)
  , DATA_O62  => usr_rx5_data_o(61)
  , DATA_O63  => usr_rx5_data_o(62)
  , DATA_O64  => usr_rx5_data_o(63)

  , CH_COM_O1 => usr_rx5_ctrl_char_is_comma_o(0)
  , CH_COM_O2 => usr_rx5_ctrl_char_is_comma_o(1)
  , CH_COM_O3 => usr_rx5_ctrl_char_is_comma_o(2)
  , CH_COM_O4 => usr_rx5_ctrl_char_is_comma_o(3)
  , CH_COM_O5 => usr_rx5_ctrl_char_is_comma_o(4)
  , CH_COM_O6 => usr_rx5_ctrl_char_is_comma_o(5)
  , CH_COM_O7 => usr_rx5_ctrl_char_is_comma_o(6)
  , CH_COM_O8 => usr_rx5_ctrl_char_is_comma_o(7)

  , CH_K_O1   => usr_rx5_ctrl_char_is_k_o(0)
  , CH_K_O2   => usr_rx5_ctrl_char_is_k_o(1)
  , CH_K_O3   => usr_rx5_ctrl_char_is_k_o(2)
  , CH_K_O4   => usr_rx5_ctrl_char_is_k_o(3)
  , CH_K_O5   => usr_rx5_ctrl_char_is_k_o(4)
  , CH_K_O6   => usr_rx5_ctrl_char_is_k_o(5)
  , CH_K_O7   => usr_rx5_ctrl_char_is_k_o(6)
  , CH_K_O8   => usr_rx5_ctrl_char_is_k_o(7)

  , NIT_O1    => usr_rx5_ctrl_not_in_table_o(0)
  , NIT_O2    => usr_rx5_ctrl_not_in_table_o(1)
  , NIT_O3    => usr_rx5_ctrl_not_in_table_o(2)
  , NIT_O4    => usr_rx5_ctrl_not_in_table_o(3)
  , NIT_O5    => usr_rx5_ctrl_not_in_table_o(4)
  , NIT_O6    => usr_rx5_ctrl_not_in_table_o(5)
  , NIT_O7    => usr_rx5_ctrl_not_in_table_o(6)
  , NIT_O8    => usr_rx5_ctrl_not_in_table_o(7)

  , D_ERR_O1  => usr_rx5_ctrl_disp_err_o(0)
  , D_ERR_O2  => usr_rx5_ctrl_disp_err_o(1)
  , D_ERR_O3  => usr_rx5_ctrl_disp_err_o(2)
  , D_ERR_O4  => usr_rx5_ctrl_disp_err_o(3)
  , D_ERR_O5  => usr_rx5_ctrl_disp_err_o(4)
  , D_ERR_O6  => usr_rx5_ctrl_disp_err_o(5)
  , D_ERR_O7  => usr_rx5_ctrl_disp_err_o(6)
  , D_ERR_O8  => usr_rx5_ctrl_disp_err_o(7)

  , CH_A_O1   => usr_rx5_ctrl_char_is_a_o(0)
  , CH_A_O2   => usr_rx5_ctrl_char_is_a_o(1)
  , CH_A_O3   => usr_rx5_ctrl_char_is_a_o(2)
  , CH_A_O4   => usr_rx5_ctrl_char_is_a_o(3)
  , CH_A_O5   => usr_rx5_ctrl_char_is_a_o(4)
  , CH_A_O6   => usr_rx5_ctrl_char_is_a_o(5)
  , CH_A_O7   => usr_rx5_ctrl_char_is_a_o(6)
  , CH_A_O8   => usr_rx5_ctrl_char_is_a_o(7)

  , CH_F_O1   => usr_rx5_ctrl_char_is_f_o(0)
  , CH_F_O2   => usr_rx5_ctrl_char_is_f_o(1)
  , CH_F_O3   => usr_rx5_ctrl_char_is_f_o(2)
  , CH_F_O4   => usr_rx5_ctrl_char_is_f_o(3)
  , CH_F_O5   => usr_rx5_ctrl_char_is_f_o(4)
  , CH_F_O6   => usr_rx5_ctrl_char_is_f_o(5)
  , CH_F_O7   => usr_rx5_ctrl_char_is_f_o(6)
  , CH_F_O8   => usr_rx5_ctrl_char_is_f_o(7)

  , ALIGN_O   => usr_rx5_ctrl_char_is_aligned_o
  , BUSY_O    => usr_rx5_busy_o

  , TST_O1    => usr_rx5_test_o(0)
  , TST_O2    => usr_rx5_test_o(1)
  , TST_O3    => usr_rx5_test_o(2)
  , TST_O4    => usr_rx5_test_o(3)
  , TST_O5    => usr_rx5_test_o(4)
  , TST_O6    => usr_rx5_test_o(5)
  , TST_O7    => usr_rx5_test_o(6)
  , TST_O8    => usr_rx5_test_o(7)

  , LOCK_O    => usr_rx5_pll_lock_o

  , LINK      => LINK_RX5

  , RX_I      => pma_rx5_i
);
--#}}}#

end NX_RTL;
--#}}}#

-- =================================================================================================
--   NX_R5_L definition                                                                 2019/04/09
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_R5_L is
port (
    -- Inputs
    A_CKEM_I      : in  std_logic; --  aclkenm0      1
    A_CKEP_I      : in  std_logic; --  aclkenp0      1
    A_CKES_I      : in  std_logic; --  aclkens0      1

    AR_A_I32      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I31      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I30      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I29      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I28      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I27      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I26      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I25      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I24      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I23      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I22      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I21      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I20      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I19      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I18      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I17      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I16      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I15      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I14      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I13      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I12      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I11      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I10      : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I9       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I8       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I7       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I6       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I5       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I4       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I3       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I2       : in  std_logic; --  araddrs0      32  [0:31]
    AR_A_I1       : in  std_logic; --  araddrs0      32  [0:31]

    AR_BU_I2      : in  std_logic; --  arbursts0     2   [0:1]
    AR_BU_I1      : in  std_logic; --  arbursts0     2   [0:1]

    AR_CH_I4      : in  std_logic; --  arcaches0     4   [0:3]
    AR_CH_I3      : in  std_logic; --  arcaches0     4   [0:3]
    AR_CH_I2      : in  std_logic; --  arcaches0     4   [0:3]
    AR_CH_I1      : in  std_logic; --  arcaches0     4   [0:3]

    AR_IDS_I8     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I7     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I6     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I5     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I4     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I3     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I2     : in  std_logic; --  arids0        8   [0:7]
    AR_IDS_I1     : in  std_logic; --  arids0        8   [0:7]

    AR_LE_I4      : in  std_logic; --  arlens0       4   [0:3]
    AR_LE_I3      : in  std_logic; --  arlens0       4   [0:3]
    AR_LE_I2      : in  std_logic; --  arlens0       4   [0:3]
    AR_LE_I1      : in  std_logic; --  arlens0       4   [0:3]

    AR_LK_I2      : in  std_logic; --  arlocks0      2   [0:1]
    AR_LK_I1      : in  std_logic; --  arlocks0      2   [0:1]

    AR_PR_I3      : in  std_logic; --  arprots0      3   [0:2]
    AR_PR_I2      : in  std_logic; --  arprots0      3   [0:2]
    AR_PR_I1      : in  std_logic; --  arprots0      3   [0:2]

    AR_RYM_I      : in  std_logic; --  arreadym0     1
    AR_RYP_I      : in  std_logic; --  arreadyp0     1

    AR_SZ_I3      : in  std_logic; --  arsizes0      3   [0:2]
    AR_SZ_I2      : in  std_logic; --  arsizes0      3   [0:2]
    AR_SZ_I1      : in  std_logic; --  arsizes0      3   [0:2]

    AR_VD_I       : in  std_logic; --  arvalids0     1
    AT_RS_I       : in  std_logic; --  atresetn      1

    AW_A_I32      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I31      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I30      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I29      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I28      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I27      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I26      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I25      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I24      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I23      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I22      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I21      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I20      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I19      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I18      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I17      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I16      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I15      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I14      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I13      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I12      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I11      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I10      : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I9       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I8       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I7       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I6       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I5       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I4       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I3       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I2       : in  std_logic; --  awaddrs0      32  [0:31]
    AW_A_I1       : in  std_logic; --  awaddrs0      32  [0:31]

    AW_BU_I2      : in  std_logic; --  awbursts0     2   [0:1]
    AW_BU_I1      : in  std_logic; --  awbursts0     2   [0:1]

    AW_CH_I4      : in  std_logic; --  awcaches0     4   [0:3]
    AW_CH_I3      : in  std_logic; --  awcaches0     4   [0:3]
    AW_CH_I2      : in  std_logic; --  awcaches0     4   [0:3]
    AW_CH_I1      : in  std_logic; --  awcaches0     4   [0:3]

    AW_IDS_I8     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I7     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I6     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I5     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I4     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I3     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I2     : in  std_logic; --  awids0        8   [0:7]
    AW_IDS_I1     : in  std_logic; --  awids0        8   [0:7]

    AW_LE_I4      : in  std_logic; --  awlens0       4   [0:3]
    AW_LE_I3      : in  std_logic; --  awlens0       4   [0:3]
    AW_LE_I2      : in  std_logic; --  awlens0       4   [0:3]
    AW_LE_I1      : in  std_logic; --  awlens0       4   [0:3]

    AW_LK_I2      : in  std_logic; --  awlocks0      2   [0:1]
    AW_LK_I1      : in  std_logic; --  awlocks0      2   [0:1]

    AW_PR_I3      : in  std_logic; --  awprots0      3   [0:2]
    AW_PR_I2      : in  std_logic; --  awprots0      3   [0:2]
    AW_PR_I1      : in  std_logic; --  awprots0      3   [0:2]

    AW_RYM_I      : in  std_logic; --  awreadym0     1
    AW_RYP_I      : in  std_logic; --  awreadyp0     1

    AW_SZ_I3      : in  std_logic; --  awsizes0      3   [0:2]
    AW_SZ_I2      : in  std_logic; --  awsizes0      3   [0:2]
    AW_SZ_I1      : in  std_logic; --  awsizes0      3   [0:2]

    AW_VD_I       : in  std_logic; --  awvalids0     1

    B_IDM_I4      : in  std_logic; --  bidm0         4   [0:3]
    B_IDM_I3      : in  std_logic; --  bidm0         4   [0:3]
    B_IDM_I2      : in  std_logic; --  bidm0         4   [0:3]
    B_IDM_I1      : in  std_logic; --  bidm0         4   [0:3]

    B_IDP_I4      : in  std_logic; --  bidp0         4   [0:3]
    B_IDP_I3      : in  std_logic; --  bidp0         4   [0:3]
    B_IDP_I2      : in  std_logic; --  bidp0         4   [0:3]
    B_IDP_I1      : in  std_logic; --  bidp0         4   [0:3]

    B_RDY_I       : in  std_logic; --  breadys0      1

    B_RSPM_I2     : in  std_logic; --  brespm0 2     [0:1]
    B_RSPM_I1     : in  std_logic; --  brespm0 2     [0:1]

    B_RSPP_I2     : in  std_logic; --  brespp0 2     [0:1]
    B_RSPP_I1     : in  std_logic; --  brespp0 2     [0:1]

    B_VDM_I       : in  std_logic; --  bvalidm0      1
    B_VDP_I       : in  std_logic; --  bvalidp0      1

--    CAL_I5        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I4        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I3        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I2        : in  std_logic; --  calibration   5   [0:4]
--    CAL_I1        : in  std_logic; --  calibration   5   [0:4]

    CDB_PW_I      : in  std_logic; --  cdbgpwrupack  1
    CDB_RS_I      : in  std_logic; --  cdbgrstack    1
    CFG_EE_I      : in  std_logic; --  cfgee         1
    CFG_IE_I      : in  std_logic; --  cfgie         1
    CFG_NM_I      : in  std_logic; --  cfgnmfi0      1
    CK_I          : in  std_logic; --  clk           1
--    CK_DR_I       : in  std_logic; --  clock_dr      1
    CS_PW_I       : in  std_logic; --  csyspwrupack  1
    DB_E_I        : in  std_logic; --  dbgen0        1
    DB_NCK_I      : in  std_logic; --  dbgnoclkstop  1

    DB_RA_I20     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I19     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I18     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I17     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I16     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I15     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I14     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I13     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I12     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I11     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I10     : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I9      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I8      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I7      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I6      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I5      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I4      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I3      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I2      : in  std_logic; --  dbgromaddr    20  [0:19]
    DB_RA_I1      : in  std_logic; --  dbgromaddr    20  [0:19]

    DB_RAV_I      : in  std_logic; --  dbgromaddrv   1

    DB_SA_I20     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I19     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I18     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I17     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I16     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I15     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I14     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I13     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I12     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I11     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I10     : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I9      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I8      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I7      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I6      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I5      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I4      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I3      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I2      : in  std_logic; --  dbgselfaddr0  20  [0:19]
    DB_SA_I1      : in  std_logic; --  dbgselfaddr0  20  [0:19]

    DB_SAV_I      : in  std_logic; --  dbgselfaddrv0 1
    DEV_E_I       : in  std_logic; --  deviceen      1

    DFTS_I8       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I7       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I6       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I5       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I4       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I3       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I2       : in  std_logic; --  dftsi         8   [0:7]
    DFTS_I1       : in  std_logic; --  dftsi         8   [0:7]

    E_DB_I        : in  std_logic; --  edbgrq0       1
    ERR_R_I       : in  std_logic; --  errenram0     1
    EVENT_I       : in  std_logic; --  eventi0       1

    GID_I4        : in  std_logic; --  groupid       4   [0:3]
    GID_I3        : in  std_logic; --  groupid       4   [0:3]
    GID_I2        : in  std_logic; --  groupid       4   [0:3]
    GID_I1        : in  std_logic; --  groupid       4   [0:3]

    INIT_P_I      : in  std_logic; --  initppx0      1
    INIT_R_I      : in  std_logic; --  initrama0     1
    LOC_R_I       : in  std_logic; --  loczrama0     1
--    LBK_E_I       : in  std_logic; --  loopback_en   1
--    LBK_MX_I      : in  std_logic; --  loopback_mux  1

--    MODE1_I3      : in  std_logic; --  mode1         3   [0:2]
--    MODE1_I2      : in  std_logic; --  mode1         3   [0:2]
--    MODE1_I1      : in  std_logic; --  mode1         3   [0:2]

--    MODE2_I3      : in  std_logic; --  mode2         3   [0:2]
--    MODE2_I2      : in  std_logic; --  mode2         3   [0:2]
--    MODE2_I1      : in  std_logic; --  mode2         3   [0:2]

--    MODE3_I3      : in  std_logic; --  mode3         3   [0:2]
--    MODE3_I2      : in  std_logic; --  mode3         3   [0:2]
--    MODE3_I1      : in  std_logic; --  mode3         3   [0:2]

    NCPUH_I       : in  std_logic; --  ncpuhalt0     1
    NET_RS_I      : in  std_logic; --  netmporeset   1
    N_FIQ_I       : in  std_logic; --  nfiq0         1
    N_IDE_I       : in  std_logic; --  niden0        1
    N_IRQ_I       : in  std_logic; --  nirq0         1
    N_PRS_I       : in  std_logic; --  npotrst       1
    N_RS_I        : in  std_logic; --  nreset0       1
    N_SPRS_I      : in  std_logic; --  nsysporeset   1
    N_TRS_I       : in  std_logic; --  ntrst         1

    P_A_I29       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I28       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I27       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I26       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I25       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I24       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I23       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I22       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I21       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I20       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I19       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I18       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I17       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I16       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I15       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I14       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I13       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I12       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I11       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I10       : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I9        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I8        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I7        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I6        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I5        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I4        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I3        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I2        : in  std_logic; --  paddrsys      29  [0:28]
    P_A_I1        : in  std_logic; --  paddrsys      29  [0:28]

    P_ECC_I       : in  std_logic; --  pareccenram0  1
    PLVL_I        : in  std_logic; --  paritylevel   1
    P_CK_E_I      : in  std_logic; --  pclkensys     1
    P_CK_I        : in  std_logic; --  pclksys       1
    P_E_I         : in  std_logic; --  penablesys    1

    PPV_BS_I20    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I19    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I18    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I17    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I16    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I15    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I14    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I13    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I12    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I11    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I10    : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I9     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I8     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I7     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I6     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I5     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I4     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I3     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I2     : in  std_logic; --  ppvbase0      20  [0:19]
    PPV_BS_I1     : in  std_logic; --  ppvbase0      20  [0:19]

    PPV_SZ_I5     : in  std_logic; --  ppvsize0      5   [0:4]
    PPV_SZ_I4     : in  std_logic; --  ppvsize0      5   [0:4]
    PPV_SZ_I3     : in  std_logic; --  ppvsize0      5   [0:4]
    PPV_SZ_I2     : in  std_logic; --  ppvsize0      5   [0:4]
    PPV_SZ_I1     : in  std_logic; --  ppvsize0      5   [0:4]

    PPX_BS_I20    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I19    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I18    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I17    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I16    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I15    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I14    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I13    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I12    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I11    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I10    : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I9     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I8     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I7     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I6     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I5     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I4     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I3     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I2     : in  std_logic; --  ppxbase0      20  [0:19]
    PPX_BS_I1     : in  std_logic; --  ppxbase0      20  [0:19]

    PPX_SZ_I5     : in  std_logic; --  ppxsize0      5   [0:4]
    PPX_SZ_I4     : in  std_logic; --  ppxsize0      5   [0:4]
    PPX_SZ_I3     : in  std_logic; --  ppxsize0      5   [0:4]
    PPX_SZ_I2     : in  std_logic; --  ppxsize0      5   [0:4]
    PPX_SZ_I1     : in  std_logic; --  ppxsize0      5   [0:4]

    P_RS_I        : in  std_logic; --  presetsysn    1
    P_SEL_I       : in  std_logic; --  pselsys       1

    PW_D_I32      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I31      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I30      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I29      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I28      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I27      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I26      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I25      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I24      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I23      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I22      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I21      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I20      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I19      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I18      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I17      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I16      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I15      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I14      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I13      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I12      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I11      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I10      : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I9       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I8       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I7       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I6       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I5       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I4       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I3       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I2       : in  std_logic; --  pwdatasys     32  [0:31]
    PW_D_I1       : in  std_logic; --  pwdatasys     32  [0:31]

    PW_I          : in  std_logic; --  pwritesys     1

    RAMCTL_I8     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I7     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I6     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I5     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I4     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I3     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I2     : in  std_logic; --  ramcontrol0   8   [0:7]
    RAMCTL_I1     : in  std_logic; --  ramcontrol0   8   [0:7]

    R_DM_I64      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I63      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I62      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I61      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I60      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I59      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I58      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I57      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I56      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I55      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I54      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I53      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I52      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I51      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I50      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I49      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I48      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I47      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I46      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I45      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I44      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I43      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I42      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I41      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I40      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I39      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I38      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I37      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I36      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I35      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I34      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I33      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I32      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I31      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I30      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I29      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I28      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I27      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I26      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I25      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I24      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I23      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I22      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I21      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I20      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I19      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I18      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I17      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I16      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I15      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I14      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I13      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I12      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I11      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I10      : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I9       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I8       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I7       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I6       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I5       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I4       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I3       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I2       : in  std_logic; --  rdatam0       64  [0:63]
    R_DM_I1       : in  std_logic; --  rdatam0       64  [0:63]

    R_DP_I32      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I31      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I30      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I29      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I28      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I27      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I26      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I25      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I24      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I23      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I22      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I21      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I20      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I19      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I18      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I17      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I16      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I15      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I14      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I13      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I12      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I11      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I10      : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I9       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I8       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I7       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I6       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I5       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I4       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I3       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I2       : in  std_logic; --  rdatap0       32  [0:31]
    R_DP_I1       : in  std_logic; --  rdatap0       32  [0:31]

--    RDY_I3        : in  std_logic; --  ready         3   [0:2]
--    RDY_I2        : in  std_logic; --  ready         3   [0:2]
--    RDY_I1        : in  std_logic; --  ready         3   [0:2]

    R_IDM_I4      : in  std_logic; --  ridm0         4   [0:3]
    R_IDM_I3      : in  std_logic; --  ridm0         4   [0:3]
    R_IDM_I2      : in  std_logic; --  ridm0         4   [0:3]
    R_IDM_I1      : in  std_logic; --  ridm0         4   [0:3]

    R_IDP_I4      : in  std_logic; --  ridp0         4   [0:3]
    R_IDP_I3      : in  std_logic; --  ridp0         4   [0:3]
    R_IDP_I2      : in  std_logic; --  ridp0         4   [0:3]
    R_IDP_I1      : in  std_logic; --  ridp0         4   [0:3]

    R_LSTM_I      : in  std_logic; --  rlastm0       1
    R_LSTP_I      : in  std_logic; --  rlastp0       1
    R_RDY_I       : in  std_logic; --  rreadys0      1

    R_RSPM_I2     : in  std_logic; --  rrespm0       2   [0:1]
    R_RSPM_I1     : in  std_logic; --  rrespm0       2   [0:1]

    R_RSPP_I2     : in  std_logic; --  rrespp0       2   [0:1]
    R_RSPP_I1     : in  std_logic; --  rrespp0       2   [0:1]

    RS_BYP_I      : in  std_logic; --  rstbypass     1
    R_VDM_I       : in  std_logic; --  rvalidm0      1
    R_VDP_I       : in  std_logic; --  rvalidp0      1
--    SCAN_E_I      : in  std_logic; --  scan_en       1
    SE_I          : in  std_logic; --  se            1
--    SHF_DR_I      : in  std_logic; --  shift_dr      1
--    SH_I          : in  std_logic; --  shin          1
    SW_CK_I       : in  std_logic; --  swclktck      1
    SW_DI_I       : in  std_logic; --  swditms       1
    T_DI_I        : in  std_logic; --  tdi           1
    TE_INI_I      : in  std_logic; --  teinit        1
--    TEST_E_I      : in  std_logic; --  test_en       1
--    UPD_DR_I      : in  std_logic; --  update_dr     1
    VINI_I        : in  std_logic; --  vinithi0      1

    W_D_I64       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I63       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I62       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I61       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I60       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I59       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I58       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I57       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I56       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I55       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I54       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I53       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I52       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I51       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I50       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I49       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I48       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I47       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I46       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I45       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I44       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I43       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I42       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I41       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I40       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I39       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I38       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I37       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I36       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I35       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I34       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I33       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I32       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I31       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I30       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I29       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I28       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I27       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I26       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I25       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I24       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I23       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I22       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I21       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I20       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I19       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I18       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I17       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I16       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I15       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I14       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I13       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I12       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I11       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I10       : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I9        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I8        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I7        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I6        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I5        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I4        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I3        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I2        : in  std_logic; --  wdatas0       64  [0:63]
    W_D_I1        : in  std_logic; --  wdatas0       64  [0:63]

    W_IDS_I8      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I7      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I6      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I5      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I4      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I3      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I2      : in  std_logic; --  wids0         8   [0:7]
    W_IDS_I1      : in  std_logic; --  wids0         8   [0:7]

    W_LST_I       : in  std_logic; --  wlasts0       1
    W_RYM_I       : in  std_logic; --  wreadym0      1
    W_RYP_I       : in  std_logic; --  wreadyp0      1

    W_SBS_I8      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I7      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I6      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I5      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I4      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I3      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I2      : in  std_logic; --  wstrbs0       8   [0:7]
    W_SBS_I1      : in  std_logic; --  wstrbs0       8   [0:7]

    W_VD_I        : in  std_logic; --  wvalids0      1

    -- Outputs
    AR_AM_O32     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O31     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O30     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O29     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O28     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O27     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O26     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O25     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O24     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O23     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O22     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O21     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O20     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O19     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O18     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O17     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O16     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O15     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O14     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O13     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O12     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O11     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O10     : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O9      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O8      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O7      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O6      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O5      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O4      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O3      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O2      : out std_logic; --  araddrm0            32  [0:31]
    AR_AM_O1      : out std_logic; --  araddrm0            32  [0:31]

    AR_AP_O32     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O31     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O30     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O29     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O28     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O27     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O26     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O25     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O24     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O23     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O22     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O21     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O20     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O19     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O18     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O17     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O16     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O15     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O14     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O13     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O12     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O11     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O10     : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O9      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O8      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O7      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O6      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O5      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O4      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O3      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O2      : out std_logic; --  araddrp0            32  [0:31]
    AR_AP_O1      : out std_logic; --  araddrp0            32  [0:31]

    AR_BUM_O2     : out std_logic; --  arburstm0           2   [0:1]
    AR_BUM_O1     : out std_logic; --  arburstm0           2   [0:1]

    AR_BUP_O2     : out std_logic; --  arburstp0           2   [0:1]
    AR_BUP_O1     : out std_logic; --  arburstp0           2   [0:1]

    AR_CHM_O4     : out std_logic; --  arcachem0           4   [0:3]
    AR_CHM_O3     : out std_logic; --  arcachem0           4   [0:3]
    AR_CHM_O2     : out std_logic; --  arcachem0           4   [0:3]
    AR_CHM_O1     : out std_logic; --  arcachem0           4   [0:3]

    AR_CHP_O4     : out std_logic; --  arcachep0           4   [0:3]
    AR_CHP_O3     : out std_logic; --  arcachep0           4   [0:3]
    AR_CHP_O2     : out std_logic; --  arcachep0           4   [0:3]
    AR_CHP_O1     : out std_logic; --  arcachep0           4   [0:3]

    AR_IDM_O4     : out std_logic; --  aridm0              4   [0:3]
    AR_IDM_O3     : out std_logic; --  aridm0              4   [0:3]
    AR_IDM_O2     : out std_logic; --  aridm0              4   [0:3]
    AR_IDM_O1     : out std_logic; --  aridm0              4   [0:3]

    AR_IDP_O4     : out std_logic; --  aridp0              4   [0:3]
    AR_IDP_O3     : out std_logic; --  aridp0              4   [0:3]
    AR_IDP_O2     : out std_logic; --  aridp0              4   [0:3]
    AR_IDP_O1     : out std_logic; --  aridp0              4   [0:3]

    AR_INM_O4     : out std_logic; --  arinnerm0           4   [0:3]
    AR_INM_O3     : out std_logic; --  arinnerm0           4   [0:3]
    AR_INM_O2     : out std_logic; --  arinnerm0           4   [0:3]
    AR_INM_O1     : out std_logic; --  arinnerm0           4   [0:3]

    AR_LEM_O4     : out std_logic; --  arlenm0             4   [0:3]
    AR_LEM_O3     : out std_logic; --  arlenm0             4   [0:3]
    AR_LEM_O2     : out std_logic; --  arlenm0             4   [0:3]
    AR_LEM_O1     : out std_logic; --  arlenm0             4   [0:3]

    AR_LEP_O4     : out std_logic; --  arlenp0             4   [0:3]
    AR_LEP_O3     : out std_logic; --  arlenp0             4   [0:3]
    AR_LEP_O2     : out std_logic; --  arlenp0             4   [0:3]
    AR_LEP_O1     : out std_logic; --  arlenp0             4   [0:3]

    AR_LKM_O2     : out std_logic; --  arlockm0            2   [0:1]
    AR_LKM_O1     : out std_logic; --  arlockm0            2   [0:1]

    AR_LKP_O2     : out std_logic; --  arlockp0            2   [0:1]
    AR_LKP_O1     : out std_logic; --  arlockp0            2   [0:1]

    AR_PRM_O3     : out std_logic; --  arprotm0            3   [0:2]
    AR_PRM_O2     : out std_logic; --  arprotm0            3   [0:2]
    AR_PRM_O1     : out std_logic; --  arprotm0            3   [0:2]

    AR_PRP_O3     : out std_logic; --  arprotp0            3   [0:2]
    AR_PRP_O2     : out std_logic; --  arprotp0            3   [0:2]
    AR_PRP_O1     : out std_logic; --  arprotp0            3   [0:2]

    AR_RDY_O      : out std_logic; --  arreadys0           1
    AR_SHM_O      : out std_logic; --  arsharem0           1

    AR_SZM_O3     : out std_logic; --  arsizem0            3   [0:2]
    AR_SZM_O2     : out std_logic; --  arsizem0            3   [0:2]
    AR_SZM_O1     : out std_logic; --  arsizem0            3   [0:2]

    AR_SZP_O3     : out std_logic; --  arsizep0            3   [0:2]
    AR_SZP_O2     : out std_logic; --  arsizep0            3   [0:2]
    AR_SZP_O1     : out std_logic; --  arsizep0            3   [0:2]

    AR_VDM_O      : out std_logic; --  arvalidm0           1
    AR_VDP_O      : out std_logic; --  arvalidp0           1

    AW_AM_O32     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O31     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O30     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O29     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O28     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O27     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O26     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O25     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O24     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O23     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O22     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O21     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O20     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O19     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O18     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O17     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O16     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O15     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O14     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O13     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O12     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O11     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O10     : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O9      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O8      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O7      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O6      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O5      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O4      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O3      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O2      : out std_logic; --  awaddrm0            32  [0:31]
    AW_AM_O1      : out std_logic; --  awaddrm0            32  [0:31]

    AW_AP_O32     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O31     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O30     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O29     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O28     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O27     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O26     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O25     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O24     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O23     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O22     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O21     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O20     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O19     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O18     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O17     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O16     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O15     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O14     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O13     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O12     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O11     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O10     : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O9      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O8      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O7      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O6      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O5      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O4      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O3      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O2      : out std_logic; --  awaddrp0            32  [0:31]
    AW_AP_O1      : out std_logic; --  awaddrp0            32  [0:31]

    AW_BUM_O2     : out std_logic; --  awburstm0           2   [0:1]
    AW_BUM_O1     : out std_logic; --  awburstm0           2   [0:1]

    AW_BUP_O2     : out std_logic; --  awburstp0           2   [0:1]
    AW_BUP_O1     : out std_logic; --  awburstp0           2   [0:1]

    AW_CHM_O4     : out std_logic; --  awcachem0           4   [0:3]
    AW_CHM_O3     : out std_logic; --  awcachem0           4   [0:3]
    AW_CHM_O2     : out std_logic; --  awcachem0           4   [0:3]
    AW_CHM_O1     : out std_logic; --  awcachem0           4   [0:3]

    AW_CHP_O4     : out std_logic; --  awcachep0           4   [0:3]
    AW_CHP_O3     : out std_logic; --  awcachep0           4   [0:3]
    AW_CHP_O2     : out std_logic; --  awcachep0           4   [0:3]
    AW_CHP_O1     : out std_logic; --  awcachep0           4   [0:3]

    AW_IDM_O4     : out std_logic; --  awidm0              4   [0:3]
    AW_IDM_O3     : out std_logic; --  awidm0              4   [0:3]
    AW_IDM_O2     : out std_logic; --  awidm0              4   [0:3]
    AW_IDM_O1     : out std_logic; --  awidm0              4   [0:3]

    AW_IDP_O4     : out std_logic; --  awidp0              4   [0:3]
    AW_IDP_O3     : out std_logic; --  awidp0              4   [0:3]
    AW_IDP_O2     : out std_logic; --  awidp0              4   [0:3]
    AW_IDP_O1     : out std_logic; --  awidp0              4   [0:3]

    AW_INM_O4     : out std_logic; --  awinnerm0           4   [0:3]
    AW_INM_O3     : out std_logic; --  awinnerm0           4   [0:3]
    AW_INM_O2     : out std_logic; --  awinnerm0           4   [0:3]
    AW_INM_O1     : out std_logic; --  awinnerm0           4   [0:3]

    AW_LEM_O4     : out std_logic; --  awlenm0             4   [0:3]
    AW_LEM_O3     : out std_logic; --  awlenm0             4   [0:3]
    AW_LEM_O2     : out std_logic; --  awlenm0             4   [0:3]
    AW_LEM_O1     : out std_logic; --  awlenm0             4   [0:3]

    AW_LEP_O4     : out std_logic; --  awlenp0             4   [0:3]
    AW_LEP_O3     : out std_logic; --  awlenp0             4   [0:3]
    AW_LEP_O2     : out std_logic; --  awlenp0             4   [0:3]
    AW_LEP_O1     : out std_logic; --  awlenp0             4   [0:3]

    AW_LKM_O2     : out std_logic; --  awlockm0            2   [0:1]
    AW_LKM_O1     : out std_logic; --  awlockm0            2   [0:1]

    AW_LKP_O2     : out std_logic; --  awlockp0            2   [0:1]
    AW_LKP_O1     : out std_logic; --  awlockp0            2   [0:1]

    AW_PRM_O3     : out std_logic; --  awprotm0            3   [0:2]
    AW_PRM_O2     : out std_logic; --  awprotm0            3   [0:2]
    AW_PRM_O1     : out std_logic; --  awprotm0            3   [0:2]

    AW_PRP_O3     : out std_logic; --  awprotp0            3   [0:2]
    AW_PRP_O2     : out std_logic; --  awprotp0            3   [0:2]
    AW_PRP_O1     : out std_logic; --  awprotp0            3   [0:2]

    AW_RDY_O      : out std_logic; --  awreadys0           1
    AW_SHM_O      : out std_logic; --  awsharem0           1

    AW_SZM_O3     : out std_logic; --  awsizem0            3   [0:2]
    AW_SZM_O2     : out std_logic; --  awsizem0            3   [0:2]
    AW_SZM_O1     : out std_logic; --  awsizem0            3   [0:2]

    AW_SZP_O3     : out std_logic; --  awsizep0            3   [0:2]
    AW_SZP_O2     : out std_logic; --  awsizep0            3   [0:2]
    AW_SZP_O1     : out std_logic; --  awsizep0            3   [0:2]

    AW_VDM_O      : out std_logic; --  awvalidm0           1
    AW_VDP_O      : out std_logic; --  awvalidp0           1

    B_IDS_O8      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O7      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O6      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O5      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O4      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O3      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O2      : out std_logic; --  bids0               8   [0:7]
    B_IDS_O1      : out std_logic; --  bids0               8   [0:7]

    B_RDYM_O      : out std_logic; --  breadym0            1
    B_RDYP_O      : out std_logic; --  breadyp0            1

    B_RSP_O2      : out std_logic; --  bresps0             2   [0:1]
    B_RSP_O1      : out std_logic; --  bresps0             2   [0:1]

    B_VD_O        : out std_logic; --  bvalids0            1

--    CAL_O5        : out std_logic; --  calibration         5   [0:4]
--    CAL_O4        : out std_logic; --  calibration         5   [0:4]
--    CAL_O3        : out std_logic; --  calibration         5   [0:4]
--    CAL_O2        : out std_logic; --  calibration         5   [0:4]
--    CAL_O1        : out std_logic; --  calibration         5   [0:4]

    CDB_PW_O      : out std_logic; --  cdbgpwrupreq        1
    CDB_RS_O      : out std_logic; --  cdbgrstreq          1
--    CK_DR_O       : out std_logic; --  clock_dr            1
    COM_RX_O      : out std_logic; --  commrx0             1
    COM_TX_O      : out std_logic; --  commtx0             1
    CS_PW_O       : out std_logic; --  csyspwrupreq        1
    DB_ACK_O      : out std_logic; --  dbgack0             1
    DB_NPD_O      : out std_logic; --  dbgnopwrdwn         1
    DB_RS_O       : out std_logic; --  dbgrstreq0          1

    DFTS_O8       : out std_logic; --  dftso               8   [0:7]
    DFTS_O7       : out std_logic; --  dftso               8   [0:7]
    DFTS_O6       : out std_logic; --  dftso               8   [0:7]
    DFTS_O5       : out std_logic; --  dftso               8   [0:7]
    DFTS_O4       : out std_logic; --  dftso               8   [0:7]
    DFTS_O3       : out std_logic; --  dftso               8   [0:7]
    DFTS_O2       : out std_logic; --  dftso               8   [0:7]
    DFTS_O1       : out std_logic; --  dftso               8   [0:7]

    ET_ASC_O8     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O7     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O6     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O5     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O4     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O3     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O2     : out std_logic; --  etmasicctl0         8   [0:7]
    ET_ASC_O1     : out std_logic; --  etmasicctl0         8   [0:7]

    ET_E_O        : out std_logic; --  etmen0              1

    ET_EXT_O2     : out std_logic; --  etmextout0          2   [0:1]
    ET_EXT_O1     : out std_logic; --  etmextout0          2   [0:1]

    EVENT_O       : out std_logic; --  evento0             1
    FP_DZC_O      : out std_logic; --  fpdzc0              1
    FP_IDC_O      : out std_logic; --  fpidc0              1
    FP_IOC_O      : out std_logic; --  fpioc0              1
    FP_IXC_O      : out std_logic; --  fpixc0              1
    FP_OFC_O      : out std_logic; --  fpofc0              1
    FP_UFC_O      : out std_logic; --  fpufc0              1
    JTAG_O        : out std_logic; --  jtagnsw             1
--    LBK_E_O       : out std_logic; --  loopback_en         1
--    LBK_MX_O      : out std_logic; --  loopback_mux        1

--    MODE1_O2      : out std_logic; --  mode1               3   [0:2]
--    MODE1_O1      : out std_logic; --  mode1               3   [0:2]

--    MODE2_O2      : out std_logic; --  mode2               3   [0:2]
--    MODE2_O1      : out std_logic; --  mode2               3   [0:2]

--    MODE3_O2      : out std_logic; --  mode3               3   [0:2]
--    MODE3_O1      : out std_logic; --  mode3               3   [0:2]

    N_CKST_O      : out std_logic; --  nclkstopped0        1
    N_PMU_O       : out std_logic; --  npmuirq0            1
    N_TDO_O       : out std_logic; --  ntdoen              1
    N_VFIQ_O      : out std_logic; --  nvalfiq0            1
    N_VIRQ_O      : out std_logic; --  nvalirq0            1
    N_VRST_O      : out std_logic; --  nvalreset0          1
    N_EPST_O      : out std_logic; --  nwfepipestopped0    1
    N_IPST_O      : out std_logic; --  nwfipipestopped0    1

    P_RD_O32      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O31      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O30      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O29      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O28      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O27      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O26      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O25      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O24      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O23      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O22      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O21      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O20      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O19      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O18      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O17      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O16      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O15      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O14      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O13      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O12      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O11      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O10      : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O9       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O8       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O7       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O6       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O5       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O4       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O3       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O2       : out std_logic; --  prdatasys           32  [0:31]
    P_RD_O1       : out std_logic; --  prdatasys           32  [0:31]

    P_RDY_O       : out std_logic; --  preadysys           1
    P_VER_O       : out std_logic; --  pslverrsys          1

    RD_O64        : out std_logic; --  rdatas0             64  [0:63]
    RD_O63        : out std_logic; --  rdatas0             64  [0:63]
    RD_O62        : out std_logic; --  rdatas0             64  [0:63]
    RD_O61        : out std_logic; --  rdatas0             64  [0:63]
    RD_O60        : out std_logic; --  rdatas0             64  [0:63]
    RD_O59        : out std_logic; --  rdatas0             64  [0:63]
    RD_O58        : out std_logic; --  rdatas0             64  [0:63]
    RD_O57        : out std_logic; --  rdatas0             64  [0:63]
    RD_O56        : out std_logic; --  rdatas0             64  [0:63]
    RD_O55        : out std_logic; --  rdatas0             64  [0:63]
    RD_O54        : out std_logic; --  rdatas0             64  [0:63]
    RD_O53        : out std_logic; --  rdatas0             64  [0:63]
    RD_O52        : out std_logic; --  rdatas0             64  [0:63]
    RD_O51        : out std_logic; --  rdatas0             64  [0:63]
    RD_O50        : out std_logic; --  rdatas0             64  [0:63]
    RD_O49        : out std_logic; --  rdatas0             64  [0:63]
    RD_O48        : out std_logic; --  rdatas0             64  [0:63]
    RD_O47        : out std_logic; --  rdatas0             64  [0:63]
    RD_O46        : out std_logic; --  rdatas0             64  [0:63]
    RD_O45        : out std_logic; --  rdatas0             64  [0:63]
    RD_O44        : out std_logic; --  rdatas0             64  [0:63]
    RD_O43        : out std_logic; --  rdatas0             64  [0:63]
    RD_O42        : out std_logic; --  rdatas0             64  [0:63]
    RD_O41        : out std_logic; --  rdatas0             64  [0:63]
    RD_O40        : out std_logic; --  rdatas0             64  [0:63]
    RD_O39        : out std_logic; --  rdatas0             64  [0:63]
    RD_O38        : out std_logic; --  rdatas0             64  [0:63]
    RD_O37        : out std_logic; --  rdatas0             64  [0:63]
    RD_O36        : out std_logic; --  rdatas0             64  [0:63]
    RD_O35        : out std_logic; --  rdatas0             64  [0:63]
    RD_O34        : out std_logic; --  rdatas0             64  [0:63]
    RD_O33        : out std_logic; --  rdatas0             64  [0:63]
    RD_O32        : out std_logic; --  rdatas0             64  [0:63]
    RD_O31        : out std_logic; --  rdatas0             64  [0:63]
    RD_O30        : out std_logic; --  rdatas0             64  [0:63]
    RD_O29        : out std_logic; --  rdatas0             64  [0:63]
    RD_O28        : out std_logic; --  rdatas0             64  [0:63]
    RD_O27        : out std_logic; --  rdatas0             64  [0:63]
    RD_O26        : out std_logic; --  rdatas0             64  [0:63]
    RD_O25        : out std_logic; --  rdatas0             64  [0:63]
    RD_O24        : out std_logic; --  rdatas0             64  [0:63]
    RD_O23        : out std_logic; --  rdatas0             64  [0:63]
    RD_O22        : out std_logic; --  rdatas0             64  [0:63]
    RD_O21        : out std_logic; --  rdatas0             64  [0:63]
    RD_O20        : out std_logic; --  rdatas0             64  [0:63]
    RD_O19        : out std_logic; --  rdatas0             64  [0:63]
    RD_O18        : out std_logic; --  rdatas0             64  [0:63]
    RD_O17        : out std_logic; --  rdatas0             64  [0:63]
    RD_O16        : out std_logic; --  rdatas0             64  [0:63]
    RD_O15        : out std_logic; --  rdatas0             64  [0:63]
    RD_O14        : out std_logic; --  rdatas0             64  [0:63]
    RD_O13        : out std_logic; --  rdatas0             64  [0:63]
    RD_O12        : out std_logic; --  rdatas0             64  [0:63]
    RD_O11        : out std_logic; --  rdatas0             64  [0:63]
    RD_O10        : out std_logic; --  rdatas0             64  [0:63]
    RD_O9         : out std_logic; --  rdatas0             64  [0:63]
    RD_O8         : out std_logic; --  rdatas0             64  [0:63]
    RD_O7         : out std_logic; --  rdatas0             64  [0:63]
    RD_O6         : out std_logic; --  rdatas0             64  [0:63]
    RD_O5         : out std_logic; --  rdatas0             64  [0:63]
    RD_O4         : out std_logic; --  rdatas0             64  [0:63]
    RD_O3         : out std_logic; --  rdatas0             64  [0:63]
    RD_O2         : out std_logic; --  rdatas0             64  [0:63]
    RD_O1         : out std_logic; --  rdatas0             64  [0:63]

--    RDY_O3        : out std_logic; --  ready               3   [0:2]
--    RDY_O2        : out std_logic; --  ready               3   [0:2]
--    RDY_O1        : out std_logic; --  ready               3   [0:2]

    R_IDS_O8      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O7      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O6      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O5      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O4      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O3      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O2      : out std_logic; --  rids0               8   [0:7]
    R_IDS_O1      : out std_logic; --  rids0               8   [0:7]

    R_LST_O       : out std_logic; --  rlasts0             1
    R_RDYM_O      : out std_logic; --  rreadym0            1
    R_RDYP_O      : out std_logic; --  rreadyp0            1

    R_RSP_O2      : out std_logic; --  rresps0             2   [0:1]
    R_RSP_O1      : out std_logic; --  rresps0             2   [0:1]

    R_VD_O        : out std_logic; --  rvalids0            1
--    SCAN_E_O      : out std_logic; --  scan_en             1
--    SHF_DR_O      : out std_logic; --  shift_dr            1
--    SHOUT_O       : out std_logic; --  shout               1
    SWDO_O        : out std_logic; --  swdo                1
    SWDO_E_O      : out std_logic; --  swdoen              1
    TDO_O         : out std_logic; --  tdo                 1
--    TEST_E_O      : out std_logic; --  test_en             1
    T_CK_O        : out std_logic; --  traceclk            1
    T_CTL_O       : out std_logic; --  tracectl            1

    T_DATA_O32    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O31    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O30    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O29    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O28    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O27    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O26    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O25    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O24    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O23    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O22    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O21    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O20    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O19    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O18    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O17    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O16    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O15    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O14    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O13    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O12    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O11    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O10    : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O9     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O8     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O7     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O6     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O5     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O4     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O3     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O2     : out std_logic; --  tracedata           32  [0:31]
    T_DATA_O1     : out std_logic; --  tracedata           32  [0:31]

--    UPD_DR_O      : out std_logic; --  update_dr           1

    W_DM_O64      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O63      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O62      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O61      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O60      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O59      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O58      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O57      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O56      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O55      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O54      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O53      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O52      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O51      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O50      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O49      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O48      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O47      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O46      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O45      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O44      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O43      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O42      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O41      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O40      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O39      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O38      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O37      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O36      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O35      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O34      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O33      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O32      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O31      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O30      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O29      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O28      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O27      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O26      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O25      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O24      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O23      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O22      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O21      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O20      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O19      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O18      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O17      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O16      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O15      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O14      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O13      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O12      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O11      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O10      : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O9       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O8       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O7       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O6       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O5       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O4       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O3       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O2       : out std_logic; --  wdatam0             64  [0:63]
    W_DM_O1       : out std_logic; --  wdatam0             64  [0:63]

    W_DP_O32      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O31      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O30      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O29      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O28      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O27      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O26      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O25      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O24      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O23      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O22      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O21      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O20      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O19      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O18      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O17      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O16      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O15      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O14      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O13      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O12      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O11      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O10      : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O9       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O8       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O7       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O6       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O5       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O4       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O3       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O2       : out std_logic; --  wdatap0             32  [0:31]
    W_DP_O1       : out std_logic; --  wdatap0             32  [0:31]

    W_IDM_O4      : out std_logic; --  widm0               4   [0:3]
    W_IDM_O3      : out std_logic; --  widm0               4   [0:3]
    W_IDM_O2      : out std_logic; --  widm0               4   [0:3]
    W_IDM_O1      : out std_logic; --  widm0               4   [0:3]

    W_IDP_O4      : out std_logic; --  widp0               4   [0:3]
    W_IDP_O3      : out std_logic; --  widp0               4   [0:3]
    W_IDP_O2      : out std_logic; --  widp0               4   [0:3]
    W_IDP_O1      : out std_logic; --  widp0               4   [0:3]

    W_LSTM_O      : out std_logic; --  wlastm0             1
    W_LSTP_O      : out std_logic; --  wlastp0             1
    W_RDY_O       : out std_logic; --  wreadys0            1

    W_SBM_O8      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O7      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O6      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O5      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O4      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O3      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O2      : out std_logic; --  wstrbm0             8   [0:7]
    W_SBM_O1      : out std_logic; --  wstrbm0             8   [0:7]

    W_SBP_O4      : out std_logic; --  wstrbp0             4   [0:3]
    W_SBP_O3      : out std_logic; --  wstrbp0             4   [0:3]
    W_SBP_O2      : out std_logic; --  wstrbp0             4   [0:3]
    W_SBP_O1      : out std_logic; --  wstrbp0             4   [0:3]

    W_VDM_O       : out std_logic; --  wvalidm0            1
    W_VDP_O       : out std_logic  --  wvalidp0            1
);
end NX_R5_L;

architecture NX_RTL of NX_R5_L is
    attribute NX_TYPE :string;
    attribute NX_TYPE of NX_RTL: architecture is "PHY";

    attribute NX_USE :string;
    attribute NX_USE of NX_RTL: architecture is "NX_R5_L";
begin
end NX_RTL;

-- =================================================================================================
--   NX_R5_L_WRAP definition                                                            2019/04/09
-- =================================================================================================

library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

library NX;
use NX.nxPackage.all;

entity NX_R5_L_WRAP is
port (
    -- Inputs
    A_CKEM_I    : in  std_logic;                      --  aclkenm0      1
    A_CKEP_I    : in  std_logic;                      --  aclkenp0      1
    A_CKES_I    : in  std_logic;                      --  aclkens0      1
    AR_A_I      : in  std_logic_vector(31 downto 0);  --  araddrs0      32  [0:31]
    AR_BU_I     : in  std_logic_vector(1 downto 0);   --  arbursts0     2   [0:1]
    AR_CH_I     : in  std_logic_vector(3 downto 0);   --  arcaches0     4   [0:3]
    AR_IDS_I    : in  std_logic_vector(7 downto 0);   --  arids0        8   [0:7]
    AR_LE_I     : in  std_logic_vector(3 downto 0);   --  arlens0       4   [0:3]
    AR_LK_I     : in  std_logic_vector(1 downto 0);   --  arlocks0      2   [0:1]
    AR_PR_I     : in  std_logic_vector(2 downto 0);   --  arprots0      3   [0:2]
    AR_RYM_I    : in  std_logic;                      --  arreadym0     1
    AR_RYP_I    : in  std_logic;                      --  arreadyp0     1
    AR_SZ_I     : in  std_logic_vector(2 downto 0);   --  arsizes0      3   [0:2]
    AR_VD_I     : in  std_logic;                      --  arvalids0     1
    AT_RS_I     : in  std_logic;                      --  atresetn      1
    AW_A_I      : in  std_logic_vector(31 downto 0);  --  awaddrs0      32  [0:31]
    AW_BU_I     : in  std_logic_vector(1 downto 0);   --  awbursts0     2   [0:1]
    AW_CH_I     : in  std_logic_vector(3 downto 0);   --  awcaches0     4   [0:3]
    AW_IDS_I    : in  std_logic_vector(7 downto 0);   --  awids0        8   [0:7]
    AW_LE_I     : in  std_logic_vector(3 downto 0);   --  awlens0       4   [0:3]
    AW_LK_I     : in  std_logic_vector(1 downto 0);   --  awlocks0      2   [0:1]
    AW_PR_I     : in  std_logic_vector(2 downto 0);   --  awprots0      3   [0:2]
    AW_RYM_I    : in  std_logic;                      --  awreadym0     1
    AW_RYP_I    : in  std_logic;                      --  awreadyp0     1
    AW_SZ_I     : in  std_logic_vector(2 downto 0);   --  awsizes0      3   [0:2]
    AW_VD_I     : in  std_logic;                      --  awvalids0     1
    B_IDM_I     : in  std_logic_vector(3 downto 0);   --  bidm0         4   [0:3]
    B_IDP_I     : in  std_logic_vector(3 downto 0);   --  bidp0         4   [0:3]
    B_RDY_I     : in  std_logic;                      --  breadys0      1
    B_RSPM_I    : in  std_logic_vector(1 downto 0);   --  brespm0       2     [0:1]
    B_RSPP_I    : in  std_logic_vector(1 downto 0);   --  brespp0       2     [0:1]
    B_VDM_I     : in  std_logic;                      --  bvalidm0      1
    B_VDP_I     : in  std_logic;                      --  bvalidp0      1
--    CAL_I       : in  std_logic_vector(4 downto 0);   --  calibration   5   [0:4]
    CDB_PW_I    : in  std_logic;                      --  cdbgpwrupack  1
    CDB_RS_I    : in  std_logic;                      --  cdbgrstack    1
    CFG_EE_I    : in  std_logic;                      --  cfgee         1
    CFG_IE_I    : in  std_logic;                      --  cfgie         1
    CFG_NM_I    : in  std_logic;                      --  cfgnmfi0      1
    CK_I        : in  std_logic;                      --  clk           1
--    CK_DR_I     : in  std_logic;                      --  clock_dr      1
    CS_PW_I     : in  std_logic;                      --  csyspwrupack  1
    DB_E_I      : in  std_logic;                      --  dbgen0        1
    DB_NCK_I    : in  std_logic;                      --  dbgnoclkstop  1
    DB_RA_I     : in  std_logic_vector(19 downto 0);  --  dbgromaddr    20  [0:19]
    DB_RAV_I    : in  std_logic;                      --  dbgromaddrv   1
    DB_SA_I     : in  std_logic_vector(19 downto 0);  --  dbgselfaddr0  20  [0:19]
    DB_SAV_I    : in  std_logic;                      --  dbgselfaddrv0 1
    DEV_E_I     : in  std_logic;                      --  deviceen      1
    DFTS_I      : in  std_logic_vector(7 downto 0);   --  dftsi         8   [0:7]
    E_DB_I      : in  std_logic;                      --  edbgrq0       1
    ERR_R_I     : in  std_logic;                      --  errenram0     1
    EVENT_I     : in  std_logic;                      --  eventi0       1
    GID_I       : in  std_logic_vector(3 downto 0);   --  groupid       4   [0:3]
    INIT_P_I    : in  std_logic;                      --  initppx0      1
    INIT_R_I    : in  std_logic;                      --  initrama0     1
    LOC_R_I     : in  std_logic;                      --  loczrama0     1
--    LBK_E_I     : in  std_logic;                      --  loopback_en   1
--    LBK_MX_I    : in  std_logic;                      --  loopback_mux  1
--    MODE1_I     : in  std_logic_vector(2 downto 0);   --  mode1         3   [0:2]
--    MODE2_I     : in  std_logic_vector(2 downto 0);   --  mode2         3   [0:2]
--    MODE3_I     : in  std_logic_vector(2 downto 0);   --  mode3         3   [0:2]
    NCPUH_I     : in  std_logic;                      --  ncpuhalt0     1
    NET_RS_I    : in  std_logic;                      --  netmporeset   1
    N_FIQ_I     : in  std_logic;                      --  nfiq0         1
    N_IDE_I     : in  std_logic;                      --  niden0        1
    N_IRQ_I     : in  std_logic;                      --  nirq0         1
    N_PRS_I     : in  std_logic;                      --  npotrst       1
    N_RS_I      : in  std_logic;                      --  nreset0       1
    N_SPRS_I    : in  std_logic;                      --  nsysporeset   1
    N_TRS_I     : in  std_logic;                      --  ntrst         1
    P_A_I       : in  std_logic_vector(28 downto 0);  --  paddrsys      29  [0:28]
    P_ECC_I     : in  std_logic;                      --  pareccenram0  1
    PLVL_I      : in  std_logic;                      --  paritylevel   1
    P_CK_E_I    : in  std_logic;                      --  pclkensys     1
    P_CK_I      : in  std_logic;                      --  pclksys       1
    P_E_I       : in  std_logic;                      --  penablesys    1
    PPV_BS_I    : in  std_logic_vector(19 downto 0);  --  ppvbase0      20  [0:19]
    PPV_SZ_I    : in  std_logic_vector(4 downto 0);   --  ppvsize0      5   [0:4]
    PPX_BS_I    : in  std_logic_vector(19 downto 0);  --  ppxbase0      20  [0:19]
    PPX_SZ_I    : in  std_logic_vector(4 downto 0);   --  ppxsize0      5   [0:4]
    P_RS_I      : in  std_logic;                      --  presetsysn    1
    P_SEL_I     : in  std_logic;                      --  pselsys       1
    PW_D_I      : in  std_logic_vector(31 downto 0);  --  pwdatasys     32  [0:31]
    PW_I        : in  std_logic;                      --  pwritesys     1
    RAMCTL_I    : in  std_logic_vector(7 downto 0);   --  ramcontrol0   8   [0:7]
    R_DM_I      : in  std_logic_vector(63 downto 0);  --  rdatam0       64  [0:63]
    R_DP_I      : in  std_logic_vector(31 downto 0);  --  rdatap0       32  [0:31]
--    RDY_I       : in  std_logic_vector(2 downto 0);   --  ready         3   [0:2]
    R_IDM_I     : in  std_logic_vector(3 downto 0);   --  ridm0         4   [0:3]
    R_IDP_I     : in  std_logic_vector(3 downto 0);   --  ridp0         4   [0:3]
    R_LSTM_I    : in  std_logic;                      --  rlastm0       1
    R_LSTP_I    : in  std_logic;                      --  rlastp0       1
    R_RDY_I     : in  std_logic;                      --  rreadys0      1
    R_RSPM_I    : in  std_logic_vector(1 downto 0);   --  rrespm0       2   [0:1]
    R_RSPP_I    : in  std_logic_vector(1 downto 0);   --  rrespp0       2   [0:1]
    RS_BYP_I    : in  std_logic;                      --  rstbypass     1
    R_VDM_I     : in  std_logic;                      --  rvalidm0      1
    R_VDP_I     : in  std_logic;                      --  rvalidp0      1
--    SCAN_E_I    : in  std_logic;                      --  scan_en       1
    SE_I        : in  std_logic;                      --  se            1
--    SHF_DR_I    : in  std_logic;                      --  shift_dr      1
--    SH_I        : in  std_logic;                      --  shin          1
    SW_CK_I     : in  std_logic;                      --  swclktck      1
    SW_DI_I     : in  std_logic;                      --  swditms       1
    T_DI_I      : in  std_logic;                      --  tdi           1
    TE_INI_I    : in  std_logic;                      --  teinit        1
--    TEST_E_I    : in  std_logic;                      --  test_en       1
--    UPD_DR_I    : in  std_logic;                      --  update_dr     1
    VINI_I      : in  std_logic;                      --  vinithi0      1
    W_D_I       : in  std_logic_vector(63 downto 0);  --  wdatas0       64  [0:63]
    W_IDS_I     : in  std_logic_vector(7 downto 0);   --  wids0         8   [0:7]
    W_LST_I     : in  std_logic;                      --  wlasts0       1
    W_RYM_I     : in  std_logic;                      --  wreadym0      1
    W_RYP_I     : in  std_logic;                      --  wreadyp0      1
    W_SBS_I     : in  std_logic_vector(7 downto 0);   --  wstrbs0       8   [0:7]
    W_VD_I      : in  std_logic;                      --  wvalids0      1

    -- Outputs
    AR_AM_O     : out std_logic_vector(31 downto 0);  --  araddrm0            32  [0:31]
    AR_AP_O     : out std_logic_vector(31 downto 0);  --  araddrp0            32  [0:31]
    AR_BUM_O    : out std_logic_vector(1 downto 0);   --  arburstm0           2   [0:1]
    AR_BUP_O    : out std_logic_vector(1 downto 0);   --  arburstp0           2   [0:1]
    AR_CHM_O    : out std_logic_vector(3 downto 0);   --  arcachem0           4   [0:3]
    AR_CHP_O    : out std_logic_vector(3 downto 0);   --  arcachep0           4   [0:3]
    AR_IDM_O    : out std_logic_vector(3 downto 0);   --  aridm0              4   [0:3]
    AR_IDP_O    : out std_logic_vector(3 downto 0);   --  aridp0              4   [0:3]
    AR_INM_O    : out std_logic_vector(3 downto 0);   --  arinnerm0           4   [0:3]
    AR_LEM_O    : out std_logic_vector(3 downto 0);   --  arlenm0             4   [0:3]
    AR_LEP_O    : out std_logic_vector(3 downto 0);   --  arlenp0             4   [0:3]
    AR_LKM_O    : out std_logic_vector(1 downto 0);   --  arlockm0            2   [0:1]
    AR_LKP_O    : out std_logic_vector(1 downto 0);   --  arlockp0            2   [0:1]
    AR_PRM_O    : out std_logic_vector(2 downto 0);   --  arprotm0            3   [0:2]
    AR_PRP_O    : out std_logic_vector(2 downto 0);   --  arprotp0            3   [0:2]
    AR_RDY_O    : out std_logic;                      --  arreadys0           1
    AR_SHM_O    : out std_logic;                      --  arsharem0           1
    AR_SZM_O    : out std_logic_vector(2 downto 0);   --  arsizem0            3   [0:2]
    AR_SZP_O    : out std_logic_vector(2 downto 0);   --  arsizep0            3   [0:2]
    AR_VDM_O    : out std_logic;                      --  arvalidm0           1
    AR_VDP_O    : out std_logic;                      --  arvalidp0           1
    AW_AM_O     : out std_logic_vector(31 downto 0);  --  awaddrm0            32  [0:31]
    AW_AP_O     : out std_logic_vector(31 downto 0);  --  awaddrp0            32  [0:31]
    AW_BUM_O    : out std_logic_vector(1 downto 0);   --  awburstm0           2   [0:1]
    AW_BUP_O    : out std_logic_vector(1 downto 0);   --  awburstp0           2   [0:1]
    AW_CHM_O    : out std_logic_vector(3 downto 0);   --  awcachem0           4   [0:3]
    AW_CHP_O    : out std_logic_vector(3 downto 0);   --  awcachep0           4   [0:3]
    AW_IDM_O    : out std_logic_vector(3 downto 0);   --  awidm0              4   [0:3]
    AW_IDP_O    : out std_logic_vector(3 downto 0);   --  awidp0              4   [0:3]
    AW_INM_O    : out std_logic_vector(3 downto 0);   --  awinnerm0           4   [0:3]
    AW_LEM_O    : out std_logic_vector(3 downto 0);   --  awlenm0             4   [0:3]
    AW_LEP_O    : out std_logic_vector(3 downto 0);   --  awlenp0             4   [0:3]
    AW_LKM_O    : out std_logic_vector(1 downto 0);   --  awlockm0            2   [0:1]
    AW_LKP_O    : out std_logic_vector(1 downto 0);   --  awlockp0            2   [0:1]
    AW_PRM_O    : out std_logic_vector(2 downto 0);   --  awprotm0            3   [0:2]
    AW_PRP_O    : out std_logic_vector(2 downto 0);   --  awprotp0            3   [0:2]
    AW_RDY_O    : out std_logic;                      --  awreadys0           1
    AW_SHM_O    : out std_logic;                      --  awsharem0           1
    AW_SZM_O    : out std_logic_vector(2 downto 0);   --  awsizem0            3   [0:2]
    AW_SZP_O    : out std_logic_vector(2 downto 0);   --  awsizep0            3   [0:2]
    AW_VDM_O    : out std_logic;                      --  awvalidm0           1
    AW_VDP_O    : out std_logic;                      --  awvalidp0           1
    B_IDS_O     : out std_logic_vector(7 downto 0);   --  bids0               8   [0:7]
    B_RDYM_O    : out std_logic;                      --  breadym0            1
    B_RDYP_O    : out std_logic;                      --  breadyp0            1
    B_RSP_O     : out std_logic_vector(1 downto 0);   --  bresps0             2   [0:1]
    B_VD_O      : out std_logic;                      --  bvalids0            1
--    CAL_O       : out std_logic_vector(4 downto 0);   --  calibration         5   [0:4]
    CDB_PW_O    : out std_logic;                      --  cdbgpwrupreq        1
    CDB_RS_O    : out std_logic;                      --  cdbgrstreq          1
--    CK_DR_O     : out std_logic;                      --  clock_dr            1
    COM_RX_O    : out std_logic;                      --  commrx0             1
    COM_TX_O    : out std_logic;                      --  commtx0             1
    CS_PW_O     : out std_logic;                      --  csyspwrupreq        1
    DB_ACK_O    : out std_logic;                      --  dbgack0             1
    DB_NPD_O    : out std_logic;                      --  dbgnopwrdwn         1
    DB_RS_O     : out std_logic;                      --  dbgrstreq0          1
    DFTS_O      : out std_logic_vector(7 downto 0);   --  dftso               8   [0:7]
    ET_ASC_O    : out std_logic_vector(7 downto 0);   --  etmasicctl0         8   [0:7]
    ET_E_O      : out std_logic;                      --  etmen0              1
    ET_EXT_O    : out std_logic_vector(1 downto 0);   --  etmextout0          2   [0:1]
    EVENT_O     : out std_logic;                      --  evento0             1
    FP_DZC_O    : out std_logic;                      --  fpdzc0              1
    FP_IDC_O    : out std_logic;                      --  fpidc0              1
    FP_IOC_O    : out std_logic;                      --  fpioc0              1
    FP_IXC_O    : out std_logic;                      --  fpixc0              1
    FP_OFC_O    : out std_logic;                      --  fpofc0              1
    FP_UFC_O    : out std_logic;                      --  fpufc0              1
    JTAG_O      : out std_logic;                      --  jtagnsw             1
--    LBK_E_O     : out std_logic;                      --  loopback_en         1
--    LBK_MX_O    : out std_logic;                      --  loopback_mux        1
--    MODE1_O     : out std_logic_vector(1 downto 0);   --  mode1               3   [0:2]
--    MODE2_O     : out std_logic_vector(1 downto 0);   --  mode2               3   [0:2]
--    MODE3_O     : out std_logic_vector(1 downto 0);   --  mode3               3   [0:2]
    N_CKST_O    : out std_logic;                      --  nclkstopped0        1
    N_PMU_O     : out std_logic;                      --  npmuirq0            1
    N_TDO_O     : out std_logic;                      --  ntdoen              1
    N_VFIQ_O    : out std_logic;                      --  nvalfiq0            1
    N_VIRQ_O    : out std_logic;                      --  nvalirq0            1
    N_VRST_O    : out std_logic;                      --  nvalreset0          1
    N_EPST_O    : out std_logic;                      --  nwfepipestopped0    1
    N_IPST_O    : out std_logic;                      --  nwfipipestopped0    1
    P_RD_O      : out std_logic_vector(31 downto 0);  --  prdatasys           32  [0:31]
    P_RDY_O     : out std_logic;                      --  preadysys           1
    P_VER_O     : out std_logic;                      --  pslverrsys          1
    RD_O        : out std_logic_vector(63 downto 0);  --  rdatas0             64  [0:63]
--    RDY_O       : out std_logic_vector(2 downto 0);   --  ready               3   [0:2]
    R_IDS_O     : out std_logic_vector(7 downto 0);   --  rids0               8   [0:7]
    R_LST_O     : out std_logic;                      --  rlasts0             1
    R_RDYM_O    : out std_logic;                      --  rreadym0            1
    R_RDYP_O    : out std_logic;                      --  rreadyp0            1
    R_RSP_O     : out std_logic_vector(1 downto 0);   --  rresps0             2   [0:1]
    R_VD_O      : out std_logic;                      --  rvalids0            1
--    SCAN_E_O    : out std_logic;                      --  scan_en             1
--    SHF_DR_O    : out std_logic;                      --  shift_dr            1
--    SHOUT_O     : out std_logic;                      --  shout               1
    SWDO_O      : out std_logic;                      --  swdo                1
    SWDO_E_O    : out std_logic;                      --  swdoen              1
    TDO_O       : out std_logic;                      --  tdo                 1
--    TEST_E_O    : out std_logic;                      --  test_en             1
    T_CK_O      : out std_logic;                      --  traceclk            1
    T_CTL_O     : out std_logic;                      --  tracectl            1
    T_DATA_O    : out std_logic_vector(31 downto 0);  --  tracedata           32  [0:31]
--    UPD_DR_O    : out std_logic;                      --  update_dr           1
    W_DM_O      : out std_logic_vector(63 downto 0);  --  wdatam0             64  [0:63]
    W_DP_O      : out std_logic_vector(31 downto 0);  --  wdatap0             32  [0:31]
    W_IDM_O     : out std_logic_vector(3 downto 0);   --  widm0               4   [0:3]
    W_IDP_O     : out std_logic_vector(3 downto 0);   --  widp0               4   [0:3]
    W_LSTM_O    : out std_logic;                      --  wlastm0             1
    W_LSTP_O    : out std_logic;                      --  wlastp0             1
    W_RDY_O     : out std_logic;                      --  wreadys0            1
    W_SBM_O     : out std_logic_vector(7 downto 0);   --  wstrbm0             8   [0:7]
    W_SBP_O     : out std_logic_vector(3 downto 0);   --  wstrbp0             4   [0:3]
    W_VDM_O     : out std_logic;                      --  wvalidm0            1
    W_VDP_O     : out std_logic                       --  wvalidp0            1
);
end NX_R5_L_WRAP;

architecture NX_RTL of NX_R5_L_WRAP is
begin

    inst_NX_R : NX_R5_L
    port map (
	-- Inputs
	  A_CKEM_I      =>  A_CKEM_I
	, A_CKEP_I      =>  A_CKEP_I
	, A_CKES_I      =>  A_CKES_I

	, AR_A_I32      =>  AR_A_I(31)
	, AR_A_I31      =>  AR_A_I(30)
	, AR_A_I30      =>  AR_A_I(29)
	, AR_A_I29      =>  AR_A_I(28)
	, AR_A_I28      =>  AR_A_I(27)
	, AR_A_I27      =>  AR_A_I(26)
	, AR_A_I26      =>  AR_A_I(25)
	, AR_A_I25      =>  AR_A_I(24)
	, AR_A_I24      =>  AR_A_I(23)
	, AR_A_I23      =>  AR_A_I(22)
	, AR_A_I22      =>  AR_A_I(21)
	, AR_A_I21      =>  AR_A_I(20)
	, AR_A_I20      =>  AR_A_I(19)
	, AR_A_I19      =>  AR_A_I(18)
	, AR_A_I18      =>  AR_A_I(17)
	, AR_A_I17      =>  AR_A_I(16)
	, AR_A_I16      =>  AR_A_I(15)
	, AR_A_I15      =>  AR_A_I(14)
	, AR_A_I14      =>  AR_A_I(13)
	, AR_A_I13      =>  AR_A_I(12)
	, AR_A_I12      =>  AR_A_I(11)
	, AR_A_I11      =>  AR_A_I(10)
	, AR_A_I10      =>  AR_A_I(9)
	, AR_A_I9       =>  AR_A_I(8)
	, AR_A_I8       =>  AR_A_I(7)
	, AR_A_I7       =>  AR_A_I(6)
	, AR_A_I6       =>  AR_A_I(5)
	, AR_A_I5       =>  AR_A_I(4)
	, AR_A_I4       =>  AR_A_I(3)
	, AR_A_I3       =>  AR_A_I(2)
	, AR_A_I2       =>  AR_A_I(1)
	, AR_A_I1       =>  AR_A_I(0)

	, AR_BU_I2      =>  AR_BU_I(1)
	, AR_BU_I1      =>  AR_BU_I(0)

	, AR_CH_I4      =>  AR_CH_I(3)
	, AR_CH_I3      =>  AR_CH_I(2)
	, AR_CH_I2      =>  AR_CH_I(1)
	, AR_CH_I1      =>  AR_CH_I(0)

	, AR_IDS_I8     =>  AR_IDS_I(7)
	, AR_IDS_I7     =>  AR_IDS_I(6)
	, AR_IDS_I6     =>  AR_IDS_I(5)
	, AR_IDS_I5     =>  AR_IDS_I(4)
	, AR_IDS_I4     =>  AR_IDS_I(3)
	, AR_IDS_I3     =>  AR_IDS_I(2)
	, AR_IDS_I2     =>  AR_IDS_I(1)
	, AR_IDS_I1     =>  AR_IDS_I(0)

	, AR_LE_I4      =>  AR_LE_I(3)
	, AR_LE_I3      =>  AR_LE_I(2)
	, AR_LE_I2      =>  AR_LE_I(1)
	, AR_LE_I1      =>  AR_LE_I(0)

	, AR_LK_I2      =>  AR_LK_I(1)
	, AR_LK_I1      =>  AR_LK_I(0)

	, AR_PR_I3      =>  AR_PR_I(2)
	, AR_PR_I2      =>  AR_PR_I(1)
	, AR_PR_I1      =>  AR_PR_I(0)

	, AR_RYM_I      =>  AR_RYM_I
	, AR_RYP_I      =>  AR_RYP_I

	, AR_SZ_I3      =>  AR_SZ_I(2)
	, AR_SZ_I2      =>  AR_SZ_I(1)
	, AR_SZ_I1      =>  AR_SZ_I(0)

	, AR_VD_I       =>  AR_VD_I
	, AT_RS_I       =>  AT_RS_I

	, AW_A_I32      =>  AW_A_I(31)
	, AW_A_I31      =>  AW_A_I(30)
	, AW_A_I30      =>  AW_A_I(29)
	, AW_A_I29      =>  AW_A_I(28)
	, AW_A_I28      =>  AW_A_I(27)
	, AW_A_I27      =>  AW_A_I(26)
	, AW_A_I26      =>  AW_A_I(25)
	, AW_A_I25      =>  AW_A_I(24)
	, AW_A_I24      =>  AW_A_I(23)
	, AW_A_I23      =>  AW_A_I(22)
	, AW_A_I22      =>  AW_A_I(21)
	, AW_A_I21      =>  AW_A_I(20)
	, AW_A_I20      =>  AW_A_I(19)
	, AW_A_I19      =>  AW_A_I(18)
	, AW_A_I18      =>  AW_A_I(17)
	, AW_A_I17      =>  AW_A_I(16)
	, AW_A_I16      =>  AW_A_I(15)
	, AW_A_I15      =>  AW_A_I(14)
	, AW_A_I14      =>  AW_A_I(13)
	, AW_A_I13      =>  AW_A_I(12)
	, AW_A_I12      =>  AW_A_I(11)
	, AW_A_I11      =>  AW_A_I(10)
	, AW_A_I10      =>  AW_A_I(9)
	, AW_A_I9       =>  AW_A_I(8)
	, AW_A_I8       =>  AW_A_I(7)
	, AW_A_I7       =>  AW_A_I(6)
	, AW_A_I6       =>  AW_A_I(5)
	, AW_A_I5       =>  AW_A_I(4)
	, AW_A_I4       =>  AW_A_I(3)
	, AW_A_I3       =>  AW_A_I(2)
	, AW_A_I2       =>  AW_A_I(1)
	, AW_A_I1       =>  AW_A_I(0)

	, AW_BU_I2      =>  AW_BU_I(1)
	, AW_BU_I1      =>  AW_BU_I(0)

	, AW_CH_I4      =>  AW_CH_I(3)
	, AW_CH_I3      =>  AW_CH_I(2)
	, AW_CH_I2      =>  AW_CH_I(1)
	, AW_CH_I1      =>  AW_CH_I(0)

	, AW_IDS_I8     =>  AW_IDS_I(7)
	, AW_IDS_I7     =>  AW_IDS_I(6)
	, AW_IDS_I6     =>  AW_IDS_I(5)
	, AW_IDS_I5     =>  AW_IDS_I(4)
	, AW_IDS_I4     =>  AW_IDS_I(3)
	, AW_IDS_I3     =>  AW_IDS_I(2)
	, AW_IDS_I2     =>  AW_IDS_I(1)
	, AW_IDS_I1     =>  AW_IDS_I(0)

	, AW_LE_I4      =>  AW_LE_I(3)
	, AW_LE_I3      =>  AW_LE_I(2)
	, AW_LE_I2      =>  AW_LE_I(1)
	, AW_LE_I1      =>  AW_LE_I(0)

	, AW_LK_I2      =>  AW_LK_I(1)
	, AW_LK_I1      =>  AW_LK_I(0)

	, AW_PR_I3      =>  AW_PR_I(2)
	, AW_PR_I2      =>  AW_PR_I(1)
	, AW_PR_I1      =>  AW_PR_I(0)

	, AW_RYM_I      =>  AW_RYM_I
	, AW_RYP_I      =>  AW_RYP_I

	, AW_SZ_I3      =>  AW_SZ_I(2)
	, AW_SZ_I2      =>  AW_SZ_I(1)
	, AW_SZ_I1      =>  AW_SZ_I(0)

	, AW_VD_I       =>  AW_VD_I

	, B_IDM_I4      =>  B_IDM_I(3)
	, B_IDM_I3      =>  B_IDM_I(2)
	, B_IDM_I2      =>  B_IDM_I(1)
	, B_IDM_I1      =>  B_IDM_I(0)

	, B_IDP_I4      =>  B_IDP_I(3)
	, B_IDP_I3      =>  B_IDP_I(2)
	, B_IDP_I2      =>  B_IDP_I(1)
	, B_IDP_I1      =>  B_IDP_I(0)

	, B_RDY_I       =>  B_RDY_I

	, B_RSPM_I2     =>  B_RSPM_I(1)
	, B_RSPM_I1     =>  B_RSPM_I(0)

	, B_RSPP_I2     =>  B_RSPP_I(1)
	, B_RSPP_I1     =>  B_RSPP_I(0)

	, B_VDM_I       =>  B_VDM_I
	, B_VDP_I       =>  B_VDP_I

--	, CAL_I5        =>  CAL_I(4)
--	, CAL_I4        =>  CAL_I(3)
--	, CAL_I3        =>  CAL_I(2)
--	, CAL_I2        =>  CAL_I(1)
--	, CAL_I1        =>  CAL_I(0)

	, CDB_PW_I      =>  CDB_PW_I
	, CDB_RS_I      =>  CDB_RS_I
	, CFG_EE_I      =>  CFG_EE_I
	, CFG_IE_I      =>  CFG_IE_I
	, CFG_NM_I      =>  CFG_NM_I
	, CK_I          =>  CK_I
--	, CK_DR_I       =>  CK_DR_I
	, CS_PW_I       =>  CS_PW_I
	, DB_E_I        =>  DB_E_I
	, DB_NCK_I      =>  DB_NCK_I

	, DB_RA_I20     =>  DB_RA_I(19)
	, DB_RA_I19     =>  DB_RA_I(18)
	, DB_RA_I18     =>  DB_RA_I(17)
	, DB_RA_I17     =>  DB_RA_I(16)
	, DB_RA_I16     =>  DB_RA_I(15)
	, DB_RA_I15     =>  DB_RA_I(14)
	, DB_RA_I14     =>  DB_RA_I(13)
	, DB_RA_I13     =>  DB_RA_I(12)
	, DB_RA_I12     =>  DB_RA_I(11)
	, DB_RA_I11     =>  DB_RA_I(10)
	, DB_RA_I10     =>  DB_RA_I(9)
	, DB_RA_I9      =>  DB_RA_I(8)
	, DB_RA_I8      =>  DB_RA_I(7)
	, DB_RA_I7      =>  DB_RA_I(6)
	, DB_RA_I6      =>  DB_RA_I(5)
	, DB_RA_I5      =>  DB_RA_I(4)
	, DB_RA_I4      =>  DB_RA_I(3)
	, DB_RA_I3      =>  DB_RA_I(2)
	, DB_RA_I2      =>  DB_RA_I(1)
	, DB_RA_I1      =>  DB_RA_I(0)

	, DB_RAV_I      =>  DB_RAV_I

	, DB_SA_I20     =>  DB_SA_I(19)
	, DB_SA_I19     =>  DB_SA_I(18)
	, DB_SA_I18     =>  DB_SA_I(17)
	, DB_SA_I17     =>  DB_SA_I(16)
	, DB_SA_I16     =>  DB_SA_I(15)
	, DB_SA_I15     =>  DB_SA_I(14)
	, DB_SA_I14     =>  DB_SA_I(13)
	, DB_SA_I13     =>  DB_SA_I(12)
	, DB_SA_I12     =>  DB_SA_I(11)
	, DB_SA_I11     =>  DB_SA_I(10)
	, DB_SA_I10     =>  DB_SA_I(9)
	, DB_SA_I9      =>  DB_SA_I(8)
	, DB_SA_I8      =>  DB_SA_I(7)
	, DB_SA_I7      =>  DB_SA_I(6)
	, DB_SA_I6      =>  DB_SA_I(5)
	, DB_SA_I5      =>  DB_SA_I(4)
	, DB_SA_I4      =>  DB_SA_I(3)
	, DB_SA_I3      =>  DB_SA_I(2)
	, DB_SA_I2      =>  DB_SA_I(1)
	, DB_SA_I1      =>  DB_SA_I(0)

	, DB_SAV_I      =>  DB_SAV_I
	, DEV_E_I       =>  DB_E_I

	, DFTS_I8       =>  DFTS_I(7)
	, DFTS_I7       =>  DFTS_I(6)
	, DFTS_I6       =>  DFTS_I(5)
	, DFTS_I5       =>  DFTS_I(4)
	, DFTS_I4       =>  DFTS_I(3)
	, DFTS_I3       =>  DFTS_I(2)
	, DFTS_I2       =>  DFTS_I(1)
	, DFTS_I1       =>  DFTS_I(0)

	, E_DB_I        =>  E_DB_I
	, ERR_R_I       =>  ERR_R_I
	, EVENT_I       =>  EVENT_I

	, GID_I4        =>  GID_I(3)
	, GID_I3        =>  GID_I(2)
	, GID_I2        =>  GID_I(1)
	, GID_I1        =>  GID_I(0)

	, INIT_P_I      =>  INIT_P_I
	, INIT_R_I      =>  INIT_R_I
	, LOC_R_I       =>  LOC_R_I
--	, LBK_E_I       =>  LBK_E_I
--	, LBK_MX_I      =>  LBK_MX_I

--	, MODE1_I3      =>  MODE1_I(2)
--	, MODE1_I2      =>  MODE1_I(1)
--	, MODE1_I1      =>  MODE1_I(0)

--	, MODE2_I3      =>  MODE2_I(2)
--	, MODE2_I2      =>  MODE2_I(1)
--	, MODE2_I1      =>  MODE2_I(0)

--	, MODE3_I3      =>  MODE3_I(2)
--	, MODE3_I2      =>  MODE3_I(1)
--	, MODE3_I1      =>  MODE3_I(0)

	, NCPUH_I       =>  NCPUH_I
	, NET_RS_I      =>  NET_RS_I
	, N_FIQ_I       =>  N_FIQ_I
	, N_IDE_I       =>  N_IDE_I
	, N_IRQ_I       =>  N_IRQ_I
	, N_PRS_I       =>  N_PRS_I
	, N_RS_I        =>  N_RS_I
	, N_SPRS_I      =>  N_SPRS_I
	, N_TRS_I       =>  N_TRS_I

	, P_A_I29       =>  P_A_I(28)
	, P_A_I28       =>  P_A_I(27)
	, P_A_I27       =>  P_A_I(26)
	, P_A_I26       =>  P_A_I(25)
	, P_A_I25       =>  P_A_I(24)
	, P_A_I24       =>  P_A_I(23)
	, P_A_I23       =>  P_A_I(22)
	, P_A_I22       =>  P_A_I(21)
	, P_A_I21       =>  P_A_I(20)
	, P_A_I20       =>  P_A_I(19)
	, P_A_I19       =>  P_A_I(18)
	, P_A_I18       =>  P_A_I(17)
	, P_A_I17       =>  P_A_I(16)
	, P_A_I16       =>  P_A_I(15)
	, P_A_I15       =>  P_A_I(14)
	, P_A_I14       =>  P_A_I(13)
	, P_A_I13       =>  P_A_I(12)
	, P_A_I12       =>  P_A_I(11)
	, P_A_I11       =>  P_A_I(10)
	, P_A_I10       =>  P_A_I(9)
	, P_A_I9        =>  P_A_I(8)
	, P_A_I8        =>  P_A_I(7)
	, P_A_I7        =>  P_A_I(6)
	, P_A_I6        =>  P_A_I(5)
	, P_A_I5        =>  P_A_I(4)
	, P_A_I4        =>  P_A_I(3)
	, P_A_I3        =>  P_A_I(2)
	, P_A_I2        =>  P_A_I(1)
	, P_A_I1        =>  P_A_I(0)

	, P_ECC_I       =>  P_ECC_I
	, PLVL_I        =>  PLVL_I
	, P_CK_E_I      =>  P_CK_E_I
	, P_CK_I        =>  P_CK_I
	, P_E_I         =>  P_E_I

	, PPV_BS_I20    =>  PPV_BS_I(19)
	, PPV_BS_I19    =>  PPV_BS_I(18)
	, PPV_BS_I18    =>  PPV_BS_I(17)
	, PPV_BS_I17    =>  PPV_BS_I(16)
	, PPV_BS_I16    =>  PPV_BS_I(15)
	, PPV_BS_I15    =>  PPV_BS_I(14)
	, PPV_BS_I14    =>  PPV_BS_I(13)
	, PPV_BS_I13    =>  PPV_BS_I(12)
	, PPV_BS_I12    =>  PPV_BS_I(11)
	, PPV_BS_I11    =>  PPV_BS_I(10)
	, PPV_BS_I10    =>  PPV_BS_I(9)
	, PPV_BS_I9     =>  PPV_BS_I(8)
	, PPV_BS_I8     =>  PPV_BS_I(7)
	, PPV_BS_I7     =>  PPV_BS_I(6)
	, PPV_BS_I6     =>  PPV_BS_I(5)
	, PPV_BS_I5     =>  PPV_BS_I(4)
	, PPV_BS_I4     =>  PPV_BS_I(3)
	, PPV_BS_I3     =>  PPV_BS_I(2)
	, PPV_BS_I2     =>  PPV_BS_I(1)
	, PPV_BS_I1     =>  PPV_BS_I(0)

	, PPV_SZ_I5     =>  PPV_SZ_I(4)
	, PPV_SZ_I4     =>  PPV_SZ_I(3)
	, PPV_SZ_I3     =>  PPV_SZ_I(2)
	, PPV_SZ_I2     =>  PPV_SZ_I(1)
	, PPV_SZ_I1     =>  PPV_SZ_I(0)

	, PPX_BS_I20    =>  PPX_BS_I(19)
	, PPX_BS_I19    =>  PPX_BS_I(18)
	, PPX_BS_I18    =>  PPX_BS_I(17)
	, PPX_BS_I17    =>  PPX_BS_I(16)
	, PPX_BS_I16    =>  PPX_BS_I(15)
	, PPX_BS_I15    =>  PPX_BS_I(14)
	, PPX_BS_I14    =>  PPX_BS_I(13)
	, PPX_BS_I13    =>  PPX_BS_I(12)
	, PPX_BS_I12    =>  PPX_BS_I(11)
	, PPX_BS_I11    =>  PPX_BS_I(10)
	, PPX_BS_I10    =>  PPX_BS_I(9)
	, PPX_BS_I9     =>  PPX_BS_I(8)
	, PPX_BS_I8     =>  PPX_BS_I(7)
	, PPX_BS_I7     =>  PPX_BS_I(6)
	, PPX_BS_I6     =>  PPX_BS_I(5)
	, PPX_BS_I5     =>  PPX_BS_I(4)
	, PPX_BS_I4     =>  PPX_BS_I(3)
	, PPX_BS_I3     =>  PPX_BS_I(2)
	, PPX_BS_I2     =>  PPX_BS_I(1)
	, PPX_BS_I1     =>  PPX_BS_I(0)

	, PPX_SZ_I5     =>  PPX_SZ_I(4)
	, PPX_SZ_I4     =>  PPX_SZ_I(3)
	, PPX_SZ_I3     =>  PPX_SZ_I(2)
	, PPX_SZ_I2     =>  PPX_SZ_I(1)
	, PPX_SZ_I1     =>  PPX_SZ_I(0)

	, P_RS_I        =>  P_RS_I
	, P_SEL_I       =>  P_SEL_I

	, PW_D_I32      =>  PW_D_I(31)
	, PW_D_I31      =>  PW_D_I(30)
	, PW_D_I30      =>  PW_D_I(29)
	, PW_D_I29      =>  PW_D_I(28)
	, PW_D_I28      =>  PW_D_I(27)
	, PW_D_I27      =>  PW_D_I(26)
	, PW_D_I26      =>  PW_D_I(25)
	, PW_D_I25      =>  PW_D_I(24)
	, PW_D_I24      =>  PW_D_I(23)
	, PW_D_I23      =>  PW_D_I(22)
	, PW_D_I22      =>  PW_D_I(21)
	, PW_D_I21      =>  PW_D_I(20)
	, PW_D_I20      =>  PW_D_I(19)
	, PW_D_I19      =>  PW_D_I(18)
	, PW_D_I18      =>  PW_D_I(17)
	, PW_D_I17      =>  PW_D_I(16)
	, PW_D_I16      =>  PW_D_I(15)
	, PW_D_I15      =>  PW_D_I(14)
	, PW_D_I14      =>  PW_D_I(13)
	, PW_D_I13      =>  PW_D_I(12)
	, PW_D_I12      =>  PW_D_I(11)
	, PW_D_I11      =>  PW_D_I(10)
	, PW_D_I10      =>  PW_D_I(9)
	, PW_D_I9       =>  PW_D_I(8)
	, PW_D_I8       =>  PW_D_I(7)
	, PW_D_I7       =>  PW_D_I(6)
	, PW_D_I6       =>  PW_D_I(5)
	, PW_D_I5       =>  PW_D_I(4)
	, PW_D_I4       =>  PW_D_I(3)
	, PW_D_I3       =>  PW_D_I(2)
	, PW_D_I2       =>  PW_D_I(1)
	, PW_D_I1       =>  PW_D_I(0)

	, PW_I          =>  PW_I

	, RAMCTL_I8     =>  RAMCTL_I(7)
	, RAMCTL_I7     =>  RAMCTL_I(6)
	, RAMCTL_I6     =>  RAMCTL_I(5)
	, RAMCTL_I5     =>  RAMCTL_I(4)
	, RAMCTL_I4     =>  RAMCTL_I(3)
	, RAMCTL_I3     =>  RAMCTL_I(2)
	, RAMCTL_I2     =>  RAMCTL_I(1)
	, RAMCTL_I1     =>  RAMCTL_I(0)

	, R_DM_I64      =>  R_DM_I(63)
	, R_DM_I63      =>  R_DM_I(62)
	, R_DM_I62      =>  R_DM_I(61)
	, R_DM_I61      =>  R_DM_I(60)
	, R_DM_I60      =>  R_DM_I(59)
	, R_DM_I59      =>  R_DM_I(58)
	, R_DM_I58      =>  R_DM_I(57)
	, R_DM_I57      =>  R_DM_I(56)
	, R_DM_I56      =>  R_DM_I(55)
	, R_DM_I55      =>  R_DM_I(54)
	, R_DM_I54      =>  R_DM_I(53)
	, R_DM_I53      =>  R_DM_I(52)
	, R_DM_I52      =>  R_DM_I(51)
	, R_DM_I51      =>  R_DM_I(50)
	, R_DM_I50      =>  R_DM_I(49)
	, R_DM_I49      =>  R_DM_I(48)
	, R_DM_I48      =>  R_DM_I(47)
	, R_DM_I47      =>  R_DM_I(46)
	, R_DM_I46      =>  R_DM_I(45)
	, R_DM_I45      =>  R_DM_I(44)
	, R_DM_I44      =>  R_DM_I(43)
	, R_DM_I43      =>  R_DM_I(42)
	, R_DM_I42      =>  R_DM_I(41)
	, R_DM_I41      =>  R_DM_I(40)
	, R_DM_I40      =>  R_DM_I(39)
	, R_DM_I39      =>  R_DM_I(38)
	, R_DM_I38      =>  R_DM_I(37)
	, R_DM_I37      =>  R_DM_I(36)
	, R_DM_I36      =>  R_DM_I(35)
	, R_DM_I35      =>  R_DM_I(34)
	, R_DM_I34      =>  R_DM_I(33)
	, R_DM_I33      =>  R_DM_I(32)
	, R_DM_I32      =>  R_DM_I(31)
	, R_DM_I31      =>  R_DM_I(30)
	, R_DM_I30      =>  R_DM_I(29)
	, R_DM_I29      =>  R_DM_I(28)
	, R_DM_I28      =>  R_DM_I(27)
	, R_DM_I27      =>  R_DM_I(26)
	, R_DM_I26      =>  R_DM_I(25)
	, R_DM_I25      =>  R_DM_I(24)
	, R_DM_I24      =>  R_DM_I(23)
	, R_DM_I23      =>  R_DM_I(22)
	, R_DM_I22      =>  R_DM_I(21)
	, R_DM_I21      =>  R_DM_I(20)
	, R_DM_I20      =>  R_DM_I(19)
	, R_DM_I19      =>  R_DM_I(18)
	, R_DM_I18      =>  R_DM_I(17)
	, R_DM_I17      =>  R_DM_I(16)
	, R_DM_I16      =>  R_DM_I(15)
	, R_DM_I15      =>  R_DM_I(14)
	, R_DM_I14      =>  R_DM_I(13)
	, R_DM_I13      =>  R_DM_I(12)
	, R_DM_I12      =>  R_DM_I(11)
	, R_DM_I11      =>  R_DM_I(10)
	, R_DM_I10      =>  R_DM_I(9)
	, R_DM_I9       =>  R_DM_I(8)
	, R_DM_I8       =>  R_DM_I(7)
	, R_DM_I7       =>  R_DM_I(6)
	, R_DM_I6       =>  R_DM_I(5)
	, R_DM_I5       =>  R_DM_I(4)
	, R_DM_I4       =>  R_DM_I(3)
	, R_DM_I3       =>  R_DM_I(2)
	, R_DM_I2       =>  R_DM_I(1)
	, R_DM_I1       =>  R_DM_I(0)

	, R_DP_I32      =>  R_DP_I(31)
	, R_DP_I31      =>  R_DP_I(30)
	, R_DP_I30      =>  R_DP_I(29)
	, R_DP_I29      =>  R_DP_I(28)
	, R_DP_I28      =>  R_DP_I(27)
	, R_DP_I27      =>  R_DP_I(26)
	, R_DP_I26      =>  R_DP_I(25)
	, R_DP_I25      =>  R_DP_I(24)
	, R_DP_I24      =>  R_DP_I(23)
	, R_DP_I23      =>  R_DP_I(22)
	, R_DP_I22      =>  R_DP_I(21)
	, R_DP_I21      =>  R_DP_I(20)
	, R_DP_I20      =>  R_DP_I(19)
	, R_DP_I19      =>  R_DP_I(18)
	, R_DP_I18      =>  R_DP_I(17)
	, R_DP_I17      =>  R_DP_I(16)
	, R_DP_I16      =>  R_DP_I(15)
	, R_DP_I15      =>  R_DP_I(14)
	, R_DP_I14      =>  R_DP_I(13)
	, R_DP_I13      =>  R_DP_I(12)
	, R_DP_I12      =>  R_DP_I(11)
	, R_DP_I11      =>  R_DP_I(10)
	, R_DP_I10      =>  R_DP_I(9)
	, R_DP_I9       =>  R_DP_I(8)
	, R_DP_I8       =>  R_DP_I(7)
	, R_DP_I7       =>  R_DP_I(6)
	, R_DP_I6       =>  R_DP_I(5)
	, R_DP_I5       =>  R_DP_I(4)
	, R_DP_I4       =>  R_DP_I(3)
	, R_DP_I3       =>  R_DP_I(2)
	, R_DP_I2       =>  R_DP_I(1)
	, R_DP_I1       =>  R_DP_I(0)

--	, RDY_I3        =>  RDY_I(2)
--	, RDY_I2        =>  RDY_I(1)
--	, RDY_I1        =>  RDY_I(0)

	, R_IDM_I4      =>  R_IDM_I(3)
	, R_IDM_I3      =>  R_IDM_I(2)
	, R_IDM_I2      =>  R_IDM_I(1)
	, R_IDM_I1      =>  R_IDM_I(0)

	, R_IDP_I4      =>  R_IDP_I(3)
	, R_IDP_I3      =>  R_IDP_I(2)
	, R_IDP_I2      =>  R_IDP_I(1)
	, R_IDP_I1      =>  R_IDP_I(0)

	, R_LSTM_I      =>  R_LSTM_I
	, R_LSTP_I      =>  R_LSTP_I
	, R_RDY_I       =>  R_RDY_I

	, R_RSPM_I2     =>  R_RSPM_I(1)
	, R_RSPM_I1     =>  R_RSPM_I(0)

	, R_RSPP_I2     =>  R_RSPP_I(1)
	, R_RSPP_I1     =>  R_RSPP_I(0)

	, RS_BYP_I      =>  RS_BYP_I
	, R_VDM_I       =>  R_VDM_I
	, R_VDP_I       =>  R_VDP_I
--	, SCAN_E_I      =>  SCAN_E_I
	, SE_I          =>  SE_I
--	, SHF_DR_I      =>  SHF_DR_I
--	, SH_I          =>  SH_I
	, SW_CK_I       =>  SW_CK_I
	, SW_DI_I       =>  SW_DI_I
	, T_DI_I        =>  T_DI_I
	, TE_INI_I      =>  TE_INI_I
--	, TEST_E_I      =>  TEST_E_I
--	, UPD_DR_I      =>  UPD_DR_I
	, VINI_I        =>  VINI_I

	, W_D_I64       =>  W_D_I(63)
	, W_D_I63       =>  W_D_I(62)
	, W_D_I62       =>  W_D_I(61)
	, W_D_I61       =>  W_D_I(60)
	, W_D_I60       =>  W_D_I(59)
	, W_D_I59       =>  W_D_I(58)
	, W_D_I58       =>  W_D_I(57)
	, W_D_I57       =>  W_D_I(56)
	, W_D_I56       =>  W_D_I(55)
	, W_D_I55       =>  W_D_I(54)
	, W_D_I54       =>  W_D_I(53)
	, W_D_I53       =>  W_D_I(52)
	, W_D_I52       =>  W_D_I(51)
	, W_D_I51       =>  W_D_I(50)
	, W_D_I50       =>  W_D_I(49)
	, W_D_I49       =>  W_D_I(48)
	, W_D_I48       =>  W_D_I(47)
	, W_D_I47       =>  W_D_I(46)
	, W_D_I46       =>  W_D_I(45)
	, W_D_I45       =>  W_D_I(44)
	, W_D_I44       =>  W_D_I(43)
	, W_D_I43       =>  W_D_I(42)
	, W_D_I42       =>  W_D_I(41)
	, W_D_I41       =>  W_D_I(40)
	, W_D_I40       =>  W_D_I(39)
	, W_D_I39       =>  W_D_I(38)
	, W_D_I38       =>  W_D_I(37)
	, W_D_I37       =>  W_D_I(36)
	, W_D_I36       =>  W_D_I(35)
	, W_D_I35       =>  W_D_I(34)
	, W_D_I34       =>  W_D_I(33)
	, W_D_I33       =>  W_D_I(32)
	, W_D_I32       =>  W_D_I(31)
	, W_D_I31       =>  W_D_I(30)
	, W_D_I30       =>  W_D_I(29)
	, W_D_I29       =>  W_D_I(28)
	, W_D_I28       =>  W_D_I(27)
	, W_D_I27       =>  W_D_I(26)
	, W_D_I26       =>  W_D_I(25)
	, W_D_I25       =>  W_D_I(24)
	, W_D_I24       =>  W_D_I(23)
	, W_D_I23       =>  W_D_I(22)
	, W_D_I22       =>  W_D_I(21)
	, W_D_I21       =>  W_D_I(20)
	, W_D_I20       =>  W_D_I(19)
	, W_D_I19       =>  W_D_I(18)
	, W_D_I18       =>  W_D_I(17)
	, W_D_I17       =>  W_D_I(16)
	, W_D_I16       =>  W_D_I(15)
	, W_D_I15       =>  W_D_I(14)
	, W_D_I14       =>  W_D_I(13)
	, W_D_I13       =>  W_D_I(12)
	, W_D_I12       =>  W_D_I(11)
	, W_D_I11       =>  W_D_I(10)
	, W_D_I10       =>  W_D_I(9)
	, W_D_I9        =>  W_D_I(8)
	, W_D_I8        =>  W_D_I(7)
	, W_D_I7        =>  W_D_I(6)
	, W_D_I6        =>  W_D_I(5)
	, W_D_I5        =>  W_D_I(4)
	, W_D_I4        =>  W_D_I(3)
	, W_D_I3        =>  W_D_I(2)
	, W_D_I2        =>  W_D_I(1)
	, W_D_I1        =>  W_D_I(0)

	, W_IDS_I8      =>  W_IDS_I(7)
	, W_IDS_I7      =>  W_IDS_I(6)
	, W_IDS_I6      =>  W_IDS_I(5)
	, W_IDS_I5      =>  W_IDS_I(4)
	, W_IDS_I4      =>  W_IDS_I(3)
	, W_IDS_I3      =>  W_IDS_I(2)
	, W_IDS_I2      =>  W_IDS_I(1)
	, W_IDS_I1      =>  W_IDS_I(0)

	, W_LST_I       =>  W_LST_I
	, W_RYM_I       =>  W_RYM_I
	, W_RYP_I       =>  W_RYP_I

	, W_SBS_I8      =>  W_SBS_I(7)
	, W_SBS_I7      =>  W_SBS_I(6)
	, W_SBS_I6      =>  W_SBS_I(5)
	, W_SBS_I5      =>  W_SBS_I(4)
	, W_SBS_I4      =>  W_SBS_I(3)
	, W_SBS_I3      =>  W_SBS_I(2)
	, W_SBS_I2      =>  W_SBS_I(1)
	, W_SBS_I1      =>  W_SBS_I(0)

	, W_VD_I        =>  W_VD_I

        -- Outputs
	, AR_AM_O32     =>  AR_AM_O(31)
	, AR_AM_O31     =>  AR_AM_O(30)
	, AR_AM_O30     =>  AR_AM_O(29)
	, AR_AM_O29     =>  AR_AM_O(28)
	, AR_AM_O28     =>  AR_AM_O(27)
	, AR_AM_O27     =>  AR_AM_O(26)
	, AR_AM_O26     =>  AR_AM_O(25)
	, AR_AM_O25     =>  AR_AM_O(24)
	, AR_AM_O24     =>  AR_AM_O(23)
	, AR_AM_O23     =>  AR_AM_O(22)
	, AR_AM_O22     =>  AR_AM_O(21)
	, AR_AM_O21     =>  AR_AM_O(20)
	, AR_AM_O20     =>  AR_AM_O(19)
	, AR_AM_O19     =>  AR_AM_O(18)
	, AR_AM_O18     =>  AR_AM_O(17)
	, AR_AM_O17     =>  AR_AM_O(16)
	, AR_AM_O16     =>  AR_AM_O(15)
	, AR_AM_O15     =>  AR_AM_O(14)
	, AR_AM_O14     =>  AR_AM_O(13)
	, AR_AM_O13     =>  AR_AM_O(12)
	, AR_AM_O12     =>  AR_AM_O(11)
	, AR_AM_O11     =>  AR_AM_O(10)
	, AR_AM_O10     =>  AR_AM_O(9)
	, AR_AM_O9      =>  AR_AM_O(8)
	, AR_AM_O8      =>  AR_AM_O(7)
	, AR_AM_O7      =>  AR_AM_O(6)
	, AR_AM_O6      =>  AR_AM_O(5)
	, AR_AM_O5      =>  AR_AM_O(4)
	, AR_AM_O4      =>  AR_AM_O(3)
	, AR_AM_O3      =>  AR_AM_O(2)
	, AR_AM_O2      =>  AR_AM_O(1)
	, AR_AM_O1      =>  AR_AM_O(0)

	, AR_AP_O32     =>  AR_AP_O(31)
	, AR_AP_O31     =>  AR_AP_O(30)
	, AR_AP_O30     =>  AR_AP_O(29)
	, AR_AP_O29     =>  AR_AP_O(28)
	, AR_AP_O28     =>  AR_AP_O(27)
	, AR_AP_O27     =>  AR_AP_O(26)
	, AR_AP_O26     =>  AR_AP_O(25)
	, AR_AP_O25     =>  AR_AP_O(24)
	, AR_AP_O24     =>  AR_AP_O(23)
	, AR_AP_O23     =>  AR_AP_O(22)
	, AR_AP_O22     =>  AR_AP_O(21)
	, AR_AP_O21     =>  AR_AP_O(20)
	, AR_AP_O20     =>  AR_AP_O(19)
	, AR_AP_O19     =>  AR_AP_O(18)
	, AR_AP_O18     =>  AR_AP_O(17)
	, AR_AP_O17     =>  AR_AP_O(16)
	, AR_AP_O16     =>  AR_AP_O(15)
	, AR_AP_O15     =>  AR_AP_O(14)
	, AR_AP_O14     =>  AR_AP_O(13)
	, AR_AP_O13     =>  AR_AP_O(12)
	, AR_AP_O12     =>  AR_AP_O(11)
	, AR_AP_O11     =>  AR_AP_O(10)
	, AR_AP_O10     =>  AR_AP_O(9)
	, AR_AP_O9      =>  AR_AP_O(8)
	, AR_AP_O8      =>  AR_AP_O(7)
	, AR_AP_O7      =>  AR_AP_O(6)
	, AR_AP_O6      =>  AR_AP_O(5)
	, AR_AP_O5      =>  AR_AP_O(4)
	, AR_AP_O4      =>  AR_AP_O(3)
	, AR_AP_O3      =>  AR_AP_O(2)
	, AR_AP_O2      =>  AR_AP_O(1)
	, AR_AP_O1      =>  AR_AP_O(0)

	, AR_BUM_O2     =>  AR_BUM_O(1)
	, AR_BUM_O1     =>  AR_BUM_O(0)

	, AR_BUP_O2     =>  AR_BUP_O(1)
	, AR_BUP_O1     =>  AR_BUP_O(0)

	, AR_CHM_O4     =>  AR_CHM_O(3)
	, AR_CHM_O3     =>  AR_CHM_O(2)
	, AR_CHM_O2     =>  AR_CHM_O(1)
	, AR_CHM_O1     =>  AR_CHM_O(0)

	, AR_CHP_O4     =>  AR_CHP_O(3)
	, AR_CHP_O3     =>  AR_CHP_O(2)
	, AR_CHP_O2     =>  AR_CHP_O(1)
	, AR_CHP_O1     =>  AR_CHP_O(0)

	, AR_IDM_O4     =>  AR_IDM_O(3)
	, AR_IDM_O3     =>  AR_IDM_O(2)
	, AR_IDM_O2     =>  AR_IDM_O(1)
	, AR_IDM_O1     =>  AR_IDM_O(0)

	, AR_IDP_O4     =>  AR_IDP_O(3)
	, AR_IDP_O3     =>  AR_IDP_O(2)
	, AR_IDP_O2     =>  AR_IDP_O(1)
	, AR_IDP_O1     =>  AR_IDP_O(0)

	, AR_INM_O4     =>  AR_INM_O(3)
	, AR_INM_O3     =>  AR_INM_O(2)
	, AR_INM_O2     =>  AR_INM_O(1)
	, AR_INM_O1     =>  AR_INM_O(0)

	, AR_LEM_O4     =>  AR_LEM_O(3)
	, AR_LEM_O3     =>  AR_LEM_O(2)
	, AR_LEM_O2     =>  AR_LEM_O(1)
	, AR_LEM_O1     =>  AR_LEM_O(0)

	, AR_LEP_O4     =>  AR_LEP_O(3)
	, AR_LEP_O3     =>  AR_LEP_O(2)
	, AR_LEP_O2     =>  AR_LEP_O(1)
	, AR_LEP_O1     =>  AR_LEP_O(0)

	, AR_LKM_O2     =>  AR_LKM_O(1)
	, AR_LKM_O1     =>  AR_LKM_O(0)

	, AR_LKP_O2     =>  AR_LKP_O(1)
	, AR_LKP_O1     =>  AR_LKP_O(0)

	, AR_PRM_O3     =>  AR_PRM_O(2)
	, AR_PRM_O2     =>  AR_PRM_O(1)
	, AR_PRM_O1     =>  AR_PRM_O(0)

	, AR_PRP_O3     =>  AR_PRP_O(2)
	, AR_PRP_O2     =>  AR_PRP_O(1)
	, AR_PRP_O1     =>  AR_PRP_O(0)

	, AR_RDY_O      =>  AR_RDY_O
	, AR_SHM_O      =>  AR_SHM_O

	, AR_SZM_O3     =>  AR_SZM_O(2)
	, AR_SZM_O2     =>  AR_SZM_O(1)
	, AR_SZM_O1     =>  AR_SZM_O(0)

	, AR_SZP_O3     =>  AR_SZP_O(2)
	, AR_SZP_O2     =>  AR_SZP_O(1)
	, AR_SZP_O1     =>  AR_SZP_O(0)

	, AR_VDM_O      =>  AR_VDM_O
	, AR_VDP_O      =>  AR_VDP_O

	, AW_AM_O32     =>  AW_AM_O(31)
	, AW_AM_O31     =>  AW_AM_O(30)
	, AW_AM_O30     =>  AW_AM_O(29)
	, AW_AM_O29     =>  AW_AM_O(28)
	, AW_AM_O28     =>  AW_AM_O(27)
	, AW_AM_O27     =>  AW_AM_O(26)
	, AW_AM_O26     =>  AW_AM_O(25)
	, AW_AM_O25     =>  AW_AM_O(24)
	, AW_AM_O24     =>  AW_AM_O(23)
	, AW_AM_O23     =>  AW_AM_O(22)
	, AW_AM_O22     =>  AW_AM_O(21)
	, AW_AM_O21     =>  AW_AM_O(20)
	, AW_AM_O20     =>  AW_AM_O(19)
	, AW_AM_O19     =>  AW_AM_O(18)
	, AW_AM_O18     =>  AW_AM_O(17)
	, AW_AM_O17     =>  AW_AM_O(16)
	, AW_AM_O16     =>  AW_AM_O(15)
	, AW_AM_O15     =>  AW_AM_O(14)
	, AW_AM_O14     =>  AW_AM_O(13)
	, AW_AM_O13     =>  AW_AM_O(12)
	, AW_AM_O12     =>  AW_AM_O(11)
	, AW_AM_O11     =>  AW_AM_O(10)
	, AW_AM_O10     =>  AW_AM_O(9)
	, AW_AM_O9      =>  AW_AM_O(8)
	, AW_AM_O8      =>  AW_AM_O(7)
	, AW_AM_O7      =>  AW_AM_O(6)
	, AW_AM_O6      =>  AW_AM_O(5)
	, AW_AM_O5      =>  AW_AM_O(4)
	, AW_AM_O4      =>  AW_AM_O(3)
	, AW_AM_O3      =>  AW_AM_O(2)
	, AW_AM_O2      =>  AW_AM_O(1)
	, AW_AM_O1      =>  AW_AM_O(0)

	, AW_AP_O32     =>  AW_AP_O(31)
	, AW_AP_O31     =>  AW_AP_O(30)
	, AW_AP_O30     =>  AW_AP_O(29)
	, AW_AP_O29     =>  AW_AP_O(28)
	, AW_AP_O28     =>  AW_AP_O(27)
	, AW_AP_O27     =>  AW_AP_O(26)
	, AW_AP_O26     =>  AW_AP_O(25)
	, AW_AP_O25     =>  AW_AP_O(24)
	, AW_AP_O24     =>  AW_AP_O(23)
	, AW_AP_O23     =>  AW_AP_O(22)
	, AW_AP_O22     =>  AW_AP_O(21)
	, AW_AP_O21     =>  AW_AP_O(20)
	, AW_AP_O20     =>  AW_AP_O(19)
	, AW_AP_O19     =>  AW_AP_O(18)
	, AW_AP_O18     =>  AW_AP_O(17)
	, AW_AP_O17     =>  AW_AP_O(16)
	, AW_AP_O16     =>  AW_AP_O(15)
	, AW_AP_O15     =>  AW_AP_O(14)
	, AW_AP_O14     =>  AW_AP_O(13)
	, AW_AP_O13     =>  AW_AP_O(12)
	, AW_AP_O12     =>  AW_AP_O(11)
	, AW_AP_O11     =>  AW_AP_O(10)
	, AW_AP_O10     =>  AW_AP_O(9)
	, AW_AP_O9      =>  AW_AP_O(8)
	, AW_AP_O8      =>  AW_AP_O(7)
	, AW_AP_O7      =>  AW_AP_O(6)
	, AW_AP_O6      =>  AW_AP_O(5)
	, AW_AP_O5      =>  AW_AP_O(4)
	, AW_AP_O4      =>  AW_AP_O(3)
	, AW_AP_O3      =>  AW_AP_O(2)
	, AW_AP_O2      =>  AW_AP_O(1)
	, AW_AP_O1      =>  AW_AP_O(0)

	, AW_BUM_O2     =>  AW_BUM_O(1)
	, AW_BUM_O1     =>  AW_BUM_O(0)

	, AW_BUP_O2     =>  AW_BUP_O(1)
	, AW_BUP_O1     =>  AW_BUP_O(0)

	, AW_CHM_O4     =>  AW_CHM_O(3)
	, AW_CHM_O3     =>  AW_CHM_O(2)
	, AW_CHM_O2     =>  AW_CHM_O(1)
	, AW_CHM_O1     =>  AW_CHM_O(0)

	, AW_CHP_O4     =>  AW_CHP_O(3)
	, AW_CHP_O3     =>  AW_CHP_O(2)
	, AW_CHP_O2     =>  AW_CHP_O(1)
	, AW_CHP_O1     =>  AW_CHP_O(0)

	, AW_IDM_O4     =>  AW_IDM_O(3)
	, AW_IDM_O3     =>  AW_IDM_O(2)
	, AW_IDM_O2     =>  AW_IDM_O(1)
	, AW_IDM_O1     =>  AW_IDM_O(0)

	, AW_IDP_O4     =>  AW_IDP_O(3)
	, AW_IDP_O3     =>  AW_IDP_O(2)
	, AW_IDP_O2     =>  AW_IDP_O(1)
	, AW_IDP_O1     =>  AW_IDP_O(0)

	, AW_INM_O4     =>  AW_INM_O(3)
	, AW_INM_O3     =>  AW_INM_O(2)
	, AW_INM_O2     =>  AW_INM_O(1)
	, AW_INM_O1     =>  AW_INM_O(0)

	, AW_LEM_O4     =>  AW_LEM_O(3)
	, AW_LEM_O3     =>  AW_LEM_O(2)
	, AW_LEM_O2     =>  AW_LEM_O(1)
	, AW_LEM_O1     =>  AW_LEM_O(0)

	, AW_LEP_O4     =>  AW_LEP_O(3)
	, AW_LEP_O3     =>  AW_LEP_O(2)
	, AW_LEP_O2     =>  AW_LEP_O(1)
	, AW_LEP_O1     =>  AW_LEP_O(0)

	, AW_LKM_O2     =>  AW_LKM_O(1)
	, AW_LKM_O1     =>  AW_LKM_O(0)

	, AW_LKP_O2     =>  AW_LKP_O(1)
	, AW_LKP_O1     =>  AW_LKP_O(0)

	, AW_PRM_O3     =>  AW_PRM_O(2)
	, AW_PRM_O2     =>  AW_PRM_O(1)
	, AW_PRM_O1     =>  AW_PRM_O(0)

	, AW_PRP_O3     =>  AW_PRP_O(2)
	, AW_PRP_O2     =>  AW_PRP_O(1)
	, AW_PRP_O1     =>  AW_PRP_O(0)

	, AW_RDY_O      =>  AW_RDY_O
	, AW_SHM_O      =>  AW_SHM_O

	, AW_SZM_O3     =>  AW_SZM_O(2)
	, AW_SZM_O2     =>  AW_SZM_O(1)
	, AW_SZM_O1     =>  AW_SZM_O(0)

	, AW_SZP_O3     =>  AW_SZP_O(2)
	, AW_SZP_O2     =>  AW_SZP_O(1)
	, AW_SZP_O1     =>  AW_SZP_O(0)

	, AW_VDM_O      =>  AW_VDM_O
	, AW_VDP_O      =>  AW_VDP_O

	, B_IDS_O8      =>  B_IDS_O(7)
	, B_IDS_O7      =>  B_IDS_O(6)
	, B_IDS_O6      =>  B_IDS_O(5)
	, B_IDS_O5      =>  B_IDS_O(4)
	, B_IDS_O4      =>  B_IDS_O(3)
	, B_IDS_O3      =>  B_IDS_O(2)
	, B_IDS_O2      =>  B_IDS_O(1)
	, B_IDS_O1      =>  B_IDS_O(0)

	, B_RDYM_O      =>  B_RDYM_O
	, B_RDYP_O      =>  B_RDYP_O

	, B_RSP_O2      =>  B_RSP_O(1)
	, B_RSP_O1      =>  B_RSP_O(0)

	, B_VD_O        =>  B_VD_O

--	, CAL_O5        =>  CAL_O(4)
--	, CAL_O4        =>  CAL_O(3)
--	, CAL_O3        =>  CAL_O(2)
--	, CAL_O2        =>  CAL_O(1)
--	, CAL_O1        =>  CAL_O(0)

	, CDB_PW_O      =>  CDB_PW_O
	, CDB_RS_O      =>  CDB_RS_O
--	, CK_DR_O       =>  CK_DR_O
	, COM_RX_O      =>  COM_RX_O
	, COM_TX_O      =>  COM_TX_O
	, CS_PW_O       =>  CS_PW_O
	, DB_ACK_O      =>  DB_ACK_O
	, DB_NPD_O      =>  DB_NPD_O
	, DB_RS_O       =>  DB_RS_O

	, DFTS_O8       =>  DFTS_O(7)
	, DFTS_O7       =>  DFTS_O(6)
	, DFTS_O6       =>  DFTS_O(5)
	, DFTS_O5       =>  DFTS_O(4)
	, DFTS_O4       =>  DFTS_O(3)
	, DFTS_O3       =>  DFTS_O(2)
	, DFTS_O2       =>  DFTS_O(1)
	, DFTS_O1       =>  DFTS_O(0)

	, ET_ASC_O8     =>  ET_ASC_O(7)
	, ET_ASC_O7     =>  ET_ASC_O(6)
	, ET_ASC_O6     =>  ET_ASC_O(5)
	, ET_ASC_O5     =>  ET_ASC_O(4)
	, ET_ASC_O4     =>  ET_ASC_O(3)
	, ET_ASC_O3     =>  ET_ASC_O(2)
	, ET_ASC_O2     =>  ET_ASC_O(1)
	, ET_ASC_O1     =>  ET_ASC_O(0)

	, ET_E_O        =>  ET_E_O

	, ET_EXT_O2     =>  ET_EXT_O(1)
	, ET_EXT_O1     =>  ET_EXT_O(0)

	, EVENT_O       =>  EVENT_O
	, FP_DZC_O      =>  FP_DZC_O
	, FP_IDC_O      =>  FP_IDC_O
	, FP_IOC_O      =>  FP_IOC_O
	, FP_IXC_O      =>  FP_IXC_O
	, FP_OFC_O      =>  FP_OFC_O
	, FP_UFC_O      =>  FP_UFC_O
	, JTAG_O        =>  JTAG_O
--	, LBK_E_O       =>  LBK_E_O
--	, LBK_MX_O      =>  LBK_MX_O

--	, MODE1_O2      =>  MODE1_O(1)
--	, MODE1_O1      =>  MODE1_O(0)

--	, MODE2_O2      =>  MODE2_O(1)
--	, MODE2_O1      =>  MODE2_O(0)

--	, MODE3_O2      =>  MODE3_O(1)
--	, MODE3_O1      =>  MODE3_O(0)

	, N_CKST_O      =>  N_CKST_O
	, N_PMU_O       =>  N_PMU_O
	, N_TDO_O       =>  N_TDO_O
	, N_VFIQ_O      =>  N_VFIQ_O
	, N_VIRQ_O      =>  N_VIRQ_O
	, N_VRST_O      =>  N_VRST_O
	, N_EPST_O      =>  N_EPST_O
	, N_IPST_O      =>  N_IPST_O

	, P_RD_O32      =>  P_RD_O(31)
	, P_RD_O31      =>  P_RD_O(30)
	, P_RD_O30      =>  P_RD_O(29)
	, P_RD_O29      =>  P_RD_O(28)
	, P_RD_O28      =>  P_RD_O(27)
	, P_RD_O27      =>  P_RD_O(26)
	, P_RD_O26      =>  P_RD_O(25)
	, P_RD_O25      =>  P_RD_O(24)
	, P_RD_O24      =>  P_RD_O(23)
	, P_RD_O23      =>  P_RD_O(22)
	, P_RD_O22      =>  P_RD_O(21)
	, P_RD_O21      =>  P_RD_O(20)
	, P_RD_O20      =>  P_RD_O(19)
	, P_RD_O19      =>  P_RD_O(18)
	, P_RD_O18      =>  P_RD_O(17)
	, P_RD_O17      =>  P_RD_O(16)
	, P_RD_O16      =>  P_RD_O(15)
	, P_RD_O15      =>  P_RD_O(14)
	, P_RD_O14      =>  P_RD_O(13)
	, P_RD_O13      =>  P_RD_O(12)
	, P_RD_O12      =>  P_RD_O(11)
	, P_RD_O11      =>  P_RD_O(10)
	, P_RD_O10      =>  P_RD_O(9)
	, P_RD_O9       =>  P_RD_O(8)
	, P_RD_O8       =>  P_RD_O(7)
	, P_RD_O7       =>  P_RD_O(6)
	, P_RD_O6       =>  P_RD_O(5)
	, P_RD_O5       =>  P_RD_O(4)
	, P_RD_O4       =>  P_RD_O(3)
	, P_RD_O3       =>  P_RD_O(2)
	, P_RD_O2       =>  P_RD_O(1)
	, P_RD_O1       =>  P_RD_O(0)

	, P_RDY_O       =>  P_RDY_O
	, P_VER_O       =>  P_VER_O

	, RD_O64        =>  RD_O(63)
	, RD_O63        =>  RD_O(62)
	, RD_O62        =>  RD_O(61)
	, RD_O61        =>  RD_O(60)
	, RD_O60        =>  RD_O(59)
	, RD_O59        =>  RD_O(58)
	, RD_O58        =>  RD_O(57)
	, RD_O57        =>  RD_O(56)
	, RD_O56        =>  RD_O(55)
	, RD_O55        =>  RD_O(54)
	, RD_O54        =>  RD_O(53)
	, RD_O53        =>  RD_O(52)
	, RD_O52        =>  RD_O(51)
	, RD_O51        =>  RD_O(50)
	, RD_O50        =>  RD_O(49)
	, RD_O49        =>  RD_O(48)
	, RD_O48        =>  RD_O(47)
	, RD_O47        =>  RD_O(46)
	, RD_O46        =>  RD_O(45)
	, RD_O45        =>  RD_O(44)
	, RD_O44        =>  RD_O(43)
	, RD_O43        =>  RD_O(42)
	, RD_O42        =>  RD_O(41)
	, RD_O41        =>  RD_O(40)
	, RD_O40        =>  RD_O(39)
	, RD_O39        =>  RD_O(38)
	, RD_O38        =>  RD_O(37)
	, RD_O37        =>  RD_O(36)
	, RD_O36        =>  RD_O(35)
	, RD_O35        =>  RD_O(34)
	, RD_O34        =>  RD_O(33)
	, RD_O33        =>  RD_O(32)
	, RD_O32        =>  RD_O(31)
	, RD_O31        =>  RD_O(30)
	, RD_O30        =>  RD_O(29)
	, RD_O29        =>  RD_O(28)
	, RD_O28        =>  RD_O(27)
	, RD_O27        =>  RD_O(26)
	, RD_O26        =>  RD_O(25)
	, RD_O25        =>  RD_O(24)
	, RD_O24        =>  RD_O(23)
	, RD_O23        =>  RD_O(22)
	, RD_O22        =>  RD_O(21)
	, RD_O21        =>  RD_O(20)
	, RD_O20        =>  RD_O(19)
	, RD_O19        =>  RD_O(18)
	, RD_O18        =>  RD_O(17)
	, RD_O17        =>  RD_O(16)
	, RD_O16        =>  RD_O(15)
	, RD_O15        =>  RD_O(14)
	, RD_O14        =>  RD_O(13)
	, RD_O13        =>  RD_O(12)
	, RD_O12        =>  RD_O(11)
	, RD_O11        =>  RD_O(10)
	, RD_O10        =>  RD_O(9)
	, RD_O9         =>  RD_O(8)
	, RD_O8         =>  RD_O(7)
	, RD_O7         =>  RD_O(6)
	, RD_O6         =>  RD_O(5)
	, RD_O5         =>  RD_O(4)
	, RD_O4         =>  RD_O(3)
	, RD_O3         =>  RD_O(2)
	, RD_O2         =>  RD_O(1)
	, RD_O1         =>  RD_O(0)

--	, RDY_O3        =>  RDY_O(2)
--	, RDY_O2        =>  RDY_O(1)
--	, RDY_O1        =>  RDY_O(0)

	, R_IDS_O8      =>  R_IDS_O(7)
	, R_IDS_O7      =>  R_IDS_O(6)
	, R_IDS_O6      =>  R_IDS_O(5)
	, R_IDS_O5      =>  R_IDS_O(4)
	, R_IDS_O4      =>  R_IDS_O(3)
	, R_IDS_O3      =>  R_IDS_O(2)
	, R_IDS_O2      =>  R_IDS_O(1)
	, R_IDS_O1      =>  R_IDS_O(0)

	, R_LST_O       =>  R_LST_O
	, R_RDYM_O      =>  R_RDYM_O
	, R_RDYP_O      =>  R_RDYP_O

	, R_RSP_O2      =>  R_RSP_O(1)
	, R_RSP_O1      =>  R_RSP_O(0)

	, R_VD_O        =>  R_VD_O
--	, SCAN_E_O      =>  SCAN_E_O
--	, SHF_DR_O      =>  SHF_DR_O
--	, SHOUT_O       =>  SHOUT_O
	, SWDO_O        =>  SWDO_O
	, SWDO_E_O      =>  SWDO_E_O
	, TDO_O         =>  TDO_O
--	, TEST_E_O      =>  TEST_E_O
	, T_CK_O        =>  T_CK_O
	, T_CTL_O       =>  T_CTL_O

	, T_DATA_O32    =>  T_DATA_O(31)
	, T_DATA_O31    =>  T_DATA_O(30)
	, T_DATA_O30    =>  T_DATA_O(29)
	, T_DATA_O29    =>  T_DATA_O(28)
	, T_DATA_O28    =>  T_DATA_O(27)
	, T_DATA_O27    =>  T_DATA_O(26)
	, T_DATA_O26    =>  T_DATA_O(25)
	, T_DATA_O25    =>  T_DATA_O(24)
	, T_DATA_O24    =>  T_DATA_O(23)
	, T_DATA_O23    =>  T_DATA_O(22)
	, T_DATA_O22    =>  T_DATA_O(21)
	, T_DATA_O21    =>  T_DATA_O(20)
	, T_DATA_O20    =>  T_DATA_O(19)
	, T_DATA_O19    =>  T_DATA_O(18)
	, T_DATA_O18    =>  T_DATA_O(17)
	, T_DATA_O17    =>  T_DATA_O(16)
	, T_DATA_O16    =>  T_DATA_O(15)
	, T_DATA_O15    =>  T_DATA_O(14)
	, T_DATA_O14    =>  T_DATA_O(13)
	, T_DATA_O13    =>  T_DATA_O(12)
	, T_DATA_O12    =>  T_DATA_O(11)
	, T_DATA_O11    =>  T_DATA_O(10)
	, T_DATA_O10    =>  T_DATA_O(9)
	, T_DATA_O9     =>  T_DATA_O(8)
	, T_DATA_O8     =>  T_DATA_O(7)
	, T_DATA_O7     =>  T_DATA_O(6)
	, T_DATA_O6     =>  T_DATA_O(5)
	, T_DATA_O5     =>  T_DATA_O(4)
	, T_DATA_O4     =>  T_DATA_O(3)
	, T_DATA_O3     =>  T_DATA_O(2)
	, T_DATA_O2     =>  T_DATA_O(1)
	, T_DATA_O1     =>  T_DATA_O(0)

--	, UPD_DR_O      =>  UPD_DR_O

	, W_DM_O64      =>  W_DM_O(63)
	, W_DM_O63      =>  W_DM_O(62)
	, W_DM_O62      =>  W_DM_O(61)
	, W_DM_O61      =>  W_DM_O(60)
	, W_DM_O60      =>  W_DM_O(59)
	, W_DM_O59      =>  W_DM_O(58)
	, W_DM_O58      =>  W_DM_O(57)
	, W_DM_O57      =>  W_DM_O(56)
	, W_DM_O56      =>  W_DM_O(55)
	, W_DM_O55      =>  W_DM_O(54)
	, W_DM_O54      =>  W_DM_O(53)
	, W_DM_O53      =>  W_DM_O(52)
	, W_DM_O52      =>  W_DM_O(51)
	, W_DM_O51      =>  W_DM_O(50)
	, W_DM_O50      =>  W_DM_O(49)
	, W_DM_O49      =>  W_DM_O(48)
	, W_DM_O48      =>  W_DM_O(47)
	, W_DM_O47      =>  W_DM_O(46)
	, W_DM_O46      =>  W_DM_O(45)
	, W_DM_O45      =>  W_DM_O(44)
	, W_DM_O44      =>  W_DM_O(43)
	, W_DM_O43      =>  W_DM_O(42)
	, W_DM_O42      =>  W_DM_O(41)
	, W_DM_O41      =>  W_DM_O(40)
	, W_DM_O40      =>  W_DM_O(39)
	, W_DM_O39      =>  W_DM_O(38)
	, W_DM_O38      =>  W_DM_O(37)
	, W_DM_O37      =>  W_DM_O(36)
	, W_DM_O36      =>  W_DM_O(35)
	, W_DM_O35      =>  W_DM_O(34)
	, W_DM_O34      =>  W_DM_O(33)
	, W_DM_O33      =>  W_DM_O(32)
	, W_DM_O32      =>  W_DM_O(31)
	, W_DM_O31      =>  W_DM_O(30)
	, W_DM_O30      =>  W_DM_O(29)
	, W_DM_O29      =>  W_DM_O(28)
	, W_DM_O28      =>  W_DM_O(27)
	, W_DM_O27      =>  W_DM_O(26)
	, W_DM_O26      =>  W_DM_O(25)
	, W_DM_O25      =>  W_DM_O(24)
	, W_DM_O24      =>  W_DM_O(23)
	, W_DM_O23      =>  W_DM_O(22)
	, W_DM_O22      =>  W_DM_O(21)
	, W_DM_O21      =>  W_DM_O(20)
	, W_DM_O20      =>  W_DM_O(19)
	, W_DM_O19      =>  W_DM_O(18)
	, W_DM_O18      =>  W_DM_O(17)
	, W_DM_O17      =>  W_DM_O(16)
	, W_DM_O16      =>  W_DM_O(15)
	, W_DM_O15      =>  W_DM_O(14)
	, W_DM_O14      =>  W_DM_O(13)
	, W_DM_O13      =>  W_DM_O(12)
	, W_DM_O12      =>  W_DM_O(11)
	, W_DM_O11      =>  W_DM_O(10)
	, W_DM_O10      =>  W_DM_O(9)
	, W_DM_O9       =>  W_DM_O(8)
	, W_DM_O8       =>  W_DM_O(7)
	, W_DM_O7       =>  W_DM_O(6)
	, W_DM_O6       =>  W_DM_O(5)
	, W_DM_O5       =>  W_DM_O(4)
	, W_DM_O4       =>  W_DM_O(3)
	, W_DM_O3       =>  W_DM_O(2)
	, W_DM_O2       =>  W_DM_O(1)
	, W_DM_O1       =>  W_DM_O(0)

	, W_DP_O32      =>  W_DP_O(31)
	, W_DP_O31      =>  W_DP_O(30)
	, W_DP_O30      =>  W_DP_O(29)
	, W_DP_O29      =>  W_DP_O(28)
	, W_DP_O28      =>  W_DP_O(27)
	, W_DP_O27      =>  W_DP_O(26)
	, W_DP_O26      =>  W_DP_O(25)
	, W_DP_O25      =>  W_DP_O(24)
	, W_DP_O24      =>  W_DP_O(23)
	, W_DP_O23      =>  W_DP_O(22)
	, W_DP_O22      =>  W_DP_O(21)
	, W_DP_O21      =>  W_DP_O(20)
	, W_DP_O20      =>  W_DP_O(19)
	, W_DP_O19      =>  W_DP_O(18)
	, W_DP_O18      =>  W_DP_O(17)
	, W_DP_O17      =>  W_DP_O(16)
	, W_DP_O16      =>  W_DP_O(15)
	, W_DP_O15      =>  W_DP_O(14)
	, W_DP_O14      =>  W_DP_O(13)
	, W_DP_O13      =>  W_DP_O(12)
	, W_DP_O12      =>  W_DP_O(11)
	, W_DP_O11      =>  W_DP_O(10)
	, W_DP_O10      =>  W_DP_O(9)
	, W_DP_O9       =>  W_DP_O(8)
	, W_DP_O8       =>  W_DP_O(7)
	, W_DP_O7       =>  W_DP_O(6)
	, W_DP_O6       =>  W_DP_O(5)
	, W_DP_O5       =>  W_DP_O(4)
	, W_DP_O4       =>  W_DP_O(3)
	, W_DP_O3       =>  W_DP_O(2)
	, W_DP_O2       =>  W_DP_O(1)
	, W_DP_O1       =>  W_DP_O(0)

	, W_IDM_O4      =>  W_IDM_O(3)
	, W_IDM_O3      =>  W_IDM_O(2)
	, W_IDM_O2      =>  W_IDM_O(1)
	, W_IDM_O1      =>  W_IDM_O(0)

	, W_IDP_O4      =>  W_IDP_O(3)
	, W_IDP_O3      =>  W_IDP_O(2)
	, W_IDP_O2      =>  W_IDP_O(1)
	, W_IDP_O1      =>  W_IDP_O(0)

	, W_LSTM_O      =>  W_LSTM_O
	, W_LSTP_O      =>  W_LSTP_O
	, W_RDY_O       =>  W_RDY_O

	, W_SBM_O8      =>  W_SBM_O(7)
	, W_SBM_O7      =>  W_SBM_O(6)
	, W_SBM_O6      =>  W_SBM_O(5)
	, W_SBM_O5      =>  W_SBM_O(4)
	, W_SBM_O4      =>  W_SBM_O(3)
	, W_SBM_O3      =>  W_SBM_O(2)
	, W_SBM_O2      =>  W_SBM_O(1)
	, W_SBM_O1      =>  W_SBM_O(0)

	, W_SBP_O4      =>  W_SBP_O(3)
	, W_SBP_O3      =>  W_SBP_O(2)
	, W_SBP_O2      =>  W_SBP_O(1)
	, W_SBP_O1      =>  W_SBP_O(0)

	, W_VDM_O       =>  W_VDM_O
	, W_VDP_O       =>  W_VDP_O
);
end NX_RTL;
